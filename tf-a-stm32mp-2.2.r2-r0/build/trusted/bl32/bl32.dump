
/home/ming/tf-a-stm32mp-2.2.r2-r0/tf-a-stm32mp-2.2.r2/../build/trusted/bl32/bl32.elf:     file format elf32-littlearm
/home/ming/tf-a-stm32mp-2.2.r2-r0/tf-a-stm32mp-2.2.r2/../build/trusted/bl32/bl32.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x2fffab00

Program Header:
    LOAD off    0x00000000 vaddr 0x2ffe0000 paddr 0x2ffe0000 align 2**16
         filesz 0x0001b548 memsz 0x0001d1c0 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 ro            00010000  2ffeb000  2ffeb000  0000b000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000548  2fffb000  2fffb000  0001b000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 stacks        00000c00  2fffb580  2fffb580  0001b548  2**6
                  ALLOC
  3 .bss          00001040  2fffc180  2fffc180  0001b548  2**6
                  ALLOC
  4 .debug_info   0004060d  00000000  00000000  0001b548  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000cd93  00000000  00000000  0005bb55  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_aranges 00002468  00000000  00000000  000688e8  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00011ff6  00000000  00000000  0006ad50  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000a4ee  00000000  00000000  0007cd46  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .comment      00000024  00000000  00000000  00087234  2**0
                  CONTENTS, READONLY
 10 .ARM.attributes 0000003b  00000000  00000000  00087258  2**0
                  CONTENTS, READONLY
 11 .debug_loc    00025d90  00000000  00000000  00087293  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00004710  00000000  00000000  000ad028  2**3
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00005d74  00000000  00000000  000b1738  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
2ffeb000 l    d  ro	00000000 ro
2fffb000 l    d  .data	00000000 .data
2fffb580 l    d  stacks	00000000 stacks
2fffc180 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 /home/ming/tf-a-stm32mp-2.2.r2-r0/tf-a-stm32mp-2.2.r2/../build/trusted/bl32/entrypoint.o
2ffeb3c0 l     F ro	00000084 sp_min_exit
00000000 l    df *ABS*	00000000 sp_min_main.c
2fffc180 l     O .bss	00000008 sp_min_cpu_ctx_ptr
2fffc188 l     O .bss	00000120 sp_min_smc_context
2fff8194 l     O ro	0000000c psci_args.7182
00000000 l    df *ABS*	00000000 runtime_svc.c
00000000 l    df *ABS*	00000000 plat_sp_min_common.c
00000000 l    df *ABS*	00000000 std_svc_setup.c
2ffeb7c8 l     F ro	0000007c std_svc_smc_handler
2ffeb844 l     F ro	00000024 std_svc_setup
2fffaac4 l     O ro	00000010 __svc_desc_std_svc
00000000 l    df *ABS*	00000000 context_mgmt.c
00000000 l    df *ABS*	00000000 errata_report.c
00000000 l    df *ABS*	00000000 psci_off.c
00000000 l    df *ABS*	00000000 psci_on.c
00000000 l    df *ABS*	00000000 psci_suspend.c
00000000 l    df *ABS*	00000000 psci_common.c
2fffc2a8 l     O .bss	00000002 psci_req_local_pwr_states
2fff83cc l     O ro	0000000c psci_state_type_str.7437
00000000 l    df *ABS*	00000000 psci_main.c
00000000 l    df *ABS*	00000000 psci_setup.c
2fffc2b0 l     O .bss	00000040 psci_ns_context
00000000 l    df *ABS*	00000000 psci_system_off.c
00000000 l    df *ABS*	00000000 psci_mem_protect.c
00000000 l    df *ABS*	00000000 bakery_lock_normal.c
00000000 l    df *ABS*	00000000 stm32mp1_calib.c
2ffeccb8 l     F ro	0000008e trim_table_init
2ffecd48 l     F ro	00000020 csi_get_trimed_cal
2ffecd68 l     F ro	00000028 csi_set_trim
2ffecd90 l     F ro	0000001c hsi_get_trimed_cal
2ffecdac l     F ro	00000024 hsi_set_trim
2ffecdd0 l     F ro	000001ac rcc_calibration
2fffc2f0 l     O .bss	00000001 rcc_wakeup
2fffc2f4 l     O .bss	00000004 timer_val
2fffb000 l     O .data	00000022 fbv_csi
2fffb022 l     O .data	00000022 fbv_hsi
2fffb044 l     O .data	000000a8 stm32mp1_clk_cal_csi
2fffb0ec l     O .data	000000a8 stm32mp1_clk_cal_hsi
00000000 l    df *ABS*	00000000 etzpc.c
2fffc2f8 l     O .bss	0000000c etzpc_dev
00000000 l    df *ABS*	00000000 stm32_rng.c
2fffc304 l     O .bss	00000008 stm32_rng
00000000 l    df *ABS*	00000000 stm32_rtc.c
2ffed470 l     F ro	00000030 stm32_rtc_read_calendar
2ffed4a0 l     F ro	0000002c stm32_is_a_leap_year
2ffed4cc l     F ro	00000050 stm32_rtc_get_date
2ffed51c l     F ro	00000050 stm32_rtc_get_time
2fffc30c l     O .bss	00000004 lock
2fffc310 l     O .bss	00000010 rtc_dev
2fff8617 l     O ro	0000000c month_len.6646
00000000 l    df *ABS*	00000000 stm32_tamp.c
2fffc320 l     O .bss	0000001c stm32_tamp
00000000 l    df *ABS*	00000000 stm32_timer.c
2ffedc00 l     F ro	0000007c stm32_timer_config
2ffedc7c l     F ro	000000cc stm32_timer_start_capture.part.0
2fffc33c l     O .bss	00000020 stm32_timer
2fff871b l     O ro	00000018 __func__.6554
00000000 l    df *ABS*	00000000 sp_min_setup.c
2ffedec8 l     F ro	00000020 stm32mp1_tamper_action
2fffc35c l     O .bss	00000024 bl33_image_ep_info
2fffc380 l     O .bss	00000018 console
2fffb194 l     O .data	00000024 ext_tamp
2fffb1b8 l     O .data	00000030 int_tamp
2fff87c4 l     O ro	00000004 BL_CODE_BASE
2fff8988 l     O ro	00000018 tamper_name
00000000 l    df *ABS*	00000000 stm32mp1_low_power.c
2ffee210 l     F ro	000000a4 smp_synchro
2ffee2f8 l     F ro	00000164 enter_cstop
2fffc398 l     O .bss	00000004 cpu0_state
2fffc39c l     O .bss	00000004 cpu1_state
2fffc3a0 l     O .bss	00000001 enter_cstop_done
2fffc3a4 l     O .bss	00000004 gicc_pmr
2fffc3a8 l     O .bss	00000800 int_stack
2fffcba8 l     O .bss	00000004 lp_lock
2fffcbac l     O .bss	0000000c sleep_time
2fffcbb8 l     O .bss	00000008 stgen_cnt
2fff89a0 l     O ro	00000054 config_pwr
00000000 l    df *ABS*	00000000 stm32mp1_pm.c
2ffee5e8 l     F ro	00000002 stm32_pwr_domain_off
2ffee5ea l     F ro	0000001c stm32_validate_power_state
2ffee608 l     F ro	00000018 stm32_validate_ns_entrypoint
2ffee620 l     F ro	0000000c stm32_node_hw_state
2ffee62c l     F ro	00000008 stm32_get_sys_suspend_power_state
2ffee634 l     F ro	00000014 stm32_system_reset
2ffee648 l     F ro	00000018 stm32_pwr_domain_suspend
2ffee660 l     F ro	0000003c stm32_system_off
2ffee69c l     F ro	00000040 stm32_pwr_domain_pwr_down_wfi
2ffee6dc l     F ro	00000014 stm32_pwr_domain_on_finish
2ffee6f0 l     F ro	00000084 stm32_pwr_domain_on
2ffee774 l     F ro	0000003c stm32_cpu_standby
2ffee7b0 l     F ro	00000002 stm32_pwr_domain_suspend_finish
2fffcbc0 l     O .bss	00000004 cntfrq_core0
2fffcbc4 l     O .bss	00000004 saved_entrypoint
2fffcbc8 l     O .bss	00000004 stm32_sec_entrypoint
2fff8a84 l     O ro	00000054 stm32_psci_ops
00000000 l    df *ABS*	00000000 stm32mp1_power_config.c
2fffcbcc l     O .bss	00000004 deepest_system_suspend_mode
2fffcbd0 l     O .bss	00000003 pm_dom
2fffcbd3 l     O .bss	00000001 retram_enabled
2fffcbd4 l     O .bss	00000007 stm32mp1_supported_soc_modes
2fffcbdc l     O .bss	00000004 system_off_mode
00000000 l    df *ABS*	00000000 stm32mp1_shared_resources.c
2ffee954 l     F ro	00000034 get_gpioz_nbpin
2ffee988 l     F ro	000000b0 register_periph
2ffeea38 l     F ro	00000118 register_periph_iomem
2ffeeb50 l     F ro	00000040 stm32mp_gpio_bank_is_non_secure.part.5
2ffeeb90 l     F ro	00000088 check_decprot
2fffcbe0 l     O .bss	00000001 registering_locked
2fffcbe1 l     O .bss	00000014 shres_state
2fffb1e8 l     O .data	00000001 gpioz_nbpin
2fff8c80 l     O ro	00000090 shres2decprot_tbl
2fff8d10 l     O ro	00000050 shres2str_id_tbl
00000000 l    df *ABS*	00000000 stm32mp1_topology.c
2fff8e72 l     O ro	00000002 stm32mp1_power_domain_tree_desc
00000000 l    df *ABS*	00000000 gic_common.c
00000000 l    df *ABS*	00000000 gicv2_helpers.c
00000000 l    df *ABS*	00000000 gicv2_main.c
2fffcbf8 l     O .bss	00000004 driver_data
2fffcbfc l     O .bss	00000004 gic_lock
00000000 l    df *ABS*	00000000 plat_gicv2.c
00000000 l    df *ABS*	00000000 stm32_gic.c
2ffef7e4 l     F ro	00000004 fdt32_to_cpu
2ffef7e8 l     F ro	00000062 enable_gic_interrupt
2fffcc00 l     O .bss	00000008 stm32_gic
2fffb1ec l     O .data	00000018 platform_gic_data
2fffb204 l     O .data	00000008 target_mask_array
2fff8f24 l     O ro	0000002c stm32_interrupt_props
00000000 l    df *ABS*	00000000 plat_psci_common.c
00000000 l    df *ABS*	00000000 bsec_svc.c
00000000 l    df *ABS*	00000000 low_power_svc.c
00000000 l    df *ABS*	00000000 pwr_svc.c
00000000 l    df *ABS*	00000000 rcc_svc.c
00000000 l    df *ABS*	00000000 stm32mp1_svc_setup.c
2ffefcf0 l     F ro	00000004 stm32mp1_svc_setup
2ffefcf4 l     F ro	00000104 stm32mp1_svc_smc_handler
2fffaad4 l     O ro	00000010 __svc_desc_stm32mp1_sip_svc
00000000 l    df *ABS*	00000000 base.c
2ffefdf8 l     F ro	00000090 discover_list_protocols
2ffefe88 l     F ro	00000024 discover_implementation_version
2ffefeac l     F ro	00000044 report_message_attributes
2ffefef0 l     F ro	00000028 report_version
2ffeff18 l     F ro	0000002e report_attributes
2ffeff48 l     F ro	00000054 discover_sub_vendor
2ffeff9c l     F ro	00000054 discover_vendor
2fff8fc8 l     O ro	0000001c scmi_base_handler_table
00000000 l    df *ABS*	00000000 clock.c
2fff0014 l     F ro	0000000c confine_array_index
2fff0020 l     F ro	00000044 report_message_attributes
2fff0064 l     F ro	00000028 report_version
2fff008c l     F ro	00000034 write_rate_desc_array_in_buffer
2fff00c0 l     F ro	00000034 report_attributes
2fff00f4 l     F ro	000000f8 scmi_clock_describe_rates
2fff01ec l     F ro	00000060 scmi_clock_rate_get
2fff024c l     F ro	0000004a scmi_clock_rate_set
2fff0298 l     F ro	00000090 scmi_clock_attributes
2fff0328 l     F ro	0000004e scmi_clock_config_set
2fff8fe4 l     O ro	00000020 scmi_clock_handler_table
00000000 l    df *ABS*	00000000 entry.c
00000000 l    df *ABS*	00000000 reset_domain.c
2fff0440 l     F ro	00000044 report_message_attributes
2fff0484 l     F ro	00000028 report_version
2fff04ac l     F ro	0000002e report_attributes
2fff04dc l     F ro	00000094 reset_domain_attributes
2fff0570 l     F ro	00000078 reset_request
2fff9094 l     O ro	00000014 scmi_rd_handler_table
00000000 l    df *ABS*	00000000 smt.c
2fff060c l     F ro	000000b0 scmi_proccess_smt
2fffcc08 l     O .bss	000000b8 fast_smc_payload
2fffccc0 l     O .bss	00000004 smt_channels_lock
00000000 l    df *ABS*	00000000 stm32mp1_scmi.c
2fff06fc l     F ro	00000004 plat_scmi_protocol_count_paranoid
2fff0700 l     F ro	00000010 find_resource.part.0
2fff0710 l     F ro	00000034 find_clock
2fff0744 l     F ro	00000034 find_rd
2fffb20c l     O .data	00000020 scmi_channel
2fffb22c l     O .data	000000fc stm32_scmi0_clock
2fffb328 l     O .data	00000060 stm32_scmi0_reset_domain
2fffb388 l     O .data	00000024 stm32_scmi1_clock
2fff90c4 l     O ro	00000020 agent_resources
2fff9105 l     O ro	00000003 plat_protocol_list
2fff9216 l     O ro	00000001 sub_vendor
2fff9217 l     O ro	00000003 vendor
00000000 l    df *ABS*	00000000 tf_log.c
2fffb3ac l     O .data	00000004 max_log_level
00000000 l    df *ABS*	00000000 multi_console.c
00000000 l    df *ABS*	00000000 plat_log_common.c
2fff924c l     O ro	00000014 plat_prefix_str
00000000 l    df *ABS*	00000000 plat_common.c
00000000 l    df *ABS*	00000000 ctzdi2.c
00000000 l    df *ABS*	00000000 udivmoddi4.c
00000000 l    df *ABS*	00000000 stm32mp_common.c
2fffccc4 l     O .bss	00000004 lock
00000000 l    df *ABS*	00000000 stm32mp1_private.c
2fff10f4 l     F ro	0000004c get_part_number
2fffccc8 l     O .bss	00000004 part_number.7242
2fff9348 l     O ro	00000078 stm32mp1_mmap
2fff93c0 l     O ro	00000084 tzc_source_ip
00000000 l    df *ABS*	00000000 xlat_tables_arch.c
00000000 l    df *ABS*	00000000 xlat_tables_context.c
2fffcce0 l     O .bss	00000020 tf_base_xlat_table
2fffcd00 l     O .bss	00000010 tf_mapped_regions
2fffcd10 l     O .bss	000000a8 tf_mmap
2fffb3b8 l     O .data	00000048 tf_xlat_ctx
00000000 l    df *ABS*	00000000 xlat_tables_core.c
2fff1588 l     F ro	0000015c mmap_add_region_check
2fff16e4 l     F ro	0000001a xlat_clean_dcache_range
2fff1700 l     F ro	00000028 xlat_table_get_index
2fff1728 l     F ro	00000154 xlat_tables_unmap_region
2fff192c l     F ro	000001bc xlat_tables_map_region
00000000 l    df *ABS*	00000000 xlat_tables_utils.c
00000000 l    df *ABS*	00000000 tzc400.c
2fffcdb8 l     O .bss	00000008 tzc400
00000000 l    df *ABS*	00000000 delay_timer.c
2fffcdc0 l     O .bss	00000004 timer_ops
00000000 l    df *ABS*	00000000 generic_delay_timer.c
2fff2348 l     F ro	00000008 get_timer_value
2fffcdc4 l     O .bss	0000000c ops
00000000 l    df *ABS*	00000000 bsec2.c
2fff23b0 l     F ro	00000004 fdt32_to_cpu
2fff23b4 l     F ro	00000018 bsec_lock
2fff23cc l     F ro	00000018 bsec_unlock
2fff23e4 l     F ro	00000018 otp_bank_offset
2fff23fc l     F ro	00000034 bsec_check_error
2fff2538 l     F ro	00000060 bsec_power_safmem
2fffcdd0 l     O .bss	00000004 bsec_base
2fffcdd4 l     O .bss	00000004 bsec_spinlock
2fffcdd8 l     O .bss	0000000c otp_nsec_access
00000000 l    df *ABS*	00000000 stm32mp_clkfunc.c
00000000 l    df *ABS*	00000000 stm32mp1_clk.c
2fff2c3c l     F ro	000000bc stm32mp1_read_pll_freq
2fff2cf8 l     F ro	00000198 get_clock_rate
2fff2e90 l     F ro	0000008c stm32mp1_pll_compute_pllxcfgr1
2fff2f1c l     F ro	00000024 stm32mp1_pll_start
2fff2f40 l     F ro	00000016 stm32mp1_clk_lock
2fff2f56 l     F ro	00000016 stm32mp1_clk_unlock
2fff2f6c l     F ro	00000080 stm32mp1_pll_stop
2fff2fec l     F ro	00000022 __clk_enable
2fff300e l     F ro	00000024 __clk_disable
2fff3032 l     F ro	0000001c clock_is_always_on
2fff3050 l     F ro	00000038 stm32mp1_clk_get_gated_id
2fff3088 l     F ro	0000007c stm32mp1_clk_get_parent
2fff3104 l     F ro	0000007c __stm32mp1_clk_enable
2fff3180 l     F ro	00000078 __stm32mp1_clk_disable
2fff31f8 l     F ro	0000006c stm32mp1_set_clkdiv
2fff3264 l     F ro	00000080 stm32mp1_pll_output
2fff32e4 l     F ro	00000078 stm32mp1_set_clksrc
2fff335c l     F ro	00000034 stm32mp1_pll_config_output
2fff3390 l     F ro	00000050 stm32mp1_pll_config
2fff33e0 l     F ro	0000014c stm32mp1_pll1_config_from_opp_khz
2fff35d8 l     F ro	00000258 clk_get_pll1_settings.part.5
2fffcde4 l     O .bss	00000004 current_opp_khz
2fffcde8 l     O .bss	000000e4 gate_refcounts
2fffcecc l     O .bss	00000004 mcudivr
2fffced0 l     O .bss	00000004 mssckselr
2fffced4 l     O .bss	0000004c pll1_settings
2fffcf20 l     O .bss	00000004 pll3cr
2fffcf24 l     O .bss	00000004 pll4cr
2fffcf28 l     O .bss	00000004 refcount_lock
2fffcf2c l     O .bss	00000004 reg_lock
2fffcf30 l     O .bss	00000018 stm32mp1_osc
2fffb400 l     O .data	00000038 backup_clock_cfg
2fffb438 l     O .data	00000058 backup_clock_sc_cfg
2fffb490 l     O .data	00000088 backup_mux0_cfg
2fffb518 l     O .data	00000004 backup_mux4_cfg
2fff989c l     O ro	0000001a __func__.7261
2fff98ef l     O ro	00000003 axiss_parents
2fff98f2 l     O ro	00000004 fmc_parents
2fff98f6 l     O ro	00000004 i2c12_parents
2fff98fa l     O ro	00000004 i2c35_parents
2fff98fe l     O ro	00000004 i2c46_parents
2fff9902 l     O ro	00000004 mcuss_parents
2fff9906 l     O ro	00000004 mpu_parents
2fff990a l     O ro	00000022 parent_id_clock_id
2fff992c l     O ro	00000003 per_parents
2fff992f l     O ro	00000003 pllncfgr2
2fff9932 l     O ro	00000004 qspi_parents
2fff9936 l     O ro	00000004 rng1_parents
2fff993a l     O ro	00000004 rtc_parents
2fff993e l     O ro	00000004 sdmmc12_parents
2fff9942 l     O ro	00000004 sdmmc3_parents
2fff9946 l     O ro	00000006 spi6_parents
2fff994c l     O ro	00000002 stgen_parents
2fff994e l     O ro	00000008 stm32mp1_axi_div
2fff9988 l     O ro	000001c8 stm32mp1_clk_gate
2fff9b6c l     O ro	00000080 stm32mp1_clk_pll
2fff9bec l     O ro	00000108 stm32mp1_clk_sel
2fff9e37 l     O ro	00000006 usart1_parents
2fff9e32 l     O ro	00000005 uart6_parents
2fff9e2d l     O ro	00000005 uart234578_parents
2fff9e3f l     O ro	00000003 usbphy_parents
2fff9e3d l     O ro	00000002 usbo_parents
2fff9cf4 l     O ro	00000010 stm32mp1_mcu_div
2fff9d04 l     O ro	00000008 stm32mp1_mpu_apbx_div
2fff9d0c l     O ro	00000006 stm32mp1_pll
00000000 l    df *ABS*	00000000 stm32mp1_ddr_helpers.c
2fff3fc0 l     F ro	00000014 do_sw_handshake
2fff3fd4 l     F ro	0000005c do_sw_ack
2fffcf48 l     O .bss	00000004 saved_ddr_sr_mode
2fff9e42 l     O ro	0000000a CSWTCH.26
00000000 l    df *ABS*	00000000 stm32_gpio.c
2fff4680 l     F ro	00000004 fdt32_to_cpu
00000000 l    df *ABS*	00000000 stm32_i2c.c
2fff49e0 l     F ro	0000002c i2c_transfer_config.isra.1
2fff4a0c l     F ro	00000044 i2c_wait_flag
2fff4a50 l     F ro	00000090 i2c_ack_failed
2fff4ae0 l     F ro	00000042 i2c_wait_txis
2fff4b22 l     F ro	00000042 i2c_wait_stop
2fff4b64 l     F ro	00000214 i2c_write
2fff4d78 l     F ro	000001ec i2c_read.isra.2
2fff9efc l     O ro	00000060 i2c_specs
00000000 l    df *ABS*	00000000 stm32_iwdg.c
2fffcf4c l     O .bss	00000020 stm32_iwdg
00000000 l    df *ABS*	00000000 stm32mp_pmic.c
2fff583c l     F ro	00000004 fdt32_to_cpu
2fff5840 l     F ro	00000020 dt_get_pmic_node
2fff5860 l     F ro	00000060 dt_pmic_get_regulator_voltage
2fff58c0 l     F ro	00000244 pmic_operate
2fffcf6c l     O .bss	00000024 i2c_handle
2fffcf90 l     O .bss	00000004 pmic_i2c_addr
2fffb534 l     O .data	00000004 i2c_node.6758
2fffb538 l     O .data	00000004 node.6697
2fffb53c l     O .data	00000004 status.6701
00000000 l    df *ABS*	00000000 stpmic1.c
2fff5cf8 l     F ro	00000038 get_regulator_data
2fff5d30 l     F ro	0000002a voltage_to_index
2fffcf94 l     O .bss	00000002 pmic_i2c_addr
2fffcf98 l     O .bss	00000004 pmic_i2c_handle
2fffa2fc l     O ro	00000080 buck1_voltage_table
2fffa37c l     O ro	0000004a buck2_voltage_table
2fffa3c6 l     O ro	00000070 buck3_voltage_table
2fffa436 l     O ro	0000007a buck4_voltage_table
2fffa4b0 l     O ro	00000002 fixed_5v_voltage_table
2fffa4b2 l     O ro	00000032 ldo1_voltage_table
2fffa4e4 l     O ro	00000032 ldo2_voltage_table
2fffa516 l     O ro	00000042 ldo3_voltage_table
2fffa558 l     O ro	00000002 ldo4_voltage_table
2fffa55a l     O ro	0000003e ldo5_voltage_table
2fffa598 l     O ro	00000032 ldo6_voltage_table
2fffa5cc l     O ro	000000e0 regulators_table
2fffa70a l     O ro	00000002 vref_ddr_voltage_table
00000000 l    df *ABS*	00000000 stm32mp1_reset.c
00000000 l    df *ABS*	00000000 stm32mp_dt.c
2fff612e l     F ro	00000004 fdt32_to_cpu
2fff6134 l     F ro	00000024 fdt_get_node_parent_address_cells
2fff6158 l     F ro	0000007c dt_get_stdout_node_offset
2fff61d4 l     F ro	000000d0 dt_get_opp_freqvolt_from_subnode
2fffcf9c l     O .bss	00000004 fdt_checked
00000000 l    df *ABS*	00000000 stm32mp_shres_helpers.c
2fffcfa0 l     O .bss	00000004 shregs_lock
00000000 l    df *ABS*	00000000 stm32mp1_context.c
00000000 l    df *ABS*	00000000 stm32mp1_dbgmcu.c
2fff697c l     F ro	0000002c stm32mp1_dbgmcu_init
00000000 l    df *ABS*	00000000 stm32mp1_security.c
00000000 l    df *ABS*	00000000 stm32mp1_syscfg.c
00000000 l    df *ABS*	00000000 /home/ming/tf-a-stm32mp-2.2.r2-r0/tf-a-stm32mp-2.2.r2/../build/trusted/bl32/cpu_data.o
00000000 l    df *ABS*	00000000 /home/ming/tf-a-stm32mp-2.2.r2-r0/tf-a-stm32mp-2.2.r2/../build/trusted/bl32/cpu_helpers.o
00000004 l       *ABS*	00000000 CPU_MIDR_SIZE
00000004 l       *ABS*	00000000 CPU_RESET_FUNC_SIZE
00000008 l       *ABS*	00000000 CPU_PWR_DWN_OPS_SIZE
00000004 l       *ABS*	00000000 CPU_ERRATA_FUNC_SIZE
00000004 l       *ABS*	00000000 CPU_ERRATA_LOCK_SIZE
00000004 l       *ABS*	00000000 CPU_ERRATA_PRINTED_SIZE
00000000 l       *ABS*	00000000 CPU_MIDR
00000004 l       *ABS*	00000000 CPU_RESET_FUNC
00000008 l       *ABS*	00000000 CPU_PWR_DWN_OPS
00000010 l       *ABS*	00000000 CPU_ERRATA_FUNC
00000014 l       *ABS*	00000000 CPU_ERRATA_LOCK
00000018 l       *ABS*	00000000 CPU_ERRATA_PRINTED
0000001c l       *ABS*	00000000 CPU_OPS_SIZE
2fff6be0 l       ro	00000000 error_exit
00000000 l    df *ABS*	00000000 /home/ming/tf-a-stm32mp-2.2.r2-r0/tf-a-stm32mp-2.2.r2/../build/trusted/bl32/spinlock.o
00000000 l    df *ABS*	00000000 /home/ming/tf-a-stm32mp-2.2.r2-r0/tf-a-stm32mp-2.2.r2/../build/trusted/bl32/psci_helpers.o
2fff6ca8 l     F ro	0000003c do_stack_maintenance
00000000 l    df *ABS*	00000000 /home/ming/tf-a-stm32mp-2.2.r2-r0/tf-a-stm32mp-2.2.r2/../build/trusted/bl32/platform_mp_stack.o
2fffb580 l       stacks	00000000 platform_normal_stacks
00000006 l       *ABS*	00000000 TZ_COUNT
00000000 l    df *ABS*	00000000 /home/ming/tf-a-stm32mp-2.2.r2-r0/tf-a-stm32mp-2.2.r2/../build/trusted/bl32/debug.o
2fffa937 l       ro	00000000 panic_msg
2fffa948 l       ro	00000000 panic_end
2fffa94b l       ro	00000000 assert_msg1
2fffa959 l       ro	00000000 assert_msg2
2fff6de0 l       ro	00000000 dec_print_loop
00000000 l    df *ABS*	00000000 /home/ming/tf-a-stm32mp-2.2.r2-r0/tf-a-stm32mp-2.2.r2/../build/trusted/bl32/cache_helpers.o
2fff6ea0 l       ro	00000000 exit_loop_cimvac
2fff6e8c l       ro	00000000 loop_cimvac
2fff6edc l       ro	00000000 exit_loop_cmvac
2fff6ec8 l       ro	00000000 loop_cmvac
2fff6f18 l       ro	00000000 exit_loop_imvac
2fff6f04 l       ro	00000000 loop_imvac
2fff6f1c l     F ro	0000009c do_dcsw_op
2fff6fa0 l       ro	00000000 dcsw_loop_table
2fff6f28 l       ro	00000000 loop1
2fff6f7c l       ro	00000000 level_done
2fff6f5c l       ro	00000000 loop2
2fff6f60 l       ro	00000000 loop3
00000000 l    df *ABS*	00000000 /home/ming/tf-a-stm32mp-2.2.r2-r0/tf-a-stm32mp-2.2.r2/../build/trusted/bl32/misc_helpers.o
2fff7044 l       ro	00000000 do_disable_mmu
00000000 l    df *ABS*	00000000 /home/ming/tf-a-stm32mp-2.2.r2-r0/tf-a-stm32mp-2.2.r2/../build/trusted/bl32/platform_helpers.o
00000000 l    df *ABS*	00000000 /home/ming/tf-a-stm32mp-2.2.r2-r0/tf-a-stm32mp-2.2.r2/../build/trusted/bl32/aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 /home/ming/tf-a-stm32mp-2.2.r2-r0/tf-a-stm32mp-2.2.r2/../build/trusted/bl32/stm32_console.o
2fff70a0 l       ro	00000000 core_init_fail
2fff70f4 l       ro	00000000 register_fail
2fff7140 l       ro	00000000 putc_error
2fff710c l       ro	00000000 txe_loop
2fff7128 l       ro	00000000 tc_loop
2fff7190 l       ro	00000000 flush_error
2fff7174 l       ro	00000000 txe_loop_3
00000000 l    df *ABS*	00000000 /home/ming/tf-a-stm32mp-2.2.r2-r0/tf-a-stm32mp-2.2.r2/../build/trusted/bl32/enable_mmu.o
00000000 l    df *ABS*	00000000 /home/ming/tf-a-stm32mp-2.2.r2-r0/tf-a-stm32mp-2.2.r2/../build/trusted/bl32/cortex_a7.o
00000004 l       *ABS*	00000000 CPU_MIDR_SIZE
00000004 l       *ABS*	00000000 CPU_RESET_FUNC_SIZE
00000008 l       *ABS*	00000000 CPU_PWR_DWN_OPS_SIZE
00000004 l       *ABS*	00000000 CPU_ERRATA_FUNC_SIZE
00000004 l       *ABS*	00000000 CPU_ERRATA_LOCK_SIZE
00000004 l       *ABS*	00000000 CPU_ERRATA_PRINTED_SIZE
00000000 l       *ABS*	00000000 CPU_MIDR
00000004 l       *ABS*	00000000 CPU_RESET_FUNC
00000008 l       *ABS*	00000000 CPU_PWR_DWN_OPS
00000010 l       *ABS*	00000000 CPU_ERRATA_FUNC
00000014 l       *ABS*	00000000 CPU_ERRATA_LOCK
00000018 l       *ABS*	00000000 CPU_ERRATA_PRINTED
0000001c l       *ABS*	00000000 CPU_OPS_SIZE
2fff7238 l     F ro	00000018 cortex_a7_disable_smp
2fff7250 l     F ro	00000014 cortex_a7_enable_smp
2fff7264 l     F ro	00000004 cortex_a7_reset_func
2fff7268 l     F ro	0000002c cortex_a7_core_pwr_dwn
2fff7298 l     F ro	00000030 cortex_a7_cluster_pwr_dwn
2fff72cc l     F ro	00000004 cortex_a7_errata_report
2fffb540 l       .data	00000000 cortex_a7_errata_lock
2fffb544 l       .data	00000000 cortex_a7_errata_reported
00000000 l    df *ABS*	00000000 /home/ming/tf-a-stm32mp-2.2.r2-r0/tf-a-stm32mp-2.2.r2/../build/trusted/bl32/stm32mp1_helper.o
2fff72f0 l       ro	00000000 undef_inst_lbl
2fffa9cd l       ro	00000000 abort_str
2fff7328 l       ro	00000000 print_exception_info
2fff7308 l       ro	00000000 other_exception_lbl
2fffaa05 l       ro	00000000 undefined_str
2fffaa23 l       ro	00000000 exception_start_str
2fffaa36 l       ro	00000000 exception_end_str
2fffaa6a l       ro	00000000 end_error_str
2fffa9db l       ro	00000000 prefetch_abort_str
2fffaa54 l       ro	00000000 ifsr_str
2fffaa5f l       ro	00000000 ifar_str
2fffa9f2 l       ro	00000000 data_abort_str
2fffaa3e l       ro	00000000 dfsr_str
2fffaa49 l       ro	00000000 dfar_str
2fff7430 l     F ro	00000010 plat_stm32mp1_get_core_pos
00000000 l    df *ABS*	00000000 fdt.c
2fff7550 l     F ro	00000004 fdt32_to_cpu
00000000 l    df *ABS*	00000000 fdt_addresses.c
00000000 l    df *ABS*	00000000 fdt_ro.c
2fff7808 l     F ro	00000004 fdt32_to_cpu
2fff780c l     F ro	00000032 nextprop_
2fff783e l     F ro	00000036 fdt_get_property_by_offset_
2fff79b6 l     F ro	00000078 fdt_get_property_namelen_
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 printf.c
2fff7e4a l     F ro	0000006c unsigned_num_print
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlcpy.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 strnlen.c
00000000 l    df *ABS*	00000000 strrchr.c
00000000 l    df *ABS*	00000000 
00000000 l    df *ABS*	00000000 cpu_data_array.c
2fffab20 l     F ro	00000008 __psci_do_pwrdown_cache_maintenance_from_thumb
2fffab28 l     F ro	00000008 __spin_unlock_from_thumb
2fffab30 l     F ro	00000008 __clean_dcache_range_from_thumb
2fffab38 l     F ro	00000008 __spin_lock_from_thumb
2fffab40 l     F ro	00000008 __print_errata_status_from_thumb
2fffab48 l     F ro	00000008 __console_register_from_arm
2fffab50 l     F ro	00000008 __flush_dcache_range_from_thumb
2fffab58 l     F ro	00000008 __enable_mmu_direct_svc_mon_from_thumb
2fff2bf4 g     F ro	00000048 stm32mp_stgen_restore_counter
2fff8082 g     F ro	00000016 putchar
2fff4054 g     F ro	000001f4 ddr_sw_self_refresh_exit
2ffeb910 g     F ro	000000b4 cm_prepare_el3_exit
2fff0c50 g     F ro	0000001c console_set_scope
2fff5e74 g     F ro	00000026 stpmic1_lp_copy_reg
2fff77c0 g     F ro	00000048 fdt_address_cells
2fff2314 g     F ro	0000000a mdelay
2fff0f14 g     F ro	00000018 stm32mp_pwr_regs_lock
2fff75ac g     F ro	0000003c fdt_offset_ptr
2fff5440 g     F ro	00000012 stm32_i2c_mem_read
2ffee168 g     F ro	000000a4 sp_min_platform_setup
2fff6722 g     F ro	0000001a stm32mp_mmio_clrbits_32_shregs
2fff29e0 g     F ro	00000034 bsec_check_nsec_access_rights
2fff3ad8 g     F ro	00000020 stm32mp1_clk_lp_load_opp_pll1_settings
2ffec5ae g     F ro	00000018 psci_migrate_info_up_cpu
2fff09e4 g     F ro	000000a8 stm32mp1_init_scmi_server
2fffb51c g     O .data	00000018 stm32mp_osc_node_label
2fff0c04 g     F ro	00000040 console_register
2ffef192 g     F ro	0000000c gicd_set_icenabler
2ffec3c4 g     F ro	000000bc psci_cpu_suspend
2fff6af4 g     F ro	00000034 reset_handler
2ffeb2e0 g     F ro	000000d0 sp_min_warm_entrypoint
2fff06bc g     F ro	00000020 scmi_smt_fastcall_smc_entry
2fff6fdc g     F ro	00000064 zeromem
2fff35c0 g     F ro	00000016 stm32mp_clk_get_rate
2fff8180 g     O ro	00000012 version_string
2ffeb444 g     F ro	00000024 smc_get_ctx
2fffab00 g       ro	00000000 __pubsub_psci_suspend_pwrdown_finish_end
2fff2648 g     F ro	00000038 bsec_read_sr_lock
2ffec184 g     F ro	0000009c psci_validate_entry_point
2ffeed28 g     F ro	00000018 stm32mp_gpio_bank_is_non_secure
2fff1bd8 g     F ro	00000018 mmap_add_ctx
2fff08e2 g     F ro	00000044 plat_scmi_clock_set_state
2ffeb47c g     F ro	00000024 cm_get_context
2fff8068 g     F ro	0000001a printf
2fff1bf0 g     F ro	00000174 mmap_add_dynamic_region_ctx
2fffd108 g     O .bss	00000018 mmu_cfg_params
2fff1fca g     F ro	00000002 xlat_tables_print
2ffec140 g     F ro	00000030 psci_release_pwr_domain_locks
2ffebe1c g     F ro	00000030 psci_validate_power_state
2ffef0d4 g     F ro	00000020 plat_core_pos_by_mpidr
2fff38cc g     F ro	00000038 stm32mp1_round_opp_khz
2fffb000 g       ro	00000000 __RW_START__
2fff12cc g     F ro	00000026 stm32mp_etzpc_binding2decprot
2ffed858 g     F ro	00000020 stm32_rtc_is_timestamp_enable
2ffeb468 g     F ro	00000014 smc_get_next_ctx
2fff2818 g     F ro	00000038 bsec_read_sw_lock
2ffef374 g     F ro	0000002c gicv2_cpuif_enable
2fff0934 g     F ro	00000018 plat_scmi_rd_count
2ffebd90 g     F ro	0000008c psci_cpu_suspend_finish
2fff55b0 g     F ro	00000040 stm32_iwdg_refresh
2fff6acc g     F ro	00000010 _cpu_data
2fff7a2e g     F ro	00000040 fdt_getprop_namelen
2fff5fa0 g     F ro	0000001a stpmic1_lp_set_mode
2fff0fbc g     F ro	0000001c configure_mmu
2fff0778 g     F ro	00000020 plat_scmi_get_channel
2fff7986 g     F ro	00000018 fdt_first_property_offset
2fff14e0 g     F ro	00000028 mmap_add_dynamic_region
2fff64d8 g     F ro	00000028 dt_get_node_by_compatible
2fff6d9c g     F ro	0000006c asm_assert
2fff6fcc g     F ro	00000010 dcsw_op_level1
2fff2850 g     F ro	00000044 bsec_write_otp
2ffee948 g     F ro	0000000c stm32mp1_get_retram_enabled
2fff6d30 g     F ro	00000034 do_panic
2ffef3dc g     F ro	00000044 gicv2_distif_init
2fff6d8c g     F ro	00000010 report_data_abort
2fff7c32 g     F ro	00000020 fdt_parent_offset
2fff7e0e g     F ro	0000002c memmove
2fffcfa4 g     O .bss	00000080 rt_svc_descs_indices
2ffeb5d8 g     F ro	00000084 sp_min_warm_boot
2ffef114 g     F ro	0000000c gicd_write_isenabler
2ffee7b4 g     F ro	00000014 plat_setup_psci_ops
2fff1400 g     F ro	000000ac setup_mmu_cfg
2fff6ce4 g     F ro	00000010 psci_power_down_wfi
2ffef7dc  w    F ro	00000004 plat_ic_set_interrupt_priority
2ffed1b4 g     F ro	00000030 etzpc_lock_decprot
2ffeb65c g     F ro	00000016 sp_min_fiq
2fff1d64 g     F ro	00000110 mmap_remove_dynamic_region_ctx
2fff4780 g     F ro	00000204 dt_set_pinctrl_config
2fff2178 g     F ro	00000048 tzc400_disable_filters
2fff6c78 g     F ro	00000030 psci_do_pwrup_cache_maintenance
2ffec508 g     F ro	0000002a psci_affinity_info
2fff7b88 g     F ro	0000001a fdt_path_offset
2fff0d04  w    F ro	00000024 plat_log_get_prefix
2ffec534 g     F ro	0000006c psci_migrate
2fff5d5c g     F ro	00000028 stpmic1_register_read
2fff72d0 g     F ro	00000068 plat_report_exception
2ffee7c8 g     F ro	00000114 stm32mp1_init_lp_states
2fff734c g     F ro	00000028 plat_report_undef_inst
2ffeda0c g     F ro	000000e0 stm32_tamp_it_handler
2ffed140 g     F ro	00000040 etzpc_configure_decprot
2ffee8f0 g     F ro	00000058 stm32mp1_get_lp_soc_mode
2fff8162 g     O ro	0000001e build_message
2fff3e18 g     F ro	0000004c stm32mp1_clock_stopmode_save
2fff06dc g     F ro	00000020 scmi_smt_init_agent_channel
2ffec7b8 g     F ro	00000224 psci_setup
2fff2ab4 g     F ro	0000000c fdt_get_rcc_node
2fff1518 g     F ro	0000003c init_xlat_tables
2ffee530 g     F ro	0000004a stm32_auto_stop
2fff4684 g     F ro	000000fc set_gpio
2fffb000 g       .data	00000000 __DATA_START__
2fff386c g     F ro	0000005e stm32mp1_rtc_get_read_twice
2fff0814 g     F ro	00000006 plat_scmi_clock_rates_array
2ffef770 g     F ro	00000038 gicv2_set_pmr
2ffed8ac g     F ro	00000058 stm32_tamp_configure_internal
2fff1034 g     F ro	00000020 stm32_get_gpio_bank_clock
2fffd140 g     O .bss	00000004 psci_locks
2fff2520 g     F ro	0000000c bsec_read_debug_conf
2fff70a8 g     F ro	00000050 console_stm32_register
2fff085e g     F ro	00000048 plat_scmi_clock_set_rate
2fff7068  w    F ro	00000004 plat_disable_acp
2fff3574 g     F ro	00000006 stm32mp1_clk_force_enable
2ffeee0c g     F ro	000000a0 stm32mp_nsec_can_access_reset
2fff099e g     F ro	00000044 plat_scmi_rd_set_state
2ffec0a4 g     F ro	00000014 psci_find_target_suspend_lvl
2fff131c g     F ro	00000028 xlat_arch_regime_get_xn_desc
2fff5bbc g     F ro	00000108 initialize_pmic_i2c
2ffef186 g     F ro	0000000c gicd_set_isenabler
2fff355c g     F ro	0000000c stm32mp1_clk_rcc_regs_unlock
2ffec7a0 g     F ro	00000016 psci_arch_setup
2fff7d68 g     F ro	00000040 fdt_node_offset_by_compatible
2fff65b8 g     F ro	00000050 dt_get_cpu_regulator_name
2fff0a8c g     F ro	00000078 stm32mp1_pm_save_scmi_state
2ffeca38 g     F ro	00000038 psci_system_reset
2ffef1dc g     F ro	00000050 gicv2_spis_configure_defaults
2fff2680 g     F ro	0000007c bsec_shadow_register
2ffed3d4 g     F ro	0000009c stm32_rng_init
2ffef19e g     F ro	0000000a gicd_set_ipriorityr
2fff7df8 g     F ro	00000016 memcpy
2ffec170 g     F ro	00000012 psci_validate_mpidr
2ffec480 g     F ro	0000006c psci_system_suspend
2ffeb8e0 g     F ro	00000018 cm_init_context_by_index
2fff21fc g     F ro	000000bc tzc400_it_handler
2ffed058 g     F ro	000000e8 stm32mp1_calib_init
2fff0eec g     F ro	00000008 stm32mp_ddrphyc_base
2fff6fdc g     F ro	00000064 zero_normalmem
2ffebf20 g     F ro	0000002c psci_get_parent_pwr_domain_nodes
2fff706c g     F ro	00000024 __aeabi_uldivmod
2fff3c18 g     F ro	00000050 save_clock_pm_context
2fff5cc4 g     F ro	00000034 initialize_pmic
2ffefb90 g     F ro	0000008c pwr_scv_handler
2fff6918 g     F ro	00000064 stm32_save_ddr_training_area
2fff6018 g     F ro	00000014 stpmic1_bind_i2c
2ffeca00 g     F ro	00000038 psci_system_off
2fff2b74 g     F ro	00000070 fdt_get_clock_id_by_name
2fff6d7c g     F ro	00000010 report_prefetch_abort
2fff26fc g     F ro	0000011c bsec_probe
2fff2500 g     F ro	00000020 bsec_read_otp
2ffef120 g     F ro	0000000c gicd_write_icenabler
2ffef84a g     F ro	00000016 stm32_gic_pcpu_init
2ffed03c g     F ro	0000001c stm32mp1_calib_start_csi_cal
2fff14d4 g     F ro	0000000c mmap_add
2fff5e9a g     F ro	0000002c stpmic1_register_update
2fff0ef4 g     F ro	00000008 stm32mp_pwr_base
2fff0edc g     F ro	00000006 plat_get_syscnt_freq2
2fff0f6c g     F ro	00000020 stm32_get_gpio_bank_offset
2fff74f8 g     F ro	00000014 plat_panic_handler
2fff6a30 g     F ro	00000068 stm32mp1_syscfg_enable_io_compensation
2fffaac4 g       ro	00000000 __RT_SVC_DESCS_START__
2fff66ec g     F ro	00000018 stm32mp_unlock_shregs
2fff78e4 g     F ro	00000084 fdt_subnode_offset_namelen
2fff4480 g     F ro	00000018 ddr_read_sr_mode
2fffc180 g       stacks	00000000 __STACKS_END__
2fffab00 g       ro	00000000 __pubsub_psci_suspend_pwrdown_start_end
2fff7c14 g     F ro	0000001e fdt_node_depth
2fffd180 g       .bss	00000000 __PERCPU_BAKERY_LOCK_END__
2fff1254 g     F ro	00000028 stm32_iwdg_get_instance
2fff0d4c g     F ro	00000190 __udivmoddi4
2fff6ea4 g     F ro	0000003c clean_dcache_range
2ffedee8 g     F ro	000000ec sp_min_plat_fiq_handler
2fff6b2c g     F ro	00000040 prepare_cpu_pwr_dwn
2ffeb7c0  w    F ro	00000006 sp_min_plat_runtime_setup
2fff6408 g     F ro	0000008c dt_fill_device_info
2fff3568 g     F ro	00000006 stm32mp_clk_enable
2ffec220 g     F ro	0000008c psci_warmboot_entrypoint
2ffed180 g     F ro	00000034 etzpc_get_decprot
2fff602c g     F ro	00000070 stm32mp_reset_assert_to
2fff73d4 g     F ro	00000048 plat_report_data_abort
2fff6d10  w    F ro	0000001c plat_set_my_stack
2ffeb4c0 g     F ro	00000020 cm_set_context_by_index
2fffaae4 g       ro	00000000 __RT_SVC_DESCS_END__
2fff28cc g     F ro	00000038 bsec_read_permanent_lock
2fff76b4 g     F ro	00000024 fdt_check_node_offset_
2fff0b04 g     F ro	0000007c stm32mp1_pm_restore_scmi_state
2fff05e8 g     F ro	00000024 scmi_msg_get_rd_handler
2fff6e34 g     F ro	00000034 asm_print_hex
2fff07e0 g     F ro	00000018 plat_scmi_clock_count
2ffec9dc g     F ro	00000024 psci_prepare_next_non_secure_ctx
2fffd0c0 g     O .bss	00000018 psci_cpu_pd_nodes
00001040 g       *ABS*	00000000 __BSS_SIZE__
2fff2638 g     F ro	00000010 bsec_get_id
2fff6e18 g     F ro	0000001c asm_print_str
2fff633c g     F ro	0000005c fdt_get_interrupt
2fff74e0 g     F ro	00000008 plat_crash_console_flush
2fff0ee4 g     F ro	00000008 stm32mp_ddrctrl_base
2fff8134 g     F ro	00000014 strnlen
2ffec2ac g     F ro	0000002c psci_spd_migrate_info
2ffefca4 g     F ro	0000004c rcc_opp_scv_handler
2fff6704 g     F ro	0000001e stm32mp_mmio_clrsetbits_32_shregs
2fff7a6e g     F ro	00000022 fdt_getprop
2fff6adc g     F ro	00000014 _cpu_data_by_index
2ffeb160 g     F ro	000000cc sp_min_handle_smc
2fff3f00 g     F ro	000000c0 stm32mp1_clk_probe
2ffef8f0 g     F ro	00000138 stm32_gic_enable_spi
2fffab60 g       ro	00000000 __RO_END_UNALIGNED__
2ffec2d8 g     F ro	000000b8 psci_print_power_domain_map
2ffefa28 g     F ro	00000024 plat_get_target_pwr_state
2fff2a14 g     F ro	000000a0 fdt_osc_read_freq
2fff0c6c g     F ro	00000058 console_putc
2fff3e64 g     F ro	00000098 stm32mp1_clock_stopmode_resume
2ffeec24 g     F ro	00000006 stm32mp_register_non_secure_periph_iomem
2ffef138 g     F ro	0000000c gicd_write_icfgr
2fff8148 g     F ro	0000001a strrchr
2ffebe6c g     F ro	00000050 psci_is_last_on_cpu
2ffee45c g     F ro	0000009c stm32_exit_cstop
2fff7448 g     F ro	0000007c plat_crash_console_init
2fff6e68 g     F ro	0000003c flush_dcache_range
2fff07c0 g     F ro	00000020 plat_scmi_protocol_list
2ffef860 g     F ro	00000090 stm32_gic_init
2fff5454 g     F ro	0000015c stm32_i2c_is_device_ready
2fff1140 g     F ro	00000040 stm32mp_supports_cpu_opp
2fff2320 g     F ro	00000028 timer_init
2fff7c94 g     F ro	00000046 fdt_stringlist_contains
2fff5eda g     F ro	00000014 stpmic1_regulator_enable
2fff0fd8 g     F ro	0000001a stm32mp_mask_timer
2fff2628 g     F ro	00000010 bsec_get_version
2ffef2c0 g     F ro	000000b4 gicv2_secure_ppi_sgi_setup_props
2fffab00 g       ro	00000000 sp_min_vector_table
2fff12fa g     F ro	00000006 xlat_get_min_virt_addr_space_size
2fff3904 g     F ro	00000070 stm32mp1_set_opp_khz
2ffefff0 g     F ro	00000024 scmi_msg_get_base_handler
2ffed5dc g     F ro	000001c8 stm32_rtc_diff_calendar
2ffef504 g     F ro	00000068 gicv2_set_pe_target_mask
2fff5dac g     F ro	00000070 stpmic1_regulator_voltage_get
2fff7eb8 g     F ro	000001b0 vprintf
2ffef1d4 g     F ro	00000008 gicv2_get_cpuif_id
2fff63c0 g     F ro	00000048 fdt_read_uint32_array
2fff08a6 g     F ro	00000020 plat_scmi_clock_get_rate
2fff1300 g     F ro	0000001c is_dcache_enabled
2ffebbd0 g     F ro	0000009c psci_cpu_on_finish
2fff6fb8 g     F ro	00000014 dcsw_op_all
2ffec4ec g     F ro	0000001c psci_cpu_off
2fff742c g     F ro	00000004 plat_reset_handler
2fff3580 g     F ro	00000040 stm32mp_clk_is_enabled
2fff2ac0 g     F ro	0000001e fdt_rcc_read_uint32_default
2fff7968 g     F ro	0000001e fdt_subnode_offset
2ffed208 g     F ro	000000ec etzpc_init
2fff2b0e g     F ro	0000001c fdt_rcc_enable_it
2fff6bac g     F ro	00000038 get_cpu_ops_ptr
2ffedd48 g     F ro	00000034 stm32_timer_csi_freq
2fff6772 g     F ro	00000038 stm32mp1_pm_save_clock_cfg
2ffeb4a0 g     F ro	00000020 cm_get_context_by_index
2ffeb8f8 g     F ro	00000018 cm_init_my_context
2fff66d4 g     F ro	00000018 stm32mp_lock_shregs
2ffef7e0 g     F ro	00000004 plat_ic_set_priority_mask
2fff7dc0 g     F ro	0000001c memchr
2ffef7d0  w    F ro	00000004 plat_ic_acknowledge_interrupt
2fff094c g     F ro	00000052 plat_scmi_rd_autonomous
2fff750c g     F ro	00000044 wfi_svc_int_enable
2ffee038 g     F ro	00000130 sp_min_early_platform_setup2
2fff1384 g     F ro	0000003c xlat_arch_current_el
2fff2430 g     F ro	000000d0 bsec_find_otp_name_in_dt
2ffef7a8 g     F ro	00000014 gicv2_interrupt_set_cfg
2fff7ba2 g     F ro	00000072 fdt_supernode_atdepth_offset
2fff11a8 g     F ro	000000ac stm32mp_plat_reset
2fff6398 g     F ro	00000028 fdt_read_uint32_default
00000040 g       *ABS*	00000000 __PERCPU_BAKERY_LOCK_SIZE__
2fff0378 g     F ro	00000020 scmi_msg_get_clock_handler
2ffeec64 g     F ro	000000c4 stm32mp1_register_etzpc_decprot
2ffef0fe g     F ro	0000000c gicd_read_icfgr
2fff7792 g     F ro	0000002e fdt_next_subnode
2fff6110 g     F ro	0000001e stm32mp_reset_assert_deassert_to_mcu
2ffeb9f0 g     F ro	000000b8 psci_do_cpu_off
2fff107c g     F ro	00000030 stm32_get_otp_value_from_idx
2fffd100 g     O .bss	00000004 psci_caps
2fff0798 g     F ro	00000008 plat_scmi_vendor_name
2fff3c68 g     F ro	00000050 restore_clock_pm_context
2ffeb868 g     F ro	00000078 cm_setup_context
2ffed7a4 g     F ro	0000006c stm32_rtc_get_timestamp
2fff80c6 g     F ro	00000036 strlcpy
2fff810c g     F ro	00000028 strncmp
2fff0d28  w    F ro	00000004 bl32_plat_enable_mmu
2fff03c8 g     F ro	0000002c scmi_write_response
2fffd1c0 g       .bss	00000000 __BL32_END__
2fffb548 g       .data	00000000 __DATA_END__
2fff6868 g     F ro	00000084 stm32_restore_context
2ffeddac g     F ro	00000034 stm32_timer_freq_func
2fff6d6c g     F ro	00000010 report_undef_inst
2ffecf88 g     F ro	0000000c stm32mp1_calib_set_wakeup
2fff6524 g     F ro	00000094 dt_get_all_opp_freqvolt
2ffee20c g     F ro	00000002 sp_min_plat_arch_setup
2fffaae4 g       ro	00000000 __CPU_OPS_START__
2fff07f8 g     F ro	0000001c plat_scmi_clock_get_name
2fff22b8 g     F ro	0000005c udelay
2fff6608 g     F ro	00000030 fdt_get_gpio_bank_pinctrl_node
2fff64b8 g     F ro	0000001e dt_get_stdout_uart_info
2fff3efc g     F ro	00000002 stm32mp1_dump_clocks_state
2fff76d8 g     F ro	00000024 fdt_check_prop_offset_
2fff2ade g     F ro	00000030 fdt_rcc_read_prop
2fff6ee0 g     F ro	0000003c inv_dcache_range
2fffb3b0 g     O .data	00000001 console_state
2fff7100 g     F ro	00000048 console_stm32_core_putc
2ffeb000 g     F ro	00000134 sp_min_entrypoint
2ffec66c g     F ro	00000134 psci_smc_handler
2fff7168 g     F ro	00000030 console_stm32_core_flush
2fff2368 g     F ro	00000048 generic_delay_timer_init
2ffebc6c g     F ro	00000124 psci_cpu_suspend_start
2ffeec2c g     F ro	00000028 stm32mp_register_secure_gpio
2fff252c g     F ro	0000000c bsec_get_status
2ffebebc g     F ro	00000010 psci_init_req_local_pwr_states
2fff2350 g     F ro	00000018 generic_delay_timer_init_args
2fffd1c0 g       .bss	00000000 __BAKERY_LOCK_END__
2fff0926 g     F ro	0000000c plat_scmi_rd_get_name
2fff7ddc g     F ro	0000001c memcmp
2fff0efc g     F ro	00000006 stm32mp_rcc_base
2ffebaa8 g     F ro	00000128 psci_cpu_on_start
2fff55f0 g     F ro	00000058 stm32_iwdg_it_handler
2ffec08c g     F ro	00000018 psci_find_max_off_lvl
2fff0ff2 g     F ro	00000042 stm32mp_wait_cpu_reset
2fff187c g     F ro	000000b0 xlat_desc
2fff7b00 g     F ro	00000088 fdt_path_offset_namelen
2fff799e g     F ro	00000018 fdt_next_property_offset
2fff69a8 g     F ro	00000030 stm32mp1_dbgmcu_get_chip_dev_id
2ffef1a8 g     F ro	0000002c gicd_set_icfgr
2fffd0d8 g     O .bss	00000020 psci_non_cpu_pd_nodes
2fff6494 g     F ro	00000024 dt_get_node
2ffed020 g     F ro	0000001c stm32mp1_calib_start_hsi_cal
2fffab00 g       ro	00000000 __CPU_OPS_END__
2fffd1c0 g       .bss	00000000 __BSS_END__
2fff357a g     F ro	00000006 stm32mp1_clk_force_disable
2fff08c6 g     F ro	0000001c plat_scmi_clock_get_state
2ffef7d8  w    F ro	00000004 plat_ic_disable_interrupt
2ffec390 g     F ro	00000004 psci_do_pwrdown_sequence
2fff2110 g     F ro	00000068 tzc400_enable_filters
2ffed810 g     F ro	00000048 stm32_rtc_set_tamper_timestamp
2fff6c60 g     F ro	00000018 psci_do_pwrdown_cache_maintenance
2fff7c52 g     F ro	00000042 fdt_node_offset_by_phandle
2fff0d2c g     F ro	00000020 __ctzdi2
2fff2b2c g     F ro	00000048 fdt_get_clock_id
2fff204c g     F ro	000000c4 tzc400_configure_region
2ffec394 g     F ro	0000002e psci_cpu_on
2ffee57c g     F ro	0000006c stm32_enter_low_power
2fff62a4 g     F ro	0000001c dt_open_and_check
2ffef144 g     F ro	00000020 gicd_set_igroupr
2fff705c g     F ro	00000008 disable_mmu_icache_secure
2ffec0b8 g     F ro	00000056 psci_validate_suspend_req
2ffed584 g     F ro	00000018 stm32_rtc_regs_unlock
2ffec610 g     F ro	0000005c psci_features
2fff7e3a g     F ro	00000010 memset
2ffedaec g     F ro	00000114 stm32_tamp_init
2fffd140 g       .bss	00000000 __BAKERY_LOCK_START__
2ffebecc g     F ro	00000054 psci_get_target_local_pwr_states
2ffef484 g     F ro	00000038 gicv2_get_pending_interrupt_id
2fff0f8c g     F ro	0000002e stm32mp_get_cpu_supply_name
2ffed56c g     F ro	00000018 stm32_rtc_regs_lock
2fff6a98 g     F ro	00000034 stm32mp1_syscfg_disable_io_compensation
2fff7148 g     F ro	0000001c console_stm32_putc
2fff4674 g     F ro	0000000c ddr_restore_sr_mode
2fffd0f8 g     O .bss	00000004 psci_plat_pm_ops
2fff081a g     F ro	00000044 plat_scmi_clock_rates_by_step
2fff12f2 g     F ro	00000008 xlat_arch_get_max_supported_pa
2fff0398 g     F ro	00000030 scmi_status_response
2fff1554 g     F ro	00000034 enable_mmu_svc_mon
2fffab00 g       ro	00000000 __pubsub_psci_suspend_pwrdown_start_start
2fff4498 g     F ro	000001cc ddr_set_sr_mode
2ffef7d4  w    F ro	00000004 plat_ic_end_of_interrupt
2ffed904 g     F ro	00000108 stm32_tamp_configure_external
2fff7a90 g     F ro	00000044 fdt_get_phandle
2ffee2b4 g     F ro	00000044 stm32_apply_pmic_suspend_config
2ffeb4e0 g     F ro	00000020 get_arm_std_svc_args
2fff80ae g     F ro	00000018 strcmp
2fff5648 g     F ro	000001f4 stm32_iwdg_init
2ffecb60 g     F ro	00000100 bakery_lock_get
2fff2598 g     F ro	00000090 bsec_permanent_lock_otp
2fff1fcc g     F ro	00000024 tzc400_set_action
2fff5ef0 g     F ro	0000005c stpmic1_regulator_voltage_set
2ffecae0 g     F ro	0000004c psci_mem_protect
2fff5ec6 g     F ro	0000000a stpmic1_powerctrl_on
2ffed59c g     F ro	00000040 stm32_rtc_get_calendar
2ffecc60 g     F ro	00000058 bakery_lock_release
2ffedfd4 g     F ro	00000064 sp_min_plat_get_bl33_ep_info
2fff7090 g     F ro	00000018 console_stm32_core_init
2fff7040 g     F ro	0000001c disable_mmu_secure
2ffef0cc g     F ro	00000008 plat_get_power_domain_tree_desc
2ffef5ec g     F ro	00000040 gicv2_set_interrupt_priority
2fff4f64 g     F ro	00000060 stm32_i2c_get_setup_from_fdt
2ffef22c g     F ro	00000094 gicv2_secure_spis_configure_props
2ffef12c g     F ro	0000000c gicd_write_ipriorityr
2ffeeeac g     F ro	00000220 stm32mp_lock_periph_registering
2fff5e1c g     F ro	00000058 stpmic1_register_write
2fff5d84 g     F ro	00000028 stpmic1_is_regulator_enabled
2fff7198 g     F ro	0000001c console_stm32_flush
2ffec5c8 g     F ro	00000048 psci_node_hw_state
2fff4664 g     F ro	00000010 ddr_save_sr_mode
2fff7554 g     F ro	00000058 fdt_check_header
2ffef704 g     F ro	0000006c gicv2_set_spi_routing
2fff6b70 g     F ro	00000038 init_cpu_ops
2fff68ec g     F ro	0000002c stm32_are_pll1_settings_valid_in_context
2fff0cc4 g     F ro	00000040 console_flush
2fff1374 g     F ro	00000010 xlat_arch_tlbi_va_sync
2fff356e g     F ro	00000006 stm32mp_clk_disable
2fffb000 g       ro	00000000 __RO_END__
2fff7884 g     F ro	00000060 fdt_get_name
2fff3974 g     F ro	00000138 stm32mp1_clk_compute_all_pll1_settings
2ffef0f4 g     F ro	0000000a gicd_read_igroupr
2ffeb22c g     F ro	000000b4 sp_min_handle_fiq
2fff0c44 g     F ro	0000000c console_switch_state
2fff6bf0 g     F ro	00000034 print_errata_status
2fff6c48 g     F ro	00000018 spin_unlock
2fff776a g     F ro	00000028 fdt_first_subnode
2ffef7bc  w    F ro	00000014 plat_ic_get_pending_interrupt_id
2fffc180 g       .bss	00000000 __BSS_START__
2fff3d44 g     F ro	000000d4 stm32mp1_clock_resume
2ffedd7c g     F ro	00000030 stm32_timer_hsi_freq
2ffecf94 g     F ro	0000008c stm32mp1_calib_it_handler
2ffeb000 g       ro	00000000 __RO_START__
2fff5f70 g     F ro	0000001a stpmic1_regulator_mask_reset_set
2fff1ae8 g     F ro	000000f0 mmap_add_region_ctx
2fff74ec g     F ro	00000008 plat_crash_console_putc
2fff2904 g     F ro	000000dc bsec_program_otp
2fffd040 g     O .bss	00000080 percpu_data
2ffef5b0 g     F ro	0000003c gicv2_disable_interrupt
2ffefc1c g     F ro	00000062 rcc_scv_handler
2fff07a8 g     F ro	00000018 plat_scmi_protocol_count
2fff76fc g     F ro	0000006e fdt_next_node
2ffefb78 g     F ro	00000018 pm_domain_scv_handler
2fff5ed0 g     F ro	0000000a stpmic1_switch_off
2fff6638 g     F ro	0000009c fdt_get_gpioz_nbpins_from_dt
2fff67e4 g     F ro	00000084 stm32_save_context
2fff3aac g     F ro	0000002c stm32mp1_clk_lp_save_opp_pll1_settings
2fff62c0 g     F ro	00000018 fdt_get_address
2fff6c24 g     F ro	00000024 spin_lock
2fff0bdc g     F ro	00000028 console_is_registered
2ffee4f8 g     F ro	00000038 stm32_pwr_down_wfi
2fff353a g     F ro	00000014 stm32mp1_rcc_is_mckprot
2fff0f2c g     F ro	00000018 stm32mp_pwr_regs_unlock
2fff4030 g     F ro	00000022 ddr_enable_clock
2ffebe4c g     F ro	00000020 psci_query_sys_suspend_pwrstate
2fff6500 g     F ro	00000024 dt_get_ddr_size
2fff13c0 g     F ro	00000040 is_mmu_enabled_ctx
2ffeec1e g     F ro	00000006 stm32mp_register_secure_periph_iomem
2fff1ff0 g     F ro	0000005c tzc400_init
2ffecf7c g     F ro	0000000c stm32mp1_calib_get_wakeup
2fff0b80 g     F ro	0000005c tf_log
2ffef698 g     F ro	0000006c gicv2_raise_sgi
2fffab00 g       ro	00000000 __pubsub_psci_cpu_on_finish_start
2fff5f8a g     F ro	00000016 stpmic1_lp_reg_on_off
2ffeec18 g     F ro	00000006 stm32mp_register_secure_periph
2fff4248 g     F ro	00000238 ddr_standby_sr_entry
2fff1180 g     F ro	00000028 stm32mp_is_single_core
2fffd1c0 g       .bss	00000000 __RW_END__
2fff0f44 g     F ro	00000028 stm32_get_gpio_bank_base
2fff62d8 g     F ro	00000064 fdt_get_status
2ffeec54 g     F ro	00000010 stm32mp_register_non_secure_gpio
2fff3550 g     F ro	0000000c stm32mp1_clk_rcc_regs_lock
2fff67aa g     F ro	00000038 stm32mp1_pm_restore_clock_cfg
2fff673c g     F ro	00000018 stm32mp_mmio_setbits_32_shregs
2fff7874 g     F ro	00000010 fdt_string
2fff737c g     F ro	00000048 plat_report_prefetch_abort
2fffb580 g       stacks	00000000 __STACKS_START__
2fff69d8 g     F ro	00000058 stm32mp1_security_setup
2ffeb674 g     F ro	00000060 handle_runtime_svc
2ffebfd0 g     F ro	000000bc psci_do_state_coordination
2ffeca70 g     F ro	00000070 psci_system_reset2
2ffefa4c g     F ro	0000012c bsec_main
2fff75e8 g     F ro	000000ca fdt_next_tag
2fff1e74 g     F ro	00000154 init_xlat_tables_ctx
2fff4fc4 g     F ro	00000460 stm32_i2c_init
2fffab00 g       ro	00000000 __pubsub_psci_suspend_pwrdown_finish_start
2fff3830 g     F ro	0000003c stm32mp_clk_timer_get_rate
2ffedde0 g     F ro	000000e8 stm32_timer_init
2fff5424 g     F ro	0000001c stm32_i2c_mem_write
2ffefc7e g     F ro	00000026 rcc_cal_scv_handler
2fff7440 g     F ro	00000008 plat_my_core_pos
2fff7ad4 g     F ro	0000002c fdt_get_alias_namelen
2ffef420 g     F ro	00000064 gicv2_driver_init
2ffed1e4 g     F ro	00000024 etzpc_configure_tzma
2fff2be4 g     F ro	00000010 stm32mp_stgen_get_counter
2fff0f02 g     F ro	00000010 stm32mp_lock_available
2ffeb6d4 g     F ro	000000ec runtime_svc_init
2fff4984 g     F ro	0000005c set_gpio_secure_cfg
2ffef56c g     F ro	00000044 gicv2_enable_interrupt
2fff03f4 g     F ro	0000004c scmi_process_message
2fff80fc g     F ro	00000010 strlen
2ffef3a0 g     F ro	0000003c gicv2_pcpu_distif_init
2fff609c g     F ro	00000074 stm32mp_reset_deassert_to
2ffeb500 g     F ro	000000d8 sp_min_main
2ffec5a0 g     F ro	0000000e psci_migrate_info_type
2ffed2f4 g     F ro	000000e0 stm32_rng_read
2fff1054 g     F ro	00000028 stm32_get_otp_index
2fff1344 g     F ro	00000030 xlat_arch_tlbi_va
2fff127c g     F ro	00000050 stm32_iwdg_get_otp_config
2ffef4bc g     F ro	00000024 gicv2_acknowledge_interrupt
2fff5b04 g     F ro	00000028 dt_pmic_status
2ffef4e0 g     F ro	00000024 gicv2_end_of_interrupt
2fff07a0 g     F ro	00000008 plat_scmi_sub_vendor_name
2fff7da8 g     F ro	00000018 __assert
2ffecb2c g     F ro	00000034 psci_mem_chk_range
2ffef164 g     F ro	00000022 gicd_clr_igroupr
2fff8098 g     F ro	00000016 strchr
2fff1fc8 g     F ro	00000002 xlat_mmap_print
2fff5fbc g     F ro	0000005c stpmic1_lp_set_voltage
2fff5f4c g     F ro	00000024 stpmic1_regulator_pull_down_set
2fff71b8 g     F ro	00000074 enable_mmu_direct_svc_mon
2fff21c0 g     F ro	0000003c tzc400_is_pending_interrupt
2fff7cda g     F ro	00000066 fdt_stringlist_search
2ffec110 g     F ro	00000030 psci_acquire_pwr_domain_locks
2fff7d40 g     F ro	00000028 fdt_node_check_compatible
2fff3cb8 g     F ro	0000008c stm32mp1_clock_suspend
2fffab00 g       ro	00000000 __pubsub_psci_cpu_on_finish_end
2fff6754 g     F ro	0000001e stm32_clean_context
2fff1508 g     F ro	00000010 mmap_remove_dynamic_region
2fff5b40 g     F ro	0000007c dt_pmic_find_supply
2fff352c g     F ro	0000000e stm32mp1_rcc_is_secure
2fff10ac g     F ro	00000048 stm32_get_otp_value
2fff3af8 g     F ro	00000120 stm32mp1_register_clock_parents_secure
2fffd104 g     O .bss	00000004 console_list
2ffebf4c g     F ro	00000084 psci_set_pwr_domains_to_run
2ffef62c g     F ro	0000006c gicv2_set_interrupt_type
2ffee8dc g     F ro	00000014 stm32mp1_set_pm_domain_state
2fff5b36 g     F ro	0000000a pmic_set_lp_config
2ffef10a g     F ro	0000000a gicd_write_igroupr
2ffed878 g     F ro	00000034 stm32_rtc_init
2fff2894 g     F ro	00000038 bsec_read_sp_lock
2ffeed40 g     F ro	000000cc stm32mp_nsec_can_access_clock
2fffd140 g       .bss	00000000 __PERCPU_BAKERY_LOCK_START__
2fff6cf4  w    F ro	00000018 plat_get_my_stack
2fff14ac g     F ro	00000028 mmap_add_region
2ffeb9c4 g     F ro	0000002a errata_needs_reporting
2fffd0fc g     O .bss	00000004 psci_spd_pm
2fff5b2c g     F ro	0000000a pmic_configure_boot_on_regulators



Disassembly of section ro:

2ffeb000 <sp_min_entrypoint>:
2ffeb000:	e1a09000 	mov	r9, r0
2ffeb004:	e1a0a001 	mov	sl, r1
2ffeb008:	e1a0b002 	mov	fp, r2
2ffeb00c:	e1a0c003 	mov	ip, r3
2ffeb010:	ee110f11 	mrc	15, 0, r0, cr1, cr1, {0}
2ffeb014:	e3100001 	tst	r0, #1
2ffeb018:	0a000002 	beq	2ffeb028 <sp_min_entrypoint+0x28>
2ffeb01c:	e59f0110 	ldr	r0, [pc, #272]	; 2ffeb134 <sp_min_entrypoint+0x134>
2ffeb020:	e3a010d4 	mov	r1, #212	; 0xd4
2ffeb024:	ea002f5c 	b	2fff6d9c <asm_assert>
2ffeb028:	f1020016 	cps	#22
2ffeb02c:	f57ff06f 	isb	sy
2ffeb030:	e59f0100 	ldr	r0, [pc, #256]	; 2ffeb138 <sp_min_entrypoint+0x138>
2ffeb034:	ee0c0f10 	mcr	15, 0, r0, cr12, cr0, {0}
2ffeb038:	ee0c0f30 	mcr	15, 0, r0, cr12, cr0, {1}
2ffeb03c:	f57ff06f 	isb	sy
2ffeb040:	eb002eab 	bl	2fff6af4 <reset_handler>
2ffeb044:	e59f10f0 	ldr	r1, [pc, #240]	; 2ffeb13c <sp_min_entrypoint+0x13c>
2ffeb048:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
2ffeb04c:	e1800001 	orr	r0, r0, r1
2ffeb050:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
2ffeb054:	f57ff06f 	isb	sy
2ffeb058:	e3a00c02 	mov	r0, #512	; 0x200
2ffeb05c:	ee010f11 	mcr	15, 0, r0, cr1, cr1, {0}
2ffeb060:	f1080100 	cpsie	a
2ffeb064:	f57ff06f 	isb	sy
2ffeb068:	ee110f51 	mrc	15, 0, r0, cr1, cr1, {2}
2ffeb06c:	e2000807 	and	r0, r0, #458752	; 0x70000
2ffeb070:	e3800b03 	orr	r0, r0, #3072	; 0xc00
2ffeb074:	ee010f51 	mcr	15, 0, r0, cr1, cr1, {2}
2ffeb078:	f57ff06f 	isb	sy
2ffeb07c:	e3a0060f 	mov	r0, #15728640	; 0xf00000
2ffeb080:	ee010f50 	mcr	15, 0, r0, cr1, cr0, {2}
2ffeb084:	f57ff06f 	isb	sy
2ffeb088:	e59f00b0 	ldr	r0, [pc, #176]	; 2ffeb140 <sp_min_entrypoint+0x140>
2ffeb08c:	eee80a10 	vmsr	fpexc, r0
2ffeb090:	f57ff06f 	isb	sy
2ffeb094:	e3a00020 	mov	r0, #32
2ffeb098:	ee090f1c 	mcr	15, 0, r0, cr9, cr12, {0}
2ffeb09c:	ee100f11 	mrc	15, 0, r0, cr0, cr1, {0}
2ffeb0a0:	e200040f 	and	r0, r0, #251658240	; 0xf000000
2ffeb0a4:	e3500401 	cmp	r0, #16777216	; 0x1000000
2ffeb0a8:	1a000002 	bne	2ffeb0b8 <sp_min_entrypoint+0xb8>
2ffeb0ac:	e10f0000 	mrs	r0, CPSR
2ffeb0b0:	e3800602 	orr	r0, r0, #2097152	; 0x200000
2ffeb0b4:	e12ff000 	msr	CPSR_fsxc, r0
2ffeb0b8:	e59f0084 	ldr	r0, [pc, #132]	; 2ffeb144 <sp_min_entrypoint+0x144>
2ffeb0bc:	e59f1084 	ldr	r1, [pc, #132]	; 2ffeb148 <sp_min_entrypoint+0x148>
2ffeb0c0:	e0411000 	sub	r1, r1, r0
2ffeb0c4:	eb002f85 	bl	2fff6ee0 <inv_dcache_range>
2ffeb0c8:	e1a0700c 	mov	r7, ip
2ffeb0cc:	e59f0078 	ldr	r0, [pc, #120]	; 2ffeb14c <sp_min_entrypoint+0x14c>
2ffeb0d0:	e59f1078 	ldr	r1, [pc, #120]	; 2ffeb150 <sp_min_entrypoint+0x150>
2ffeb0d4:	eb002fc0 	bl	2fff6fdc <zero_normalmem>
2ffeb0d8:	e1a0c007 	mov	ip, r7
2ffeb0dc:	eb002f0b 	bl	2fff6d10 <plat_set_my_stack>
2ffeb0e0:	ee114f11 	mrc	15, 0, r4, cr1, cr1, {0}
2ffeb0e4:	e3844004 	orr	r4, r4, #4
2ffeb0e8:	e3c44010 	bic	r4, r4, #16
2ffeb0ec:	ee014f11 	mcr	15, 0, r4, cr1, cr1, {0}
2ffeb0f0:	e1a00009 	mov	r0, r9
2ffeb0f4:	e1a0100a 	mov	r1, sl
2ffeb0f8:	e1a0200b 	mov	r2, fp
2ffeb0fc:	e1a0300c 	mov	r3, ip
2ffeb100:	fa000bcc 	blx	2ffee038 <sp_min_early_platform_setup2>
2ffeb104:	fa000c40 	blx	2ffee20c <sp_min_plat_arch_setup>
2ffeb108:	fa0000fc 	blx	2ffeb500 <sp_min_main>
2ffeb10c:	e59f0040 	ldr	r0, [pc, #64]	; 2ffeb154 <sp_min_entrypoint+0x154>
2ffeb110:	e59f1040 	ldr	r1, [pc, #64]	; 2ffeb158 <sp_min_entrypoint+0x158>
2ffeb114:	e0411000 	sub	r1, r1, r0
2ffeb118:	eb002f61 	bl	2fff6ea4 <clean_dcache_range>
2ffeb11c:	e59f0028 	ldr	r0, [pc, #40]	; 2ffeb14c <sp_min_entrypoint+0x14c>
2ffeb120:	e59f1034 	ldr	r1, [pc, #52]	; 2ffeb15c <sp_min_entrypoint+0x15c>
2ffeb124:	e0411000 	sub	r1, r1, r0
2ffeb128:	eb002f5d 	bl	2fff6ea4 <clean_dcache_range>
2ffeb12c:	fa0000cd 	blx	2ffeb468 <smc_get_next_ctx>
2ffeb130:	ea0000a2 	b	2ffeb3c0 <sp_min_exit>
2ffeb134:	2fffa8ef 	.word	0x2fffa8ef
2ffeb138:	2fffab00 	.word	0x2fffab00
2ffeb13c:	00001002 	.word	0x00001002
2ffeb140:	40000700 	.word	0x40000700
2ffeb144:	2fffb000 	.word	0x2fffb000
2ffeb148:	2fffd1c0 	.word	0x2fffd1c0
2ffeb14c:	2fffc180 	.word	0x2fffc180
2ffeb150:	00001040 	.word	0x00001040
2ffeb154:	2fffb000 	.word	0x2fffb000
2ffeb158:	2fffb548 	.word	0x2fffb548
2ffeb15c:	2fffd1c0 	.word	0x2fffd1c0

2ffeb160 <sp_min_handle_smc>:
2ffeb160:	e58de080 	str	lr, [sp, #128]	; 0x80
2ffeb164:	e88d1fff 	stm	sp, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffeb168:	e1a0000d 	mov	r0, sp
2ffeb16c:	e2800034 	add	r0, r0, #52	; 0x34
2ffeb170:	e1054200 	mrs	r4, SP_usr
2ffeb174:	e1065200 	mrs	r5, LR_usr
2ffeb178:	e1406300 	mrs	r6, SPSR_irq
2ffeb17c:	e1017300 	mrs	r7, SP_irq
2ffeb180:	e1008300 	mrs	r8, LR_irq
2ffeb184:	e14e9200 	mrs	r9, SPSR_fiq
2ffeb188:	e10da200 	mrs	sl, SP_fiq
2ffeb18c:	e10eb200 	mrs	fp, LR_fiq
2ffeb190:	e142c300 	mrs	ip, SPSR_svc
2ffeb194:	e8a01ff0 	stmia	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffeb198:	e1034300 	mrs	r4, SP_svc
2ffeb19c:	e1025300 	mrs	r5, LR_svc
2ffeb1a0:	e1446300 	mrs	r6, SPSR_abt
2ffeb1a4:	e1057300 	mrs	r7, SP_abt
2ffeb1a8:	e1048300 	mrs	r8, LR_abt
2ffeb1ac:	e1469300 	mrs	r9, SPSR_und
2ffeb1b0:	e107a300 	mrs	sl, SP_und
2ffeb1b4:	e106b300 	mrs	fp, LR_und
2ffeb1b8:	e14fc000 	mrs	ip, SPSR
2ffeb1bc:	e8a01ff0 	stmia	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffeb1c0:	ee114f11 	mrc	15, 0, r4, cr1, cr1, {0}
2ffeb1c4:	ee195f1c 	mrc	15, 0, r5, cr9, cr12, {0}
2ffeb1c8:	e3140001 	tst	r4, #1
2ffeb1cc:	0a000000 	beq	2ffeb1d4 <sp_min_handle_smc+0x74>
2ffeb1d0:	e58d5088 	str	r5, [sp, #136]	; 0x88
2ffeb1d4:	e3855020 	orr	r5, r5, #32
2ffeb1d8:	ee095f1c 	mcr	15, 0, r5, cr9, cr12, {0}
2ffeb1dc:	f57ff06f 	isb	sy
2ffeb1e0:	e58d4084 	str	r4, [sp, #132]	; 0x84
2ffeb1e4:	f57ff01f 	clrex
2ffeb1e8:	e1a0200d 	mov	r2, sp
2ffeb1ec:	e592d07c 	ldr	sp, [r2, #124]	; 0x7c
2ffeb1f0:	e5920084 	ldr	r0, [r2, #132]	; 0x84
2ffeb1f4:	e2003001 	and	r3, r0, #1
2ffeb1f8:	e3c00001 	bic	r0, r0, #1
2ffeb1fc:	ee010f11 	mcr	15, 0, r0, cr1, cr1, {0}
2ffeb200:	f57ff06f 	isb	sy
2ffeb204:	e5920000 	ldr	r0, [r2]
2ffeb208:	e3100101 	tst	r0, #1073741824	; 0x40000000
2ffeb20c:	0a000003 	beq	2ffeb220 <sp_min_handle_smc+0xc0>
2ffeb210:	e3e00000 	mvn	r0, #0
2ffeb214:	e5820000 	str	r0, [r2]
2ffeb218:	e1a00002 	mov	r0, r2
2ffeb21c:	ea000067 	b	2ffeb3c0 <sp_min_exit>
2ffeb220:	e3a01000 	mov	r1, #0
2ffeb224:	fa000112 	blx	2ffeb674 <handle_runtime_svc>
2ffeb228:	ea000064 	b	2ffeb3c0 <sp_min_exit>

2ffeb22c <sp_min_handle_fiq>:
2ffeb22c:	e24ee004 	sub	lr, lr, #4
2ffeb230:	e58de080 	str	lr, [sp, #128]	; 0x80
2ffeb234:	e88d1fff 	stm	sp, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffeb238:	e1a0000d 	mov	r0, sp
2ffeb23c:	e2800034 	add	r0, r0, #52	; 0x34
2ffeb240:	e1054200 	mrs	r4, SP_usr
2ffeb244:	e1065200 	mrs	r5, LR_usr
2ffeb248:	e1406300 	mrs	r6, SPSR_irq
2ffeb24c:	e1017300 	mrs	r7, SP_irq
2ffeb250:	e1008300 	mrs	r8, LR_irq
2ffeb254:	e14e9200 	mrs	r9, SPSR_fiq
2ffeb258:	e10da200 	mrs	sl, SP_fiq
2ffeb25c:	e10eb200 	mrs	fp, LR_fiq
2ffeb260:	e142c300 	mrs	ip, SPSR_svc
2ffeb264:	e8a01ff0 	stmia	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffeb268:	e1034300 	mrs	r4, SP_svc
2ffeb26c:	e1025300 	mrs	r5, LR_svc
2ffeb270:	e1446300 	mrs	r6, SPSR_abt
2ffeb274:	e1057300 	mrs	r7, SP_abt
2ffeb278:	e1048300 	mrs	r8, LR_abt
2ffeb27c:	e1469300 	mrs	r9, SPSR_und
2ffeb280:	e107a300 	mrs	sl, SP_und
2ffeb284:	e106b300 	mrs	fp, LR_und
2ffeb288:	e14fc000 	mrs	ip, SPSR
2ffeb28c:	e8a01ff0 	stmia	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffeb290:	ee114f11 	mrc	15, 0, r4, cr1, cr1, {0}
2ffeb294:	ee195f1c 	mrc	15, 0, r5, cr9, cr12, {0}
2ffeb298:	e3140001 	tst	r4, #1
2ffeb29c:	0a000000 	beq	2ffeb2a4 <sp_min_handle_fiq+0x78>
2ffeb2a0:	e58d5088 	str	r5, [sp, #136]	; 0x88
2ffeb2a4:	e3855020 	orr	r5, r5, #32
2ffeb2a8:	ee095f1c 	mcr	15, 0, r5, cr9, cr12, {0}
2ffeb2ac:	f57ff06f 	isb	sy
2ffeb2b0:	e58d4084 	str	r4, [sp, #132]	; 0x84
2ffeb2b4:	f57ff01f 	clrex
2ffeb2b8:	e1a0200d 	mov	r2, sp
2ffeb2bc:	e592d07c 	ldr	sp, [r2, #124]	; 0x7c
2ffeb2c0:	e5920084 	ldr	r0, [r2, #132]	; 0x84
2ffeb2c4:	e3c00001 	bic	r0, r0, #1
2ffeb2c8:	ee010f11 	mcr	15, 0, r0, cr1, cr1, {0}
2ffeb2cc:	f57ff06f 	isb	sy
2ffeb2d0:	e92d000c 	push	{r2, r3}
2ffeb2d4:	fa0000e0 	blx	2ffeb65c <sp_min_fiq>
2ffeb2d8:	e8bd0009 	pop	{r0, r3}
2ffeb2dc:	ea000037 	b	2ffeb3c0 <sp_min_exit>

2ffeb2e0 <sp_min_warm_entrypoint>:
2ffeb2e0:	ee110f11 	mrc	15, 0, r0, cr1, cr1, {0}
2ffeb2e4:	e3100001 	tst	r0, #1
2ffeb2e8:	0a000002 	beq	2ffeb2f8 <sp_min_warm_entrypoint+0x18>
2ffeb2ec:	e59f00bc 	ldr	r0, [pc, #188]	; 2ffeb3b0 <sp_min_warm_entrypoint+0xd0>
2ffeb2f0:	e3a010d4 	mov	r1, #212	; 0xd4
2ffeb2f4:	ea002ea8 	b	2fff6d9c <asm_assert>
2ffeb2f8:	f1020016 	cps	#22
2ffeb2fc:	f57ff06f 	isb	sy
2ffeb300:	e59f00ac 	ldr	r0, [pc, #172]	; 2ffeb3b4 <sp_min_warm_entrypoint+0xd4>
2ffeb304:	ee0c0f10 	mcr	15, 0, r0, cr12, cr0, {0}
2ffeb308:	ee0c0f30 	mcr	15, 0, r0, cr12, cr0, {1}
2ffeb30c:	f57ff06f 	isb	sy
2ffeb310:	eb002df7 	bl	2fff6af4 <reset_handler>
2ffeb314:	e59f109c 	ldr	r1, [pc, #156]	; 2ffeb3b8 <sp_min_warm_entrypoint+0xd8>
2ffeb318:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
2ffeb31c:	e1800001 	orr	r0, r0, r1
2ffeb320:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
2ffeb324:	f57ff06f 	isb	sy
2ffeb328:	e3a00c02 	mov	r0, #512	; 0x200
2ffeb32c:	ee010f11 	mcr	15, 0, r0, cr1, cr1, {0}
2ffeb330:	f1080100 	cpsie	a
2ffeb334:	f57ff06f 	isb	sy
2ffeb338:	ee110f51 	mrc	15, 0, r0, cr1, cr1, {2}
2ffeb33c:	e2000807 	and	r0, r0, #458752	; 0x70000
2ffeb340:	e3800b03 	orr	r0, r0, #3072	; 0xc00
2ffeb344:	ee010f51 	mcr	15, 0, r0, cr1, cr1, {2}
2ffeb348:	f57ff06f 	isb	sy
2ffeb34c:	e3a0060f 	mov	r0, #15728640	; 0xf00000
2ffeb350:	ee010f50 	mcr	15, 0, r0, cr1, cr0, {2}
2ffeb354:	f57ff06f 	isb	sy
2ffeb358:	e59f005c 	ldr	r0, [pc, #92]	; 2ffeb3bc <sp_min_warm_entrypoint+0xdc>
2ffeb35c:	eee80a10 	vmsr	fpexc, r0
2ffeb360:	f57ff06f 	isb	sy
2ffeb364:	e3a00020 	mov	r0, #32
2ffeb368:	ee090f1c 	mcr	15, 0, r0, cr9, cr12, {0}
2ffeb36c:	ee100f11 	mrc	15, 0, r0, cr0, cr1, {0}
2ffeb370:	e200040f 	and	r0, r0, #251658240	; 0xf000000
2ffeb374:	e3500401 	cmp	r0, #16777216	; 0x1000000
2ffeb378:	1a000002 	bne	2ffeb388 <sp_min_warm_entrypoint+0xa8>
2ffeb37c:	e10f0000 	mrs	r0, CPSR
2ffeb380:	e3800602 	orr	r0, r0, #2097152	; 0x200000
2ffeb384:	e12ff000 	msr	CPSR_fsxc, r0
2ffeb388:	eb002e60 	bl	2fff6d10 <plat_set_my_stack>
2ffeb38c:	e3a00001 	mov	r0, #1
2ffeb390:	fa001664 	blx	2fff0d28 <bl32_plat_enable_mmu>
2ffeb394:	ee110f11 	mrc	15, 0, r0, cr1, cr1, {0}
2ffeb398:	e3800004 	orr	r0, r0, #4
2ffeb39c:	e3c00010 	bic	r0, r0, #16
2ffeb3a0:	ee010f11 	mcr	15, 0, r0, cr1, cr1, {0}
2ffeb3a4:	fa00008b 	blx	2ffeb5d8 <sp_min_warm_boot>
2ffeb3a8:	fa00002e 	blx	2ffeb468 <smc_get_next_ctx>
2ffeb3ac:	ea000003 	b	2ffeb3c0 <sp_min_exit>
2ffeb3b0:	2fffa8ef 	.word	0x2fffa8ef
2ffeb3b4:	2fffab00 	.word	0x2fffab00
2ffeb3b8:	00001002 	.word	0x00001002
2ffeb3bc:	40000700 	.word	0x40000700

2ffeb3c0 <sp_min_exit>:
2ffeb3c0:	e580d07c 	str	sp, [r0, #124]	; 0x7c
2ffeb3c4:	e1a0d000 	mov	sp, r0
2ffeb3c8:	e5901084 	ldr	r1, [r0, #132]	; 0x84
2ffeb3cc:	ee011f11 	mcr	15, 0, r1, cr1, cr1, {0}
2ffeb3d0:	f57ff06f 	isb	sy
2ffeb3d4:	e3110001 	tst	r1, #1
2ffeb3d8:	0a000001 	beq	2ffeb3e4 <sp_min_exit+0x24>
2ffeb3dc:	e5901088 	ldr	r1, [r0, #136]	; 0x88
2ffeb3e0:	ee091f1c 	mcr	15, 0, r1, cr9, cr12, {0}
2ffeb3e4:	e2801034 	add	r1, r0, #52	; 0x34
2ffeb3e8:	e8b11ff0 	ldm	r1!, {r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffeb3ec:	e125f204 	msr	SP_usr, r4
2ffeb3f0:	e126f205 	msr	LR_usr, r5
2ffeb3f4:	e160f306 	msr	SPSR_irq, r6
2ffeb3f8:	e121f307 	msr	SP_irq, r7
2ffeb3fc:	e120f308 	msr	LR_irq, r8
2ffeb400:	e16ef209 	msr	SPSR_fiq, r9
2ffeb404:	e12df20a 	msr	SP_fiq, sl
2ffeb408:	e12ef20b 	msr	LR_fiq, fp
2ffeb40c:	e162f30c 	msr	SPSR_svc, ip
2ffeb410:	e8b11ff0 	ldm	r1!, {r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffeb414:	e123f304 	msr	SP_svc, r4
2ffeb418:	e122f305 	msr	LR_svc, r5
2ffeb41c:	e164f306 	msr	SPSR_abt, r6
2ffeb420:	e125f307 	msr	SP_abt, r7
2ffeb424:	e124f308 	msr	LR_abt, r8
2ffeb428:	e166f309 	msr	SPSR_und, r9
2ffeb42c:	e127f30a 	msr	SP_und, sl
2ffeb430:	e126f30b 	msr	LR_und, fp
2ffeb434:	e16ff00c 	msr	SPSR_fsxc, ip
2ffeb438:	e590e080 	ldr	lr, [r0, #128]	; 0x80
2ffeb43c:	e8901fff 	ldm	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffeb440:	e160006e 	eret

2ffeb444 <smc_get_ctx>:
2ffeb444:	2801      	cmp	r0, #1
2ffeb446:	b508      	push	{r3, lr}
2ffeb448:	d003      	beq.n	2ffeb452 <smc_get_ctx+0xe>
2ffeb44a:	4805      	ldr	r0, [pc, #20]	; (2ffeb460 <smc_get_ctx+0x1c>)
2ffeb44c:	212a      	movs	r1, #42	; 0x2a
2ffeb44e:	f00c fcab 	bl	2fff7da8 <__assert>
2ffeb452:	f00b eff6 	blx	2fff7440 <plat_my_core_pos>
2ffeb456:	4b03      	ldr	r3, [pc, #12]	; (2ffeb464 <smc_get_ctx+0x20>)
2ffeb458:	2290      	movs	r2, #144	; 0x90
2ffeb45a:	fb02 3000 	mla	r0, r2, r0, r3
2ffeb45e:	bd08      	pop	{r3, pc}
2ffeb460:	2fff81a0 	.word	0x2fff81a0
2ffeb464:	2fffc188 	.word	0x2fffc188

2ffeb468 <smc_get_next_ctx>:
2ffeb468:	b508      	push	{r3, lr}
2ffeb46a:	f00b efea 	blx	2fff7440 <plat_my_core_pos>
2ffeb46e:	4b02      	ldr	r3, [pc, #8]	; (2ffeb478 <smc_get_next_ctx+0x10>)
2ffeb470:	2290      	movs	r2, #144	; 0x90
2ffeb472:	fb02 3000 	mla	r0, r2, r0, r3
2ffeb476:	bd08      	pop	{r3, pc}
2ffeb478:	2fffc188 	.word	0x2fffc188

2ffeb47c <cm_get_context>:
2ffeb47c:	2801      	cmp	r0, #1
2ffeb47e:	b508      	push	{r3, lr}
2ffeb480:	d003      	beq.n	2ffeb48a <cm_get_context+0xe>
2ffeb482:	4805      	ldr	r0, [pc, #20]	; (2ffeb498 <cm_get_context+0x1c>)
2ffeb484:	2140      	movs	r1, #64	; 0x40
2ffeb486:	f00c fc8f 	bl	2fff7da8 <__assert>
2ffeb48a:	f00b efda 	blx	2fff7440 <plat_my_core_pos>
2ffeb48e:	4b03      	ldr	r3, [pc, #12]	; (2ffeb49c <cm_get_context+0x20>)
2ffeb490:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
2ffeb494:	bd08      	pop	{r3, pc}
2ffeb496:	bf00      	nop
2ffeb498:	2fff81a0 	.word	0x2fff81a0
2ffeb49c:	2fffc180 	.word	0x2fffc180

2ffeb4a0 <cm_get_context_by_index>:
2ffeb4a0:	2901      	cmp	r1, #1
2ffeb4a2:	b508      	push	{r3, lr}
2ffeb4a4:	d003      	beq.n	2ffeb4ae <cm_get_context_by_index+0xe>
2ffeb4a6:	4804      	ldr	r0, [pc, #16]	; (2ffeb4b8 <cm_get_context_by_index+0x18>)
2ffeb4a8:	2157      	movs	r1, #87	; 0x57
2ffeb4aa:	f00c fc7d 	bl	2fff7da8 <__assert>
2ffeb4ae:	4b03      	ldr	r3, [pc, #12]	; (2ffeb4bc <cm_get_context_by_index+0x1c>)
2ffeb4b0:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
2ffeb4b4:	bd08      	pop	{r3, pc}
2ffeb4b6:	bf00      	nop
2ffeb4b8:	2fff81a0 	.word	0x2fff81a0
2ffeb4bc:	2fffc180 	.word	0x2fffc180

2ffeb4c0 <cm_set_context_by_index>:
2ffeb4c0:	2a01      	cmp	r2, #1
2ffeb4c2:	b508      	push	{r3, lr}
2ffeb4c4:	d003      	beq.n	2ffeb4ce <cm_set_context_by_index+0xe>
2ffeb4c6:	4804      	ldr	r0, [pc, #16]	; (2ffeb4d8 <cm_set_context_by_index+0x18>)
2ffeb4c8:	2162      	movs	r1, #98	; 0x62
2ffeb4ca:	f00c fc6d 	bl	2fff7da8 <__assert>
2ffeb4ce:	4b03      	ldr	r3, [pc, #12]	; (2ffeb4dc <cm_set_context_by_index+0x1c>)
2ffeb4d0:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
2ffeb4d4:	bd08      	pop	{r3, pc}
2ffeb4d6:	bf00      	nop
2ffeb4d8:	2fff81a0 	.word	0x2fff81a0
2ffeb4dc:	2fffc180 	.word	0x2fffc180

2ffeb4e0 <get_arm_std_svc_args>:
2ffeb4e0:	b508      	push	{r3, lr}
2ffeb4e2:	f64f 73e0 	movw	r3, #65504	; 0xffe0
2ffeb4e6:	4298      	cmp	r0, r3
2ffeb4e8:	d003      	beq.n	2ffeb4f2 <get_arm_std_svc_args+0x12>
2ffeb4ea:	4803      	ldr	r0, [pc, #12]	; (2ffeb4f8 <get_arm_std_svc_args+0x18>)
2ffeb4ec:	219f      	movs	r1, #159	; 0x9f
2ffeb4ee:	f00c fc5b 	bl	2fff7da8 <__assert>
2ffeb4f2:	4802      	ldr	r0, [pc, #8]	; (2ffeb4fc <get_arm_std_svc_args+0x1c>)
2ffeb4f4:	bd08      	pop	{r3, pc}
2ffeb4f6:	bf00      	nop
2ffeb4f8:	2fff81a0 	.word	0x2fff81a0
2ffeb4fc:	2fff8194 	.word	0x2fff8194

2ffeb500 <sp_min_main>:
2ffeb500:	b570      	push	{r4, r5, r6, lr}
2ffeb502:	492d      	ldr	r1, [pc, #180]	; (2ffeb5b8 <sp_min_main+0xb8>)
2ffeb504:	482d      	ldr	r0, [pc, #180]	; (2ffeb5bc <sp_min_main+0xbc>)
2ffeb506:	4e2e      	ldr	r6, [pc, #184]	; (2ffeb5c0 <sp_min_main+0xc0>)
2ffeb508:	f005 fb3a 	bl	2fff0b80 <tf_log>
2ffeb50c:	492d      	ldr	r1, [pc, #180]	; (2ffeb5c4 <sp_min_main+0xc4>)
2ffeb50e:	482b      	ldr	r0, [pc, #172]	; (2ffeb5bc <sp_min_main+0xbc>)
2ffeb510:	f005 fb36 	bl	2fff0b80 <tf_log>
2ffeb514:	f002 fe28 	bl	2ffee168 <sp_min_platform_setup>
2ffeb518:	482b      	ldr	r0, [pc, #172]	; (2ffeb5c8 <sp_min_main+0xc8>)
2ffeb51a:	f005 fb31 	bl	2fff0b80 <tf_log>
2ffeb51e:	f000 f8d9 	bl	2ffeb6d4 <runtime_svc_init>
2ffeb522:	f00b ef8e 	blx	2fff7440 <plat_my_core_pos>
2ffeb526:	f856 5020 	ldr.w	r5, [r6, r0, lsl #2]
2ffeb52a:	f002 fd53 	bl	2ffedfd4 <sp_min_plat_get_bl33_ep_info>
2ffeb52e:	4604      	mov	r4, r0
2ffeb530:	b918      	cbnz	r0, 2ffeb53a <sp_min_main+0x3a>
2ffeb532:	217e      	movs	r1, #126	; 0x7e
2ffeb534:	4825      	ldr	r0, [pc, #148]	; (2ffeb5cc <sp_min_main+0xcc>)
2ffeb536:	f00c fc37 	bl	2fff7da8 <__assert>
2ffeb53a:	6843      	ldr	r3, [r0, #4]
2ffeb53c:	07db      	lsls	r3, r3, #31
2ffeb53e:	d401      	bmi.n	2ffeb544 <sp_min_main+0x44>
2ffeb540:	217f      	movs	r1, #127	; 0x7f
2ffeb542:	e7f7      	b.n	2ffeb534 <sp_min_main+0x34>
2ffeb544:	4822      	ldr	r0, [pc, #136]	; (2ffeb5d0 <sp_min_main+0xd0>)
2ffeb546:	f005 fb1b 	bl	2fff0b80 <tf_log>
2ffeb54a:	4620      	mov	r0, r4
2ffeb54c:	f001 fa46 	bl	2ffec9dc <psci_prepare_next_non_secure_ctx>
2ffeb550:	f00b ef76 	blx	2fff7440 <plat_my_core_pos>
2ffeb554:	f856 4020 	ldr.w	r4, [r6, r0, lsl #2]
2ffeb558:	f00b ef72 	blx	2fff7440 <plat_my_core_pos>
2ffeb55c:	4a1d      	ldr	r2, [pc, #116]	; (2ffeb5d4 <sp_min_main+0xd4>)
2ffeb55e:	2390      	movs	r3, #144	; 0x90
2ffeb560:	6821      	ldr	r1, [r4, #0]
2ffeb562:	4358      	muls	r0, r3
2ffeb564:	1813      	adds	r3, r2, r0
2ffeb566:	5011      	str	r1, [r2, r0]
2ffeb568:	6862      	ldr	r2, [r4, #4]
2ffeb56a:	605a      	str	r2, [r3, #4]
2ffeb56c:	68a2      	ldr	r2, [r4, #8]
2ffeb56e:	609a      	str	r2, [r3, #8]
2ffeb570:	6922      	ldr	r2, [r4, #16]
2ffeb572:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
2ffeb576:	69a2      	ldr	r2, [r4, #24]
2ffeb578:	679a      	str	r2, [r3, #120]	; 0x78
2ffeb57a:	6962      	ldr	r2, [r4, #20]
2ffeb57c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
2ffeb580:	ee11 3f11 	mrc	15, 0, r3, cr1, cr1, {0}
2ffeb584:	f043 0301 	orr.w	r3, r3, #1
2ffeb588:	ee01 3f11 	mcr	15, 0, r3, cr1, cr1, {0}
2ffeb58c:	f3bf 8f6f 	isb	sy
2ffeb590:	69eb      	ldr	r3, [r5, #28]
2ffeb592:	ee01 3f10 	mcr	15, 0, r3, cr1, cr0, {0}
2ffeb596:	f3bf 8f6f 	isb	sy
2ffeb59a:	ee11 3f11 	mrc	15, 0, r3, cr1, cr1, {0}
2ffeb59e:	f023 0301 	bic.w	r3, r3, #1
2ffeb5a2:	ee01 3f11 	mcr	15, 0, r3, cr1, cr1, {0}
2ffeb5a6:	f3bf 8f6f 	isb	sy
2ffeb5aa:	f000 f909 	bl	2ffeb7c0 <sp_min_plat_runtime_setup>
2ffeb5ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffeb5b2:	f005 bb87 	b.w	2fff0cc4 <console_flush>
2ffeb5b6:	bf00      	nop
2ffeb5b8:	2fff8180 	.word	0x2fff8180
2ffeb5bc:	2fff81ba 	.word	0x2fff81ba
2ffeb5c0:	2fffc180 	.word	0x2fffc180
2ffeb5c4:	2fff8162 	.word	0x2fff8162
2ffeb5c8:	2fff81c7 	.word	0x2fff81c7
2ffeb5cc:	2fff81a0 	.word	0x2fff81a0
2ffeb5d0:	2fff81ef 	.word	0x2fff81ef
2ffeb5d4:	2fffc188 	.word	0x2fffc188

2ffeb5d8 <sp_min_warm_boot>:
2ffeb5d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffeb5dc:	f00b ef30 	blx	2fff7440 <plat_my_core_pos>
2ffeb5e0:	4f1c      	ldr	r7, [pc, #112]	; (2ffeb654 <sp_min_warm_boot+0x7c>)
2ffeb5e2:	4e1d      	ldr	r6, [pc, #116]	; (2ffeb658 <sp_min_warm_boot+0x80>)
2ffeb5e4:	f857 8020 	ldr.w	r8, [r7, r0, lsl #2]
2ffeb5e8:	f000 fe1a 	bl	2ffec220 <psci_warmboot_entrypoint>
2ffeb5ec:	f00b ef28 	blx	2fff7440 <plat_my_core_pos>
2ffeb5f0:	2190      	movs	r1, #144	; 0x90
2ffeb5f2:	fb01 f500 	mul.w	r5, r1, r0
2ffeb5f6:	1974      	adds	r4, r6, r5
2ffeb5f8:	4620      	mov	r0, r4
2ffeb5fa:	f00b ecf0 	blx	2fff6fdc <zero_normalmem>
2ffeb5fe:	f00b ef20 	blx	2fff7440 <plat_my_core_pos>
2ffeb602:	f857 3020 	ldr.w	r3, [r7, r0, lsl #2]
2ffeb606:	681a      	ldr	r2, [r3, #0]
2ffeb608:	5172      	str	r2, [r6, r5]
2ffeb60a:	685a      	ldr	r2, [r3, #4]
2ffeb60c:	6062      	str	r2, [r4, #4]
2ffeb60e:	689a      	ldr	r2, [r3, #8]
2ffeb610:	60a2      	str	r2, [r4, #8]
2ffeb612:	691a      	ldr	r2, [r3, #16]
2ffeb614:	f8c4 2080 	str.w	r2, [r4, #128]	; 0x80
2ffeb618:	699a      	ldr	r2, [r3, #24]
2ffeb61a:	695b      	ldr	r3, [r3, #20]
2ffeb61c:	67a2      	str	r2, [r4, #120]	; 0x78
2ffeb61e:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
2ffeb622:	ee11 3f11 	mrc	15, 0, r3, cr1, cr1, {0}
2ffeb626:	f043 0301 	orr.w	r3, r3, #1
2ffeb62a:	ee01 3f11 	mcr	15, 0, r3, cr1, cr1, {0}
2ffeb62e:	f3bf 8f6f 	isb	sy
2ffeb632:	f8d8 301c 	ldr.w	r3, [r8, #28]
2ffeb636:	ee01 3f10 	mcr	15, 0, r3, cr1, cr0, {0}
2ffeb63a:	f3bf 8f6f 	isb	sy
2ffeb63e:	ee11 3f11 	mrc	15, 0, r3, cr1, cr1, {0}
2ffeb642:	f023 0301 	bic.w	r3, r3, #1
2ffeb646:	ee01 3f11 	mcr	15, 0, r3, cr1, cr1, {0}
2ffeb64a:	f3bf 8f6f 	isb	sy
2ffeb64e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffeb652:	bf00      	nop
2ffeb654:	2fffc180 	.word	0x2fffc180
2ffeb658:	2fffc188 	.word	0x2fffc188

2ffeb65c <sp_min_fiq>:
2ffeb65c:	b510      	push	{r4, lr}
2ffeb65e:	f004 f8b7 	bl	2ffef7d0 <plat_ic_acknowledge_interrupt>
2ffeb662:	4604      	mov	r4, r0
2ffeb664:	f002 fc40 	bl	2ffedee8 <sp_min_plat_fiq_handler>
2ffeb668:	4620      	mov	r0, r4
2ffeb66a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffeb66e:	f004 b8b1 	b.w	2ffef7d4 <plat_ic_end_of_interrupt>
	...

2ffeb674 <handle_runtime_svc>:
2ffeb674:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
2ffeb676:	4614      	mov	r4, r2
2ffeb678:	b91a      	cbnz	r2, 2ffeb682 <handle_runtime_svc+0xe>
2ffeb67a:	4812      	ldr	r0, [pc, #72]	; (2ffeb6c4 <handle_runtime_svc+0x50>)
2ffeb67c:	212a      	movs	r1, #42	; 0x2a
2ffeb67e:	f00c fb93 	bl	2fff7da8 <__assert>
2ffeb682:	0fc5      	lsrs	r5, r0, #31
2ffeb684:	f3c0 6205 	ubfx	r2, r0, #24, #6
2ffeb688:	ea42 1585 	orr.w	r5, r2, r5, lsl #6
2ffeb68c:	4a0e      	ldr	r2, [pc, #56]	; (2ffeb6c8 <handle_runtime_svc+0x54>)
2ffeb68e:	5d56      	ldrb	r6, [r2, r5]
2ffeb690:	4a0e      	ldr	r2, [pc, #56]	; (2ffeb6cc <handle_runtime_svc+0x58>)
2ffeb692:	4d0f      	ldr	r5, [pc, #60]	; (2ffeb6d0 <handle_runtime_svc+0x5c>)
2ffeb694:	1aad      	subs	r5, r5, r2
2ffeb696:	ebb6 1f15 	cmp.w	r6, r5, lsr #4
2ffeb69a:	d305      	bcc.n	2ffeb6a8 <handle_runtime_svc+0x34>
2ffeb69c:	4620      	mov	r0, r4
2ffeb69e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
2ffeb6a2:	6023      	str	r3, [r4, #0]
2ffeb6a4:	b004      	add	sp, #16
2ffeb6a6:	bd70      	pop	{r4, r5, r6, pc}
2ffeb6a8:	9303      	str	r3, [sp, #12]
2ffeb6aa:	9402      	str	r4, [sp, #8]
2ffeb6ac:	9101      	str	r1, [sp, #4]
2ffeb6ae:	eb02 1206 	add.w	r2, r2, r6, lsl #4
2ffeb6b2:	6923      	ldr	r3, [r4, #16]
2ffeb6b4:	9300      	str	r3, [sp, #0]
2ffeb6b6:	68d5      	ldr	r5, [r2, #12]
2ffeb6b8:	6861      	ldr	r1, [r4, #4]
2ffeb6ba:	e9d4 2302 	ldrd	r2, r3, [r4, #8]
2ffeb6be:	47a8      	blx	r5
2ffeb6c0:	e7f0      	b.n	2ffeb6a4 <handle_runtime_svc+0x30>
2ffeb6c2:	bf00      	nop
2ffeb6c4:	2fff8218 	.word	0x2fff8218
2ffeb6c8:	2fffcfa4 	.word	0x2fffcfa4
2ffeb6cc:	2fffaac4 	.word	0x2fffaac4
2ffeb6d0:	2fffaae4 	.word	0x2fffaae4

2ffeb6d4 <runtime_svc_init>:
2ffeb6d4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffeb6d8:	4c33      	ldr	r4, [pc, #204]	; (2ffeb7a8 <runtime_svc_init+0xd4>)
2ffeb6da:	4d34      	ldr	r5, [pc, #208]	; (2ffeb7ac <runtime_svc_init+0xd8>)
2ffeb6dc:	42ac      	cmp	r4, r5
2ffeb6de:	d303      	bcc.n	2ffeb6e8 <runtime_svc_init+0x14>
2ffeb6e0:	1b64      	subs	r4, r4, r5
2ffeb6e2:	f5b4 6f00 	cmp.w	r4, #2048	; 0x800
2ffeb6e6:	d303      	bcc.n	2ffeb6f0 <runtime_svc_init+0x1c>
2ffeb6e8:	2162      	movs	r1, #98	; 0x62
2ffeb6ea:	4831      	ldr	r0, [pc, #196]	; (2ffeb7b0 <runtime_svc_init+0xdc>)
2ffeb6ec:	f00c fb5c 	bl	2fff7da8 <__assert>
2ffeb6f0:	2c0f      	cmp	r4, #15
2ffeb6f2:	d90e      	bls.n	2ffeb712 <runtime_svc_init+0x3e>
2ffeb6f4:	482f      	ldr	r0, [pc, #188]	; (2ffeb7b4 <runtime_svc_init+0xe0>)
2ffeb6f6:	2280      	movs	r2, #128	; 0x80
2ffeb6f8:	4e2e      	ldr	r6, [pc, #184]	; (2ffeb7b4 <runtime_svc_init+0xe0>)
2ffeb6fa:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2ffeb6fe:	0924      	lsrs	r4, r4, #4
2ffeb700:	f04f 0900 	mov.w	r9, #0
2ffeb704:	4f2c      	ldr	r7, [pc, #176]	; (2ffeb7b8 <runtime_svc_init+0xe4>)
2ffeb706:	f00c fb98 	bl	2fff7e3a <memset>
2ffeb70a:	fa5f fa89 	uxtb.w	sl, r9
2ffeb70e:	4554      	cmp	r4, sl
2ffeb710:	d801      	bhi.n	2ffeb716 <runtime_svc_init+0x42>
2ffeb712:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffeb716:	ea4f 1b0a 	mov.w	fp, sl, lsl #4
2ffeb71a:	eb15 080b 	adds.w	r8, r5, fp
2ffeb71e:	d011      	beq.n	2ffeb744 <runtime_svc_init+0x70>
2ffeb720:	f898 3001 	ldrb.w	r3, [r8, #1]
2ffeb724:	f815 200b 	ldrb.w	r2, [r5, fp]
2ffeb728:	429a      	cmp	r2, r3
2ffeb72a:	d80b      	bhi.n	2ffeb744 <runtime_svc_init+0x70>
2ffeb72c:	2b3f      	cmp	r3, #63	; 0x3f
2ffeb72e:	d809      	bhi.n	2ffeb744 <runtime_svc_init+0x70>
2ffeb730:	f898 3002 	ldrb.w	r3, [r8, #2]
2ffeb734:	2b01      	cmp	r3, #1
2ffeb736:	d805      	bhi.n	2ffeb744 <runtime_svc_init+0x70>
2ffeb738:	f8d8 3008 	ldr.w	r3, [r8, #8]
2ffeb73c:	b953      	cbnz	r3, 2ffeb754 <runtime_svc_init+0x80>
2ffeb73e:	f8d8 300c 	ldr.w	r3, [r8, #12]
2ffeb742:	b98b      	cbnz	r3, 2ffeb768 <runtime_svc_init+0x94>
2ffeb744:	481d      	ldr	r0, [pc, #116]	; (2ffeb7bc <runtime_svc_init+0xe8>)
2ffeb746:	4641      	mov	r1, r8
2ffeb748:	f005 fa1a 	bl	2fff0b80 <tf_log>
2ffeb74c:	f005 faba 	bl	2fff0cc4 <console_flush>
2ffeb750:	f00b eaee 	blx	2fff6d30 <do_panic>
2ffeb754:	4798      	blx	r3
2ffeb756:	b138      	cbz	r0, 2ffeb768 <runtime_svc_init+0x94>
2ffeb758:	f8d8 1004 	ldr.w	r1, [r8, #4]
2ffeb75c:	4638      	mov	r0, r7
2ffeb75e:	f005 fa0f 	bl	2fff0b80 <tf_log>
2ffeb762:	f109 0901 	add.w	r9, r9, #1
2ffeb766:	e7d0      	b.n	2ffeb70a <runtime_svc_init+0x36>
2ffeb768:	f898 2002 	ldrb.w	r2, [r8, #2]
2ffeb76c:	f815 300b 	ldrb.w	r3, [r5, fp]
2ffeb770:	0192      	lsls	r2, r2, #6
2ffeb772:	f002 0140 	and.w	r1, r2, #64	; 0x40
2ffeb776:	f003 033f 	and.w	r3, r3, #63	; 0x3f
2ffeb77a:	f898 2001 	ldrb.w	r2, [r8, #1]
2ffeb77e:	430b      	orrs	r3, r1
2ffeb780:	f002 023f 	and.w	r2, r2, #63	; 0x3f
2ffeb784:	b2d8      	uxtb	r0, r3
2ffeb786:	430a      	orrs	r2, r1
2ffeb788:	4290      	cmp	r0, r2
2ffeb78a:	d901      	bls.n	2ffeb790 <runtime_svc_init+0xbc>
2ffeb78c:	2195      	movs	r1, #149	; 0x95
2ffeb78e:	e7ac      	b.n	2ffeb6ea <runtime_svc_init+0x16>
2ffeb790:	4433      	add	r3, r6
2ffeb792:	2100      	movs	r1, #0
2ffeb794:	f803 a001 	strb.w	sl, [r3, r1]
2ffeb798:	3101      	adds	r1, #1
2ffeb79a:	eb00 0c01 	add.w	ip, r0, r1
2ffeb79e:	fa5f fc8c 	uxtb.w	ip, ip
2ffeb7a2:	4562      	cmp	r2, ip
2ffeb7a4:	d2f6      	bcs.n	2ffeb794 <runtime_svc_init+0xc0>
2ffeb7a6:	e7dc      	b.n	2ffeb762 <runtime_svc_init+0x8e>
2ffeb7a8:	2fffaae4 	.word	0x2fffaae4
2ffeb7ac:	2fffaac4 	.word	0x2fffaac4
2ffeb7b0:	2fff8218 	.word	0x2fff8218
2ffeb7b4:	2fffcfa4 	.word	0x2fffcfa4
2ffeb7b8:	2fff8255 	.word	0x2fff8255
2ffeb7bc:	2fff822d 	.word	0x2fff822d

2ffeb7c0 <sp_min_plat_runtime_setup>:
2ffeb7c0:	2002      	movs	r0, #2
2ffeb7c2:	f005 ba3f 	b.w	2fff0c44 <console_switch_state>
	...

2ffeb7c8 <std_svc_smc_handler>:
2ffeb7c8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
2ffeb7ca:	f64f 76e0 	movw	r6, #65504	; 0xffe0
2ffeb7ce:	4230      	tst	r0, r6
2ffeb7d0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
2ffeb7d2:	d10c      	bne.n	2ffeb7ee <std_svc_smc_handler+0x26>
2ffeb7d4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
2ffeb7d6:	9402      	str	r4, [sp, #8]
2ffeb7d8:	9503      	str	r5, [sp, #12]
2ffeb7da:	9d09      	ldr	r5, [sp, #36]	; 0x24
2ffeb7dc:	9501      	str	r5, [sp, #4]
2ffeb7de:	9d08      	ldr	r5, [sp, #32]
2ffeb7e0:	9500      	str	r5, [sp, #0]
2ffeb7e2:	f000 ff43 	bl	2ffec66c <psci_smc_handler>
2ffeb7e6:	6020      	str	r0, [r4, #0]
2ffeb7e8:	4620      	mov	r0, r4
2ffeb7ea:	b004      	add	sp, #16
2ffeb7ec:	bd70      	pop	{r4, r5, r6, pc}
2ffeb7ee:	4b0f      	ldr	r3, [pc, #60]	; (2ffeb82c <std_svc_smc_handler+0x64>)
2ffeb7f0:	4298      	cmp	r0, r3
2ffeb7f2:	d008      	beq.n	2ffeb806 <std_svc_smc_handler+0x3e>
2ffeb7f4:	3302      	adds	r3, #2
2ffeb7f6:	4298      	cmp	r0, r3
2ffeb7f8:	d00d      	beq.n	2ffeb816 <std_svc_smc_handler+0x4e>
2ffeb7fa:	3b03      	subs	r3, #3
2ffeb7fc:	4298      	cmp	r0, r3
2ffeb7fe:	d10e      	bne.n	2ffeb81e <std_svc_smc_handler+0x56>
2ffeb800:	2312      	movs	r3, #18
2ffeb802:	6023      	str	r3, [r4, #0]
2ffeb804:	e7f0      	b.n	2ffeb7e8 <std_svc_smc_handler+0x20>
2ffeb806:	4b0a      	ldr	r3, [pc, #40]	; (2ffeb830 <std_svc_smc_handler+0x68>)
2ffeb808:	4a0a      	ldr	r2, [pc, #40]	; (2ffeb834 <std_svc_smc_handler+0x6c>)
2ffeb80a:	e9c4 3202 	strd	r3, r2, [r4, #8]
2ffeb80e:	4b0a      	ldr	r3, [pc, #40]	; (2ffeb838 <std_svc_smc_handler+0x70>)
2ffeb810:	6063      	str	r3, [r4, #4]
2ffeb812:	4b0a      	ldr	r3, [pc, #40]	; (2ffeb83c <std_svc_smc_handler+0x74>)
2ffeb814:	e7f5      	b.n	2ffeb802 <std_svc_smc_handler+0x3a>
2ffeb816:	2301      	movs	r3, #1
2ffeb818:	6063      	str	r3, [r4, #4]
2ffeb81a:	2300      	movs	r3, #0
2ffeb81c:	e7f1      	b.n	2ffeb802 <std_svc_smc_handler+0x3a>
2ffeb81e:	4601      	mov	r1, r0
2ffeb820:	4807      	ldr	r0, [pc, #28]	; (2ffeb840 <std_svc_smc_handler+0x78>)
2ffeb822:	f005 f9ad 	bl	2fff0b80 <tf_log>
2ffeb826:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
2ffeb82a:	e7ea      	b.n	2ffeb802 <std_svc_smc_handler+0x3a>
2ffeb82c:	8400ff01 	.word	0x8400ff01
2ffeb830:	fbc02dae 	.word	0xfbc02dae
2ffeb834:	e2f64156 	.word	0xe2f64156
2ffeb838:	47e8f863 	.word	0x47e8f863
2ffeb83c:	108d905b 	.word	0x108d905b
2ffeb840:	2fff829e 	.word	0x2fff829e

2ffeb844 <std_svc_setup>:
2ffeb844:	b508      	push	{r3, lr}
2ffeb846:	f64f 70e0 	movw	r0, #65504	; 0xffe0
2ffeb84a:	f7ff fe49 	bl	2ffeb4e0 <get_arm_std_svc_args>
2ffeb84e:	b918      	cbnz	r0, 2ffeb858 <std_svc_setup+0x14>
2ffeb850:	4804      	ldr	r0, [pc, #16]	; (2ffeb864 <std_svc_setup+0x20>)
2ffeb852:	2126      	movs	r1, #38	; 0x26
2ffeb854:	f00c faa8 	bl	2fff7da8 <__assert>
2ffeb858:	f000 ffae 	bl	2ffec7b8 <psci_setup>
2ffeb85c:	3000      	adds	r0, #0
2ffeb85e:	bf18      	it	ne
2ffeb860:	2001      	movne	r0, #1
2ffeb862:	bd08      	pop	{r3, pc}
2ffeb864:	2fff827d 	.word	0x2fff827d

2ffeb868 <cm_setup_context>:
2ffeb868:	b570      	push	{r4, r5, r6, lr}
2ffeb86a:	460d      	mov	r5, r1
2ffeb86c:	4604      	mov	r4, r0
2ffeb86e:	b918      	cbnz	r0, 2ffeb878 <cm_setup_context+0x10>
2ffeb870:	213e      	movs	r1, #62	; 0x3e
2ffeb872:	481a      	ldr	r0, [pc, #104]	; (2ffeb8dc <cm_setup_context+0x74>)
2ffeb874:	f00c fa98 	bl	2fff7da8 <__assert>
2ffeb878:	684b      	ldr	r3, [r1, #4]
2ffeb87a:	2120      	movs	r1, #32
2ffeb87c:	f003 0601 	and.w	r6, r3, #1
2ffeb880:	f00b ebac 	blx	2fff6fdc <zero_normalmem>
2ffeb884:	ee11 2f11 	mrc	15, 0, r2, cr1, cr1, {0}
2ffeb888:	f422 7280 	bic.w	r2, r2, #256	; 0x100
2ffeb88c:	f022 0201 	bic.w	r2, r2, #1
2ffeb890:	68e9      	ldr	r1, [r5, #12]
2ffeb892:	b18e      	cbz	r6, 2ffeb8b8 <cm_setup_context+0x50>
2ffeb894:	686b      	ldr	r3, [r5, #4]
2ffeb896:	f042 0201 	orr.w	r2, r2, #1
2ffeb89a:	0858      	lsrs	r0, r3, #1
2ffeb89c:	ea80 2051 	eor.w	r0, r0, r1, lsr #9
2ffeb8a0:	07c0      	lsls	r0, r0, #31
2ffeb8a2:	d501      	bpl.n	2ffeb8a8 <cm_setup_context+0x40>
2ffeb8a4:	2164      	movs	r1, #100	; 0x64
2ffeb8a6:	e7e4      	b.n	2ffeb872 <cm_setup_context+0xa>
2ffeb8a8:	061b      	lsls	r3, r3, #24
2ffeb8aa:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
2ffeb8ae:	f443 0345 	orr.w	r3, r3, #12910592	; 0xc50000
2ffeb8b2:	f043 0338 	orr.w	r3, r3, #56	; 0x38
2ffeb8b6:	61e3      	str	r3, [r4, #28]
2ffeb8b8:	f001 031f 	and.w	r3, r1, #31
2ffeb8bc:	4620      	mov	r0, r4
2ffeb8be:	2b1a      	cmp	r3, #26
2ffeb8c0:	68ab      	ldr	r3, [r5, #8]
2ffeb8c2:	bf08      	it	eq
2ffeb8c4:	f442 7280 	orreq.w	r2, r2, #256	; 0x100
2ffeb8c8:	6162      	str	r2, [r4, #20]
2ffeb8ca:	2210      	movs	r2, #16
2ffeb8cc:	61a1      	str	r1, [r4, #24]
2ffeb8ce:	f105 0114 	add.w	r1, r5, #20
2ffeb8d2:	6123      	str	r3, [r4, #16]
2ffeb8d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffeb8d8:	f00c ba8e 	b.w	2fff7df8 <memcpy>
2ffeb8dc:	2fff82d3 	.word	0x2fff82d3

2ffeb8e0 <cm_init_context_by_index>:
2ffeb8e0:	b510      	push	{r4, lr}
2ffeb8e2:	460c      	mov	r4, r1
2ffeb8e4:	6849      	ldr	r1, [r1, #4]
2ffeb8e6:	f001 0101 	and.w	r1, r1, #1
2ffeb8ea:	f7ff fdd9 	bl	2ffeb4a0 <cm_get_context_by_index>
2ffeb8ee:	4621      	mov	r1, r4
2ffeb8f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffeb8f4:	f7ff bfb8 	b.w	2ffeb868 <cm_setup_context>

2ffeb8f8 <cm_init_my_context>:
2ffeb8f8:	b510      	push	{r4, lr}
2ffeb8fa:	4604      	mov	r4, r0
2ffeb8fc:	6840      	ldr	r0, [r0, #4]
2ffeb8fe:	f000 0001 	and.w	r0, r0, #1
2ffeb902:	f7ff fdbb 	bl	2ffeb47c <cm_get_context>
2ffeb906:	4621      	mov	r1, r4
2ffeb908:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffeb90c:	f7ff bfac 	b.w	2ffeb868 <cm_setup_context>

2ffeb910 <cm_prepare_el3_exit>:
2ffeb910:	b510      	push	{r4, lr}
2ffeb912:	4604      	mov	r4, r0
2ffeb914:	f7ff fdb2 	bl	2ffeb47c <cm_get_context>
2ffeb918:	b918      	cbnz	r0, 2ffeb922 <cm_prepare_el3_exit+0x12>
2ffeb91a:	4828      	ldr	r0, [pc, #160]	; (2ffeb9bc <cm_prepare_el3_exit+0xac>)
2ffeb91c:	21b7      	movs	r1, #183	; 0xb7
2ffeb91e:	f00c fa43 	bl	2fff7da8 <__assert>
2ffeb922:	2c01      	cmp	r4, #1
2ffeb924:	d11a      	bne.n	2ffeb95c <cm_prepare_el3_exit+0x4c>
2ffeb926:	6943      	ldr	r3, [r0, #20]
2ffeb928:	f413 7380 	ands.w	r3, r3, #256	; 0x100
2ffeb92c:	d017      	beq.n	2ffeb95e <cm_prepare_el3_exit+0x4e>
2ffeb92e:	69c2      	ldr	r2, [r0, #28]
2ffeb930:	ee11 3f11 	mrc	15, 0, r3, cr1, cr1, {0}
2ffeb934:	f043 0301 	orr.w	r3, r3, #1
2ffeb938:	ee01 3f11 	mcr	15, 0, r3, cr1, cr1, {0}
2ffeb93c:	f3bf 8f6f 	isb	sy
2ffeb940:	4b1f      	ldr	r3, [pc, #124]	; (2ffeb9c0 <cm_prepare_el3_exit+0xb0>)
2ffeb942:	4313      	orrs	r3, r2
2ffeb944:	ee81 3f10 	mcr	15, 4, r3, cr1, cr0, {0}
2ffeb948:	f3bf 8f6f 	isb	sy
2ffeb94c:	ee11 3f11 	mrc	15, 0, r3, cr1, cr1, {0}
2ffeb950:	f023 0301 	bic.w	r3, r3, #1
2ffeb954:	ee01 3f11 	mcr	15, 0, r3, cr1, cr1, {0}
2ffeb958:	f3bf 8f6f 	isb	sy
2ffeb95c:	bd10      	pop	{r4, pc}
2ffeb95e:	ee10 2f31 	mrc	15, 0, r2, cr0, cr1, {1}
2ffeb962:	f412 4f70 	tst.w	r2, #61440	; 0xf000
2ffeb966:	d0f9      	beq.n	2ffeb95c <cm_prepare_el3_exit+0x4c>
2ffeb968:	ee11 2f11 	mrc	15, 0, r2, cr1, cr1, {0}
2ffeb96c:	f042 0201 	orr.w	r2, r2, #1
2ffeb970:	ee01 2f11 	mcr	15, 0, r2, cr1, cr1, {0}
2ffeb974:	f3bf 8f6f 	isb	sy
2ffeb978:	ee81 3f11 	mcr	15, 4, r3, cr1, cr1, {0}
2ffeb97c:	f243 32ff 	movw	r2, #13311	; 0x33ff
2ffeb980:	ee81 2f51 	mcr	15, 4, r2, cr1, cr1, {2}
2ffeb984:	2203      	movs	r2, #3
2ffeb986:	ee8e 2f11 	mcr	15, 4, r2, cr14, cr1, {0}
2ffeb98a:	2000      	movs	r0, #0
2ffeb98c:	2100      	movs	r1, #0
2ffeb98e:	ec41 0f4e 	mcrr	15, 4, r0, r1, cr14
2ffeb992:	ee10 2f10 	mrc	15, 0, r2, cr0, cr0, {0}
2ffeb996:	ee80 2f10 	mcr	15, 4, r2, cr0, cr0, {0}
2ffeb99a:	ee10 2fb0 	mrc	15, 0, r2, cr0, cr0, {5}
2ffeb99e:	ee80 2fb0 	mcr	15, 4, r2, cr0, cr0, {5}
2ffeb9a2:	ec41 0f62 	mcrr	15, 6, r0, r1, cr2
2ffeb9a6:	ee19 2f1c 	mrc	15, 0, r2, cr9, cr12, {0}
2ffeb9aa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
2ffeb9ae:	ee81 2f31 	mcr	15, 4, r2, cr1, cr1, {1}
2ffeb9b2:	ee81 3f71 	mcr	15, 4, r3, cr1, cr1, {3}
2ffeb9b6:	ee8e 3f32 	mcr	15, 4, r3, cr14, cr2, {1}
2ffeb9ba:	e7c5      	b.n	2ffeb948 <cm_prepare_el3_exit+0x38>
2ffeb9bc:	2fff82d3 	.word	0x2fff82d3
2ffeb9c0:	30c50818 	.word	0x30c50818

2ffeb9c4 <errata_needs_reporting>:
2ffeb9c4:	680b      	ldr	r3, [r1, #0]
2ffeb9c6:	b570      	push	{r4, r5, r6, lr}
2ffeb9c8:	4606      	mov	r6, r0
2ffeb9ca:	460d      	mov	r5, r1
2ffeb9cc:	b96b      	cbnz	r3, 2ffeb9ea <errata_needs_reporting+0x26>
2ffeb9ce:	f00b e92a 	blx	2fff6c24 <spin_lock>
2ffeb9d2:	682b      	ldr	r3, [r5, #0]
2ffeb9d4:	4630      	mov	r0, r6
2ffeb9d6:	2b00      	cmp	r3, #0
2ffeb9d8:	bf03      	ittte	eq
2ffeb9da:	2301      	moveq	r3, #1
2ffeb9dc:	2401      	moveq	r4, #1
2ffeb9de:	602b      	streq	r3, [r5, #0]
2ffeb9e0:	2400      	movne	r4, #0
2ffeb9e2:	f00b e932 	blx	2fff6c48 <spin_unlock>
2ffeb9e6:	4620      	mov	r0, r4
2ffeb9e8:	bd70      	pop	{r4, r5, r6, pc}
2ffeb9ea:	2000      	movs	r0, #0
2ffeb9ec:	e7fc      	b.n	2ffeb9e8 <errata_needs_reporting+0x24>
	...

2ffeb9f0 <psci_do_cpu_off>:
2ffeb9f0:	b573      	push	{r0, r1, r4, r5, r6, lr}
2ffeb9f2:	4606      	mov	r6, r0
2ffeb9f4:	4c29      	ldr	r4, [pc, #164]	; (2ffeba9c <psci_do_cpu_off+0xac>)
2ffeb9f6:	f00b ed24 	blx	2fff7440 <plat_my_core_pos>
2ffeb9fa:	2500      	movs	r5, #0
2ffeb9fc:	6823      	ldr	r3, [r4, #0]
2ffeb9fe:	9501      	str	r5, [sp, #4]
2ffeba00:	689b      	ldr	r3, [r3, #8]
2ffeba02:	2b00      	cmp	r3, #0
2ffeba04:	d038      	beq.n	2ffeba78 <psci_do_cpu_off+0x88>
2ffeba06:	f240 2302 	movw	r3, #514	; 0x202
2ffeba0a:	aa01      	add	r2, sp, #4
2ffeba0c:	f8ad 3000 	strh.w	r3, [sp]
2ffeba10:	4631      	mov	r1, r6
2ffeba12:	f000 fa85 	bl	2ffebf20 <psci_get_parent_pwr_domain_nodes>
2ffeba16:	a901      	add	r1, sp, #4
2ffeba18:	4630      	mov	r0, r6
2ffeba1a:	f000 fb79 	bl	2ffec110 <psci_acquire_pwr_domain_locks>
2ffeba1e:	4b20      	ldr	r3, [pc, #128]	; (2ffebaa0 <psci_do_cpu_off+0xb0>)
2ffeba20:	681b      	ldr	r3, [r3, #0]
2ffeba22:	bb6b      	cbnz	r3, 2ffeba80 <psci_do_cpu_off+0x90>
2ffeba24:	4669      	mov	r1, sp
2ffeba26:	4630      	mov	r0, r6
2ffeba28:	2500      	movs	r5, #0
2ffeba2a:	f000 fad1 	bl	2ffebfd0 <psci_do_state_coordination>
2ffeba2e:	4668      	mov	r0, sp
2ffeba30:	f000 fb2c 	bl	2ffec08c <psci_find_max_off_lvl>
2ffeba34:	f000 fcac 	bl	2ffec390 <psci_do_pwrdown_sequence>
2ffeba38:	6823      	ldr	r3, [r4, #0]
2ffeba3a:	4668      	mov	r0, sp
2ffeba3c:	689b      	ldr	r3, [r3, #8]
2ffeba3e:	4798      	blx	r3
2ffeba40:	a901      	add	r1, sp, #4
2ffeba42:	4630      	mov	r0, r6
2ffeba44:	f000 fb7c 	bl	2ffec140 <psci_release_pwr_domain_locks>
2ffeba48:	bb2d      	cbnz	r5, 2ffeba96 <psci_do_cpu_off+0xa6>
2ffeba4a:	f00b e840 	blx	2fff6acc <_cpu_data>
2ffeba4e:	2104      	movs	r1, #4
2ffeba50:	4408      	add	r0, r1
2ffeba52:	f00b ea0a 	blx	2fff6e68 <flush_dcache_range>
2ffeba56:	f00b e83a 	blx	2fff6acc <_cpu_data>
2ffeba5a:	2301      	movs	r3, #1
2ffeba5c:	6043      	str	r3, [r0, #4]
2ffeba5e:	f3bf 8f4b 	dsb	ish
2ffeba62:	f00b e834 	blx	2fff6acc <_cpu_data>
2ffeba66:	2104      	movs	r1, #4
2ffeba68:	4408      	add	r0, r1
2ffeba6a:	f00b ea3a 	blx	2fff6ee0 <inv_dcache_range>
2ffeba6e:	6823      	ldr	r3, [r4, #0]
2ffeba70:	6a1b      	ldr	r3, [r3, #32]
2ffeba72:	b173      	cbz	r3, 2ffeba92 <psci_do_cpu_off+0xa2>
2ffeba74:	4668      	mov	r0, sp
2ffeba76:	4798      	blx	r3
2ffeba78:	480a      	ldr	r0, [pc, #40]	; (2ffebaa4 <psci_do_cpu_off+0xb4>)
2ffeba7a:	2136      	movs	r1, #54	; 0x36
2ffeba7c:	f00c f994 	bl	2fff7da8 <__assert>
2ffeba80:	685b      	ldr	r3, [r3, #4]
2ffeba82:	2b00      	cmp	r3, #0
2ffeba84:	d0ce      	beq.n	2ffeba24 <psci_do_cpu_off+0x34>
2ffeba86:	4628      	mov	r0, r5
2ffeba88:	4798      	blx	r3
2ffeba8a:	4605      	mov	r5, r0
2ffeba8c:	2800      	cmp	r0, #0
2ffeba8e:	d0c9      	beq.n	2ffeba24 <psci_do_cpu_off+0x34>
2ffeba90:	e7d6      	b.n	2ffeba40 <psci_do_cpu_off+0x50>
2ffeba92:	f00b e928 	blx	2fff6ce4 <psci_power_down_wfi>
2ffeba96:	4628      	mov	r0, r5
2ffeba98:	b002      	add	sp, #8
2ffeba9a:	bd70      	pop	{r4, r5, r6, pc}
2ffeba9c:	2fffd0f8 	.word	0x2fffd0f8
2ffebaa0:	2fffd0fc 	.word	0x2fffd0fc
2ffebaa4:	2fff82fa 	.word	0x2fff82fa

2ffebaa8 <psci_cpu_on_start>:
2ffebaa8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2ffebaac:	4680      	mov	r8, r0
2ffebaae:	460f      	mov	r7, r1
2ffebab0:	f003 fb10 	bl	2ffef0d4 <plat_core_pos_by_mpidr>
2ffebab4:	1e04      	subs	r4, r0, #0
2ffebab6:	da03      	bge.n	2ffebac0 <psci_cpu_on_start+0x18>
2ffebab8:	2143      	movs	r1, #67	; 0x43
2ffebaba:	4841      	ldr	r0, [pc, #260]	; (2ffebbc0 <psci_cpu_on_start+0x118>)
2ffebabc:	f00c f974 	bl	2fff7da8 <__assert>
2ffebac0:	b90f      	cbnz	r7, 2ffebac6 <psci_cpu_on_start+0x1e>
2ffebac2:	2144      	movs	r1, #68	; 0x44
2ffebac4:	e7f9      	b.n	2ffebaba <psci_cpu_on_start+0x12>
2ffebac6:	4d3f      	ldr	r5, [pc, #252]	; (2ffebbc4 <psci_cpu_on_start+0x11c>)
2ffebac8:	682b      	ldr	r3, [r5, #0]
2ffebaca:	685a      	ldr	r2, [r3, #4]
2ffebacc:	b10a      	cbz	r2, 2ffebad2 <psci_cpu_on_start+0x2a>
2ffebace:	695b      	ldr	r3, [r3, #20]
2ffebad0:	b90b      	cbnz	r3, 2ffebad6 <psci_cpu_on_start+0x2e>
2ffebad2:	214b      	movs	r1, #75	; 0x4b
2ffebad4:	e7f1      	b.n	2ffebaba <psci_cpu_on_start+0x12>
2ffebad6:	4b3c      	ldr	r3, [pc, #240]	; (2ffebbc8 <psci_cpu_on_start+0x120>)
2ffebad8:	260c      	movs	r6, #12
2ffebada:	fb06 3604 	mla	r6, r6, r4, r3
2ffebade:	4630      	mov	r0, r6
2ffebae0:	f00b e8a0 	blx	2fff6c24 <spin_lock>
2ffebae4:	4620      	mov	r0, r4
2ffebae6:	f00a effa 	blx	2fff6adc <_cpu_data_by_index>
2ffebaea:	2104      	movs	r1, #4
2ffebaec:	4408      	add	r0, r1
2ffebaee:	f00b e9bc 	blx	2fff6e68 <flush_dcache_range>
2ffebaf2:	4620      	mov	r0, r4
2ffebaf4:	f00a eff2 	blx	2fff6adc <_cpu_data_by_index>
2ffebaf8:	6843      	ldr	r3, [r0, #4]
2ffebafa:	2b00      	cmp	r3, #0
2ffebafc:	d059      	beq.n	2ffebbb2 <psci_cpu_on_start+0x10a>
2ffebafe:	2b02      	cmp	r3, #2
2ffebb00:	d05a      	beq.n	2ffebbb8 <psci_cpu_on_start+0x110>
2ffebb02:	2b01      	cmp	r3, #1
2ffebb04:	d001      	beq.n	2ffebb0a <psci_cpu_on_start+0x62>
2ffebb06:	212d      	movs	r1, #45	; 0x2d
2ffebb08:	e7d7      	b.n	2ffebaba <psci_cpu_on_start+0x12>
2ffebb0a:	4b30      	ldr	r3, [pc, #192]	; (2ffebbcc <psci_cpu_on_start+0x124>)
2ffebb0c:	681b      	ldr	r3, [r3, #0]
2ffebb0e:	b11b      	cbz	r3, 2ffebb18 <psci_cpu_on_start+0x70>
2ffebb10:	681b      	ldr	r3, [r3, #0]
2ffebb12:	b10b      	cbz	r3, 2ffebb18 <psci_cpu_on_start+0x70>
2ffebb14:	4640      	mov	r0, r8
2ffebb16:	4798      	blx	r3
2ffebb18:	4620      	mov	r0, r4
2ffebb1a:	f04f 0902 	mov.w	r9, #2
2ffebb1e:	f00a efde 	blx	2fff6adc <_cpu_data_by_index>
2ffebb22:	f8c0 9004 	str.w	r9, [r0, #4]
2ffebb26:	4620      	mov	r0, r4
2ffebb28:	f00a efd8 	blx	2fff6adc <_cpu_data_by_index>
2ffebb2c:	2104      	movs	r1, #4
2ffebb2e:	4408      	add	r0, r1
2ffebb30:	f00b e99a 	blx	2fff6e68 <flush_dcache_range>
2ffebb34:	4620      	mov	r0, r4
2ffebb36:	f00a efd2 	blx	2fff6adc <_cpu_data_by_index>
2ffebb3a:	6843      	ldr	r3, [r0, #4]
2ffebb3c:	454b      	cmp	r3, r9
2ffebb3e:	d017      	beq.n	2ffebb70 <psci_cpu_on_start+0xc8>
2ffebb40:	2b01      	cmp	r3, #1
2ffebb42:	d001      	beq.n	2ffebb48 <psci_cpu_on_start+0xa0>
2ffebb44:	217f      	movs	r1, #127	; 0x7f
2ffebb46:	e7b8      	b.n	2ffebaba <psci_cpu_on_start+0x12>
2ffebb48:	4620      	mov	r0, r4
2ffebb4a:	f00a efc8 	blx	2fff6adc <_cpu_data_by_index>
2ffebb4e:	f8c0 9004 	str.w	r9, [r0, #4]
2ffebb52:	4620      	mov	r0, r4
2ffebb54:	f00a efc2 	blx	2fff6adc <_cpu_data_by_index>
2ffebb58:	2104      	movs	r1, #4
2ffebb5a:	4408      	add	r0, r1
2ffebb5c:	f00b e984 	blx	2fff6e68 <flush_dcache_range>
2ffebb60:	4620      	mov	r0, r4
2ffebb62:	f00a efbc 	blx	2fff6adc <_cpu_data_by_index>
2ffebb66:	6843      	ldr	r3, [r0, #4]
2ffebb68:	2b02      	cmp	r3, #2
2ffebb6a:	d001      	beq.n	2ffebb70 <psci_cpu_on_start+0xc8>
2ffebb6c:	2185      	movs	r1, #133	; 0x85
2ffebb6e:	e7a4      	b.n	2ffebaba <psci_cpu_on_start+0x12>
2ffebb70:	682b      	ldr	r3, [r5, #0]
2ffebb72:	4640      	mov	r0, r8
2ffebb74:	685b      	ldr	r3, [r3, #4]
2ffebb76:	4798      	blx	r3
2ffebb78:	4605      	mov	r5, r0
2ffebb7a:	b118      	cbz	r0, 2ffebb84 <psci_cpu_on_start+0xdc>
2ffebb7c:	1d83      	adds	r3, r0, #6
2ffebb7e:	d00b      	beq.n	2ffebb98 <psci_cpu_on_start+0xf0>
2ffebb80:	2191      	movs	r1, #145	; 0x91
2ffebb82:	e79a      	b.n	2ffebaba <psci_cpu_on_start+0x12>
2ffebb84:	4639      	mov	r1, r7
2ffebb86:	4620      	mov	r0, r4
2ffebb88:	f7ff feaa 	bl	2ffeb8e0 <cm_init_context_by_index>
2ffebb8c:	4630      	mov	r0, r6
2ffebb8e:	f00b e85c 	blx	2fff6c48 <spin_unlock>
2ffebb92:	4628      	mov	r0, r5
2ffebb94:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2ffebb98:	4620      	mov	r0, r4
2ffebb9a:	f00a efa0 	blx	2fff6adc <_cpu_data_by_index>
2ffebb9e:	2301      	movs	r3, #1
2ffebba0:	6043      	str	r3, [r0, #4]
2ffebba2:	4620      	mov	r0, r4
2ffebba4:	f00a ef9a 	blx	2fff6adc <_cpu_data_by_index>
2ffebba8:	2104      	movs	r1, #4
2ffebbaa:	4408      	add	r0, r1
2ffebbac:	f00b e95c 	blx	2fff6e68 <flush_dcache_range>
2ffebbb0:	e7ec      	b.n	2ffebb8c <psci_cpu_on_start+0xe4>
2ffebbb2:	f06f 0503 	mvn.w	r5, #3
2ffebbb6:	e7e9      	b.n	2ffebb8c <psci_cpu_on_start+0xe4>
2ffebbb8:	f06f 0504 	mvn.w	r5, #4
2ffebbbc:	e7e6      	b.n	2ffebb8c <psci_cpu_on_start+0xe4>
2ffebbbe:	bf00      	nop
2ffebbc0:	2fff830e 	.word	0x2fff830e
2ffebbc4:	2fffd0f8 	.word	0x2fffd0f8
2ffebbc8:	2fffd0c8 	.word	0x2fffd0c8
2ffebbcc:	2fffd0fc 	.word	0x2fffd0fc

2ffebbd0 <psci_cpu_on_finish>:
2ffebbd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffebbd2:	4605      	mov	r5, r0
2ffebbd4:	4e1f      	ldr	r6, [pc, #124]	; (2ffebc54 <psci_cpu_on_finish+0x84>)
2ffebbd6:	4608      	mov	r0, r1
2ffebbd8:	460c      	mov	r4, r1
2ffebbda:	6833      	ldr	r3, [r6, #0]
2ffebbdc:	695b      	ldr	r3, [r3, #20]
2ffebbde:	4798      	blx	r3
2ffebbe0:	f00b e84a 	blx	2fff6c78 <psci_do_pwrup_cache_maintenance>
2ffebbe4:	6833      	ldr	r3, [r6, #0]
2ffebbe6:	699b      	ldr	r3, [r3, #24]
2ffebbe8:	b10b      	cbz	r3, 2ffebbee <psci_cpu_on_finish+0x1e>
2ffebbea:	4620      	mov	r0, r4
2ffebbec:	4798      	blx	r3
2ffebbee:	4e1a      	ldr	r6, [pc, #104]	; (2ffebc58 <psci_cpu_on_finish+0x88>)
2ffebbf0:	240c      	movs	r4, #12
2ffebbf2:	436c      	muls	r4, r5
2ffebbf4:	f000 fdd4 	bl	2ffec7a0 <psci_arch_setup>
2ffebbf8:	3408      	adds	r4, #8
2ffebbfa:	4434      	add	r4, r6
2ffebbfc:	4620      	mov	r0, r4
2ffebbfe:	f00b e812 	blx	2fff6c24 <spin_lock>
2ffebc02:	4620      	mov	r0, r4
2ffebc04:	4634      	mov	r4, r6
2ffebc06:	f00b e820 	blx	2fff6c48 <spin_unlock>
2ffebc0a:	f00a ef60 	blx	2fff6acc <_cpu_data>
2ffebc0e:	6843      	ldr	r3, [r0, #4]
2ffebc10:	2b02      	cmp	r3, #2
2ffebc12:	d003      	beq.n	2ffebc1c <psci_cpu_on_finish+0x4c>
2ffebc14:	4811      	ldr	r0, [pc, #68]	; (2ffebc5c <psci_cpu_on_finish+0x8c>)
2ffebc16:	21d1      	movs	r1, #209	; 0xd1
2ffebc18:	f00c f8c6 	bl	2fff7da8 <__assert>
2ffebc1c:	4b10      	ldr	r3, [pc, #64]	; (2ffebc60 <psci_cpu_on_finish+0x90>)
2ffebc1e:	681b      	ldr	r3, [r3, #0]
2ffebc20:	b11b      	cbz	r3, 2ffebc2a <psci_cpu_on_finish+0x5a>
2ffebc22:	68db      	ldr	r3, [r3, #12]
2ffebc24:	b10b      	cbz	r3, 2ffebc2a <psci_cpu_on_finish+0x5a>
2ffebc26:	2000      	movs	r0, #0
2ffebc28:	4798      	blx	r3
2ffebc2a:	4e0e      	ldr	r6, [pc, #56]	; (2ffebc64 <psci_cpu_on_finish+0x94>)
2ffebc2c:	4f0e      	ldr	r7, [pc, #56]	; (2ffebc68 <psci_cpu_on_finish+0x98>)
2ffebc2e:	42be      	cmp	r6, r7
2ffebc30:	d30b      	bcc.n	2ffebc4a <psci_cpu_on_finish+0x7a>
2ffebc32:	ee10 3fb0 	mrc	15, 0, r3, cr0, cr0, {5}
2ffebc36:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
2ffebc3a:	200c      	movs	r0, #12
2ffebc3c:	4368      	muls	r0, r5
2ffebc3e:	5023      	str	r3, [r4, r0]
2ffebc40:	2001      	movs	r0, #1
2ffebc42:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
2ffebc46:	f7ff be63 	b.w	2ffeb910 <cm_prepare_el3_exit>
2ffebc4a:	f856 3b04 	ldr.w	r3, [r6], #4
2ffebc4e:	2000      	movs	r0, #0
2ffebc50:	4798      	blx	r3
2ffebc52:	e7ec      	b.n	2ffebc2e <psci_cpu_on_finish+0x5e>
2ffebc54:	2fffd0f8 	.word	0x2fffd0f8
2ffebc58:	2fffd0c0 	.word	0x2fffd0c0
2ffebc5c:	2fff830e 	.word	0x2fff830e
2ffebc60:	2fffd0fc 	.word	0x2fffd0fc
2ffebc64:	2fffab00 	.word	0x2fffab00
2ffebc68:	2fffab00 	.word	0x2fffab00

2ffebc6c <psci_cpu_suspend_start>:
2ffebc6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffebc70:	b085      	sub	sp, #20
2ffebc72:	4d42      	ldr	r5, [pc, #264]	; (2ffebd7c <psci_cpu_suspend_start+0x110>)
2ffebc74:	4616      	mov	r6, r2
2ffebc76:	461f      	mov	r7, r3
2ffebc78:	4683      	mov	fp, r0
2ffebc7a:	460c      	mov	r4, r1
2ffebc7c:	f00b ebe0 	blx	2fff7440 <plat_my_core_pos>
2ffebc80:	2300      	movs	r3, #0
2ffebc82:	4681      	mov	r9, r0
2ffebc84:	9302      	str	r3, [sp, #8]
2ffebc86:	682b      	ldr	r3, [r5, #0]
2ffebc88:	691a      	ldr	r2, [r3, #16]
2ffebc8a:	b10a      	cbz	r2, 2ffebc90 <psci_cpu_suspend_start+0x24>
2ffebc8c:	69db      	ldr	r3, [r3, #28]
2ffebc8e:	b91b      	cbnz	r3, 2ffebc98 <psci_cpu_suspend_start+0x2c>
2ffebc90:	483b      	ldr	r0, [pc, #236]	; (2ffebd80 <psci_cpu_suspend_start+0x114>)
2ffebc92:	21a8      	movs	r1, #168	; 0xa8
2ffebc94:	f00c f888 	bl	2fff7da8 <__assert>
2ffebc98:	aa02      	add	r2, sp, #8
2ffebc9a:	4621      	mov	r1, r4
2ffebc9c:	f000 f940 	bl	2ffebf20 <psci_get_parent_pwr_domain_nodes>
2ffebca0:	a902      	add	r1, sp, #8
2ffebca2:	4620      	mov	r0, r4
2ffebca4:	f000 fa34 	bl	2ffec110 <psci_acquire_pwr_domain_locks>
2ffebca8:	ee1c 3f11 	mrc	15, 0, r3, cr12, cr1, {0}
2ffebcac:	2b00      	cmp	r3, #0
2ffebcae:	d140      	bne.n	2ffebd32 <psci_cpu_suspend_start+0xc6>
2ffebcb0:	4631      	mov	r1, r6
2ffebcb2:	4620      	mov	r0, r4
2ffebcb4:	f000 f98c 	bl	2ffebfd0 <psci_do_state_coordination>
2ffebcb8:	b31f      	cbz	r7, 2ffebd02 <psci_cpu_suspend_start+0x96>
2ffebcba:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 2ffebd8c <psci_cpu_suspend_start+0x120>
2ffebcbe:	4630      	mov	r0, r6
2ffebcc0:	f000 f9e4 	bl	2ffec08c <psci_find_max_off_lvl>
2ffebcc4:	4682      	mov	sl, r0
2ffebcc6:	4b2f      	ldr	r3, [pc, #188]	; (2ffebd84 <psci_cpu_suspend_start+0x118>)
2ffebcc8:	4598      	cmp	r8, r3
2ffebcca:	d32d      	bcc.n	2ffebd28 <psci_cpu_suspend_start+0xbc>
2ffebccc:	f00a eefe 	blx	2fff6acc <_cpu_data>
2ffebcd0:	6084      	str	r4, [r0, #8]
2ffebcd2:	f00a eefc 	blx	2fff6acc <_cpu_data>
2ffebcd6:	3008      	adds	r0, #8
2ffebcd8:	2104      	movs	r1, #4
2ffebcda:	f00b e8c6 	blx	2fff6e68 <flush_dcache_range>
2ffebcde:	4b2a      	ldr	r3, [pc, #168]	; (2ffebd88 <psci_cpu_suspend_start+0x11c>)
2ffebce0:	681b      	ldr	r3, [r3, #0]
2ffebce2:	b11b      	cbz	r3, 2ffebcec <psci_cpu_suspend_start+0x80>
2ffebce4:	689b      	ldr	r3, [r3, #8]
2ffebce6:	b10b      	cbz	r3, 2ffebcec <psci_cpu_suspend_start+0x80>
2ffebce8:	4650      	mov	r0, sl
2ffebcea:	4798      	blx	r3
2ffebcec:	682b      	ldr	r3, [r5, #0]
2ffebcee:	68db      	ldr	r3, [r3, #12]
2ffebcf0:	b10b      	cbz	r3, 2ffebcf6 <psci_cpu_suspend_start+0x8a>
2ffebcf2:	4630      	mov	r0, r6
2ffebcf4:	4798      	blx	r3
2ffebcf6:	4658      	mov	r0, fp
2ffebcf8:	f7ff fdfe 	bl	2ffeb8f8 <cm_init_my_context>
2ffebcfc:	4650      	mov	r0, sl
2ffebcfe:	f000 fb47 	bl	2ffec390 <psci_do_pwrdown_sequence>
2ffebd02:	682b      	ldr	r3, [r5, #0]
2ffebd04:	4630      	mov	r0, r6
2ffebd06:	f04f 0800 	mov.w	r8, #0
2ffebd0a:	691b      	ldr	r3, [r3, #16]
2ffebd0c:	4798      	blx	r3
2ffebd0e:	a902      	add	r1, sp, #8
2ffebd10:	4620      	mov	r0, r4
2ffebd12:	f000 fa15 	bl	2ffec140 <psci_release_pwr_domain_locks>
2ffebd16:	f1b8 0f00 	cmp.w	r8, #0
2ffebd1a:	d12b      	bne.n	2ffebd74 <psci_cpu_suspend_start+0x108>
2ffebd1c:	b177      	cbz	r7, 2ffebd3c <psci_cpu_suspend_start+0xd0>
2ffebd1e:	682b      	ldr	r3, [r5, #0]
2ffebd20:	6a1b      	ldr	r3, [r3, #32]
2ffebd22:	b14b      	cbz	r3, 2ffebd38 <psci_cpu_suspend_start+0xcc>
2ffebd24:	4630      	mov	r0, r6
2ffebd26:	4798      	blx	r3
2ffebd28:	f858 2b04 	ldr.w	r2, [r8], #4
2ffebd2c:	2000      	movs	r0, #0
2ffebd2e:	4790      	blx	r2
2ffebd30:	e7c9      	b.n	2ffebcc6 <psci_cpu_suspend_start+0x5a>
2ffebd32:	f04f 0801 	mov.w	r8, #1
2ffebd36:	e7ea      	b.n	2ffebd0e <psci_cpu_suspend_start+0xa2>
2ffebd38:	f00a efd4 	blx	2fff6ce4 <psci_power_down_wfi>
2ffebd3c:	bf30      	wfi
2ffebd3e:	ae04      	add	r6, sp, #16
2ffebd40:	4621      	mov	r1, r4
2ffebd42:	4648      	mov	r0, r9
2ffebd44:	f846 7d04 	str.w	r7, [r6, #-4]!
2ffebd48:	4632      	mov	r2, r6
2ffebd4a:	f000 f8e9 	bl	2ffebf20 <psci_get_parent_pwr_domain_nodes>
2ffebd4e:	4631      	mov	r1, r6
2ffebd50:	4620      	mov	r0, r4
2ffebd52:	f000 f9dd 	bl	2ffec110 <psci_acquire_pwr_domain_locks>
2ffebd56:	a901      	add	r1, sp, #4
2ffebd58:	4620      	mov	r0, r4
2ffebd5a:	f000 f8b7 	bl	2ffebecc <psci_get_target_local_pwr_states>
2ffebd5e:	682b      	ldr	r3, [r5, #0]
2ffebd60:	a801      	add	r0, sp, #4
2ffebd62:	69db      	ldr	r3, [r3, #28]
2ffebd64:	4798      	blx	r3
2ffebd66:	4620      	mov	r0, r4
2ffebd68:	f000 f8f0 	bl	2ffebf4c <psci_set_pwr_domains_to_run>
2ffebd6c:	4631      	mov	r1, r6
2ffebd6e:	4620      	mov	r0, r4
2ffebd70:	f000 f9e6 	bl	2ffec140 <psci_release_pwr_domain_locks>
2ffebd74:	b005      	add	sp, #20
2ffebd76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffebd7a:	bf00      	nop
2ffebd7c:	2fffd0f8 	.word	0x2fffd0f8
2ffebd80:	2fff8321 	.word	0x2fff8321
2ffebd84:	2fffab00 	.word	0x2fffab00
2ffebd88:	2fffd0fc 	.word	0x2fffd0fc
2ffebd8c:	2fffab00 	.word	0x2fffab00

2ffebd90 <psci_cpu_suspend_finish>:
2ffebd90:	b538      	push	{r3, r4, r5, lr}
2ffebd92:	460c      	mov	r4, r1
2ffebd94:	f00a ee9a 	blx	2fff6acc <_cpu_data>
2ffebd98:	6843      	ldr	r3, [r0, #4]
2ffebd9a:	b913      	cbnz	r3, 2ffebda2 <psci_cpu_suspend_finish+0x12>
2ffebd9c:	7823      	ldrb	r3, [r4, #0]
2ffebd9e:	2b02      	cmp	r3, #2
2ffebda0:	d004      	beq.n	2ffebdac <psci_cpu_suspend_finish+0x1c>
2ffebda2:	f240 111f 	movw	r1, #287	; 0x11f
2ffebda6:	4818      	ldr	r0, [pc, #96]	; (2ffebe08 <psci_cpu_suspend_finish+0x78>)
2ffebda8:	f00b fffe 	bl	2fff7da8 <__assert>
2ffebdac:	4b17      	ldr	r3, [pc, #92]	; (2ffebe0c <psci_cpu_suspend_finish+0x7c>)
2ffebdae:	4620      	mov	r0, r4
2ffebdb0:	681b      	ldr	r3, [r3, #0]
2ffebdb2:	69db      	ldr	r3, [r3, #28]
2ffebdb4:	4798      	blx	r3
2ffebdb6:	f00a ef60 	blx	2fff6c78 <psci_do_pwrup_cache_maintenance>
2ffebdba:	f005 f88f 	bl	2fff0edc <plat_get_syscnt_freq2>
2ffebdbe:	ee0e 0f10 	mcr	15, 0, r0, cr14, cr0, {0}
2ffebdc2:	4d13      	ldr	r5, [pc, #76]	; (2ffebe10 <psci_cpu_suspend_finish+0x80>)
2ffebdc4:	682b      	ldr	r3, [r5, #0]
2ffebdc6:	b163      	cbz	r3, 2ffebde2 <psci_cpu_suspend_finish+0x52>
2ffebdc8:	691b      	ldr	r3, [r3, #16]
2ffebdca:	b153      	cbz	r3, 2ffebde2 <psci_cpu_suspend_finish+0x52>
2ffebdcc:	4620      	mov	r0, r4
2ffebdce:	f000 f95d 	bl	2ffec08c <psci_find_max_off_lvl>
2ffebdd2:	2802      	cmp	r0, #2
2ffebdd4:	d102      	bne.n	2ffebddc <psci_cpu_suspend_finish+0x4c>
2ffebdd6:	f44f 71a0 	mov.w	r1, #320	; 0x140
2ffebdda:	e7e4      	b.n	2ffebda6 <psci_cpu_suspend_finish+0x16>
2ffebddc:	682b      	ldr	r3, [r5, #0]
2ffebdde:	691b      	ldr	r3, [r3, #16]
2ffebde0:	4798      	blx	r3
2ffebde2:	4c0c      	ldr	r4, [pc, #48]	; (2ffebe14 <psci_cpu_suspend_finish+0x84>)
2ffebde4:	f00a ee72 	blx	2fff6acc <_cpu_data>
2ffebde8:	4d0b      	ldr	r5, [pc, #44]	; (2ffebe18 <psci_cpu_suspend_finish+0x88>)
2ffebdea:	2302      	movs	r3, #2
2ffebdec:	6083      	str	r3, [r0, #8]
2ffebdee:	42ac      	cmp	r4, r5
2ffebdf0:	d304      	bcc.n	2ffebdfc <psci_cpu_suspend_finish+0x6c>
2ffebdf2:	2001      	movs	r0, #1
2ffebdf4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffebdf8:	f7ff bd8a 	b.w	2ffeb910 <cm_prepare_el3_exit>
2ffebdfc:	f854 3b04 	ldr.w	r3, [r4], #4
2ffebe00:	2000      	movs	r0, #0
2ffebe02:	4798      	blx	r3
2ffebe04:	e7f3      	b.n	2ffebdee <psci_cpu_suspend_finish+0x5e>
2ffebe06:	bf00      	nop
2ffebe08:	2fff8321 	.word	0x2fff8321
2ffebe0c:	2fffd0f8 	.word	0x2fffd0f8
2ffebe10:	2fffd0fc 	.word	0x2fffd0fc
2ffebe14:	2fffab00 	.word	0x2fffab00
2ffebe18:	2fffab00 	.word	0x2fffab00

2ffebe1c <psci_validate_power_state>:
2ffebe1c:	4b08      	ldr	r3, [pc, #32]	; (2ffebe40 <psci_validate_power_state+0x24>)
2ffebe1e:	b510      	push	{r4, lr}
2ffebe20:	4003      	ands	r3, r0
2ffebe22:	b953      	cbnz	r3, 2ffebe3a <psci_validate_power_state+0x1e>
2ffebe24:	4b07      	ldr	r3, [pc, #28]	; (2ffebe44 <psci_validate_power_state+0x28>)
2ffebe26:	681b      	ldr	r3, [r3, #0]
2ffebe28:	6adb      	ldr	r3, [r3, #44]	; 0x2c
2ffebe2a:	b91b      	cbnz	r3, 2ffebe34 <psci_validate_power_state+0x18>
2ffebe2c:	4806      	ldr	r0, [pc, #24]	; (2ffebe48 <psci_validate_power_state+0x2c>)
2ffebe2e:	2182      	movs	r1, #130	; 0x82
2ffebe30:	f00b ffba 	bl	2fff7da8 <__assert>
2ffebe34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffebe38:	4718      	bx	r3
2ffebe3a:	f06f 0001 	mvn.w	r0, #1
2ffebe3e:	bd10      	pop	{r4, pc}
2ffebe40:	fcfe0000 	.word	0xfcfe0000
2ffebe44:	2fffd0f8 	.word	0x2fffd0f8
2ffebe48:	2fff83d8 	.word	0x2fff83d8

2ffebe4c <psci_query_sys_suspend_pwrstate>:
2ffebe4c:	4b05      	ldr	r3, [pc, #20]	; (2ffebe64 <psci_query_sys_suspend_pwrstate+0x18>)
2ffebe4e:	b510      	push	{r4, lr}
2ffebe50:	681b      	ldr	r3, [r3, #0]
2ffebe52:	6b5b      	ldr	r3, [r3, #52]	; 0x34
2ffebe54:	b91b      	cbnz	r3, 2ffebe5e <psci_query_sys_suspend_pwrstate+0x12>
2ffebe56:	4804      	ldr	r0, [pc, #16]	; (2ffebe68 <psci_query_sys_suspend_pwrstate+0x1c>)
2ffebe58:	2192      	movs	r1, #146	; 0x92
2ffebe5a:	f00b ffa5 	bl	2fff7da8 <__assert>
2ffebe5e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffebe62:	4718      	bx	r3
2ffebe64:	2fffd0f8 	.word	0x2fffd0f8
2ffebe68:	2fff83d8 	.word	0x2fff83d8

2ffebe6c <psci_is_last_on_cpu>:
2ffebe6c:	b510      	push	{r4, lr}
2ffebe6e:	f00b eae8 	blx	2fff7440 <plat_my_core_pos>
2ffebe72:	4604      	mov	r4, r0
2ffebe74:	b138      	cbz	r0, 2ffebe86 <psci_is_last_on_cpu+0x1a>
2ffebe76:	2000      	movs	r0, #0
2ffebe78:	f00a ee30 	blx	2fff6adc <_cpu_data_by_index>
2ffebe7c:	6843      	ldr	r3, [r0, #4]
2ffebe7e:	2b01      	cmp	r3, #1
2ffebe80:	d009      	beq.n	2ffebe96 <psci_is_last_on_cpu+0x2a>
2ffebe82:	2000      	movs	r0, #0
2ffebe84:	e00f      	b.n	2ffebea6 <psci_is_last_on_cpu+0x3a>
2ffebe86:	f00a ee22 	blx	2fff6acc <_cpu_data>
2ffebe8a:	6843      	ldr	r3, [r0, #4]
2ffebe8c:	b163      	cbz	r3, 2ffebea8 <psci_is_last_on_cpu+0x3c>
2ffebe8e:	480a      	ldr	r0, [pc, #40]	; (2ffebeb8 <psci_is_last_on_cpu+0x4c>)
2ffebe90:	21a7      	movs	r1, #167	; 0xa7
2ffebe92:	f00b ff89 	bl	2fff7da8 <__assert>
2ffebe96:	2c01      	cmp	r4, #1
2ffebe98:	d106      	bne.n	2ffebea8 <psci_is_last_on_cpu+0x3c>
2ffebe9a:	f00a ee18 	blx	2fff6acc <_cpu_data>
2ffebe9e:	6843      	ldr	r3, [r0, #4]
2ffebea0:	2b00      	cmp	r3, #0
2ffebea2:	d1f4      	bne.n	2ffebe8e <psci_is_last_on_cpu+0x22>
2ffebea4:	2001      	movs	r0, #1
2ffebea6:	bd10      	pop	{r4, pc}
2ffebea8:	2001      	movs	r0, #1
2ffebeaa:	f00a ee18 	blx	2fff6adc <_cpu_data_by_index>
2ffebeae:	6843      	ldr	r3, [r0, #4]
2ffebeb0:	2b01      	cmp	r3, #1
2ffebeb2:	d0f7      	beq.n	2ffebea4 <psci_is_last_on_cpu+0x38>
2ffebeb4:	e7e5      	b.n	2ffebe82 <psci_is_last_on_cpu+0x16>
2ffebeb6:	bf00      	nop
2ffebeb8:	2fff83d8 	.word	0x2fff83d8

2ffebebc <psci_init_req_local_pwr_states>:
2ffebebc:	4b02      	ldr	r3, [pc, #8]	; (2ffebec8 <psci_init_req_local_pwr_states+0xc>)
2ffebebe:	2202      	movs	r2, #2
2ffebec0:	701a      	strb	r2, [r3, #0]
2ffebec2:	705a      	strb	r2, [r3, #1]
2ffebec4:	4770      	bx	lr
2ffebec6:	bf00      	nop
2ffebec8:	2fffc2a8 	.word	0x2fffc2a8

2ffebecc <psci_get_target_local_pwr_states>:
2ffebecc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffebed0:	460e      	mov	r6, r1
2ffebed2:	f8df 8048 	ldr.w	r8, [pc, #72]	; 2ffebf1c <psci_get_target_local_pwr_states+0x50>
2ffebed6:	4607      	mov	r7, r0
2ffebed8:	2401      	movs	r4, #1
2ffebeda:	f00a edf8 	blx	2fff6acc <_cpu_data>
2ffebede:	7b03      	ldrb	r3, [r0, #12]
2ffebee0:	7033      	strb	r3, [r6, #0]
2ffebee2:	f00b eaae 	blx	2fff7440 <plat_my_core_pos>
2ffebee6:	4a0c      	ldr	r2, [pc, #48]	; (2ffebf18 <psci_get_target_local_pwr_states+0x4c>)
2ffebee8:	230c      	movs	r3, #12
2ffebeea:	fb03 2000 	mla	r0, r3, r0, r2
2ffebeee:	6845      	ldr	r5, [r0, #4]
2ffebef0:	42bc      	cmp	r4, r7
2ffebef2:	d905      	bls.n	2ffebf00 <psci_get_target_local_pwr_states+0x34>
2ffebef4:	2c01      	cmp	r4, #1
2ffebef6:	bf9c      	itt	ls
2ffebef8:	2300      	movls	r3, #0
2ffebefa:	5533      	strbls	r3, [r6, r4]
2ffebefc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffebf00:	eb08 1505 	add.w	r5, r8, r5, lsl #4
2ffebf04:	2110      	movs	r1, #16
2ffebf06:	4628      	mov	r0, r5
2ffebf08:	f00a efae 	blx	2fff6e68 <flush_dcache_range>
2ffebf0c:	7b2b      	ldrb	r3, [r5, #12]
2ffebf0e:	5533      	strb	r3, [r6, r4]
2ffebf10:	3401      	adds	r4, #1
2ffebf12:	68ad      	ldr	r5, [r5, #8]
2ffebf14:	e7ec      	b.n	2ffebef0 <psci_get_target_local_pwr_states+0x24>
2ffebf16:	bf00      	nop
2ffebf18:	2fffd0c0 	.word	0x2fffd0c0
2ffebf1c:	2fffd0d8 	.word	0x2fffd0d8

2ffebf20 <psci_get_parent_pwr_domain_nodes>:
2ffebf20:	b510      	push	{r4, lr}
2ffebf22:	230c      	movs	r3, #12
2ffebf24:	4c07      	ldr	r4, [pc, #28]	; (2ffebf44 <psci_get_parent_pwr_domain_nodes+0x24>)
2ffebf26:	fb03 4000 	mla	r0, r3, r0, r4
2ffebf2a:	4c07      	ldr	r4, [pc, #28]	; (2ffebf48 <psci_get_parent_pwr_domain_nodes+0x28>)
2ffebf2c:	6843      	ldr	r3, [r0, #4]
2ffebf2e:	2001      	movs	r0, #1
2ffebf30:	4288      	cmp	r0, r1
2ffebf32:	d900      	bls.n	2ffebf36 <psci_get_parent_pwr_domain_nodes+0x16>
2ffebf34:	bd10      	pop	{r4, pc}
2ffebf36:	f842 3b04 	str.w	r3, [r2], #4
2ffebf3a:	3001      	adds	r0, #1
2ffebf3c:	eb04 1303 	add.w	r3, r4, r3, lsl #4
2ffebf40:	689b      	ldr	r3, [r3, #8]
2ffebf42:	e7f5      	b.n	2ffebf30 <psci_get_parent_pwr_domain_nodes+0x10>
2ffebf44:	2fffd0c0 	.word	0x2fffd0c0
2ffebf48:	2fffd0d8 	.word	0x2fffd0d8

2ffebf4c <psci_set_pwr_domains_to_run>:
2ffebf4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffebf50:	4607      	mov	r7, r0
2ffebf52:	f8df 8074 	ldr.w	r8, [pc, #116]	; 2ffebfc8 <psci_set_pwr_domains_to_run+0x7c>
2ffebf56:	f00b ea74 	blx	2fff7440 <plat_my_core_pos>
2ffebf5a:	4a19      	ldr	r2, [pc, #100]	; (2ffebfc0 <psci_set_pwr_domains_to_run+0x74>)
2ffebf5c:	230c      	movs	r3, #12
2ffebf5e:	f8df a06c 	ldr.w	sl, [pc, #108]	; 2ffebfcc <psci_set_pwr_domains_to_run+0x80>
2ffebf62:	4606      	mov	r6, r0
2ffebf64:	fb03 2300 	mla	r3, r3, r0, r2
2ffebf68:	2501      	movs	r5, #1
2ffebf6a:	685c      	ldr	r4, [r3, #4]
2ffebf6c:	42bd      	cmp	r5, r7
2ffebf6e:	d90e      	bls.n	2ffebf8e <psci_set_pwr_domains_to_run+0x42>
2ffebf70:	2400      	movs	r4, #0
2ffebf72:	f00a edac 	blx	2fff6acc <_cpu_data>
2ffebf76:	6044      	str	r4, [r0, #4]
2ffebf78:	f00a eda8 	blx	2fff6acc <_cpu_data>
2ffebf7c:	7304      	strb	r4, [r0, #12]
2ffebf7e:	f00a eda6 	blx	2fff6acc <_cpu_data>
2ffebf82:	3004      	adds	r0, #4
2ffebf84:	210c      	movs	r1, #12
2ffebf86:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffebf8a:	f00e bde1 	b.w	2fffab50 <__flush_dcache_range_from_thumb>
2ffebf8e:	0124      	lsls	r4, r4, #4
2ffebf90:	f04f 0900 	mov.w	r9, #0
2ffebf94:	eb08 0004 	add.w	r0, r8, r4
2ffebf98:	2110      	movs	r1, #16
2ffebf9a:	f880 900c 	strb.w	r9, [r0, #12]
2ffebf9e:	f00a ef64 	blx	2fff6e68 <flush_dcache_range>
2ffebfa2:	b91d      	cbnz	r5, 2ffebfac <psci_set_pwr_domains_to_run+0x60>
2ffebfa4:	4807      	ldr	r0, [pc, #28]	; (2ffebfc4 <psci_set_pwr_domains_to_run+0x78>)
2ffebfa6:	21d1      	movs	r1, #209	; 0xd1
2ffebfa8:	f00b fefe 	bl	2fff7da8 <__assert>
2ffebfac:	2d01      	cmp	r5, #1
2ffebfae:	d103      	bne.n	2ffebfb8 <psci_set_pwr_domains_to_run+0x6c>
2ffebfb0:	2e01      	cmp	r6, #1
2ffebfb2:	bf98      	it	ls
2ffebfb4:	f80a 9006 	strbls.w	r9, [sl, r6]
2ffebfb8:	4444      	add	r4, r8
2ffebfba:	3501      	adds	r5, #1
2ffebfbc:	68a4      	ldr	r4, [r4, #8]
2ffebfbe:	e7d5      	b.n	2ffebf6c <psci_set_pwr_domains_to_run+0x20>
2ffebfc0:	2fffd0c0 	.word	0x2fffd0c0
2ffebfc4:	2fff83d8 	.word	0x2fff83d8
2ffebfc8:	2fffd0d8 	.word	0x2fffd0d8
2ffebfcc:	2fffc2a8 	.word	0x2fffc2a8

2ffebfd0 <psci_do_state_coordination>:
2ffebfd0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffebfd4:	4607      	mov	r7, r0
2ffebfd6:	460d      	mov	r5, r1
2ffebfd8:	f00b ea32 	blx	2fff7440 <plat_my_core_pos>
2ffebfdc:	2f01      	cmp	r7, #1
2ffebfde:	4680      	mov	r8, r0
2ffebfe0:	d904      	bls.n	2ffebfec <psci_do_state_coordination+0x1c>
2ffebfe2:	4826      	ldr	r0, [pc, #152]	; (2ffec07c <psci_do_state_coordination+0xac>)
2ffebfe4:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
2ffebfe8:	f00b fede 	bl	2fff7da8 <__assert>
2ffebfec:	4e24      	ldr	r6, [pc, #144]	; (2ffec080 <psci_do_state_coordination+0xb0>)
2ffebfee:	230c      	movs	r3, #12
2ffebff0:	f8df 9094 	ldr.w	r9, [pc, #148]	; 2ffec088 <psci_do_state_coordination+0xb8>
2ffebff4:	fb03 6300 	mla	r3, r3, r0, r6
2ffebff8:	f8df a088 	ldr.w	sl, [pc, #136]	; 2ffec084 <psci_do_state_coordination+0xb4>
2ffebffc:	685c      	ldr	r4, [r3, #4]
2ffebffe:	2301      	movs	r3, #1
2ffec000:	42bb      	cmp	r3, r7
2ffec002:	d816      	bhi.n	2ffec032 <psci_do_state_coordination+0x62>
2ffec004:	f1b8 0f01 	cmp.w	r8, #1
2ffec008:	f04f 0001 	mov.w	r0, #1
2ffec00c:	ea4f 1404 	mov.w	r4, r4, lsl #4
2ffec010:	bf98      	it	ls
2ffec012:	786b      	ldrbls	r3, [r5, #1]
2ffec014:	f85a 1004 	ldr.w	r1, [sl, r4]
2ffec018:	4454      	add	r4, sl
2ffec01a:	bf98      	it	ls
2ffec01c:	f809 3008 	strbls.w	r3, [r9, r8]
2ffec020:	2901      	cmp	r1, #1
2ffec022:	bf94      	ite	ls
2ffec024:	4449      	addls	r1, r9
2ffec026:	2100      	movhi	r1, #0
2ffec028:	6862      	ldr	r2, [r4, #4]
2ffec02a:	f003 fcfd 	bl	2ffefa28 <plat_get_target_pwr_state>
2ffec02e:	7068      	strb	r0, [r5, #1]
2ffec030:	b9a8      	cbnz	r0, 2ffec05e <psci_do_state_coordination+0x8e>
2ffec032:	782c      	ldrb	r4, [r5, #0]
2ffec034:	f00a ed4a 	blx	2fff6acc <_cpu_data>
2ffec038:	7304      	strb	r4, [r0, #12]
2ffec03a:	f00a ed48 	blx	2fff6acc <_cpu_data>
2ffec03e:	300c      	adds	r0, #12
2ffec040:	2101      	movs	r1, #1
2ffec042:	f00a ef12 	blx	2fff6e68 <flush_dcache_range>
2ffec046:	f00b e9fc 	blx	2fff7440 <plat_my_core_pos>
2ffec04a:	230c      	movs	r3, #12
2ffec04c:	fb03 6000 	mla	r0, r3, r0, r6
2ffec050:	4e0c      	ldr	r6, [pc, #48]	; (2ffec084 <psci_do_state_coordination+0xb4>)
2ffec052:	2301      	movs	r3, #1
2ffec054:	6844      	ldr	r4, [r0, #4]
2ffec056:	429f      	cmp	r7, r3
2ffec058:	d204      	bcs.n	2ffec064 <psci_do_state_coordination+0x94>
2ffec05a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffec05e:	68a4      	ldr	r4, [r4, #8]
2ffec060:	2302      	movs	r3, #2
2ffec062:	e7cd      	b.n	2ffec000 <psci_do_state_coordination+0x30>
2ffec064:	786b      	ldrb	r3, [r5, #1]
2ffec066:	2110      	movs	r1, #16
2ffec068:	eb06 1404 	add.w	r4, r6, r4, lsl #4
2ffec06c:	4620      	mov	r0, r4
2ffec06e:	7323      	strb	r3, [r4, #12]
2ffec070:	f00a eefa 	blx	2fff6e68 <flush_dcache_range>
2ffec074:	68a4      	ldr	r4, [r4, #8]
2ffec076:	2302      	movs	r3, #2
2ffec078:	e7ed      	b.n	2ffec056 <psci_do_state_coordination+0x86>
2ffec07a:	bf00      	nop
2ffec07c:	2fff83d8 	.word	0x2fff83d8
2ffec080:	2fffd0c0 	.word	0x2fffd0c0
2ffec084:	2fffd0d8 	.word	0x2fffd0d8
2ffec088:	2fffc2a8 	.word	0x2fffc2a8

2ffec08c <psci_find_max_off_lvl>:
2ffec08c:	7843      	ldrb	r3, [r0, #1]
2ffec08e:	2b02      	cmp	r3, #2
2ffec090:	d004      	beq.n	2ffec09c <psci_find_max_off_lvl+0x10>
2ffec092:	7803      	ldrb	r3, [r0, #0]
2ffec094:	2b02      	cmp	r3, #2
2ffec096:	d103      	bne.n	2ffec0a0 <psci_find_max_off_lvl+0x14>
2ffec098:	2000      	movs	r0, #0
2ffec09a:	4770      	bx	lr
2ffec09c:	2001      	movs	r0, #1
2ffec09e:	4770      	bx	lr
2ffec0a0:	2002      	movs	r0, #2
2ffec0a2:	4770      	bx	lr

2ffec0a4 <psci_find_target_suspend_lvl>:
2ffec0a4:	4603      	mov	r3, r0
2ffec0a6:	7840      	ldrb	r0, [r0, #1]
2ffec0a8:	b910      	cbnz	r0, 2ffec0b0 <psci_find_target_suspend_lvl+0xc>
2ffec0aa:	781b      	ldrb	r3, [r3, #0]
2ffec0ac:	b113      	cbz	r3, 2ffec0b4 <psci_find_target_suspend_lvl+0x10>
2ffec0ae:	4770      	bx	lr
2ffec0b0:	2001      	movs	r0, #1
2ffec0b2:	4770      	bx	lr
2ffec0b4:	2002      	movs	r0, #2
2ffec0b6:	4770      	bx	lr

2ffec0b8 <psci_validate_suspend_req>:
2ffec0b8:	b538      	push	{r3, r4, r5, lr}
2ffec0ba:	4604      	mov	r4, r0
2ffec0bc:	f7ff fff2 	bl	2ffec0a4 <psci_find_target_suspend_lvl>
2ffec0c0:	2802      	cmp	r0, #2
2ffec0c2:	4602      	mov	r2, r0
2ffec0c4:	d01b      	beq.n	2ffec0fe <psci_validate_suspend_req+0x46>
2ffec0c6:	1820      	adds	r0, r4, r0
2ffec0c8:	2500      	movs	r5, #0
2ffec0ca:	1b03      	subs	r3, r0, r4
2ffec0cc:	2b00      	cmp	r3, #0
2ffec0ce:	da0e      	bge.n	2ffec0ee <psci_validate_suspend_req+0x36>
2ffec0d0:	4620      	mov	r0, r4
2ffec0d2:	f7ff ffdb 	bl	2ffec08c <psci_find_max_off_lvl>
2ffec0d6:	4282      	cmp	r2, r0
2ffec0d8:	bf08      	it	eq
2ffec0da:	2202      	moveq	r2, #2
2ffec0dc:	b9a9      	cbnz	r1, 2ffec10a <psci_validate_suspend_req+0x52>
2ffec0de:	2802      	cmp	r0, #2
2ffec0e0:	d10d      	bne.n	2ffec0fe <psci_validate_suspend_req+0x46>
2ffec0e2:	2a02      	cmp	r2, #2
2ffec0e4:	bf14      	ite	ne
2ffec0e6:	2000      	movne	r0, #0
2ffec0e8:	f06f 0001 	mvneq.w	r0, #1
2ffec0ec:	bd38      	pop	{r3, r4, r5, pc}
2ffec0ee:	f810 3901 	ldrb.w	r3, [r0], #-1
2ffec0f2:	b113      	cbz	r3, 2ffec0fa <psci_validate_suspend_req+0x42>
2ffec0f4:	2b01      	cmp	r3, #1
2ffec0f6:	d805      	bhi.n	2ffec104 <psci_validate_suspend_req+0x4c>
2ffec0f8:	2301      	movs	r3, #1
2ffec0fa:	429d      	cmp	r5, r3
2ffec0fc:	d903      	bls.n	2ffec106 <psci_validate_suspend_req+0x4e>
2ffec0fe:	f06f 0001 	mvn.w	r0, #1
2ffec102:	e7f3      	b.n	2ffec0ec <psci_validate_suspend_req+0x34>
2ffec104:	2302      	movs	r3, #2
2ffec106:	461d      	mov	r5, r3
2ffec108:	e7df      	b.n	2ffec0ca <psci_validate_suspend_req+0x12>
2ffec10a:	2000      	movs	r0, #0
2ffec10c:	e7ee      	b.n	2ffec0ec <psci_validate_suspend_req+0x34>
	...

2ffec110 <psci_acquire_pwr_domain_locks>:
2ffec110:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffec112:	460c      	mov	r4, r1
2ffec114:	eb01 0580 	add.w	r5, r1, r0, lsl #2
2ffec118:	4e07      	ldr	r6, [pc, #28]	; (2ffec138 <psci_acquire_pwr_domain_locks+0x28>)
2ffec11a:	4f08      	ldr	r7, [pc, #32]	; (2ffec13c <psci_acquire_pwr_domain_locks+0x2c>)
2ffec11c:	42ac      	cmp	r4, r5
2ffec11e:	d100      	bne.n	2ffec122 <psci_acquire_pwr_domain_locks+0x12>
2ffec120:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffec122:	f854 3b04 	ldr.w	r3, [r4], #4
2ffec126:	eb07 1303 	add.w	r3, r7, r3, lsl #4
2ffec12a:	7b98      	ldrb	r0, [r3, #14]
2ffec12c:	eb06 0040 	add.w	r0, r6, r0, lsl #1
2ffec130:	f000 fd16 	bl	2ffecb60 <bakery_lock_get>
2ffec134:	e7f2      	b.n	2ffec11c <psci_acquire_pwr_domain_locks+0xc>
2ffec136:	bf00      	nop
2ffec138:	2fffd140 	.word	0x2fffd140
2ffec13c:	2fffd0d8 	.word	0x2fffd0d8

2ffec140 <psci_release_pwr_domain_locks>:
2ffec140:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffec142:	460d      	mov	r5, r1
2ffec144:	eb01 0480 	add.w	r4, r1, r0, lsl #2
2ffec148:	4e07      	ldr	r6, [pc, #28]	; (2ffec168 <psci_release_pwr_domain_locks+0x28>)
2ffec14a:	4f08      	ldr	r7, [pc, #32]	; (2ffec16c <psci_release_pwr_domain_locks+0x2c>)
2ffec14c:	42ac      	cmp	r4, r5
2ffec14e:	d100      	bne.n	2ffec152 <psci_release_pwr_domain_locks+0x12>
2ffec150:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffec152:	f854 3d04 	ldr.w	r3, [r4, #-4]!
2ffec156:	eb07 1303 	add.w	r3, r7, r3, lsl #4
2ffec15a:	7b98      	ldrb	r0, [r3, #14]
2ffec15c:	eb06 0040 	add.w	r0, r6, r0, lsl #1
2ffec160:	f000 fd7e 	bl	2ffecc60 <bakery_lock_release>
2ffec164:	e7f2      	b.n	2ffec14c <psci_release_pwr_domain_locks+0xc>
2ffec166:	bf00      	nop
2ffec168:	2fffd140 	.word	0x2fffd140
2ffec16c:	2fffd0d8 	.word	0x2fffd0d8

2ffec170 <psci_validate_mpidr>:
2ffec170:	b508      	push	{r3, lr}
2ffec172:	f002 ffaf 	bl	2ffef0d4 <plat_core_pos_by_mpidr>
2ffec176:	2800      	cmp	r0, #0
2ffec178:	bfb4      	ite	lt
2ffec17a:	f06f 0001 	mvnlt.w	r0, #1
2ffec17e:	2000      	movge	r0, #0
2ffec180:	bd08      	pop	{r3, pc}
	...

2ffec184 <psci_validate_entry_point>:
2ffec184:	4b24      	ldr	r3, [pc, #144]	; (2ffec218 <psci_validate_entry_point+0x94>)
2ffec186:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffec18a:	4605      	mov	r5, r0
2ffec18c:	681b      	ldr	r3, [r3, #0]
2ffec18e:	460c      	mov	r4, r1
2ffec190:	4617      	mov	r7, r2
2ffec192:	6b1b      	ldr	r3, [r3, #48]	; 0x30
2ffec194:	2b00      	cmp	r3, #0
2ffec196:	d135      	bne.n	2ffec204 <psci_validate_entry_point+0x80>
2ffec198:	ee11 2f11 	mrc	15, 0, r2, cr1, cr1, {0}
2ffec19c:	f042 0301 	orr.w	r3, r2, #1
2ffec1a0:	ee01 3f11 	mcr	15, 0, r3, cr1, cr1, {0}
2ffec1a4:	f3bf 8f6f 	isb	sy
2ffec1a8:	ee11 3f10 	mrc	15, 0, r3, cr1, cr0, {0}
2ffec1ac:	f412 7880 	ands.w	r8, r2, #256	; 0x100
2ffec1b0:	d12f      	bne.n	2ffec212 <psci_validate_entry_point+0x8e>
2ffec1b2:	ee01 2f11 	mcr	15, 0, r2, cr1, cr1, {0}
2ffec1b6:	f3bf 8f6f 	isb	sy
2ffec1ba:	4a18      	ldr	r2, [pc, #96]	; (2ffec21c <psci_validate_entry_point+0x98>)
2ffec1bc:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
2ffec1c0:	2b00      	cmp	r3, #0
2ffec1c2:	f105 0014 	add.w	r0, r5, #20
2ffec1c6:	bf0c      	ite	eq
2ffec1c8:	2301      	moveq	r3, #1
2ffec1ca:	2303      	movne	r3, #3
2ffec1cc:	e885 001c 	stmia.w	r5, {r2, r3, r4}
2ffec1d0:	f04f 0110 	mov.w	r1, #16
2ffec1d4:	bf0c      	ite	eq
2ffec1d6:	2600      	moveq	r6, #0
2ffec1d8:	2601      	movne	r6, #1
2ffec1da:	f00a ef00 	blx	2fff6fdc <zero_normalmem>
2ffec1de:	0163      	lsls	r3, r4, #5
2ffec1e0:	f1b8 0f00 	cmp.w	r8, #0
2ffec1e4:	616f      	str	r7, [r5, #20]
2ffec1e6:	f003 0320 	and.w	r3, r3, #32
2ffec1ea:	f443 73e8 	orr.w	r3, r3, #464	; 0x1d0
2ffec1ee:	bf18      	it	ne
2ffec1f0:	220a      	movne	r2, #10
2ffec1f2:	ea43 2346 	orr.w	r3, r3, r6, lsl #9
2ffec1f6:	bf08      	it	eq
2ffec1f8:	2203      	moveq	r2, #3
2ffec1fa:	4313      	orrs	r3, r2
2ffec1fc:	2000      	movs	r0, #0
2ffec1fe:	60eb      	str	r3, [r5, #12]
2ffec200:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffec204:	4608      	mov	r0, r1
2ffec206:	4798      	blx	r3
2ffec208:	2800      	cmp	r0, #0
2ffec20a:	d0c5      	beq.n	2ffec198 <psci_validate_entry_point+0x14>
2ffec20c:	f06f 0008 	mvn.w	r0, #8
2ffec210:	e7f6      	b.n	2ffec200 <psci_validate_entry_point+0x7c>
2ffec212:	ee91 3f10 	mrc	15, 4, r3, cr1, cr0, {0}
2ffec216:	e7cc      	b.n	2ffec1b2 <psci_validate_entry_point+0x2e>
2ffec218:	2fffd0f8 	.word	0x2fffd0f8
2ffec21c:	00240101 	.word	0x00240101

2ffec220 <psci_warmboot_entrypoint>:
2ffec220:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffec222:	f00b e90e 	blx	2fff7440 <plat_my_core_pos>
2ffec226:	2300      	movs	r3, #0
2ffec228:	4605      	mov	r5, r0
2ffec22a:	9301      	str	r3, [sp, #4]
2ffec22c:	f8ad 3000 	strh.w	r3, [sp]
2ffec230:	f00a ec4c 	blx	2fff6acc <_cpu_data>
2ffec234:	6843      	ldr	r3, [r0, #4]
2ffec236:	2b01      	cmp	r3, #1
2ffec238:	d106      	bne.n	2ffec248 <psci_warmboot_entrypoint+0x28>
2ffec23a:	481a      	ldr	r0, [pc, #104]	; (2ffec2a4 <psci_warmboot_entrypoint+0x84>)
2ffec23c:	f004 fca0 	bl	2fff0b80 <tf_log>
2ffec240:	f004 fd40 	bl	2fff0cc4 <console_flush>
2ffec244:	f00a ed74 	blx	2fff6d30 <do_panic>
2ffec248:	f00a ec40 	blx	2fff6acc <_cpu_data>
2ffec24c:	6884      	ldr	r4, [r0, #8]
2ffec24e:	2c02      	cmp	r4, #2
2ffec250:	d005      	beq.n	2ffec25e <psci_warmboot_entrypoint+0x3e>
2ffec252:	2c01      	cmp	r4, #1
2ffec254:	d904      	bls.n	2ffec260 <psci_warmboot_entrypoint+0x40>
2ffec256:	4814      	ldr	r0, [pc, #80]	; (2ffec2a8 <psci_warmboot_entrypoint+0x88>)
2ffec258:	21c4      	movs	r1, #196	; 0xc4
2ffec25a:	f00b fda5 	bl	2fff7da8 <__assert>
2ffec25e:	2401      	movs	r4, #1
2ffec260:	aa01      	add	r2, sp, #4
2ffec262:	4621      	mov	r1, r4
2ffec264:	4628      	mov	r0, r5
2ffec266:	f7ff fe5b 	bl	2ffebf20 <psci_get_parent_pwr_domain_nodes>
2ffec26a:	a901      	add	r1, sp, #4
2ffec26c:	4620      	mov	r0, r4
2ffec26e:	f7ff ff4f 	bl	2ffec110 <psci_acquire_pwr_domain_locks>
2ffec272:	4669      	mov	r1, sp
2ffec274:	4620      	mov	r0, r4
2ffec276:	f7ff fe29 	bl	2ffebecc <psci_get_target_local_pwr_states>
2ffec27a:	f00a ec28 	blx	2fff6acc <_cpu_data>
2ffec27e:	6843      	ldr	r3, [r0, #4]
2ffec280:	4669      	mov	r1, sp
2ffec282:	4628      	mov	r0, r5
2ffec284:	2b02      	cmp	r3, #2
2ffec286:	d10a      	bne.n	2ffec29e <psci_warmboot_entrypoint+0x7e>
2ffec288:	f7ff fca2 	bl	2ffebbd0 <psci_cpu_on_finish>
2ffec28c:	4620      	mov	r0, r4
2ffec28e:	f7ff fe5d 	bl	2ffebf4c <psci_set_pwr_domains_to_run>
2ffec292:	a901      	add	r1, sp, #4
2ffec294:	4620      	mov	r0, r4
2ffec296:	f7ff ff53 	bl	2ffec140 <psci_release_pwr_domain_locks>
2ffec29a:	b003      	add	sp, #12
2ffec29c:	bd30      	pop	{r4, r5, pc}
2ffec29e:	f7ff fd77 	bl	2ffebd90 <psci_cpu_suspend_finish>
2ffec2a2:	e7f3      	b.n	2ffec28c <psci_warmboot_entrypoint+0x6c>
2ffec2a4:	2fff83ef 	.word	0x2fff83ef
2ffec2a8:	2fff83d8 	.word	0x2fff83d8

2ffec2ac <psci_spd_migrate_info>:
2ffec2ac:	b508      	push	{r3, lr}
2ffec2ae:	4b08      	ldr	r3, [pc, #32]	; (2ffec2d0 <psci_spd_migrate_info+0x24>)
2ffec2b0:	681b      	ldr	r3, [r3, #0]
2ffec2b2:	b153      	cbz	r3, 2ffec2ca <psci_spd_migrate_info+0x1e>
2ffec2b4:	699b      	ldr	r3, [r3, #24]
2ffec2b6:	b143      	cbz	r3, 2ffec2ca <psci_spd_migrate_info+0x1e>
2ffec2b8:	4798      	blx	r3
2ffec2ba:	1c43      	adds	r3, r0, #1
2ffec2bc:	2b03      	cmp	r3, #3
2ffec2be:	d906      	bls.n	2ffec2ce <psci_spd_migrate_info+0x22>
2ffec2c0:	4804      	ldr	r0, [pc, #16]	; (2ffec2d4 <psci_spd_migrate_info+0x28>)
2ffec2c2:	f240 316e 	movw	r1, #878	; 0x36e
2ffec2c6:	f00b fd6f 	bl	2fff7da8 <__assert>
2ffec2ca:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffec2ce:	bd08      	pop	{r3, pc}
2ffec2d0:	2fffd0fc 	.word	0x2fffd0fc
2ffec2d4:	2fff83d8 	.word	0x2fff83d8

2ffec2d8 <psci_print_power_domain_map>:
2ffec2d8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
2ffec2dc:	4c26      	ldr	r4, [pc, #152]	; (2ffec378 <psci_print_power_domain_map+0xa0>)
2ffec2de:	4827      	ldr	r0, [pc, #156]	; (2ffec37c <psci_print_power_domain_map+0xa4>)
2ffec2e0:	f004 fc4e 	bl	2fff0b80 <tf_log>
2ffec2e4:	7b23      	ldrb	r3, [r4, #12]
2ffec2e6:	b313      	cbz	r3, 2ffec32e <psci_print_power_domain_map+0x56>
2ffec2e8:	2b01      	cmp	r3, #1
2ffec2ea:	bf8c      	ite	hi
2ffec2ec:	2202      	movhi	r2, #2
2ffec2ee:	2201      	movls	r2, #1
2ffec2f0:	4d23      	ldr	r5, [pc, #140]	; (2ffec380 <psci_print_power_domain_map+0xa8>)
2ffec2f2:	7b61      	ldrb	r1, [r4, #13]
2ffec2f4:	4823      	ldr	r0, [pc, #140]	; (2ffec384 <psci_print_power_domain_map+0xac>)
2ffec2f6:	9300      	str	r3, [sp, #0]
2ffec2f8:	f855 3022 	ldr.w	r3, [r5, r2, lsl #2]
2ffec2fc:	68a2      	ldr	r2, [r4, #8]
2ffec2fe:	f004 fc3f 	bl	2fff0b80 <tf_log>
2ffec302:	7f23      	ldrb	r3, [r4, #28]
2ffec304:	b1ab      	cbz	r3, 2ffec332 <psci_print_power_domain_map+0x5a>
2ffec306:	2b01      	cmp	r3, #1
2ffec308:	bf8c      	ite	hi
2ffec30a:	2202      	movhi	r2, #2
2ffec30c:	2201      	movls	r2, #1
2ffec30e:	7f61      	ldrb	r1, [r4, #29]
2ffec310:	481c      	ldr	r0, [pc, #112]	; (2ffec384 <psci_print_power_domain_map+0xac>)
2ffec312:	9300      	str	r3, [sp, #0]
2ffec314:	4e1c      	ldr	r6, [pc, #112]	; (2ffec388 <psci_print_power_domain_map+0xb0>)
2ffec316:	f855 3022 	ldr.w	r3, [r5, r2, lsl #2]
2ffec31a:	4f1c      	ldr	r7, [pc, #112]	; (2ffec38c <psci_print_power_domain_map+0xb4>)
2ffec31c:	69a2      	ldr	r2, [r4, #24]
2ffec31e:	2400      	movs	r4, #0
2ffec320:	f004 fc2e 	bl	2fff0b80 <tf_log>
2ffec324:	2c02      	cmp	r4, #2
2ffec326:	d106      	bne.n	2ffec336 <psci_print_power_domain_map+0x5e>
2ffec328:	b004      	add	sp, #16
2ffec32a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffec32e:	461a      	mov	r2, r3
2ffec330:	e7de      	b.n	2ffec2f0 <psci_print_power_domain_map+0x18>
2ffec332:	461a      	mov	r2, r3
2ffec334:	e7eb      	b.n	2ffec30e <psci_print_power_domain_map+0x36>
2ffec336:	4620      	mov	r0, r4
2ffec338:	f00a ebd0 	blx	2fff6adc <_cpu_data_by_index>
2ffec33c:	7b03      	ldrb	r3, [r0, #12]
2ffec33e:	b11b      	cbz	r3, 2ffec348 <psci_print_power_domain_map+0x70>
2ffec340:	2b01      	cmp	r3, #1
2ffec342:	bf8c      	ite	hi
2ffec344:	2302      	movhi	r3, #2
2ffec346:	2301      	movls	r3, #1
2ffec348:	f855 a023 	ldr.w	sl, [r5, r3, lsl #2]
2ffec34c:	220c      	movs	r2, #12
2ffec34e:	4362      	muls	r2, r4
2ffec350:	4620      	mov	r0, r4
2ffec352:	3401      	adds	r4, #1
2ffec354:	1991      	adds	r1, r2, r6
2ffec356:	f852 8006 	ldr.w	r8, [r2, r6]
2ffec35a:	f8d1 9004 	ldr.w	r9, [r1, #4]
2ffec35e:	f00a ebbe 	blx	2fff6adc <_cpu_data_by_index>
2ffec362:	7b03      	ldrb	r3, [r0, #12]
2ffec364:	4642      	mov	r2, r8
2ffec366:	e9cd 9a00 	strd	r9, sl, [sp]
2ffec36a:	9302      	str	r3, [sp, #8]
2ffec36c:	4638      	mov	r0, r7
2ffec36e:	2300      	movs	r3, #0
2ffec370:	f004 fc06 	bl	2fff0b80 <tf_log>
2ffec374:	e7d6      	b.n	2ffec324 <psci_print_power_domain_map+0x4c>
2ffec376:	bf00      	nop
2ffec378:	2fffd0d8 	.word	0x2fffd0d8
2ffec37c:	2fff8339 	.word	0x2fff8339
2ffec380:	2fff83cc 	.word	0x2fff83cc
2ffec384:	2fff8352 	.word	0x2fff8352
2ffec388:	2fffd0c0 	.word	0x2fffd0c0
2ffec38c:	2fff838e 	.word	0x2fff838e

2ffec390 <psci_do_pwrdown_sequence>:
2ffec390:	f00e bbc6 	b.w	2fffab20 <__psci_do_pwrdown_cache_maintenance_from_thumb>

2ffec394 <psci_cpu_on>:
2ffec394:	b570      	push	{r4, r5, r6, lr}
2ffec396:	b08a      	sub	sp, #40	; 0x28
2ffec398:	4604      	mov	r4, r0
2ffec39a:	460d      	mov	r5, r1
2ffec39c:	4616      	mov	r6, r2
2ffec39e:	f7ff fee7 	bl	2ffec170 <psci_validate_mpidr>
2ffec3a2:	b958      	cbnz	r0, 2ffec3bc <psci_cpu_on+0x28>
2ffec3a4:	4632      	mov	r2, r6
2ffec3a6:	4629      	mov	r1, r5
2ffec3a8:	a801      	add	r0, sp, #4
2ffec3aa:	f7ff feeb 	bl	2ffec184 <psci_validate_entry_point>
2ffec3ae:	b918      	cbnz	r0, 2ffec3b8 <psci_cpu_on+0x24>
2ffec3b0:	a901      	add	r1, sp, #4
2ffec3b2:	4620      	mov	r0, r4
2ffec3b4:	f7ff fb78 	bl	2ffebaa8 <psci_cpu_on_start>
2ffec3b8:	b00a      	add	sp, #40	; 0x28
2ffec3ba:	bd70      	pop	{r4, r5, r6, pc}
2ffec3bc:	f06f 0001 	mvn.w	r0, #1
2ffec3c0:	e7fa      	b.n	2ffec3b8 <psci_cpu_on+0x24>
	...

2ffec3c4 <psci_cpu_suspend>:
2ffec3c4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
2ffec3c8:	b08b      	sub	sp, #44	; 0x2c
2ffec3ca:	ad0a      	add	r5, sp, #40	; 0x28
2ffec3cc:	2300      	movs	r3, #0
2ffec3ce:	4688      	mov	r8, r1
2ffec3d0:	4604      	mov	r4, r0
2ffec3d2:	f825 3d28 	strh.w	r3, [r5, #-40]!
2ffec3d6:	4629      	mov	r1, r5
2ffec3d8:	4691      	mov	r9, r2
2ffec3da:	f7ff fd1f 	bl	2ffebe1c <psci_validate_power_state>
2ffec3de:	b158      	cbz	r0, 2ffec3f8 <psci_cpu_suspend+0x34>
2ffec3e0:	3002      	adds	r0, #2
2ffec3e2:	d105      	bne.n	2ffec3f0 <psci_cpu_suspend+0x2c>
2ffec3e4:	f06f 0601 	mvn.w	r6, #1
2ffec3e8:	4630      	mov	r0, r6
2ffec3ea:	b00b      	add	sp, #44	; 0x2c
2ffec3ec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2ffec3f0:	2143      	movs	r1, #67	; 0x43
2ffec3f2:	4820      	ldr	r0, [pc, #128]	; (2ffec474 <psci_cpu_suspend+0xb0>)
2ffec3f4:	f00b fcd8 	bl	2fff7da8 <__assert>
2ffec3f8:	f3c4 4400 	ubfx	r4, r4, #16, #1
2ffec3fc:	4628      	mov	r0, r5
2ffec3fe:	4621      	mov	r1, r4
2ffec400:	f7ff fe5a 	bl	2ffec0b8 <psci_validate_suspend_req>
2ffec404:	4606      	mov	r6, r0
2ffec406:	b108      	cbz	r0, 2ffec40c <psci_cpu_suspend+0x48>
2ffec408:	214e      	movs	r1, #78	; 0x4e
2ffec40a:	e7f2      	b.n	2ffec3f2 <psci_cpu_suspend+0x2e>
2ffec40c:	4628      	mov	r0, r5
2ffec40e:	f7ff fe49 	bl	2ffec0a4 <psci_find_target_suspend_lvl>
2ffec412:	2802      	cmp	r0, #2
2ffec414:	4607      	mov	r7, r0
2ffec416:	d106      	bne.n	2ffec426 <psci_cpu_suspend+0x62>
2ffec418:	4817      	ldr	r0, [pc, #92]	; (2ffec478 <psci_cpu_suspend+0xb4>)
2ffec41a:	f004 fbb1 	bl	2fff0b80 <tf_log>
2ffec41e:	f004 fc51 	bl	2fff0cc4 <console_flush>
2ffec422:	f00a ec86 	blx	2fff6d30 <do_panic>
2ffec426:	ea54 0300 	orrs.w	r3, r4, r0
2ffec42a:	d111      	bne.n	2ffec450 <psci_cpu_suspend+0x8c>
2ffec42c:	4d13      	ldr	r5, [pc, #76]	; (2ffec47c <psci_cpu_suspend+0xb8>)
2ffec42e:	682b      	ldr	r3, [r5, #0]
2ffec430:	681b      	ldr	r3, [r3, #0]
2ffec432:	2b00      	cmp	r3, #0
2ffec434:	d0d6      	beq.n	2ffec3e4 <psci_cpu_suspend+0x20>
2ffec436:	f89d 4000 	ldrb.w	r4, [sp]
2ffec43a:	f00a eb48 	blx	2fff6acc <_cpu_data>
2ffec43e:	682b      	ldr	r3, [r5, #0]
2ffec440:	7304      	strb	r4, [r0, #12]
2ffec442:	4620      	mov	r0, r4
2ffec444:	681b      	ldr	r3, [r3, #0]
2ffec446:	4798      	blx	r3
2ffec448:	f00a eb40 	blx	2fff6acc <_cpu_data>
2ffec44c:	7306      	strb	r6, [r0, #12]
2ffec44e:	e7cb      	b.n	2ffec3e8 <psci_cpu_suspend+0x24>
2ffec450:	b934      	cbnz	r4, 2ffec460 <psci_cpu_suspend+0x9c>
2ffec452:	4623      	mov	r3, r4
2ffec454:	462a      	mov	r2, r5
2ffec456:	4639      	mov	r1, r7
2ffec458:	a801      	add	r0, sp, #4
2ffec45a:	f7ff fc07 	bl	2ffebc6c <psci_cpu_suspend_start>
2ffec45e:	e7c3      	b.n	2ffec3e8 <psci_cpu_suspend+0x24>
2ffec460:	464a      	mov	r2, r9
2ffec462:	4641      	mov	r1, r8
2ffec464:	a801      	add	r0, sp, #4
2ffec466:	f7ff fe8d 	bl	2ffec184 <psci_validate_entry_point>
2ffec46a:	2800      	cmp	r0, #0
2ffec46c:	d0f1      	beq.n	2ffec452 <psci_cpu_suspend+0x8e>
2ffec46e:	4606      	mov	r6, r0
2ffec470:	e7ba      	b.n	2ffec3e8 <psci_cpu_suspend+0x24>
2ffec472:	bf00      	nop
2ffec474:	2fff841d 	.word	0x2fff841d
2ffec478:	2fff8432 	.word	0x2fff8432
2ffec47c:	2fffd0f8 	.word	0x2fffd0f8

2ffec480 <psci_system_suspend>:
2ffec480:	b530      	push	{r4, r5, lr}
2ffec482:	b08b      	sub	sp, #44	; 0x2c
2ffec484:	4604      	mov	r4, r0
2ffec486:	460d      	mov	r5, r1
2ffec488:	f7ff fcf0 	bl	2ffebe6c <psci_is_last_on_cpu>
2ffec48c:	b920      	cbnz	r0, 2ffec498 <psci_system_suspend+0x18>
2ffec48e:	f06f 0402 	mvn.w	r4, #2
2ffec492:	4620      	mov	r0, r4
2ffec494:	b00b      	add	sp, #44	; 0x2c
2ffec496:	bd30      	pop	{r4, r5, pc}
2ffec498:	4621      	mov	r1, r4
2ffec49a:	462a      	mov	r2, r5
2ffec49c:	a801      	add	r0, sp, #4
2ffec49e:	f7ff fe71 	bl	2ffec184 <psci_validate_entry_point>
2ffec4a2:	4604      	mov	r4, r0
2ffec4a4:	2800      	cmp	r0, #0
2ffec4a6:	d1f4      	bne.n	2ffec492 <psci_system_suspend+0x12>
2ffec4a8:	4668      	mov	r0, sp
2ffec4aa:	f7ff fccf 	bl	2ffebe4c <psci_query_sys_suspend_pwrstate>
2ffec4ae:	4668      	mov	r0, sp
2ffec4b0:	f7ff fdf8 	bl	2ffec0a4 <psci_find_target_suspend_lvl>
2ffec4b4:	2800      	cmp	r0, #0
2ffec4b6:	d0ea      	beq.n	2ffec48e <psci_system_suspend+0xe>
2ffec4b8:	2101      	movs	r1, #1
2ffec4ba:	4668      	mov	r0, sp
2ffec4bc:	f7ff fdfc 	bl	2ffec0b8 <psci_validate_suspend_req>
2ffec4c0:	4604      	mov	r4, r0
2ffec4c2:	b118      	cbz	r0, 2ffec4cc <psci_system_suspend+0x4c>
2ffec4c4:	21b5      	movs	r1, #181	; 0xb5
2ffec4c6:	4808      	ldr	r0, [pc, #32]	; (2ffec4e8 <psci_system_suspend+0x68>)
2ffec4c8:	f00b fc6e 	bl	2fff7da8 <__assert>
2ffec4cc:	f89d 3001 	ldrb.w	r3, [sp, #1]
2ffec4d0:	2b02      	cmp	r3, #2
2ffec4d2:	d001      	beq.n	2ffec4d8 <psci_system_suspend+0x58>
2ffec4d4:	21b7      	movs	r1, #183	; 0xb7
2ffec4d6:	e7f6      	b.n	2ffec4c6 <psci_system_suspend+0x46>
2ffec4d8:	2301      	movs	r3, #1
2ffec4da:	466a      	mov	r2, sp
2ffec4dc:	4619      	mov	r1, r3
2ffec4de:	a801      	add	r0, sp, #4
2ffec4e0:	f7ff fbc4 	bl	2ffebc6c <psci_cpu_suspend_start>
2ffec4e4:	e7d5      	b.n	2ffec492 <psci_system_suspend+0x12>
2ffec4e6:	bf00      	nop
2ffec4e8:	2fff841d 	.word	0x2fff841d

2ffec4ec <psci_cpu_off>:
2ffec4ec:	b508      	push	{r3, lr}
2ffec4ee:	2001      	movs	r0, #1
2ffec4f0:	f7ff fa7e 	bl	2ffeb9f0 <psci_do_cpu_off>
2ffec4f4:	1cc3      	adds	r3, r0, #3
2ffec4f6:	d003      	beq.n	2ffec500 <psci_cpu_off+0x14>
2ffec4f8:	4802      	ldr	r0, [pc, #8]	; (2ffec504 <psci_cpu_off+0x18>)
2ffec4fa:	21d6      	movs	r1, #214	; 0xd6
2ffec4fc:	f00b fc54 	bl	2fff7da8 <__assert>
2ffec500:	bd08      	pop	{r3, pc}
2ffec502:	bf00      	nop
2ffec504:	2fff841d 	.word	0x2fff841d

2ffec508 <psci_affinity_info>:
2ffec508:	b510      	push	{r4, lr}
2ffec50a:	b111      	cbz	r1, 2ffec512 <psci_affinity_info+0xa>
2ffec50c:	f06f 0001 	mvn.w	r0, #1
2ffec510:	bd10      	pop	{r4, pc}
2ffec512:	f002 fddf 	bl	2ffef0d4 <plat_core_pos_by_mpidr>
2ffec516:	1c43      	adds	r3, r0, #1
2ffec518:	4604      	mov	r4, r0
2ffec51a:	d0f7      	beq.n	2ffec50c <psci_affinity_info+0x4>
2ffec51c:	f00a eade 	blx	2fff6adc <_cpu_data_by_index>
2ffec520:	2104      	movs	r1, #4
2ffec522:	4408      	add	r0, r1
2ffec524:	f00a eca0 	blx	2fff6e68 <flush_dcache_range>
2ffec528:	4620      	mov	r0, r4
2ffec52a:	f00a ead8 	blx	2fff6adc <_cpu_data_by_index>
2ffec52e:	6840      	ldr	r0, [r0, #4]
2ffec530:	e7ee      	b.n	2ffec510 <psci_affinity_info+0x8>
	...

2ffec534 <psci_migrate>:
2ffec534:	b513      	push	{r0, r1, r4, lr}
2ffec536:	4604      	mov	r4, r0
2ffec538:	a801      	add	r0, sp, #4
2ffec53a:	f7ff feb7 	bl	2ffec2ac <psci_spd_migrate_info>
2ffec53e:	b138      	cbz	r0, 2ffec550 <psci_migrate+0x1c>
2ffec540:	2801      	cmp	r0, #1
2ffec542:	bf0c      	ite	eq
2ffec544:	f06f 0002 	mvneq.w	r0, #2
2ffec548:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
2ffec54c:	b002      	add	sp, #8
2ffec54e:	bd10      	pop	{r4, pc}
2ffec550:	ee10 3fb0 	mrc	15, 0, r3, cr0, cr0, {5}
2ffec554:	9a01      	ldr	r2, [sp, #4]
2ffec556:	429a      	cmp	r2, r3
2ffec558:	d118      	bne.n	2ffec58c <psci_migrate+0x58>
2ffec55a:	4620      	mov	r0, r4
2ffec55c:	f7ff fe08 	bl	2ffec170 <psci_validate_mpidr>
2ffec560:	b9b8      	cbnz	r0, 2ffec592 <psci_migrate+0x5e>
2ffec562:	4b0d      	ldr	r3, [pc, #52]	; (2ffec598 <psci_migrate+0x64>)
2ffec564:	681b      	ldr	r3, [r3, #0]
2ffec566:	b10b      	cbz	r3, 2ffec56c <psci_migrate+0x38>
2ffec568:	695b      	ldr	r3, [r3, #20]
2ffec56a:	b923      	cbnz	r3, 2ffec576 <psci_migrate+0x42>
2ffec56c:	f44f 718a 	mov.w	r1, #276	; 0x114
2ffec570:	480a      	ldr	r0, [pc, #40]	; (2ffec59c <psci_migrate+0x68>)
2ffec572:	f00b fc19 	bl	2fff7da8 <__assert>
2ffec576:	ee10 0fb0 	mrc	15, 0, r0, cr0, cr0, {5}
2ffec57a:	4621      	mov	r1, r4
2ffec57c:	4798      	blx	r3
2ffec57e:	2800      	cmp	r0, #0
2ffec580:	d0e4      	beq.n	2ffec54c <psci_migrate+0x18>
2ffec582:	1d83      	adds	r3, r0, #6
2ffec584:	d0e2      	beq.n	2ffec54c <psci_migrate+0x18>
2ffec586:	f240 1117 	movw	r1, #279	; 0x117
2ffec58a:	e7f1      	b.n	2ffec570 <psci_migrate+0x3c>
2ffec58c:	f06f 0006 	mvn.w	r0, #6
2ffec590:	e7dc      	b.n	2ffec54c <psci_migrate+0x18>
2ffec592:	f06f 0001 	mvn.w	r0, #1
2ffec596:	e7d9      	b.n	2ffec54c <psci_migrate+0x18>
2ffec598:	2fffd0fc 	.word	0x2fffd0fc
2ffec59c:	2fff841d 	.word	0x2fff841d

2ffec5a0 <psci_migrate_info_type>:
2ffec5a0:	b507      	push	{r0, r1, r2, lr}
2ffec5a2:	a801      	add	r0, sp, #4
2ffec5a4:	f7ff fe82 	bl	2ffec2ac <psci_spd_migrate_info>
2ffec5a8:	b003      	add	sp, #12
2ffec5aa:	f85d fb04 	ldr.w	pc, [sp], #4

2ffec5ae <psci_migrate_info_up_cpu>:
2ffec5ae:	b507      	push	{r0, r1, r2, lr}
2ffec5b0:	a801      	add	r0, sp, #4
2ffec5b2:	f7ff fe7b 	bl	2ffec2ac <psci_spd_migrate_info>
2ffec5b6:	2801      	cmp	r0, #1
2ffec5b8:	bf8c      	ite	hi
2ffec5ba:	f06f 0001 	mvnhi.w	r0, #1
2ffec5be:	9801      	ldrls	r0, [sp, #4]
2ffec5c0:	b003      	add	sp, #12
2ffec5c2:	f85d fb04 	ldr.w	pc, [sp], #4
	...

2ffec5c8 <psci_node_hw_state>:
2ffec5c8:	b538      	push	{r3, r4, r5, lr}
2ffec5ca:	4605      	mov	r5, r0
2ffec5cc:	460c      	mov	r4, r1
2ffec5ce:	f7ff fdcf 	bl	2ffec170 <psci_validate_mpidr>
2ffec5d2:	b9a8      	cbnz	r0, 2ffec600 <psci_node_hw_state+0x38>
2ffec5d4:	2c01      	cmp	r4, #1
2ffec5d6:	d813      	bhi.n	2ffec600 <psci_node_hw_state+0x38>
2ffec5d8:	4b0b      	ldr	r3, [pc, #44]	; (2ffec608 <psci_node_hw_state+0x40>)
2ffec5da:	681b      	ldr	r3, [r3, #0]
2ffec5dc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
2ffec5de:	b923      	cbnz	r3, 2ffec5ea <psci_node_hw_state+0x22>
2ffec5e0:	f240 1145 	movw	r1, #325	; 0x145
2ffec5e4:	4809      	ldr	r0, [pc, #36]	; (2ffec60c <psci_node_hw_state+0x44>)
2ffec5e6:	f00b fbdf 	bl	2fff7da8 <__assert>
2ffec5ea:	4621      	mov	r1, r4
2ffec5ec:	4628      	mov	r0, r5
2ffec5ee:	4798      	blx	r3
2ffec5f0:	1c43      	adds	r3, r0, #1
2ffec5f2:	2b03      	cmp	r3, #3
2ffec5f4:	d906      	bls.n	2ffec604 <psci_node_hw_state+0x3c>
2ffec5f6:	3002      	adds	r0, #2
2ffec5f8:	d002      	beq.n	2ffec600 <psci_node_hw_state+0x38>
2ffec5fa:	f240 1149 	movw	r1, #329	; 0x149
2ffec5fe:	e7f1      	b.n	2ffec5e4 <psci_node_hw_state+0x1c>
2ffec600:	f06f 0001 	mvn.w	r0, #1
2ffec604:	bd38      	pop	{r3, r4, r5, pc}
2ffec606:	bf00      	nop
2ffec608:	2fffd0f8 	.word	0x2fffd0f8
2ffec60c:	2fff841d 	.word	0x2fff841d

2ffec610 <psci_features>:
2ffec610:	4b15      	ldr	r3, [pc, #84]	; (2ffec668 <psci_features+0x58>)
2ffec612:	f1b0 4f00 	cmp.w	r0, #2147483648	; 0x80000000
2ffec616:	681b      	ldr	r3, [r3, #0]
2ffec618:	d021      	beq.n	2ffec65e <psci_features+0x4e>
2ffec61a:	0042      	lsls	r2, r0, #1
2ffec61c:	bf42      	ittt	mi
2ffec61e:	f023 437f 	bicmi.w	r3, r3, #4278190080	; 0xff000000
2ffec622:	f423 0368 	bicmi.w	r3, r3, #15204352	; 0xe80000
2ffec626:	f423 431f 	bicmi.w	r3, r3, #40704	; 0x9f00
2ffec62a:	f3c0 6205 	ubfx	r2, r0, #24, #6
2ffec62e:	bf48      	it	mi
2ffec630:	f023 0345 	bicmi.w	r3, r3, #69	; 0x45
2ffec634:	2a04      	cmp	r2, #4
2ffec636:	d114      	bne.n	2ffec662 <psci_features+0x52>
2ffec638:	f410 0f7f 	tst.w	r0, #16711680	; 0xff0000
2ffec63c:	d111      	bne.n	2ffec662 <psci_features+0x52>
2ffec63e:	0fc2      	lsrs	r2, r0, #31
2ffec640:	d00f      	beq.n	2ffec662 <psci_features+0x52>
2ffec642:	f64f 71e0 	movw	r1, #65504	; 0xffe0
2ffec646:	4208      	tst	r0, r1
2ffec648:	d10b      	bne.n	2ffec662 <psci_features+0x52>
2ffec64a:	f000 001f 	and.w	r0, r0, #31
2ffec64e:	fa02 f000 	lsl.w	r0, r2, r0
2ffec652:	4218      	tst	r0, r3
2ffec654:	bf0c      	ite	eq
2ffec656:	f04f 30ff 	moveq.w	r0, #4294967295	; 0xffffffff
2ffec65a:	2000      	movne	r0, #0
2ffec65c:	4770      	bx	lr
2ffec65e:	2000      	movs	r0, #0
2ffec660:	4770      	bx	lr
2ffec662:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffec666:	4770      	bx	lr
2ffec668:	2fffd100 	.word	0x2fffd100

2ffec66c <psci_smc_handler>:
2ffec66c:	b538      	push	{r3, r4, r5, lr}
2ffec66e:	4604      	mov	r4, r0
2ffec670:	4608      	mov	r0, r1
2ffec672:	4611      	mov	r1, r2
2ffec674:	461a      	mov	r2, r3
2ffec676:	9b07      	ldr	r3, [sp, #28]
2ffec678:	07dd      	lsls	r5, r3, #31
2ffec67a:	d556      	bpl.n	2ffec72a <psci_smc_handler+0xbe>
2ffec67c:	f004 031f 	and.w	r3, r4, #31
2ffec680:	2501      	movs	r5, #1
2ffec682:	409d      	lsls	r5, r3
2ffec684:	4b44      	ldr	r3, [pc, #272]	; (2ffec798 <psci_smc_handler+0x12c>)
2ffec686:	681b      	ldr	r3, [r3, #0]
2ffec688:	421d      	tst	r5, r3
2ffec68a:	d04e      	beq.n	2ffec72a <psci_smc_handler+0xbe>
2ffec68c:	0063      	lsls	r3, r4, #1
2ffec68e:	d44f      	bmi.n	2ffec730 <psci_smc_handler+0xc4>
2ffec690:	f104 43f8 	add.w	r3, r4, #2080374784	; 0x7c000000
2ffec694:	2b14      	cmp	r3, #20
2ffec696:	d844      	bhi.n	2ffec722 <psci_smc_handler+0xb6>
2ffec698:	e8df f003 	tbb	[pc, r3]
2ffec69c:	130b0f7a 	.word	0x130b0f7a
2ffec6a0:	231f1b17 	.word	0x231f1b17
2ffec6a4:	4333312f 	.word	0x4333312f
2ffec6a8:	432b2743 	.word	0x432b2743
2ffec6ac:	373f4343 	.word	0x373f4343
2ffec6b0:	3b          	.byte	0x3b
2ffec6b1:	00          	.byte	0x00
2ffec6b2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffec6b6:	f7ff bf19 	b.w	2ffec4ec <psci_cpu_off>
2ffec6ba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffec6be:	f7ff be81 	b.w	2ffec3c4 <psci_cpu_suspend>
2ffec6c2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffec6c6:	f7ff be65 	b.w	2ffec394 <psci_cpu_on>
2ffec6ca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffec6ce:	f7ff bf1b 	b.w	2ffec508 <psci_affinity_info>
2ffec6d2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffec6d6:	f7ff bf2d 	b.w	2ffec534 <psci_migrate>
2ffec6da:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffec6de:	f7ff bf5f 	b.w	2ffec5a0 <psci_migrate_info_type>
2ffec6e2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffec6e6:	f7ff bf62 	b.w	2ffec5ae <psci_migrate_info_up_cpu>
2ffec6ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffec6ee:	f7ff bf6b 	b.w	2ffec5c8 <psci_node_hw_state>
2ffec6f2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffec6f6:	f7ff bec3 	b.w	2ffec480 <psci_system_suspend>
2ffec6fa:	f000 f981 	bl	2ffeca00 <psci_system_off>
2ffec6fe:	f000 f99b 	bl	2ffeca38 <psci_system_reset>
2ffec702:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffec706:	f7ff bf83 	b.w	2ffec610 <psci_features>
2ffec70a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffec70e:	f000 b9e7 	b.w	2ffecae0 <psci_mem_protect>
2ffec712:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffec716:	f000 ba09 	b.w	2ffecb2c <psci_mem_chk_range>
2ffec71a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffec71e:	f000 b9a7 	b.w	2ffeca70 <psci_system_reset2>
2ffec722:	481e      	ldr	r0, [pc, #120]	; (2ffec79c <psci_smc_handler+0x130>)
2ffec724:	4621      	mov	r1, r4
2ffec726:	f004 fa2b 	bl	2fff0b80 <tf_log>
2ffec72a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffec72e:	bd38      	pop	{r3, r4, r5, pc}
2ffec730:	f104 5570 	add.w	r5, r4, #1006632960	; 0x3c000000
2ffec734:	3d01      	subs	r5, #1
2ffec736:	2d13      	cmp	r5, #19
2ffec738:	d8f3      	bhi.n	2ffec722 <psci_smc_handler+0xb6>
2ffec73a:	a301      	add	r3, pc, #4	; (adr r3, 2ffec740 <psci_smc_handler+0xd4>)
2ffec73c:	f853 f025 	ldr.w	pc, [r3, r5, lsl #2]
2ffec740:	2ffec6bb 	.word	0x2ffec6bb
2ffec744:	2ffec723 	.word	0x2ffec723
2ffec748:	2ffec6c3 	.word	0x2ffec6c3
2ffec74c:	2ffec6cb 	.word	0x2ffec6cb
2ffec750:	2ffec6d3 	.word	0x2ffec6d3
2ffec754:	2ffec723 	.word	0x2ffec723
2ffec758:	2ffec6e3 	.word	0x2ffec6e3
2ffec75c:	2ffec723 	.word	0x2ffec723
2ffec760:	2ffec723 	.word	0x2ffec723
2ffec764:	2ffec723 	.word	0x2ffec723
2ffec768:	2ffec723 	.word	0x2ffec723
2ffec76c:	2ffec723 	.word	0x2ffec723
2ffec770:	2ffec6eb 	.word	0x2ffec6eb
2ffec774:	2ffec6f3 	.word	0x2ffec6f3
2ffec778:	2ffec723 	.word	0x2ffec723
2ffec77c:	2ffec723 	.word	0x2ffec723
2ffec780:	2ffec723 	.word	0x2ffec723
2ffec784:	2ffec71b 	.word	0x2ffec71b
2ffec788:	2ffec723 	.word	0x2ffec723
2ffec78c:	2ffec713 	.word	0x2ffec713
2ffec790:	f04f 1001 	mov.w	r0, #65537	; 0x10001
2ffec794:	e7cb      	b.n	2ffec72e <psci_smc_handler+0xc2>
2ffec796:	bf00      	nop
2ffec798:	2fffd100 	.word	0x2fffd100
2ffec79c:	2fff8465 	.word	0x2fff8465

2ffec7a0 <psci_arch_setup>:
2ffec7a0:	b508      	push	{r3, lr}
2ffec7a2:	f004 fb9b 	bl	2fff0edc <plat_get_syscnt_freq2>
2ffec7a6:	ee0e 0f10 	mcr	15, 0, r0, cr14, cr0, {0}
2ffec7aa:	f00a e9e2 	blx	2fff6b70 <init_cpu_ops>
2ffec7ae:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffec7b2:	f00e b9c5 	b.w	2fffab40 <__print_errata_status_from_thumb>
	...

2ffec7b8 <psci_setup>:
2ffec7b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffec7bc:	4680      	mov	r8, r0
2ffec7be:	b089      	sub	sp, #36	; 0x24
2ffec7c0:	b150      	cbz	r0, 2ffec7d8 <psci_setup+0x20>
2ffec7c2:	8803      	ldrh	r3, [r0, #0]
2ffec7c4:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
2ffec7c8:	d106      	bne.n	2ffec7d8 <psci_setup+0x20>
2ffec7ca:	8843      	ldrh	r3, [r0, #2]
2ffec7cc:	2b0c      	cmp	r3, #12
2ffec7ce:	d103      	bne.n	2ffec7d8 <psci_setup+0x20>
2ffec7d0:	6844      	ldr	r4, [r0, #4]
2ffec7d2:	b90c      	cbnz	r4, 2ffec7d8 <psci_setup+0x20>
2ffec7d4:	6883      	ldr	r3, [r0, #8]
2ffec7d6:	b91b      	cbnz	r3, 2ffec7e0 <psci_setup+0x28>
2ffec7d8:	21c1      	movs	r1, #193	; 0xc1
2ffec7da:	487a      	ldr	r0, [pc, #488]	; (2ffec9c4 <psci_setup+0x20c>)
2ffec7dc:	f00b fae4 	bl	2fff7da8 <__assert>
2ffec7e0:	2601      	movs	r6, #1
2ffec7e2:	f7ff ffdd 	bl	2ffec7a0 <psci_arch_setup>
2ffec7e6:	4627      	mov	r7, r4
2ffec7e8:	f002 fc70 	bl	2ffef0cc <plat_get_power_domain_tree_desc>
2ffec7ec:	9003      	str	r0, [sp, #12]
2ffec7ee:	2302      	movs	r3, #2
2ffec7f0:	46b2      	mov	sl, r6
2ffec7f2:	9a03      	ldr	r2, [sp, #12]
2ffec7f4:	3e01      	subs	r6, #1
2ffec7f6:	f104 39ff 	add.w	r9, r4, #4294967295	; 0xffffffff
2ffec7fa:	4422      	add	r2, r4
2ffec7fc:	9202      	str	r2, [sp, #8]
2ffec7fe:	1932      	adds	r2, r6, r4
2ffec800:	2600      	movs	r6, #0
2ffec802:	9204      	str	r2, [sp, #16]
2ffec804:	46b3      	mov	fp, r6
2ffec806:	e012      	b.n	2ffec82e <psci_setup+0x76>
2ffec808:	2c02      	cmp	r4, #2
2ffec80a:	dd01      	ble.n	2ffec810 <psci_setup+0x58>
2ffec80c:	218c      	movs	r1, #140	; 0x8c
2ffec80e:	e7e4      	b.n	2ffec7da <psci_setup+0x22>
2ffec810:	9a02      	ldr	r2, [sp, #8]
2ffec812:	465f      	mov	r7, fp
2ffec814:	4611      	mov	r1, r2
2ffec816:	f811 2b01 	ldrb.w	r2, [r1], #1
2ffec81a:	9201      	str	r2, [sp, #4]
2ffec81c:	9102      	str	r1, [sp, #8]
2ffec81e:	9a01      	ldr	r2, [sp, #4]
2ffec820:	445a      	add	r2, fp
2ffec822:	4297      	cmp	r7, r2
2ffec824:	d347      	bcc.n	2ffec8b6 <psci_setup+0xfe>
2ffec826:	9a01      	ldr	r2, [sp, #4]
2ffec828:	46a1      	mov	r9, r4
2ffec82a:	46bb      	mov	fp, r7
2ffec82c:	4416      	add	r6, r2
2ffec82e:	9a04      	ldr	r2, [sp, #16]
2ffec830:	f109 0401 	add.w	r4, r9, #1
2ffec834:	4591      	cmp	r9, r2
2ffec836:	d1e7      	bne.n	2ffec808 <psci_setup+0x50>
2ffec838:	2b01      	cmp	r3, #1
2ffec83a:	f04f 0a00 	mov.w	sl, #0
2ffec83e:	d16d      	bne.n	2ffec91c <psci_setup+0x164>
2ffec840:	2f02      	cmp	r7, #2
2ffec842:	d16d      	bne.n	2ffec920 <psci_setup+0x168>
2ffec844:	4c60      	ldr	r4, [pc, #384]	; (2ffec9c8 <psci_setup+0x210>)
2ffec846:	4619      	mov	r1, r3
2ffec848:	aa07      	add	r2, sp, #28
2ffec84a:	4650      	mov	r0, sl
2ffec84c:	f7ff fb68 	bl	2ffebf20 <psci_get_parent_pwr_domain_nodes>
2ffec850:	9d07      	ldr	r5, [sp, #28]
2ffec852:	012b      	lsls	r3, r5, #4
2ffec854:	b10d      	cbz	r5, 2ffec85a <psci_setup+0xa2>
2ffec856:	f844 a003 	str.w	sl, [r4, r3]
2ffec85a:	4423      	add	r3, r4
2ffec85c:	2101      	movs	r1, #1
2ffec85e:	4608      	mov	r0, r1
2ffec860:	685a      	ldr	r2, [r3, #4]
2ffec862:	3201      	adds	r2, #1
2ffec864:	605a      	str	r2, [r3, #4]
2ffec866:	aa07      	add	r2, sp, #28
2ffec868:	f7ff fb5a 	bl	2ffebf20 <psci_get_parent_pwr_domain_nodes>
2ffec86c:	9b07      	ldr	r3, [sp, #28]
2ffec86e:	429d      	cmp	r5, r3
2ffec870:	ea4f 1303 	mov.w	r3, r3, lsl #4
2ffec874:	bf1c      	itt	ne
2ffec876:	2201      	movne	r2, #1
2ffec878:	50e2      	strne	r2, [r4, r3]
2ffec87a:	441c      	add	r4, r3
2ffec87c:	6863      	ldr	r3, [r4, #4]
2ffec87e:	3301      	adds	r3, #1
2ffec880:	6063      	str	r3, [r4, #4]
2ffec882:	ee10 4fb0 	mrc	15, 0, r4, cr0, cr0, {5}
2ffec886:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
2ffec88a:	f00a edda 	blx	2fff7440 <plat_my_core_pos>
2ffec88e:	230c      	movs	r3, #12
2ffec890:	4358      	muls	r0, r3
2ffec892:	4b4e      	ldr	r3, [pc, #312]	; (2ffec9cc <psci_setup+0x214>)
2ffec894:	501c      	str	r4, [r3, r0]
2ffec896:	4c4e      	ldr	r4, [pc, #312]	; (2ffec9d0 <psci_setup+0x218>)
2ffec898:	f7ff fb10 	bl	2ffebebc <psci_init_req_local_pwr_states>
2ffec89c:	2001      	movs	r0, #1
2ffec89e:	f7ff fb55 	bl	2ffebf4c <psci_set_pwr_domains_to_run>
2ffec8a2:	f8d8 0008 	ldr.w	r0, [r8, #8]
2ffec8a6:	4621      	mov	r1, r4
2ffec8a8:	f001 ff84 	bl	2ffee7b4 <plat_setup_psci_ops>
2ffec8ac:	6823      	ldr	r3, [r4, #0]
2ffec8ae:	2b00      	cmp	r3, #0
2ffec8b0:	d138      	bne.n	2ffec924 <psci_setup+0x16c>
2ffec8b2:	21dd      	movs	r1, #221	; 0xdd
2ffec8b4:	e791      	b.n	2ffec7da <psci_setup+0x22>
2ffec8b6:	b2fd      	uxtb	r5, r7
2ffec8b8:	f1ba 0f00 	cmp.w	sl, #0
2ffec8bc:	d00b      	beq.n	2ffec8d6 <psci_setup+0x11e>
2ffec8be:	4a42      	ldr	r2, [pc, #264]	; (2ffec9c8 <psci_setup+0x210>)
2ffec8c0:	eb02 1505 	add.w	r5, r2, r5, lsl #4
2ffec8c4:	2201      	movs	r2, #1
2ffec8c6:	736a      	strb	r2, [r5, #13]
2ffec8c8:	2202      	movs	r2, #2
2ffec8ca:	73af      	strb	r7, [r5, #14]
2ffec8cc:	f8c5 9008 	str.w	r9, [r5, #8]
2ffec8d0:	732a      	strb	r2, [r5, #12]
2ffec8d2:	3701      	adds	r7, #1
2ffec8d4:	e7a3      	b.n	2ffec81e <psci_setup+0x66>
2ffec8d6:	9305      	str	r3, [sp, #20]
2ffec8d8:	210c      	movs	r1, #12
2ffec8da:	fb01 f205 	mul.w	r2, r1, r5
2ffec8de:	4b3b      	ldr	r3, [pc, #236]	; (2ffec9cc <psci_setup+0x214>)
2ffec8e0:	1898      	adds	r0, r3, r2
2ffec8e2:	f8c0 9004 	str.w	r9, [r0, #4]
2ffec8e6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffec8ea:	5098      	str	r0, [r3, r2]
2ffec8ec:	4628      	mov	r0, r5
2ffec8ee:	f00a e8f6 	blx	2fff6adc <_cpu_data_by_index>
2ffec8f2:	f04f 0c02 	mov.w	ip, #2
2ffec8f6:	2201      	movs	r2, #1
2ffec8f8:	6042      	str	r2, [r0, #4]
2ffec8fa:	210c      	movs	r1, #12
2ffec8fc:	f8c0 c008 	str.w	ip, [r0, #8]
2ffec900:	3004      	adds	r0, #4
2ffec902:	f880 c008 	strb.w	ip, [r0, #8]
2ffec906:	f00a eab0 	blx	2fff6e68 <flush_dcache_range>
2ffec90a:	4b32      	ldr	r3, [pc, #200]	; (2ffec9d4 <psci_setup+0x21c>)
2ffec90c:	2201      	movs	r2, #1
2ffec90e:	4628      	mov	r0, r5
2ffec910:	eb03 1145 	add.w	r1, r3, r5, lsl #5
2ffec914:	f7fe fdd4 	bl	2ffeb4c0 <cm_set_context_by_index>
2ffec918:	9b05      	ldr	r3, [sp, #20]
2ffec91a:	e7da      	b.n	2ffec8d2 <psci_setup+0x11a>
2ffec91c:	2301      	movs	r3, #1
2ffec91e:	e768      	b.n	2ffec7f2 <psci_setup+0x3a>
2ffec920:	21a3      	movs	r1, #163	; 0xa3
2ffec922:	e75a      	b.n	2ffec7da <psci_setup+0x22>
2ffec924:	2104      	movs	r1, #4
2ffec926:	4620      	mov	r0, r4
2ffec928:	f00a ea9e 	blx	2fff6e68 <flush_dcache_range>
2ffec92c:	4b2a      	ldr	r3, [pc, #168]	; (2ffec9d8 <psci_setup+0x220>)
2ffec92e:	f240 4211 	movw	r2, #1041	; 0x411
2ffec932:	601a      	str	r2, [r3, #0]
2ffec934:	6822      	ldr	r2, [r4, #0]
2ffec936:	6891      	ldr	r1, [r2, #8]
2ffec938:	b111      	cbz	r1, 2ffec940 <psci_setup+0x188>
2ffec93a:	f240 4115 	movw	r1, #1045	; 0x415
2ffec93e:	6019      	str	r1, [r3, #0]
2ffec940:	6851      	ldr	r1, [r2, #4]
2ffec942:	b129      	cbz	r1, 2ffec950 <psci_setup+0x198>
2ffec944:	6951      	ldr	r1, [r2, #20]
2ffec946:	b119      	cbz	r1, 2ffec950 <psci_setup+0x198>
2ffec948:	6819      	ldr	r1, [r3, #0]
2ffec94a:	f041 0108 	orr.w	r1, r1, #8
2ffec94e:	6019      	str	r1, [r3, #0]
2ffec950:	6911      	ldr	r1, [r2, #16]
2ffec952:	b161      	cbz	r1, 2ffec96e <psci_setup+0x1b6>
2ffec954:	69d1      	ldr	r1, [r2, #28]
2ffec956:	b151      	cbz	r1, 2ffec96e <psci_setup+0x1b6>
2ffec958:	6819      	ldr	r1, [r3, #0]
2ffec95a:	f041 0002 	orr.w	r0, r1, #2
2ffec95e:	6018      	str	r0, [r3, #0]
2ffec960:	6b50      	ldr	r0, [r2, #52]	; 0x34
2ffec962:	b120      	cbz	r0, 2ffec96e <psci_setup+0x1b6>
2ffec964:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
2ffec968:	f041 0102 	orr.w	r1, r1, #2
2ffec96c:	6019      	str	r1, [r3, #0]
2ffec96e:	6a51      	ldr	r1, [r2, #36]	; 0x24
2ffec970:	b119      	cbz	r1, 2ffec97a <psci_setup+0x1c2>
2ffec972:	6819      	ldr	r1, [r3, #0]
2ffec974:	f441 7180 	orr.w	r1, r1, #256	; 0x100
2ffec978:	6019      	str	r1, [r3, #0]
2ffec97a:	6a91      	ldr	r1, [r2, #40]	; 0x28
2ffec97c:	b119      	cbz	r1, 2ffec986 <psci_setup+0x1ce>
2ffec97e:	6819      	ldr	r1, [r3, #0]
2ffec980:	f441 7100 	orr.w	r1, r1, #512	; 0x200
2ffec984:	6019      	str	r1, [r3, #0]
2ffec986:	6c11      	ldr	r1, [r2, #64]	; 0x40
2ffec988:	b119      	cbz	r1, 2ffec992 <psci_setup+0x1da>
2ffec98a:	6819      	ldr	r1, [r3, #0]
2ffec98c:	f441 5100 	orr.w	r1, r1, #8192	; 0x2000
2ffec990:	6019      	str	r1, [r3, #0]
2ffec992:	6c91      	ldr	r1, [r2, #72]	; 0x48
2ffec994:	b129      	cbz	r1, 2ffec9a2 <psci_setup+0x1ea>
2ffec996:	6cd1      	ldr	r1, [r2, #76]	; 0x4c
2ffec998:	b119      	cbz	r1, 2ffec9a2 <psci_setup+0x1ea>
2ffec99a:	6819      	ldr	r1, [r3, #0]
2ffec99c:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
2ffec9a0:	6019      	str	r1, [r3, #0]
2ffec9a2:	6c51      	ldr	r1, [r2, #68]	; 0x44
2ffec9a4:	b119      	cbz	r1, 2ffec9ae <psci_setup+0x1f6>
2ffec9a6:	6819      	ldr	r1, [r3, #0]
2ffec9a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
2ffec9ac:	6019      	str	r1, [r3, #0]
2ffec9ae:	6d12      	ldr	r2, [r2, #80]	; 0x50
2ffec9b0:	b11a      	cbz	r2, 2ffec9ba <psci_setup+0x202>
2ffec9b2:	681a      	ldr	r2, [r3, #0]
2ffec9b4:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
2ffec9b8:	601a      	str	r2, [r3, #0]
2ffec9ba:	2000      	movs	r0, #0
2ffec9bc:	b009      	add	sp, #36	; 0x24
2ffec9be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffec9c2:	bf00      	nop
2ffec9c4:	2fff8485 	.word	0x2fff8485
2ffec9c8:	2fffd0d8 	.word	0x2fffd0d8
2ffec9cc:	2fffd0c0 	.word	0x2fffd0c0
2ffec9d0:	2fffd0f8 	.word	0x2fffd0f8
2ffec9d4:	2fffc2b0 	.word	0x2fffc2b0
2ffec9d8:	2fffd100 	.word	0x2fffd100

2ffec9dc <psci_prepare_next_non_secure_ctx>:
2ffec9dc:	b508      	push	{r3, lr}
2ffec9de:	6843      	ldr	r3, [r0, #4]
2ffec9e0:	07db      	lsls	r3, r3, #31
2ffec9e2:	d404      	bmi.n	2ffec9ee <psci_prepare_next_non_secure_ctx+0x12>
2ffec9e4:	4805      	ldr	r0, [pc, #20]	; (2ffec9fc <psci_prepare_next_non_secure_ctx+0x20>)
2ffec9e6:	f44f 7195 	mov.w	r1, #298	; 0x12a
2ffec9ea:	f00b f9dd 	bl	2fff7da8 <__assert>
2ffec9ee:	f7fe ff83 	bl	2ffeb8f8 <cm_init_my_context>
2ffec9f2:	2001      	movs	r0, #1
2ffec9f4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffec9f8:	f7fe bf8a 	b.w	2ffeb910 <cm_prepare_el3_exit>
2ffec9fc:	2fff8485 	.word	0x2fff8485

2ffeca00 <psci_system_off>:
2ffeca00:	4c0a      	ldr	r4, [pc, #40]	; (2ffeca2c <psci_system_off+0x2c>)
2ffeca02:	b508      	push	{r3, lr}
2ffeca04:	f7ff fc68 	bl	2ffec2d8 <psci_print_power_domain_map>
2ffeca08:	6822      	ldr	r2, [r4, #0]
2ffeca0a:	6a52      	ldr	r2, [r2, #36]	; 0x24
2ffeca0c:	b91a      	cbnz	r2, 2ffeca16 <psci_system_off+0x16>
2ffeca0e:	4808      	ldr	r0, [pc, #32]	; (2ffeca30 <psci_system_off+0x30>)
2ffeca10:	2115      	movs	r1, #21
2ffeca12:	f00b f9c9 	bl	2fff7da8 <__assert>
2ffeca16:	4b07      	ldr	r3, [pc, #28]	; (2ffeca34 <psci_system_off+0x34>)
2ffeca18:	681b      	ldr	r3, [r3, #0]
2ffeca1a:	b113      	cbz	r3, 2ffeca22 <psci_system_off+0x22>
2ffeca1c:	69db      	ldr	r3, [r3, #28]
2ffeca1e:	b103      	cbz	r3, 2ffeca22 <psci_system_off+0x22>
2ffeca20:	4798      	blx	r3
2ffeca22:	f004 f94f 	bl	2fff0cc4 <console_flush>
2ffeca26:	6823      	ldr	r3, [r4, #0]
2ffeca28:	6a5b      	ldr	r3, [r3, #36]	; 0x24
2ffeca2a:	4798      	blx	r3
2ffeca2c:	2fffd0f8 	.word	0x2fffd0f8
2ffeca30:	2fff849b 	.word	0x2fff849b
2ffeca34:	2fffd0fc 	.word	0x2fffd0fc

2ffeca38 <psci_system_reset>:
2ffeca38:	4c0a      	ldr	r4, [pc, #40]	; (2ffeca64 <psci_system_reset+0x2c>)
2ffeca3a:	b508      	push	{r3, lr}
2ffeca3c:	f7ff fc4c 	bl	2ffec2d8 <psci_print_power_domain_map>
2ffeca40:	6822      	ldr	r2, [r4, #0]
2ffeca42:	6a92      	ldr	r2, [r2, #40]	; 0x28
2ffeca44:	b91a      	cbnz	r2, 2ffeca4e <psci_system_reset+0x16>
2ffeca46:	4808      	ldr	r0, [pc, #32]	; (2ffeca68 <psci_system_reset+0x30>)
2ffeca48:	2128      	movs	r1, #40	; 0x28
2ffeca4a:	f00b f9ad 	bl	2fff7da8 <__assert>
2ffeca4e:	4b07      	ldr	r3, [pc, #28]	; (2ffeca6c <psci_system_reset+0x34>)
2ffeca50:	681b      	ldr	r3, [r3, #0]
2ffeca52:	b113      	cbz	r3, 2ffeca5a <psci_system_reset+0x22>
2ffeca54:	6a1b      	ldr	r3, [r3, #32]
2ffeca56:	b103      	cbz	r3, 2ffeca5a <psci_system_reset+0x22>
2ffeca58:	4798      	blx	r3
2ffeca5a:	f004 f933 	bl	2fff0cc4 <console_flush>
2ffeca5e:	6823      	ldr	r3, [r4, #0]
2ffeca60:	6a9b      	ldr	r3, [r3, #40]	; 0x28
2ffeca62:	4798      	blx	r3
2ffeca64:	2fffd0f8 	.word	0x2fffd0f8
2ffeca68:	2fff849b 	.word	0x2fff849b
2ffeca6c:	2fffd0fc 	.word	0x2fffd0fc

2ffeca70 <psci_system_reset2>:
2ffeca70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffeca74:	460e      	mov	r6, r1
2ffeca76:	4d17      	ldr	r5, [pc, #92]	; (2ffecad4 <psci_system_reset2+0x64>)
2ffeca78:	4604      	mov	r4, r0
2ffeca7a:	f7ff fc2d 	bl	2ffec2d8 <psci_print_power_domain_map>
2ffeca7e:	682b      	ldr	r3, [r5, #0]
2ffeca80:	6d19      	ldr	r1, [r3, #80]	; 0x50
2ffeca82:	b919      	cbnz	r1, 2ffeca8c <psci_system_reset2+0x1c>
2ffeca84:	4814      	ldr	r0, [pc, #80]	; (2ffecad8 <psci_system_reset2+0x68>)
2ffeca86:	213d      	movs	r1, #61	; 0x3d
2ffeca88:	f00b f98e 	bl	2fff7da8 <__assert>
2ffeca8c:	0fe7      	lsrs	r7, r4, #31
2ffeca8e:	d00c      	beq.n	2ffecaaa <psci_system_reset2+0x3a>
2ffeca90:	4b12      	ldr	r3, [pc, #72]	; (2ffecadc <psci_system_reset2+0x6c>)
2ffeca92:	681b      	ldr	r3, [r3, #0]
2ffeca94:	b9a3      	cbnz	r3, 2ffecac0 <psci_system_reset2+0x50>
2ffeca96:	f004 f915 	bl	2fff0cc4 <console_flush>
2ffeca9a:	682b      	ldr	r3, [r5, #0]
2ffeca9c:	4632      	mov	r2, r6
2ffeca9e:	4621      	mov	r1, r4
2ffecaa0:	4638      	mov	r0, r7
2ffecaa2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
2ffecaa4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
2ffecaa8:	4718      	bx	r3
2ffecaaa:	b974      	cbnz	r4, 2ffecaca <psci_system_reset2+0x5a>
2ffecaac:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
2ffecaae:	2b00      	cmp	r3, #0
2ffecab0:	d0ee      	beq.n	2ffeca90 <psci_system_reset2+0x20>
2ffecab2:	4620      	mov	r0, r4
2ffecab4:	4798      	blx	r3
2ffecab6:	2800      	cmp	r0, #0
2ffecab8:	daea      	bge.n	2ffeca90 <psci_system_reset2+0x20>
2ffecaba:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffecabe:	e006      	b.n	2ffecace <psci_system_reset2+0x5e>
2ffecac0:	6a1b      	ldr	r3, [r3, #32]
2ffecac2:	2b00      	cmp	r3, #0
2ffecac4:	d0e7      	beq.n	2ffeca96 <psci_system_reset2+0x26>
2ffecac6:	4798      	blx	r3
2ffecac8:	e7e5      	b.n	2ffeca96 <psci_system_reset2+0x26>
2ffecaca:	f06f 0001 	mvn.w	r0, #1
2ffecace:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffecad2:	bf00      	nop
2ffecad4:	2fffd0f8 	.word	0x2fffd0f8
2ffecad8:	2fff849b 	.word	0x2fff849b
2ffecadc:	2fffd0fc 	.word	0x2fffd0fc

2ffecae0 <psci_mem_protect>:
2ffecae0:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffecae2:	4605      	mov	r5, r0
2ffecae4:	4c0f      	ldr	r4, [pc, #60]	; (2ffecb24 <psci_mem_protect+0x44>)
2ffecae6:	6822      	ldr	r2, [r4, #0]
2ffecae8:	6c93      	ldr	r3, [r2, #72]	; 0x48
2ffecaea:	b91b      	cbnz	r3, 2ffecaf4 <psci_mem_protect+0x14>
2ffecaec:	2112      	movs	r1, #18
2ffecaee:	480e      	ldr	r0, [pc, #56]	; (2ffecb28 <psci_mem_protect+0x48>)
2ffecaf0:	f00b f95a 	bl	2fff7da8 <__assert>
2ffecaf4:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
2ffecaf6:	b90a      	cbnz	r2, 2ffecafc <psci_mem_protect+0x1c>
2ffecaf8:	2113      	movs	r1, #19
2ffecafa:	e7f8      	b.n	2ffecaee <psci_mem_protect+0xe>
2ffecafc:	a801      	add	r0, sp, #4
2ffecafe:	4798      	blx	r3
2ffecb00:	2800      	cmp	r0, #0
2ffecb02:	da03      	bge.n	2ffecb0c <psci_mem_protect+0x2c>
2ffecb04:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffecb08:	b003      	add	sp, #12
2ffecb0a:	bd30      	pop	{r4, r5, pc}
2ffecb0c:	6823      	ldr	r3, [r4, #0]
2ffecb0e:	4628      	mov	r0, r5
2ffecb10:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
2ffecb12:	4798      	blx	r3
2ffecb14:	2800      	cmp	r0, #0
2ffecb16:	dbf5      	blt.n	2ffecb04 <psci_mem_protect+0x24>
2ffecb18:	9801      	ldr	r0, [sp, #4]
2ffecb1a:	3000      	adds	r0, #0
2ffecb1c:	bf18      	it	ne
2ffecb1e:	2001      	movne	r0, #1
2ffecb20:	e7f2      	b.n	2ffecb08 <psci_mem_protect+0x28>
2ffecb22:	bf00      	nop
2ffecb24:	2fffd0f8 	.word	0x2fffd0f8
2ffecb28:	2fff84b6 	.word	0x2fff84b6

2ffecb2c <psci_mem_chk_range>:
2ffecb2c:	4a0a      	ldr	r2, [pc, #40]	; (2ffecb58 <psci_mem_chk_range+0x2c>)
2ffecb2e:	b510      	push	{r4, lr}
2ffecb30:	6812      	ldr	r2, [r2, #0]
2ffecb32:	6c52      	ldr	r2, [r2, #68]	; 0x44
2ffecb34:	b91a      	cbnz	r2, 2ffecb3e <psci_mem_chk_range+0x12>
2ffecb36:	4809      	ldr	r0, [pc, #36]	; (2ffecb5c <psci_mem_chk_range+0x30>)
2ffecb38:	2121      	movs	r1, #33	; 0x21
2ffecb3a:	f00b f935 	bl	2fff7da8 <__assert>
2ffecb3e:	b911      	cbnz	r1, 2ffecb46 <psci_mem_chk_range+0x1a>
2ffecb40:	f06f 0002 	mvn.w	r0, #2
2ffecb44:	bd10      	pop	{r4, pc}
2ffecb46:	424b      	negs	r3, r1
2ffecb48:	4283      	cmp	r3, r0
2ffecb4a:	d3f9      	bcc.n	2ffecb40 <psci_mem_chk_range+0x14>
2ffecb4c:	4790      	blx	r2
2ffecb4e:	2800      	cmp	r0, #0
2ffecb50:	dbf6      	blt.n	2ffecb40 <psci_mem_chk_range+0x14>
2ffecb52:	2000      	movs	r0, #0
2ffecb54:	e7f6      	b.n	2ffecb44 <psci_mem_chk_range+0x18>
2ffecb56:	bf00      	nop
2ffecb58:	2fffd0f8 	.word	0x2fffd0f8
2ffecb5c:	2fff84b6 	.word	0x2fff84b6

2ffecb60 <bakery_lock_get>:
2ffecb60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffecb62:	4604      	mov	r4, r0
2ffecb64:	f00a ec6c 	blx	2fff7440 <plat_my_core_pos>
2ffecb68:	ee11 2f10 	mrc	15, 0, r2, cr1, cr0, {0}
2ffecb6c:	4f39      	ldr	r7, [pc, #228]	; (2ffecc54 <bakery_lock_get+0xf4>)
2ffecb6e:	f002 0204 	and.w	r2, r2, #4
2ffecb72:	4b39      	ldr	r3, [pc, #228]	; (2ffecc58 <bakery_lock_get+0xf8>)
2ffecb74:	4626      	mov	r6, r4
2ffecb76:	1aff      	subs	r7, r7, r3
2ffecb78:	fb07 fc00 	mul.w	ip, r7, r0
2ffecb7c:	eb1c 0104 	adds.w	r1, ip, r4
2ffecb80:	d103      	bne.n	2ffecb8a <bakery_lock_get+0x2a>
2ffecb82:	216e      	movs	r1, #110	; 0x6e
2ffecb84:	4835      	ldr	r0, [pc, #212]	; (2ffecc5c <bakery_lock_get+0xfc>)
2ffecb86:	f00b f90f 	bl	2fff7da8 <__assert>
2ffecb8a:	b10a      	cbz	r2, 2ffecb90 <bakery_lock_get+0x30>
2ffecb8c:	ee07 1f3e 	mcr	15, 0, r1, cr7, cr14, {1}
2ffecb90:	f83c 5004 	ldrh.w	r5, [ip, r4]
2ffecb94:	f3c5 054e 	ubfx	r5, r5, #1, #15
2ffecb98:	b10d      	cbz	r5, 2ffecb9e <bakery_lock_get+0x3e>
2ffecb9a:	2171      	movs	r1, #113	; 0x71
2ffecb9c:	e7f2      	b.n	2ffecb84 <bakery_lock_get+0x24>
2ffecb9e:	2301      	movs	r3, #1
2ffecba0:	f82c 3004 	strh.w	r3, [ip, r4]
2ffecba4:	b1f2      	cbz	r2, 2ffecbe4 <bakery_lock_get+0x84>
2ffecba6:	ee07 1f3a 	mcr	15, 0, r1, cr7, cr10, {1}
2ffecbaa:	f3bf 8f4b 	dsb	ish
2ffecbae:	b1f8      	cbz	r0, 2ffecbf0 <bakery_lock_get+0x90>
2ffecbb0:	b314      	cbz	r4, 2ffecbf8 <bakery_lock_get+0x98>
2ffecbb2:	b9d2      	cbnz	r2, 2ffecbea <bakery_lock_get+0x8a>
2ffecbb4:	8823      	ldrh	r3, [r4, #0]
2ffecbb6:	2801      	cmp	r0, #1
2ffecbb8:	f3c3 034e 	ubfx	r3, r3, #1, #15
2ffecbbc:	d119      	bne.n	2ffecbf2 <bakery_lock_get+0x92>
2ffecbbe:	3301      	adds	r3, #1
2ffecbc0:	ea4f 0e43 	mov.w	lr, r3, lsl #1
2ffecbc4:	fa1f fe8e 	uxth.w	lr, lr
2ffecbc8:	f82c e004 	strh.w	lr, [ip, r4]
2ffecbcc:	b30a      	cbz	r2, 2ffecc12 <bakery_lock_get+0xb2>
2ffecbce:	ee07 1f3a 	mcr	15, 0, r1, cr7, cr10, {1}
2ffecbd2:	f3bf 8f4b 	dsb	ish
2ffecbd6:	ea40 2303 	orr.w	r3, r0, r3, lsl #8
2ffecbda:	42a8      	cmp	r0, r5
2ffecbdc:	d034      	beq.n	2ffecc48 <bakery_lock_get+0xe8>
2ffecbde:	b9ee      	cbnz	r6, 2ffecc1c <bakery_lock_get+0xbc>
2ffecbe0:	21c1      	movs	r1, #193	; 0xc1
2ffecbe2:	e7cf      	b.n	2ffecb84 <bakery_lock_get+0x24>
2ffecbe4:	ee07 1f36 	mcr	15, 0, r1, cr7, cr6, {1}
2ffecbe8:	e7df      	b.n	2ffecbaa <bakery_lock_get+0x4a>
2ffecbea:	ee07 4f3e 	mcr	15, 0, r4, cr7, cr14, {1}
2ffecbee:	e7e1      	b.n	2ffecbb4 <bakery_lock_get+0x54>
2ffecbf0:	4603      	mov	r3, r0
2ffecbf2:	eb14 0e07 	adds.w	lr, r4, r7
2ffecbf6:	d101      	bne.n	2ffecbfc <bakery_lock_get+0x9c>
2ffecbf8:	2189      	movs	r1, #137	; 0x89
2ffecbfa:	e7c3      	b.n	2ffecb84 <bakery_lock_get+0x24>
2ffecbfc:	b10a      	cbz	r2, 2ffecc02 <bakery_lock_get+0xa2>
2ffecbfe:	ee07 ef3e 	mcr	15, 0, lr, cr7, cr14, {1}
2ffecc02:	f8be e000 	ldrh.w	lr, [lr]
2ffecc06:	f3ce 0e4e 	ubfx	lr, lr, #1, #15
2ffecc0a:	4573      	cmp	r3, lr
2ffecc0c:	bf38      	it	cc
2ffecc0e:	4673      	movcc	r3, lr
2ffecc10:	e7d5      	b.n	2ffecbbe <bakery_lock_get+0x5e>
2ffecc12:	ee07 1f36 	mcr	15, 0, r1, cr7, cr6, {1}
2ffecc16:	e7dc      	b.n	2ffecbd2 <bakery_lock_get+0x72>
2ffecc18:	2501      	movs	r5, #1
2ffecc1a:	e7de      	b.n	2ffecbda <bakery_lock_get+0x7a>
2ffecc1c:	b10a      	cbz	r2, 2ffecc22 <bakery_lock_get+0xc2>
2ffecc1e:	ee07 6f3e 	mcr	15, 0, r6, cr7, cr14, {1}
2ffecc22:	8831      	ldrh	r1, [r6, #0]
2ffecc24:	b289      	uxth	r1, r1
2ffecc26:	07cc      	lsls	r4, r1, #31
2ffecc28:	d4f8      	bmi.n	2ffecc1c <bakery_lock_get+0xbc>
2ffecc2a:	0849      	lsrs	r1, r1, #1
2ffecc2c:	d00c      	beq.n	2ffecc48 <bakery_lock_get+0xe8>
2ffecc2e:	ea45 2401 	orr.w	r4, r5, r1, lsl #8
2ffecc32:	42a3      	cmp	r3, r4
2ffecc34:	d908      	bls.n	2ffecc48 <bakery_lock_get+0xe8>
2ffecc36:	bf20      	wfe
2ffecc38:	b10a      	cbz	r2, 2ffecc3e <bakery_lock_get+0xde>
2ffecc3a:	ee07 6f3e 	mcr	15, 0, r6, cr7, cr14, {1}
2ffecc3e:	8834      	ldrh	r4, [r6, #0]
2ffecc40:	f3c4 044e 	ubfx	r4, r4, #1, #15
2ffecc44:	42a1      	cmp	r1, r4
2ffecc46:	d0f6      	beq.n	2ffecc36 <bakery_lock_get+0xd6>
2ffecc48:	443e      	add	r6, r7
2ffecc4a:	2d01      	cmp	r5, #1
2ffecc4c:	d1e4      	bne.n	2ffecc18 <bakery_lock_get+0xb8>
2ffecc4e:	f3bf 8f5f 	dmb	sy
2ffecc52:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffecc54:	2fffd180 	.word	0x2fffd180
2ffecc58:	2fffd140 	.word	0x2fffd140
2ffecc5c:	2fff84d2 	.word	0x2fff84d2

2ffecc60 <bakery_lock_release>:
2ffecc60:	b538      	push	{r3, r4, r5, lr}
2ffecc62:	4605      	mov	r5, r0
2ffecc64:	ee11 4f10 	mrc	15, 0, r4, cr1, cr0, {0}
2ffecc68:	f004 0404 	and.w	r4, r4, #4
2ffecc6c:	f00a ebe8 	blx	2fff7440 <plat_my_core_pos>
2ffecc70:	4b0e      	ldr	r3, [pc, #56]	; (2ffeccac <bakery_lock_release+0x4c>)
2ffecc72:	4a0f      	ldr	r2, [pc, #60]	; (2ffeccb0 <bakery_lock_release+0x50>)
2ffecc74:	1a9b      	subs	r3, r3, r2
2ffecc76:	4358      	muls	r0, r3
2ffecc78:	182b      	adds	r3, r5, r0
2ffecc7a:	b10c      	cbz	r4, 2ffecc80 <bakery_lock_release+0x20>
2ffecc7c:	ee07 3f3e 	mcr	15, 0, r3, cr7, cr14, {1}
2ffecc80:	5a2a      	ldrh	r2, [r5, r0]
2ffecc82:	f3c2 024e 	ubfx	r2, r2, #1, #15
2ffecc86:	b91a      	cbnz	r2, 2ffecc90 <bakery_lock_release+0x30>
2ffecc88:	480a      	ldr	r0, [pc, #40]	; (2ffeccb4 <bakery_lock_release+0x54>)
2ffecc8a:	21ef      	movs	r1, #239	; 0xef
2ffecc8c:	f00b f88c 	bl	2fff7da8 <__assert>
2ffecc90:	f3bf 8f5e 	dmb	st
2ffecc94:	2200      	movs	r2, #0
2ffecc96:	522a      	strh	r2, [r5, r0]
2ffecc98:	b12c      	cbz	r4, 2ffecca6 <bakery_lock_release+0x46>
2ffecc9a:	ee07 3f3a 	mcr	15, 0, r3, cr7, cr10, {1}
2ffecc9e:	f3bf 8f4b 	dsb	ish
2ffecca2:	bf40      	sev
2ffecca4:	bd38      	pop	{r3, r4, r5, pc}
2ffecca6:	ee07 3f36 	mcr	15, 0, r3, cr7, cr6, {1}
2ffeccaa:	e7f8      	b.n	2ffecc9e <bakery_lock_release+0x3e>
2ffeccac:	2fffd180 	.word	0x2fffd180
2ffeccb0:	2fffd140 	.word	0x2fffd140
2ffeccb4:	2fff84d2 	.word	0x2fff84d2

2ffeccb8 <trim_table_init>:
2ffeccb8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffeccbc:	4604      	mov	r4, r0
2ffeccbe:	6843      	ldr	r3, [r0, #4]
2ffeccc0:	2600      	movs	r6, #0
2ffeccc2:	6882      	ldr	r2, [r0, #8]
2ffeccc4:	f8d0 a000 	ldr.w	sl, [r0]
2ffeccc8:	eb03 0902 	add.w	r9, r3, r2
2ffecccc:	68c2      	ldr	r2, [r0, #12]
2ffeccce:	eb03 0802 	add.w	r8, r3, r2
2ffeccd2:	f83a 5b02 	ldrh.w	r5, [sl], #2
2ffeccd6:	b13d      	cbz	r5, 2ffecce8 <trim_table_init+0x30>
2ffeccd8:	f8ba 7000 	ldrh.w	r7, [sl]
2ffeccdc:	45b9      	cmp	r9, r7
2ffeccde:	d901      	bls.n	2ffecce4 <trim_table_init+0x2c>
2ffecce0:	45a8      	cmp	r8, r5
2ffecce2:	d305      	bcc.n	2ffeccf0 <trim_table_init+0x38>
2ffecce4:	2e00      	cmp	r6, #0
2ffecce6:	d0f4      	beq.n	2ffeccd2 <trim_table_init+0x1a>
2ffecce8:	6126      	str	r6, [r4, #16]
2ffeccea:	b003      	add	sp, #12
2ffeccec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffeccf0:	3701      	adds	r7, #1
2ffeccf2:	4547      	cmp	r7, r8
2ffeccf4:	bf38      	it	cc
2ffeccf6:	4647      	movcc	r7, r8
2ffeccf8:	b926      	cbnz	r6, 2ffecd04 <trim_table_init+0x4c>
2ffeccfa:	f8c4 9028 	str.w	r9, [r4, #40]	; 0x28
2ffeccfe:	2601      	movs	r6, #1
2ffecd00:	62e7      	str	r7, [r4, #44]	; 0x2c
2ffecd02:	e7e6      	b.n	2ffeccd2 <trim_table_init+0x1a>
2ffecd04:	6a23      	ldr	r3, [r4, #32]
2ffecd06:	1c68      	adds	r0, r5, #1
2ffecd08:	4798      	blx	r3
2ffecd0a:	69e3      	ldr	r3, [r4, #28]
2ffecd0c:	4798      	blx	r3
2ffecd0e:	4601      	mov	r1, r0
2ffecd10:	6863      	ldr	r3, [r4, #4]
2ffecd12:	f105 3bff 	add.w	fp, r5, #4294967295	; 0xffffffff
2ffecd16:	68e2      	ldr	r2, [r4, #12]
2ffecd18:	4413      	add	r3, r2
2ffecd1a:	429d      	cmp	r5, r3
2ffecd1c:	d201      	bcs.n	2ffecd22 <trim_table_init+0x6a>
2ffecd1e:	46ab      	mov	fp, r5
2ffecd20:	e009      	b.n	2ffecd36 <trim_table_init+0x7e>
2ffecd22:	6a23      	ldr	r3, [r4, #32]
2ffecd24:	4658      	mov	r0, fp
2ffecd26:	9101      	str	r1, [sp, #4]
2ffecd28:	4798      	blx	r3
2ffecd2a:	69e3      	ldr	r3, [r4, #28]
2ffecd2c:	465d      	mov	r5, fp
2ffecd2e:	4798      	blx	r3
2ffecd30:	9901      	ldr	r1, [sp, #4]
2ffecd32:	4281      	cmp	r1, r0
2ffecd34:	d3ec      	bcc.n	2ffecd10 <trim_table_init+0x58>
2ffecd36:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
2ffecd3a:	f10b 33ff 	add.w	r3, fp, #4294967295	; 0xffffffff
2ffecd3e:	3601      	adds	r6, #1
2ffecd40:	6293      	str	r3, [r2, #40]	; 0x28
2ffecd42:	62d7      	str	r7, [r2, #44]	; 0x2c
2ffecd44:	e7c5      	b.n	2ffeccd2 <trim_table_init+0x1a>
	...

2ffecd48 <csi_get_trimed_cal>:
2ffecd48:	b508      	push	{r3, lr}
2ffecd4a:	f004 f8d7 	bl	2fff0efc <stm32mp_rcc_base>
2ffecd4e:	4b05      	ldr	r3, [pc, #20]	; (2ffecd64 <csi_get_trimed_cal+0x1c>)
2ffecd50:	69c0      	ldr	r0, [r0, #28]
2ffecd52:	689a      	ldr	r2, [r3, #8]
2ffecd54:	f3c0 2004 	ubfx	r0, r0, #8, #5
2ffecd58:	685b      	ldr	r3, [r3, #4]
2ffecd5a:	1a80      	subs	r0, r0, r2
2ffecd5c:	4418      	add	r0, r3
2ffecd5e:	3801      	subs	r0, #1
2ffecd60:	bd08      	pop	{r3, pc}
2ffecd62:	bf00      	nop
2ffecd64:	2fffb044 	.word	0x2fffb044

2ffecd68 <csi_set_trim>:
2ffecd68:	4a08      	ldr	r2, [pc, #32]	; (2ffecd8c <csi_set_trim+0x24>)
2ffecd6a:	b510      	push	{r4, lr}
2ffecd6c:	6853      	ldr	r3, [r2, #4]
2ffecd6e:	1ac4      	subs	r4, r0, r3
2ffecd70:	6890      	ldr	r0, [r2, #8]
2ffecd72:	4404      	add	r4, r0
2ffecd74:	f004 f8c2 	bl	2fff0efc <stm32mp_rcc_base>
2ffecd78:	69c3      	ldr	r3, [r0, #28]
2ffecd7a:	3401      	adds	r4, #1
2ffecd7c:	0224      	lsls	r4, r4, #8
2ffecd7e:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
2ffecd82:	f404 54f8 	and.w	r4, r4, #7936	; 0x1f00
2ffecd86:	431c      	orrs	r4, r3
2ffecd88:	61c4      	str	r4, [r0, #28]
2ffecd8a:	bd10      	pop	{r4, pc}
2ffecd8c:	2fffb044 	.word	0x2fffb044

2ffecd90 <hsi_get_trimed_cal>:
2ffecd90:	b508      	push	{r3, lr}
2ffecd92:	f004 f8b3 	bl	2fff0efc <stm32mp_rcc_base>
2ffecd96:	4a04      	ldr	r2, [pc, #16]	; (2ffecda8 <hsi_get_trimed_cal+0x18>)
2ffecd98:	6983      	ldr	r3, [r0, #24]
2ffecd9a:	6850      	ldr	r0, [r2, #4]
2ffecd9c:	f343 2306 	sbfx	r3, r3, #8, #7
2ffecda0:	4418      	add	r0, r3
2ffecda2:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
2ffecda6:	bd08      	pop	{r3, pc}
2ffecda8:	2fffb0ec 	.word	0x2fffb0ec

2ffecdac <hsi_set_trim>:
2ffecdac:	4b07      	ldr	r3, [pc, #28]	; (2ffecdcc <hsi_set_trim+0x20>)
2ffecdae:	b510      	push	{r4, lr}
2ffecdb0:	685c      	ldr	r4, [r3, #4]
2ffecdb2:	1b04      	subs	r4, r0, r4
2ffecdb4:	f004 f8a2 	bl	2fff0efc <stm32mp_rcc_base>
2ffecdb8:	6983      	ldr	r3, [r0, #24]
2ffecdba:	0224      	lsls	r4, r4, #8
2ffecdbc:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
2ffecdc0:	f404 44fe 	and.w	r4, r4, #32512	; 0x7f00
2ffecdc4:	431c      	orrs	r4, r3
2ffecdc6:	6184      	str	r4, [r0, #24]
2ffecdc8:	bd10      	pop	{r4, pc}
2ffecdca:	bf00      	nop
2ffecdcc:	2fffb0ec 	.word	0x2fffb0ec

2ffecdd0 <rcc_calibration>:
2ffecdd0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffecdd4:	4604      	mov	r4, r0
2ffecdd6:	69c3      	ldr	r3, [r0, #28]
2ffecdd8:	4798      	blx	r3
2ffecdda:	6967      	ldr	r7, [r4, #20]
2ffecddc:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
2ffecde0:	69a3      	ldr	r3, [r4, #24]
2ffecde2:	4606      	mov	r6, r0
2ffecde4:	437b      	muls	r3, r7
2ffecde6:	fbb3 f3f2 	udiv	r3, r3, r2
2ffecdea:	eba7 0a03 	sub.w	sl, r7, r3
2ffecdee:	4550      	cmp	r0, sl
2ffecdf0:	441f      	add	r7, r3
2ffecdf2:	d301      	bcc.n	2ffecdf8 <rcc_calibration+0x28>
2ffecdf4:	42b8      	cmp	r0, r7
2ffecdf6:	d93e      	bls.n	2ffece76 <rcc_calibration+0xa6>
2ffecdf8:	6a63      	ldr	r3, [r4, #36]	; 0x24
2ffecdfa:	4798      	blx	r3
2ffecdfc:	4605      	mov	r5, r0
2ffecdfe:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffece02:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2ffece06:	4a58      	ldr	r2, [pc, #352]	; (2ffecf68 <rcc_calibration+0x198>)
2ffece08:	f242 7110 	movw	r1, #10000	; 0x2710
2ffece0c:	2300      	movs	r3, #0
2ffece0e:	fba0 0101 	umull	r0, r1, r0, r1
2ffece12:	f00a e92c 	blx	2fff706c <__aeabi_uldivmod>
2ffece16:	eb10 0308 	adds.w	r3, r0, r8
2ffece1a:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
2ffece1e:	9300      	str	r3, [sp, #0]
2ffece20:	eb41 0309 	adc.w	r3, r1, r9
2ffece24:	9301      	str	r3, [sp, #4]
2ffece26:	6963      	ldr	r3, [r4, #20]
2ffece28:	6922      	ldr	r2, [r4, #16]
2ffece2a:	42b3      	cmp	r3, r6
2ffece2c:	d80c      	bhi.n	2ffece48 <rcc_calibration+0x78>
2ffece2e:	4623      	mov	r3, r4
2ffece30:	2600      	movs	r6, #0
2ffece32:	4296      	cmp	r6, r2
2ffece34:	d00d      	beq.n	2ffece52 <rcc_calibration+0x82>
2ffece36:	6a98      	ldr	r0, [r3, #40]	; 0x28
2ffece38:	42a8      	cmp	r0, r5
2ffece3a:	d314      	bcc.n	2ffece66 <rcc_calibration+0x96>
2ffece3c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
2ffece3e:	3308      	adds	r3, #8
2ffece40:	42a9      	cmp	r1, r5
2ffece42:	d21d      	bcs.n	2ffece80 <rcc_calibration+0xb0>
2ffece44:	1e68      	subs	r0, r5, #1
2ffece46:	e00e      	b.n	2ffece66 <rcc_calibration+0x96>
2ffece48:	eb04 03c2 	add.w	r3, r4, r2, lsl #3
2ffece4c:	1e51      	subs	r1, r2, #1
2ffece4e:	2900      	cmp	r1, #0
2ffece50:	da01      	bge.n	2ffece56 <rcc_calibration+0x86>
2ffece52:	4628      	mov	r0, r5
2ffece54:	e007      	b.n	2ffece66 <rcc_calibration+0x96>
2ffece56:	6a58      	ldr	r0, [r3, #36]	; 0x24
2ffece58:	42a8      	cmp	r0, r5
2ffece5a:	d804      	bhi.n	2ffece66 <rcc_calibration+0x96>
2ffece5c:	6a1a      	ldr	r2, [r3, #32]
2ffece5e:	3b08      	subs	r3, #8
2ffece60:	42aa      	cmp	r2, r5
2ffece62:	d90b      	bls.n	2ffece7c <rcc_calibration+0xac>
2ffece64:	1c68      	adds	r0, r5, #1
2ffece66:	6a23      	ldr	r3, [r4, #32]
2ffece68:	4681      	mov	r9, r0
2ffece6a:	4798      	blx	r3
2ffece6c:	69e3      	ldr	r3, [r4, #28]
2ffece6e:	4798      	blx	r3
2ffece70:	4606      	mov	r6, r0
2ffece72:	b938      	cbnz	r0, 2ffece84 <rcc_calibration+0xb4>
2ffece74:	6160      	str	r0, [r4, #20]
2ffece76:	b003      	add	sp, #12
2ffece78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffece7c:	3901      	subs	r1, #1
2ffece7e:	e7e6      	b.n	2ffece4e <rcc_calibration+0x7e>
2ffece80:	3601      	adds	r6, #1
2ffece82:	e7d6      	b.n	2ffece32 <rcc_calibration+0x62>
2ffece84:	6963      	ldr	r3, [r4, #20]
2ffece86:	4283      	cmp	r3, r0
2ffece88:	bf34      	ite	cc
2ffece8a:	1ac3      	subcc	r3, r0, r3
2ffece8c:	1a1b      	subcs	r3, r3, r0
2ffece8e:	4598      	cmp	r8, r3
2ffece90:	bf84      	itt	hi
2ffece92:	4698      	movhi	r8, r3
2ffece94:	464d      	movhi	r5, r9
2ffece96:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2ffece9a:	e9dd bc00 	ldrd	fp, ip, [sp]
2ffece9e:	458c      	cmp	ip, r1
2ffecea0:	bf08      	it	eq
2ffecea2:	4583      	cmpeq	fp, r0
2ffecea4:	d301      	bcc.n	2ffeceaa <rcc_calibration+0xda>
2ffecea6:	4598      	cmp	r8, r3
2ffecea8:	d0bd      	beq.n	2ffece26 <rcc_calibration+0x56>
2ffeceaa:	6a23      	ldr	r3, [r4, #32]
2ffeceac:	4628      	mov	r0, r5
2ffeceae:	4798      	blx	r3
2ffeceb0:	69e3      	ldr	r3, [r4, #28]
2ffeceb2:	4798      	blx	r3
2ffeceb4:	4582      	cmp	sl, r0
2ffeceb6:	4602      	mov	r2, r0
2ffeceb8:	d801      	bhi.n	2ffecebe <rcc_calibration+0xee>
2ffeceba:	4287      	cmp	r7, r0
2ffecebc:	d2db      	bcs.n	2ffece76 <rcc_calibration+0xa6>
2ffecebe:	6a21      	ldr	r1, [r4, #32]
2ffecec0:	462b      	mov	r3, r5
2ffecec2:	482a      	ldr	r0, [pc, #168]	; (2ffecf6c <rcc_calibration+0x19c>)
2ffecec4:	4f2a      	ldr	r7, [pc, #168]	; (2ffecf70 <rcc_calibration+0x1a0>)
2ffecec6:	4e2b      	ldr	r6, [pc, #172]	; (2ffecf74 <rcc_calibration+0x1a4>)
2ffecec8:	42b9      	cmp	r1, r7
2ffececa:	bf14      	ite	ne
2ffececc:	4631      	movne	r1, r6
2ffecece:	4601      	moveq	r1, r0
2ffeced0:	4829      	ldr	r0, [pc, #164]	; (2ffecf78 <rcc_calibration+0x1a8>)
2ffeced2:	f003 fe55 	bl	2fff0b80 <tf_log>
2ffeced6:	6921      	ldr	r1, [r4, #16]
2ffeced8:	4622      	mov	r2, r4
2ffeceda:	2300      	movs	r3, #0
2ffecedc:	428b      	cmp	r3, r1
2ffecede:	d101      	bne.n	2ffecee4 <rcc_calibration+0x114>
2ffecee0:	462e      	mov	r6, r5
2ffecee2:	e007      	b.n	2ffecef4 <rcc_calibration+0x124>
2ffecee4:	6a96      	ldr	r6, [r2, #40]	; 0x28
2ffecee6:	42b5      	cmp	r5, r6
2ffecee8:	d804      	bhi.n	2ffecef4 <rcc_calibration+0x124>
2ffeceea:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
2ffeceec:	3208      	adds	r2, #8
2ffeceee:	4285      	cmp	r5, r0
2ffecef0:	d91a      	bls.n	2ffecf28 <rcc_calibration+0x158>
2ffecef2:	1e6e      	subs	r6, r5, #1
2ffecef4:	6a23      	ldr	r3, [r4, #32]
2ffecef6:	4630      	mov	r0, r6
2ffecef8:	4798      	blx	r3
2ffecefa:	6a22      	ldr	r2, [r4, #32]
2ffecefc:	491d      	ldr	r1, [pc, #116]	; (2ffecf74 <rcc_calibration+0x1a4>)
2ffecefe:	4b1b      	ldr	r3, [pc, #108]	; (2ffecf6c <rcc_calibration+0x19c>)
2ffecf00:	42ba      	cmp	r2, r7
2ffecf02:	bf14      	ite	ne
2ffecf04:	4688      	movne	r8, r1
2ffecf06:	4698      	moveq	r8, r3
2ffecf08:	69e3      	ldr	r3, [r4, #28]
2ffecf0a:	4798      	blx	r3
2ffecf0c:	4602      	mov	r2, r0
2ffecf0e:	4633      	mov	r3, r6
2ffecf10:	4819      	ldr	r0, [pc, #100]	; (2ffecf78 <rcc_calibration+0x1a8>)
2ffecf12:	4641      	mov	r1, r8
2ffecf14:	f003 fe34 	bl	2fff0b80 <tf_log>
2ffecf18:	6922      	ldr	r2, [r4, #16]
2ffecf1a:	1e53      	subs	r3, r2, #1
2ffecf1c:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
2ffecf20:	2b00      	cmp	r3, #0
2ffecf22:	da03      	bge.n	2ffecf2c <rcc_calibration+0x15c>
2ffecf24:	462e      	mov	r6, r5
2ffecf26:	e009      	b.n	2ffecf3c <rcc_calibration+0x16c>
2ffecf28:	3301      	adds	r3, #1
2ffecf2a:	e7d7      	b.n	2ffecedc <rcc_calibration+0x10c>
2ffecf2c:	6a56      	ldr	r6, [r2, #36]	; 0x24
2ffecf2e:	42b5      	cmp	r5, r6
2ffecf30:	d304      	bcc.n	2ffecf3c <rcc_calibration+0x16c>
2ffecf32:	6a11      	ldr	r1, [r2, #32]
2ffecf34:	3a08      	subs	r2, #8
2ffecf36:	428d      	cmp	r5, r1
2ffecf38:	d214      	bcs.n	2ffecf64 <rcc_calibration+0x194>
2ffecf3a:	1c6e      	adds	r6, r5, #1
2ffecf3c:	6a23      	ldr	r3, [r4, #32]
2ffecf3e:	4630      	mov	r0, r6
2ffecf40:	4d0c      	ldr	r5, [pc, #48]	; (2ffecf74 <rcc_calibration+0x1a4>)
2ffecf42:	4798      	blx	r3
2ffecf44:	6a23      	ldr	r3, [r4, #32]
2ffecf46:	4909      	ldr	r1, [pc, #36]	; (2ffecf6c <rcc_calibration+0x19c>)
2ffecf48:	42bb      	cmp	r3, r7
2ffecf4a:	bf08      	it	eq
2ffecf4c:	460d      	moveq	r5, r1
2ffecf4e:	69e3      	ldr	r3, [r4, #28]
2ffecf50:	4798      	blx	r3
2ffecf52:	4602      	mov	r2, r0
2ffecf54:	4633      	mov	r3, r6
2ffecf56:	4808      	ldr	r0, [pc, #32]	; (2ffecf78 <rcc_calibration+0x1a8>)
2ffecf58:	4629      	mov	r1, r5
2ffecf5a:	b003      	add	sp, #12
2ffecf5c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffecf60:	f003 be0e 	b.w	2fff0b80 <tf_log>
2ffecf64:	3b01      	subs	r3, #1
2ffecf66:	e7db      	b.n	2ffecf20 <rcc_calibration+0x150>
2ffecf68:	000f4240 	.word	0x000f4240
2ffecf6c:	2fff84f8 	.word	0x2fff84f8
2ffecf70:	2ffecdad 	.word	0x2ffecdad
2ffecf74:	2fff84fc 	.word	0x2fff84fc
2ffecf78:	2fff8500 	.word	0x2fff8500

2ffecf7c <stm32mp1_calib_get_wakeup>:
2ffecf7c:	4b01      	ldr	r3, [pc, #4]	; (2ffecf84 <stm32mp1_calib_get_wakeup+0x8>)
2ffecf7e:	7818      	ldrb	r0, [r3, #0]
2ffecf80:	4770      	bx	lr
2ffecf82:	bf00      	nop
2ffecf84:	2fffc2f0 	.word	0x2fffc2f0

2ffecf88 <stm32mp1_calib_set_wakeup>:
2ffecf88:	4b01      	ldr	r3, [pc, #4]	; (2ffecf90 <stm32mp1_calib_set_wakeup+0x8>)
2ffecf8a:	7018      	strb	r0, [r3, #0]
2ffecf8c:	4770      	bx	lr
2ffecf8e:	bf00      	nop
2ffecf90:	2fffc2f0 	.word	0x2fffc2f0

2ffecf94 <stm32mp1_calib_it_handler>:
2ffecf94:	b538      	push	{r3, r4, r5, lr}
2ffecf96:	4605      	mov	r5, r0
2ffecf98:	f003 ffb0 	bl	2fff0efc <stm32mp_rcc_base>
2ffecf9c:	2db0      	cmp	r5, #176	; 0xb0
2ffecf9e:	4604      	mov	r4, r0
2ffecfa0:	d00e      	beq.n	2ffecfc0 <stm32mp1_calib_it_handler+0x2c>
2ffecfa2:	2db1      	cmp	r5, #177	; 0xb1
2ffecfa4:	d11f      	bne.n	2ffecfe6 <stm32mp1_calib_it_handler+0x52>
2ffecfa6:	2080      	movs	r0, #128	; 0x80
2ffecfa8:	f002 fc1a 	bl	2ffef7e0 <plat_ic_set_priority_mask>
2ffecfac:	f8d4 3418 	ldr.w	r3, [r4, #1048]	; 0x418
2ffecfb0:	2201      	movs	r2, #1
2ffecfb2:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
2ffecfb6:	f8c4 3418 	str.w	r3, [r4, #1048]	; 0x418
2ffecfba:	4b13      	ldr	r3, [pc, #76]	; (2ffed008 <stm32mp1_calib_it_handler+0x74>)
2ffecfbc:	701a      	strb	r2, [r3, #0]
2ffecfbe:	bd38      	pop	{r3, r4, r5, pc}
2ffecfc0:	4b11      	ldr	r3, [pc, #68]	; (2ffed008 <stm32mp1_calib_it_handler+0x74>)
2ffecfc2:	2200      	movs	r2, #0
2ffecfc4:	701a      	strb	r2, [r3, #0]
2ffecfc6:	4b11      	ldr	r3, [pc, #68]	; (2ffed00c <stm32mp1_calib_it_handler+0x78>)
2ffecfc8:	681a      	ldr	r2, [r3, #0]
2ffecfca:	0791      	lsls	r1, r2, #30
2ffecfcc:	bf42      	ittt	mi
2ffecfce:	681a      	ldrmi	r2, [r3, #0]
2ffecfd0:	f042 0202 	orrmi.w	r2, r2, #2
2ffecfd4:	601a      	strmi	r2, [r3, #0]
2ffecfd6:	4b0e      	ldr	r3, [pc, #56]	; (2ffed010 <stm32mp1_calib_it_handler+0x7c>)
2ffecfd8:	681a      	ldr	r2, [r3, #0]
2ffecfda:	0792      	lsls	r2, r2, #30
2ffecfdc:	bf42      	ittt	mi
2ffecfde:	681a      	ldrmi	r2, [r3, #0]
2ffecfe0:	f042 0202 	orrmi.w	r2, r2, #2
2ffecfe4:	601a      	strmi	r2, [r3, #0]
2ffecfe6:	480b      	ldr	r0, [pc, #44]	; (2ffed014 <stm32mp1_calib_it_handler+0x80>)
2ffecfe8:	6943      	ldr	r3, [r0, #20]
2ffecfea:	b10b      	cbz	r3, 2ffecff0 <stm32mp1_calib_it_handler+0x5c>
2ffecfec:	f7ff fef0 	bl	2ffecdd0 <rcc_calibration>
2ffecff0:	4809      	ldr	r0, [pc, #36]	; (2ffed018 <stm32mp1_calib_it_handler+0x84>)
2ffecff2:	6943      	ldr	r3, [r0, #20]
2ffecff4:	b10b      	cbz	r3, 2ffecffa <stm32mp1_calib_it_handler+0x66>
2ffecff6:	f7ff feeb 	bl	2ffecdd0 <rcc_calibration>
2ffecffa:	4b08      	ldr	r3, [pc, #32]	; (2ffed01c <stm32mp1_calib_it_handler+0x88>)
2ffecffc:	681b      	ldr	r3, [r3, #0]
2ffecffe:	2b00      	cmp	r3, #0
2ffed000:	d0dd      	beq.n	2ffecfbe <stm32mp1_calib_it_handler+0x2a>
2ffed002:	ee0e 3f12 	mcr	15, 0, r3, cr14, cr2, {0}
2ffed006:	e7da      	b.n	2ffecfbe <stm32mp1_calib_it_handler+0x2a>
2ffed008:	2fffc2f0 	.word	0x2fffc2f0
2ffed00c:	5000d04c 	.word	0x5000d04c
2ffed010:	5000d050 	.word	0x5000d050
2ffed014:	2fffb0ec 	.word	0x2fffb0ec
2ffed018:	2fffb044 	.word	0x2fffb044
2ffed01c:	2fffc2f4 	.word	0x2fffc2f4

2ffed020 <stm32mp1_calib_start_hsi_cal>:
2ffed020:	4805      	ldr	r0, [pc, #20]	; (2ffed038 <stm32mp1_calib_start_hsi_cal+0x18>)
2ffed022:	b508      	push	{r3, lr}
2ffed024:	6943      	ldr	r3, [r0, #20]
2ffed026:	b11b      	cbz	r3, 2ffed030 <stm32mp1_calib_start_hsi_cal+0x10>
2ffed028:	f7ff fed2 	bl	2ffecdd0 <rcc_calibration>
2ffed02c:	2000      	movs	r0, #0
2ffed02e:	bd08      	pop	{r3, pc}
2ffed030:	f06f 0001 	mvn.w	r0, #1
2ffed034:	e7fb      	b.n	2ffed02e <stm32mp1_calib_start_hsi_cal+0xe>
2ffed036:	bf00      	nop
2ffed038:	2fffb0ec 	.word	0x2fffb0ec

2ffed03c <stm32mp1_calib_start_csi_cal>:
2ffed03c:	4805      	ldr	r0, [pc, #20]	; (2ffed054 <stm32mp1_calib_start_csi_cal+0x18>)
2ffed03e:	b508      	push	{r3, lr}
2ffed040:	6943      	ldr	r3, [r0, #20]
2ffed042:	b11b      	cbz	r3, 2ffed04c <stm32mp1_calib_start_csi_cal+0x10>
2ffed044:	f7ff fec4 	bl	2ffecdd0 <rcc_calibration>
2ffed048:	2000      	movs	r0, #0
2ffed04a:	bd08      	pop	{r3, pc}
2ffed04c:	f06f 0001 	mvn.w	r0, #1
2ffed050:	e7fb      	b.n	2ffed04a <stm32mp1_calib_start_csi_cal+0xe>
2ffed052:	bf00      	nop
2ffed054:	2fffb044 	.word	0x2fffb044

2ffed058 <stm32mp1_calib_init>:
2ffed058:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffed05a:	a901      	add	r1, sp, #4
2ffed05c:	4830      	ldr	r0, [pc, #192]	; (2ffed120 <stm32mp1_calib_init+0xc8>)
2ffed05e:	f005 fd3e 	bl	2fff2ade <fdt_rcc_read_prop>
2ffed062:	b1d0      	cbz	r0, 2ffed09a <stm32mp1_calib_init+0x42>
2ffed064:	4c2f      	ldr	r4, [pc, #188]	; (2ffed124 <stm32mp1_calib_init+0xcc>)
2ffed066:	2100      	movs	r1, #0
2ffed068:	f104 001c 	add.w	r0, r4, #28
2ffed06c:	f000 fe9e 	bl	2ffeddac <stm32_timer_freq_func>
2ffed070:	69e3      	ldr	r3, [r4, #28]
2ffed072:	b193      	cbz	r3, 2ffed09a <stm32mp1_calib_init+0x42>
2ffed074:	2004      	movs	r0, #4
2ffed076:	f006 faa3 	bl	2fff35c0 <stm32mp_clk_get_rate>
2ffed07a:	6160      	str	r0, [r4, #20]
2ffed07c:	f003 ff3e 	bl	2fff0efc <stm32mp_rcc_base>
2ffed080:	6983      	ldr	r3, [r0, #24]
2ffed082:	4620      	mov	r0, r4
2ffed084:	f3c3 4308 	ubfx	r3, r3, #16, #9
2ffed088:	6063      	str	r3, [r4, #4]
2ffed08a:	f7ff fe15 	bl	2ffeccb8 <trim_table_init>
2ffed08e:	6860      	ldr	r0, [r4, #4]
2ffed090:	6a23      	ldr	r3, [r4, #32]
2ffed092:	4798      	blx	r3
2ffed094:	4620      	mov	r0, r4
2ffed096:	f7ff fe9b 	bl	2ffecdd0 <rcc_calibration>
2ffed09a:	4823      	ldr	r0, [pc, #140]	; (2ffed128 <stm32mp1_calib_init+0xd0>)
2ffed09c:	a901      	add	r1, sp, #4
2ffed09e:	f005 fd1e 	bl	2fff2ade <fdt_rcc_read_prop>
2ffed0a2:	b1d0      	cbz	r0, 2ffed0da <stm32mp1_calib_init+0x82>
2ffed0a4:	4c21      	ldr	r4, [pc, #132]	; (2ffed12c <stm32mp1_calib_init+0xd4>)
2ffed0a6:	2101      	movs	r1, #1
2ffed0a8:	f104 001c 	add.w	r0, r4, #28
2ffed0ac:	f000 fe7e 	bl	2ffeddac <stm32_timer_freq_func>
2ffed0b0:	69e3      	ldr	r3, [r4, #28]
2ffed0b2:	b193      	cbz	r3, 2ffed0da <stm32mp1_calib_init+0x82>
2ffed0b4:	2001      	movs	r0, #1
2ffed0b6:	f006 fa83 	bl	2fff35c0 <stm32mp_clk_get_rate>
2ffed0ba:	6160      	str	r0, [r4, #20]
2ffed0bc:	f003 ff1e 	bl	2fff0efc <stm32mp_rcc_base>
2ffed0c0:	69c3      	ldr	r3, [r0, #28]
2ffed0c2:	4620      	mov	r0, r4
2ffed0c4:	f3c3 4307 	ubfx	r3, r3, #16, #8
2ffed0c8:	6063      	str	r3, [r4, #4]
2ffed0ca:	f7ff fdf5 	bl	2ffeccb8 <trim_table_init>
2ffed0ce:	6860      	ldr	r0, [r4, #4]
2ffed0d0:	6a23      	ldr	r3, [r4, #32]
2ffed0d2:	4798      	blx	r3
2ffed0d4:	4620      	mov	r0, r4
2ffed0d6:	f7ff fe7b 	bl	2ffecdd0 <rcc_calibration>
2ffed0da:	4815      	ldr	r0, [pc, #84]	; (2ffed130 <stm32mp1_calib_init+0xd8>)
2ffed0dc:	2100      	movs	r1, #0
2ffed0de:	f005 fcef 	bl	2fff2ac0 <fdt_rcc_read_uint32_default>
2ffed0e2:	4604      	mov	r4, r0
2ffed0e4:	f003 fefa 	bl	2fff0edc <plat_get_syscnt_freq2>
2ffed0e8:	4360      	muls	r0, r4
2ffed0ea:	4c12      	ldr	r4, [pc, #72]	; (2ffed134 <stm32mp1_calib_init+0xdc>)
2ffed0ec:	bf4a      	itet	mi
2ffed0ee:	f06f 4300 	mvnmi.w	r3, #2147483648	; 0x80000000
2ffed0f2:	6020      	strpl	r0, [r4, #0]
2ffed0f4:	6023      	strmi	r3, [r4, #0]
2ffed0f6:	6825      	ldr	r5, [r4, #0]
2ffed0f8:	b165      	cbz	r5, 2ffed114 <stm32mp1_calib_init+0xbc>
2ffed0fa:	f003 feef 	bl	2fff0edc <plat_get_syscnt_freq2>
2ffed0fe:	fbb5 f1f0 	udiv	r1, r5, r0
2ffed102:	480d      	ldr	r0, [pc, #52]	; (2ffed138 <stm32mp1_calib_init+0xe0>)
2ffed104:	f003 fd3c 	bl	2fff0b80 <tf_log>
2ffed108:	6823      	ldr	r3, [r4, #0]
2ffed10a:	ee0e 3f12 	mcr	15, 0, r3, cr14, cr2, {0}
2ffed10e:	2301      	movs	r3, #1
2ffed110:	ee0e 3f32 	mcr	15, 0, r3, cr14, cr2, {1}
2ffed114:	4809      	ldr	r0, [pc, #36]	; (2ffed13c <stm32mp1_calib_init+0xe4>)
2ffed116:	f005 fcfa 	bl	2fff2b0e <fdt_rcc_enable_it>
2ffed11a:	b003      	add	sp, #12
2ffed11c:	bd30      	pop	{r4, r5, pc}
2ffed11e:	bf00      	nop
2ffed120:	2fff8525 	.word	0x2fff8525
2ffed124:	2fffb0ec 	.word	0x2fffb0ec
2ffed128:	2fff8530 	.word	0x2fff8530
2ffed12c:	2fffb044 	.word	0x2fffb044
2ffed130:	2fff853b 	.word	0x2fff853b
2ffed134:	2fffc2f4 	.word	0x2fffc2f4
2ffed138:	2fff8546 	.word	0x2fff8546
2ffed13c:	2fff8568 	.word	0x2fff8568

2ffed140 <etzpc_configure_decprot>:
2ffed140:	b538      	push	{r3, r4, r5, lr}
2ffed142:	f001 0103 	and.w	r1, r1, #3
2ffed146:	4b0c      	ldr	r3, [pc, #48]	; (2ffed178 <etzpc_configure_decprot+0x38>)
2ffed148:	0044      	lsls	r4, r0, #1
2ffed14a:	799a      	ldrb	r2, [r3, #6]
2ffed14c:	f004 041e 	and.w	r4, r4, #30
2ffed150:	0905      	lsrs	r5, r0, #4
2ffed152:	4290      	cmp	r0, r2
2ffed154:	d303      	bcc.n	2ffed15e <etzpc_configure_decprot+0x1e>
2ffed156:	4809      	ldr	r0, [pc, #36]	; (2ffed17c <etzpc_configure_decprot+0x3c>)
2ffed158:	2198      	movs	r1, #152	; 0x98
2ffed15a:	f00a fe25 	bl	2fff7da8 <__assert>
2ffed15e:	681a      	ldr	r2, [r3, #0]
2ffed160:	2003      	movs	r0, #3
2ffed162:	40a1      	lsls	r1, r4
2ffed164:	40a0      	lsls	r0, r4
2ffed166:	3210      	adds	r2, #16
2ffed168:	f852 3025 	ldr.w	r3, [r2, r5, lsl #2]
2ffed16c:	ea23 0300 	bic.w	r3, r3, r0
2ffed170:	4319      	orrs	r1, r3
2ffed172:	f842 1025 	str.w	r1, [r2, r5, lsl #2]
2ffed176:	bd38      	pop	{r3, r4, r5, pc}
2ffed178:	2fffc2f8 	.word	0x2fffc2f8
2ffed17c:	2fff8570 	.word	0x2fff8570

2ffed180 <etzpc_get_decprot>:
2ffed180:	490a      	ldr	r1, [pc, #40]	; (2ffed1ac <etzpc_get_decprot+0x2c>)
2ffed182:	b510      	push	{r4, lr}
2ffed184:	680a      	ldr	r2, [r1, #0]
2ffed186:	7989      	ldrb	r1, [r1, #6]
2ffed188:	0043      	lsls	r3, r0, #1
2ffed18a:	3210      	adds	r2, #16
2ffed18c:	4288      	cmp	r0, r1
2ffed18e:	f003 031e 	and.w	r3, r3, #30
2ffed192:	ea4f 1410 	mov.w	r4, r0, lsr #4
2ffed196:	d303      	bcc.n	2ffed1a0 <etzpc_get_decprot+0x20>
2ffed198:	4805      	ldr	r0, [pc, #20]	; (2ffed1b0 <etzpc_get_decprot+0x30>)
2ffed19a:	21ab      	movs	r1, #171	; 0xab
2ffed19c:	f00a fe04 	bl	2fff7da8 <__assert>
2ffed1a0:	f852 0024 	ldr.w	r0, [r2, r4, lsl #2]
2ffed1a4:	40d8      	lsrs	r0, r3
2ffed1a6:	f000 0003 	and.w	r0, r0, #3
2ffed1aa:	bd10      	pop	{r4, pc}
2ffed1ac:	2fffc2f8 	.word	0x2fffc2f8
2ffed1b0:	2fff8570 	.word	0x2fff8570

2ffed1b4 <etzpc_lock_decprot>:
2ffed1b4:	4909      	ldr	r1, [pc, #36]	; (2ffed1dc <etzpc_lock_decprot+0x28>)
2ffed1b6:	f000 031f 	and.w	r3, r0, #31
2ffed1ba:	2201      	movs	r2, #1
2ffed1bc:	b510      	push	{r4, lr}
2ffed1be:	409a      	lsls	r2, r3
2ffed1c0:	680b      	ldr	r3, [r1, #0]
2ffed1c2:	7989      	ldrb	r1, [r1, #6]
2ffed1c4:	0944      	lsrs	r4, r0, #5
2ffed1c6:	3330      	adds	r3, #48	; 0x30
2ffed1c8:	4288      	cmp	r0, r1
2ffed1ca:	d303      	bcc.n	2ffed1d4 <etzpc_lock_decprot+0x20>
2ffed1cc:	4804      	ldr	r0, [pc, #16]	; (2ffed1e0 <etzpc_lock_decprot+0x2c>)
2ffed1ce:	21bd      	movs	r1, #189	; 0xbd
2ffed1d0:	f00a fdea 	bl	2fff7da8 <__assert>
2ffed1d4:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
2ffed1d8:	bd10      	pop	{r4, pc}
2ffed1da:	bf00      	nop
2ffed1dc:	2fffc2f8 	.word	0x2fffc2f8
2ffed1e0:	2fff8570 	.word	0x2fff8570

2ffed1e4 <etzpc_configure_tzma>:
2ffed1e4:	b508      	push	{r3, lr}
2ffed1e6:	4b06      	ldr	r3, [pc, #24]	; (2ffed200 <etzpc_configure_tzma+0x1c>)
2ffed1e8:	795a      	ldrb	r2, [r3, #5]
2ffed1ea:	4290      	cmp	r0, r2
2ffed1ec:	d303      	bcc.n	2ffed1f6 <etzpc_configure_tzma+0x12>
2ffed1ee:	4805      	ldr	r0, [pc, #20]	; (2ffed204 <etzpc_configure_tzma+0x20>)
2ffed1f0:	21c9      	movs	r1, #201	; 0xc9
2ffed1f2:	f00a fdd9 	bl	2fff7da8 <__assert>
2ffed1f6:	681b      	ldr	r3, [r3, #0]
2ffed1f8:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
2ffed1fc:	bd08      	pop	{r3, pc}
2ffed1fe:	bf00      	nop
2ffed200:	2fffc2f8 	.word	0x2fffc2f8
2ffed204:	2fff8570 	.word	0x2fff8570

2ffed208 <etzpc_init>:
2ffed208:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
2ffed20c:	b087      	sub	sp, #28
2ffed20e:	4a34      	ldr	r2, [pc, #208]	; (2ffed2e0 <etzpc_init+0xd8>)
2ffed210:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2ffed214:	a802      	add	r0, sp, #8
2ffed216:	f009 f93d 	bl	2fff6494 <dt_get_node>
2ffed21a:	1e05      	subs	r5, r0, #0
2ffed21c:	db5a      	blt.n	2ffed2d4 <etzpc_init+0xcc>
2ffed21e:	9b05      	ldr	r3, [sp, #20]
2ffed220:	2b02      	cmp	r3, #2
2ffed222:	d15a      	bne.n	2ffed2da <etzpc_init+0xd2>
2ffed224:	9a02      	ldr	r2, [sp, #8]
2ffed226:	2600      	movs	r6, #0
2ffed228:	4f2e      	ldr	r7, [pc, #184]	; (2ffed2e4 <etzpc_init+0xdc>)
2ffed22a:	4668      	mov	r0, sp
2ffed22c:	f8d2 33f0 	ldr.w	r3, [r2, #1008]	; 0x3f0
2ffed230:	603a      	str	r2, [r7, #0]
2ffed232:	0a19      	lsrs	r1, r3, #8
2ffed234:	717b      	strb	r3, [r7, #5]
2ffed236:	71b9      	strb	r1, [r7, #6]
2ffed238:	0c19      	lsrs	r1, r3, #16
2ffed23a:	0e1b      	lsrs	r3, r3, #24
2ffed23c:	713b      	strb	r3, [r7, #4]
2ffed23e:	f892 33f4 	ldrb.w	r3, [r2, #1012]	; 0x3f4
2ffed242:	71f9      	strb	r1, [r7, #7]
2ffed244:	723b      	strb	r3, [r7, #8]
2ffed246:	9601      	str	r6, [sp, #4]
2ffed248:	f009 f83a 	bl	2fff62c0 <fdt_get_address>
2ffed24c:	2800      	cmp	r0, #0
2ffed24e:	d03e      	beq.n	2ffed2ce <etzpc_init+0xc6>
2ffed250:	4a25      	ldr	r2, [pc, #148]	; (2ffed2e8 <etzpc_init+0xe0>)
2ffed252:	ab01      	add	r3, sp, #4
2ffed254:	9800      	ldr	r0, [sp, #0]
2ffed256:	4629      	mov	r1, r5
2ffed258:	f00a fc09 	bl	2fff7a6e <fdt_getprop>
2ffed25c:	4604      	mov	r4, r0
2ffed25e:	b9b8      	cbnz	r0, 2ffed290 <etzpc_init+0x88>
2ffed260:	4822      	ldr	r0, [pc, #136]	; (2ffed2ec <etzpc_init+0xe4>)
2ffed262:	f003 fc8d 	bl	2fff0b80 <tf_log>
2ffed266:	2000      	movs	r0, #0
2ffed268:	e02e      	b.n	2ffed2c8 <etzpc_init+0xc0>
2ffed26a:	f3c5 2001 	ubfx	r0, r5, #8, #2
2ffed26e:	f004 f82d 	bl	2fff12cc <stm32mp_etzpc_binding2decprot>
2ffed272:	4601      	mov	r1, r0
2ffed274:	4681      	mov	r9, r0
2ffed276:	4640      	mov	r0, r8
2ffed278:	f001 fcf4 	bl	2ffeec64 <stm32mp1_register_etzpc_decprot>
2ffed27c:	4649      	mov	r1, r9
2ffed27e:	4640      	mov	r0, r8
2ffed280:	f7ff ff5e 	bl	2ffed140 <etzpc_configure_decprot>
2ffed284:	07eb      	lsls	r3, r5, #31
2ffed286:	d502      	bpl.n	2ffed28e <etzpc_init+0x86>
2ffed288:	4640      	mov	r0, r8
2ffed28a:	f7ff ff93 	bl	2ffed1b4 <etzpc_lock_decprot>
2ffed28e:	3601      	adds	r6, #1
2ffed290:	9b01      	ldr	r3, [sp, #4]
2ffed292:	ebb6 0f93 	cmp.w	r6, r3, lsr #2
2ffed296:	d2e6      	bcs.n	2ffed266 <etzpc_init+0x5e>
2ffed298:	f854 3026 	ldr.w	r3, [r4, r6, lsl #2]
2ffed29c:	0e1d      	lsrs	r5, r3, #24
2ffed29e:	f3c3 2207 	ubfx	r2, r3, #8, #8
2ffed2a2:	ea45 6503 	orr.w	r5, r5, r3, lsl #24
2ffed2a6:	f3c3 4307 	ubfx	r3, r3, #16, #8
2ffed2aa:	ea45 4502 	orr.w	r5, r5, r2, lsl #16
2ffed2ae:	ea45 2503 	orr.w	r5, r5, r3, lsl #8
2ffed2b2:	79bb      	ldrb	r3, [r7, #6]
2ffed2b4:	f3c5 4807 	ubfx	r8, r5, #16, #8
2ffed2b8:	4598      	cmp	r8, r3
2ffed2ba:	d3d6      	bcc.n	2ffed26a <etzpc_init+0x62>
2ffed2bc:	480c      	ldr	r0, [pc, #48]	; (2ffed2f0 <etzpc_init+0xe8>)
2ffed2be:	4641      	mov	r1, r8
2ffed2c0:	f003 fc5e 	bl	2fff0b80 <tf_log>
2ffed2c4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffed2c8:	b007      	add	sp, #28
2ffed2ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2ffed2ce:	f06f 0001 	mvn.w	r0, #1
2ffed2d2:	e7f9      	b.n	2ffed2c8 <etzpc_init+0xc0>
2ffed2d4:	f06f 0004 	mvn.w	r0, #4
2ffed2d8:	e7f6      	b.n	2ffed2c8 <etzpc_init+0xc0>
2ffed2da:	f06f 000c 	mvn.w	r0, #12
2ffed2de:	e7f3      	b.n	2ffed2c8 <etzpc_init+0xc0>
2ffed2e0:	2fff8589 	.word	0x2fff8589
2ffed2e4:	2fffc2f8 	.word	0x2fffc2f8
2ffed2e8:	2fff8598 	.word	0x2fff8598
2ffed2ec:	2fff85a3 	.word	0x2fff85a3
2ffed2f0:	2fff85cf 	.word	0x2fff85cf

2ffed2f4 <stm32_rng_read>:
2ffed2f4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
2ffed2f8:	4607      	mov	r7, r0
2ffed2fa:	4d34      	ldr	r5, [pc, #208]	; (2ffed3cc <stm32_rng_read+0xd8>)
2ffed2fc:	460c      	mov	r4, r1
2ffed2fe:	682b      	ldr	r3, [r5, #0]
2ffed300:	2b00      	cmp	r3, #0
2ffed302:	d05f      	beq.n	2ffed3c4 <stm32_rng_read+0xd0>
2ffed304:	6868      	ldr	r0, [r5, #4]
2ffed306:	f006 f92f 	bl	2fff3568 <stm32mp_clk_enable>
2ffed30a:	682b      	ldr	r3, [r5, #0]
2ffed30c:	681a      	ldr	r2, [r3, #0]
2ffed30e:	0751      	lsls	r1, r2, #29
2ffed310:	d401      	bmi.n	2ffed316 <stm32_rng_read+0x22>
2ffed312:	2224      	movs	r2, #36	; 0x24
2ffed314:	601a      	str	r2, [r3, #0]
2ffed316:	463e      	mov	r6, r7
2ffed318:	2c00      	cmp	r4, #0
2ffed31a:	d043      	beq.n	2ffed3a4 <stm32_rng_read+0xb0>
2ffed31c:	f242 7810 	movw	r8, #10000	; 0x2710
2ffed320:	682b      	ldr	r3, [r5, #0]
2ffed322:	685a      	ldr	r2, [r3, #4]
2ffed324:	f012 0f44 	tst.w	r2, #68	; 0x44
2ffed328:	d01b      	beq.n	2ffed362 <stm32_rng_read+0x6e>
2ffed32a:	685a      	ldr	r2, [r3, #4]
2ffed32c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
2ffed330:	605a      	str	r2, [r3, #4]
2ffed332:	f3bf 8f5f 	dmb	sy
2ffed336:	682b      	ldr	r3, [r5, #0]
2ffed338:	f103 0208 	add.w	r2, r3, #8
2ffed33c:	230c      	movs	r3, #12
2ffed33e:	6811      	ldr	r1, [r2, #0]
2ffed340:	3b01      	subs	r3, #1
2ffed342:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
2ffed346:	d1fa      	bne.n	2ffed33e <stm32_rng_read+0x4a>
2ffed348:	f3bf 8f5f 	dmb	sy
2ffed34c:	682b      	ldr	r3, [r5, #0]
2ffed34e:	685b      	ldr	r3, [r3, #4]
2ffed350:	065a      	lsls	r2, r3, #25
2ffed352:	d506      	bpl.n	2ffed362 <stm32_rng_read+0x6e>
2ffed354:	481e      	ldr	r0, [pc, #120]	; (2ffed3d0 <stm32_rng_read+0xdc>)
2ffed356:	f003 fc13 	bl	2fff0b80 <tf_log>
2ffed35a:	f003 fcb3 	bl	2fff0cc4 <console_flush>
2ffed35e:	f009 ece8 	blx	2fff6d30 <do_panic>
2ffed362:	200a      	movs	r0, #10
2ffed364:	f004 ffa8 	bl	2fff22b8 <udelay>
2ffed368:	f1b8 0801 	subs.w	r8, r8, #1
2ffed36c:	d027      	beq.n	2ffed3be <stm32_rng_read+0xca>
2ffed36e:	682b      	ldr	r3, [r5, #0]
2ffed370:	685b      	ldr	r3, [r3, #4]
2ffed372:	07db      	lsls	r3, r3, #31
2ffed374:	d5d4      	bpl.n	2ffed320 <stm32_rng_read+0x2c>
2ffed376:	f04f 0804 	mov.w	r8, #4
2ffed37a:	682b      	ldr	r3, [r5, #0]
2ffed37c:	2c04      	cmp	r4, #4
2ffed37e:	46a1      	mov	r9, r4
2ffed380:	bf28      	it	cs
2ffed382:	f04f 0904 	movcs.w	r9, #4
2ffed386:	689b      	ldr	r3, [r3, #8]
2ffed388:	4630      	mov	r0, r6
2ffed38a:	eba4 0409 	sub.w	r4, r4, r9
2ffed38e:	464a      	mov	r2, r9
2ffed390:	9301      	str	r3, [sp, #4]
2ffed392:	a901      	add	r1, sp, #4
2ffed394:	444e      	add	r6, r9
2ffed396:	f00a fd2f 	bl	2fff7df8 <memcpy>
2ffed39a:	f1b8 0801 	subs.w	r8, r8, #1
2ffed39e:	d0bb      	beq.n	2ffed318 <stm32_rng_read+0x24>
2ffed3a0:	2c00      	cmp	r4, #0
2ffed3a2:	d1ea      	bne.n	2ffed37a <stm32_rng_read+0x86>
2ffed3a4:	6868      	ldr	r0, [r5, #4]
2ffed3a6:	f006 f8e2 	bl	2fff356e <stm32mp_clk_disable>
2ffed3aa:	b124      	cbz	r4, 2ffed3b6 <stm32_rng_read+0xc2>
2ffed3ac:	1bf2      	subs	r2, r6, r7
2ffed3ae:	2100      	movs	r1, #0
2ffed3b0:	4638      	mov	r0, r7
2ffed3b2:	f00a fd42 	bl	2fff7e3a <memset>
2ffed3b6:	4620      	mov	r0, r4
2ffed3b8:	b003      	add	sp, #12
2ffed3ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2ffed3be:	f06f 043b 	mvn.w	r4, #59	; 0x3b
2ffed3c2:	e7ef      	b.n	2ffed3a4 <stm32_rng_read+0xb0>
2ffed3c4:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2ffed3c8:	e7f5      	b.n	2ffed3b6 <stm32_rng_read+0xc2>
2ffed3ca:	bf00      	nop
2ffed3cc:	2fffc304 	.word	0x2fffc304
2ffed3d0:	2fff860b 	.word	0x2fff860b

2ffed3d4 <stm32_rng_init>:
2ffed3d4:	b510      	push	{r4, lr}
2ffed3d6:	b086      	sub	sp, #24
2ffed3d8:	a801      	add	r0, sp, #4
2ffed3da:	f008 ff71 	bl	2fff62c0 <fdt_get_address>
2ffed3de:	b918      	cbnz	r0, 2ffed3e8 <stm32_rng_init+0x14>
2ffed3e0:	f003 fc70 	bl	2fff0cc4 <console_flush>
2ffed3e4:	f009 eca4 	blx	2fff6d30 <do_panic>
2ffed3e8:	4a1d      	ldr	r2, [pc, #116]	; (2ffed460 <stm32_rng_init+0x8c>)
2ffed3ea:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2ffed3ee:	a802      	add	r0, sp, #8
2ffed3f0:	f009 f850 	bl	2fff6494 <dt_get_node>
2ffed3f4:	2800      	cmp	r0, #0
2ffed3f6:	db2c      	blt.n	2ffed452 <stm32_rng_init+0x7e>
2ffed3f8:	9b05      	ldr	r3, [sp, #20]
2ffed3fa:	079a      	lsls	r2, r3, #30
2ffed3fc:	d529      	bpl.n	2ffed452 <stm32_rng_init+0x7e>
2ffed3fe:	9802      	ldr	r0, [sp, #8]
2ffed400:	4a18      	ldr	r2, [pc, #96]	; (2ffed464 <stm32_rng_init+0x90>)
2ffed402:	4290      	cmp	r0, r2
2ffed404:	d003      	beq.n	2ffed40e <stm32_rng_init+0x3a>
2ffed406:	4818      	ldr	r0, [pc, #96]	; (2ffed468 <stm32_rng_init+0x94>)
2ffed408:	219c      	movs	r1, #156	; 0x9c
2ffed40a:	f00a fccd 	bl	2fff7da8 <__assert>
2ffed40e:	4c17      	ldr	r4, [pc, #92]	; (2ffed46c <stm32_rng_init+0x98>)
2ffed410:	07db      	lsls	r3, r3, #31
2ffed412:	6020      	str	r0, [r4, #0]
2ffed414:	d520      	bpl.n	2ffed458 <stm32_rng_init+0x84>
2ffed416:	f001 fc05 	bl	2ffeec24 <stm32mp_register_non_secure_periph_iomem>
2ffed41a:	9803      	ldr	r0, [sp, #12]
2ffed41c:	2800      	cmp	r0, #0
2ffed41e:	dbdf      	blt.n	2ffed3e0 <stm32_rng_init+0xc>
2ffed420:	6060      	str	r0, [r4, #4]
2ffed422:	f006 f8a1 	bl	2fff3568 <stm32mp_clk_enable>
2ffed426:	6860      	ldr	r0, [r4, #4]
2ffed428:	f006 f8a1 	bl	2fff356e <stm32mp_clk_disable>
2ffed42c:	9804      	ldr	r0, [sp, #16]
2ffed42e:	2800      	cmp	r0, #0
2ffed430:	db0f      	blt.n	2ffed452 <stm32_rng_init+0x7e>
2ffed432:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2ffed436:	f008 fdf9 	bl	2fff602c <stm32mp_reset_assert_to>
2ffed43a:	2800      	cmp	r0, #0
2ffed43c:	d1d0      	bne.n	2ffed3e0 <stm32_rng_init+0xc>
2ffed43e:	2014      	movs	r0, #20
2ffed440:	f004 ff3a 	bl	2fff22b8 <udelay>
2ffed444:	9804      	ldr	r0, [sp, #16]
2ffed446:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2ffed44a:	f008 fe27 	bl	2fff609c <stm32mp_reset_deassert_to>
2ffed44e:	2800      	cmp	r0, #0
2ffed450:	d1c6      	bne.n	2ffed3e0 <stm32_rng_init+0xc>
2ffed452:	2000      	movs	r0, #0
2ffed454:	b006      	add	sp, #24
2ffed456:	bd10      	pop	{r4, pc}
2ffed458:	f001 fbe1 	bl	2ffeec1e <stm32mp_register_secure_periph_iomem>
2ffed45c:	e7dd      	b.n	2ffed41a <stm32_rng_init+0x46>
2ffed45e:	bf00      	nop
2ffed460:	2fff85e3 	.word	0x2fff85e3
2ffed464:	54003000 	.word	0x54003000
2ffed468:	2fff85f0 	.word	0x2fff85f0
2ffed46c:	2fffc304 	.word	0x2fffc304

2ffed470 <stm32_rtc_read_calendar>:
2ffed470:	4b0a      	ldr	r3, [pc, #40]	; (2ffed49c <stm32_rtc_read_calendar+0x2c>)
2ffed472:	681a      	ldr	r2, [r3, #0]
2ffed474:	6991      	ldr	r1, [r2, #24]
2ffed476:	0689      	lsls	r1, r1, #26
2ffed478:	d408      	bmi.n	2ffed48c <stm32_rtc_read_calendar+0x1c>
2ffed47a:	68d1      	ldr	r1, [r2, #12]
2ffed47c:	f021 0120 	bic.w	r1, r1, #32
2ffed480:	60d1      	str	r1, [r2, #12]
2ffed482:	681a      	ldr	r2, [r3, #0]
2ffed484:	320c      	adds	r2, #12
2ffed486:	6811      	ldr	r1, [r2, #0]
2ffed488:	0689      	lsls	r1, r1, #26
2ffed48a:	d5fc      	bpl.n	2ffed486 <stm32_rtc_read_calendar+0x16>
2ffed48c:	681b      	ldr	r3, [r3, #0]
2ffed48e:	689a      	ldr	r2, [r3, #8]
2ffed490:	6002      	str	r2, [r0, #0]
2ffed492:	681a      	ldr	r2, [r3, #0]
2ffed494:	6042      	str	r2, [r0, #4]
2ffed496:	685b      	ldr	r3, [r3, #4]
2ffed498:	6083      	str	r3, [r0, #8]
2ffed49a:	4770      	bx	lr
2ffed49c:	2fffc310 	.word	0x2fffc310

2ffed4a0 <stm32_is_a_leap_year>:
2ffed4a0:	0783      	lsls	r3, r0, #30
2ffed4a2:	d10f      	bne.n	2ffed4c4 <stm32_is_a_leap_year+0x24>
2ffed4a4:	2264      	movs	r2, #100	; 0x64
2ffed4a6:	fbb0 f3f2 	udiv	r3, r0, r2
2ffed4aa:	fb02 0313 	mls	r3, r2, r3, r0
2ffed4ae:	b95b      	cbnz	r3, 2ffed4c8 <stm32_is_a_leap_year+0x28>
2ffed4b0:	f44f 72c8 	mov.w	r2, #400	; 0x190
2ffed4b4:	fbb0 f3f2 	udiv	r3, r0, r2
2ffed4b8:	fb02 0013 	mls	r0, r2, r3, r0
2ffed4bc:	fab0 f080 	clz	r0, r0
2ffed4c0:	0940      	lsrs	r0, r0, #5
2ffed4c2:	4770      	bx	lr
2ffed4c4:	2000      	movs	r0, #0
2ffed4c6:	4770      	bx	lr
2ffed4c8:	2001      	movs	r0, #1
2ffed4ca:	4770      	bx	lr

2ffed4cc <stm32_rtc_get_date>:
2ffed4cc:	b510      	push	{r4, lr}
2ffed4ce:	b918      	cbnz	r0, 2ffed4d8 <stm32_rtc_get_date+0xc>
2ffed4d0:	21ac      	movs	r1, #172	; 0xac
2ffed4d2:	4811      	ldr	r0, [pc, #68]	; (2ffed518 <stm32_rtc_get_date+0x4c>)
2ffed4d4:	f00a fc68 	bl	2fff7da8 <__assert>
2ffed4d8:	b909      	cbnz	r1, 2ffed4de <stm32_rtc_get_date+0x12>
2ffed4da:	21ad      	movs	r1, #173	; 0xad
2ffed4dc:	e7f9      	b.n	2ffed4d2 <stm32_rtc_get_date+0x6>
2ffed4de:	6883      	ldr	r3, [r0, #8]
2ffed4e0:	200a      	movs	r0, #10
2ffed4e2:	f3c3 3242 	ubfx	r2, r3, #13, #3
2ffed4e6:	f003 040f 	and.w	r4, r3, #15
2ffed4ea:	60ca      	str	r2, [r1, #12]
2ffed4ec:	f3c3 1201 	ubfx	r2, r3, #4, #2
2ffed4f0:	fb00 4202 	mla	r2, r0, r2, r4
2ffed4f4:	f3c3 2403 	ubfx	r4, r3, #8, #4
2ffed4f8:	610a      	str	r2, [r1, #16]
2ffed4fa:	f3c3 3200 	ubfx	r2, r3, #12, #1
2ffed4fe:	fb00 4202 	mla	r2, r0, r2, r4
2ffed502:	614a      	str	r2, [r1, #20]
2ffed504:	f3c3 5203 	ubfx	r2, r3, #20, #4
2ffed508:	f3c3 4303 	ubfx	r3, r3, #16, #4
2ffed50c:	f503 63fa 	add.w	r3, r3, #2000	; 0x7d0
2ffed510:	fb00 3302 	mla	r3, r0, r2, r3
2ffed514:	618b      	str	r3, [r1, #24]
2ffed516:	bd10      	pop	{r4, pc}
2ffed518:	2fff8623 	.word	0x2fff8623

2ffed51c <stm32_rtc_get_time>:
2ffed51c:	b510      	push	{r4, lr}
2ffed51e:	b918      	cbnz	r0, 2ffed528 <stm32_rtc_get_time+0xc>
2ffed520:	2196      	movs	r1, #150	; 0x96
2ffed522:	4811      	ldr	r0, [pc, #68]	; (2ffed568 <stm32_rtc_get_time+0x4c>)
2ffed524:	f00a fc40 	bl	2fff7da8 <__assert>
2ffed528:	b909      	cbnz	r1, 2ffed52e <stm32_rtc_get_time+0x12>
2ffed52a:	2197      	movs	r1, #151	; 0x97
2ffed52c:	e7f9      	b.n	2ffed522 <stm32_rtc_get_time+0x6>
2ffed52e:	6843      	ldr	r3, [r0, #4]
2ffed530:	240a      	movs	r4, #10
2ffed532:	f3c3 4003 	ubfx	r0, r3, #16, #4
2ffed536:	f3c3 5201 	ubfx	r2, r3, #20, #2
2ffed53a:	fb04 0202 	mla	r2, r4, r2, r0
2ffed53e:	0258      	lsls	r0, r3, #9
2ffed540:	f04f 000a 	mov.w	r0, #10
2ffed544:	f3c3 2403 	ubfx	r4, r3, #8, #4
2ffed548:	bf48      	it	mi
2ffed54a:	320c      	addmi	r2, #12
2ffed54c:	600a      	str	r2, [r1, #0]
2ffed54e:	f3c3 3202 	ubfx	r2, r3, #12, #3
2ffed552:	fb00 4202 	mla	r2, r0, r2, r4
2ffed556:	604a      	str	r2, [r1, #4]
2ffed558:	f3c3 1202 	ubfx	r2, r3, #4, #3
2ffed55c:	f003 030f 	and.w	r3, r3, #15
2ffed560:	fb00 3302 	mla	r3, r0, r2, r3
2ffed564:	608b      	str	r3, [r1, #8]
2ffed566:	bd10      	pop	{r4, pc}
2ffed568:	2fff8623 	.word	0x2fff8623

2ffed56c <stm32_rtc_regs_lock>:
2ffed56c:	b508      	push	{r3, lr}
2ffed56e:	f003 fcc8 	bl	2fff0f02 <stm32mp_lock_available>
2ffed572:	b120      	cbz	r0, 2ffed57e <stm32_rtc_regs_lock+0x12>
2ffed574:	4802      	ldr	r0, [pc, #8]	; (2ffed580 <stm32_rtc_regs_lock+0x14>)
2ffed576:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffed57a:	f00d badd 	b.w	2fffab38 <__spin_lock_from_thumb>
2ffed57e:	bd08      	pop	{r3, pc}
2ffed580:	2fffc30c 	.word	0x2fffc30c

2ffed584 <stm32_rtc_regs_unlock>:
2ffed584:	b508      	push	{r3, lr}
2ffed586:	f003 fcbc 	bl	2fff0f02 <stm32mp_lock_available>
2ffed58a:	b120      	cbz	r0, 2ffed596 <stm32_rtc_regs_unlock+0x12>
2ffed58c:	4802      	ldr	r0, [pc, #8]	; (2ffed598 <stm32_rtc_regs_unlock+0x14>)
2ffed58e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffed592:	f00d bac9 	b.w	2fffab28 <__spin_unlock_from_thumb>
2ffed596:	bd08      	pop	{r3, pc}
2ffed598:	2fffc30c 	.word	0x2fffc30c

2ffed59c <stm32_rtc_get_calendar>:
2ffed59c:	b570      	push	{r4, r5, r6, lr}
2ffed59e:	4604      	mov	r4, r0
2ffed5a0:	4d0d      	ldr	r5, [pc, #52]	; (2ffed5d8 <stm32_rtc_get_calendar+0x3c>)
2ffed5a2:	f006 f963 	bl	2fff386c <stm32mp1_rtc_get_read_twice>
2ffed5a6:	4606      	mov	r6, r0
2ffed5a8:	f7ff ffe0 	bl	2ffed56c <stm32_rtc_regs_lock>
2ffed5ac:	6868      	ldr	r0, [r5, #4]
2ffed5ae:	f005 ffdb 	bl	2fff3568 <stm32mp_clk_enable>
2ffed5b2:	4620      	mov	r0, r4
2ffed5b4:	f7ff ff5c 	bl	2ffed470 <stm32_rtc_read_calendar>
2ffed5b8:	b13e      	cbz	r6, 2ffed5ca <stm32_rtc_get_calendar+0x2e>
2ffed5ba:	6866      	ldr	r6, [r4, #4]
2ffed5bc:	f7ff ff58 	bl	2ffed470 <stm32_rtc_read_calendar>
2ffed5c0:	6863      	ldr	r3, [r4, #4]
2ffed5c2:	42b3      	cmp	r3, r6
2ffed5c4:	d001      	beq.n	2ffed5ca <stm32_rtc_get_calendar+0x2e>
2ffed5c6:	f7ff ff53 	bl	2ffed470 <stm32_rtc_read_calendar>
2ffed5ca:	6868      	ldr	r0, [r5, #4]
2ffed5cc:	f005 ffcf 	bl	2fff356e <stm32mp_clk_disable>
2ffed5d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffed5d4:	f7ff bfd6 	b.w	2ffed584 <stm32_rtc_regs_unlock>
2ffed5d8:	2fffc310 	.word	0x2fffc310

2ffed5dc <stm32_rtc_diff_calendar>:
2ffed5dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffed5e0:	4605      	mov	r5, r0
2ffed5e2:	4f6d      	ldr	r7, [pc, #436]	; (2ffed798 <stm32_rtc_diff_calendar+0x1bc>)
2ffed5e4:	b091      	sub	sp, #68	; 0x44
2ffed5e6:	460c      	mov	r4, r1
2ffed5e8:	263c      	movs	r6, #60	; 0x3c
2ffed5ea:	6878      	ldr	r0, [r7, #4]
2ffed5ec:	f005 ffbc 	bl	2fff3568 <stm32mp_clk_enable>
2ffed5f0:	a902      	add	r1, sp, #8
2ffed5f2:	4628      	mov	r0, r5
2ffed5f4:	f7ff ff6a 	bl	2ffed4cc <stm32_rtc_get_date>
2ffed5f8:	4620      	mov	r0, r4
2ffed5fa:	a909      	add	r1, sp, #36	; 0x24
2ffed5fc:	f7ff ff66 	bl	2ffed4cc <stm32_rtc_get_date>
2ffed600:	a902      	add	r1, sp, #8
2ffed602:	4628      	mov	r0, r5
2ffed604:	f7ff ff8a 	bl	2ffed51c <stm32_rtc_get_time>
2ffed608:	4620      	mov	r0, r4
2ffed60a:	a909      	add	r1, sp, #36	; 0x24
2ffed60c:	f7ff ff86 	bl	2ffed51c <stm32_rtc_get_time>
2ffed610:	683b      	ldr	r3, [r7, #0]
2ffed612:	9902      	ldr	r1, [sp, #8]
2ffed614:	691a      	ldr	r2, [r3, #16]
2ffed616:	691b      	ldr	r3, [r3, #16]
2ffed618:	f3c2 0c0e 	ubfx	ip, r2, #0, #15
2ffed61c:	9a03      	ldr	r2, [sp, #12]
2ffed61e:	f3c3 0e0e 	ubfx	lr, r3, #0, #15
2ffed622:	2300      	movs	r3, #0
2ffed624:	fbe6 2301 	umlal	r2, r3, r6, r1
2ffed628:	8824      	ldrh	r4, [r4, #0]
2ffed62a:	fba2 8906 	umull	r8, r9, r2, r6
2ffed62e:	fb06 9903 	mla	r9, r6, r3, r9
2ffed632:	9b04      	ldr	r3, [sp, #16]
2ffed634:	ebae 0404 	sub.w	r4, lr, r4
2ffed638:	f10e 0e01 	add.w	lr, lr, #1
2ffed63c:	eb18 0003 	adds.w	r0, r8, r3
2ffed640:	9b0a      	ldr	r3, [sp, #40]	; 0x28
2ffed642:	f149 0100 	adc.w	r1, r9, #0
2ffed646:	f04f 0900 	mov.w	r9, #0
2ffed64a:	4698      	mov	r8, r3
2ffed64c:	9b09      	ldr	r3, [sp, #36]	; 0x24
2ffed64e:	fbe6 8903 	umlal	r8, r9, r6, r3
2ffed652:	fba8 2306 	umull	r2, r3, r8, r6
2ffed656:	fb06 3309 	mla	r3, r6, r9, r3
2ffed65a:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
2ffed65c:	eb12 0806 	adds.w	r8, r2, r6
2ffed660:	f143 0900 	adc.w	r9, r3, #0
2ffed664:	ebb0 0208 	subs.w	r2, r0, r8
2ffed668:	eb61 0009 	sbc.w	r0, r1, r9
2ffed66c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2ffed670:	fba2 2301 	umull	r2, r3, r2, r1
2ffed674:	fb01 3300 	mla	r3, r1, r0, r3
2ffed678:	8828      	ldrh	r0, [r5, #0]
2ffed67a:	f8dd 9018 	ldr.w	r9, [sp, #24]
2ffed67e:	ebac 0000 	sub.w	r0, ip, r0
2ffed682:	f10c 0c01 	add.w	ip, ip, #1
2ffed686:	4348      	muls	r0, r1
2ffed688:	4361      	muls	r1, r4
2ffed68a:	fbb0 f0fc 	udiv	r0, r0, ip
2ffed68e:	fbb1 fefe 	udiv	lr, r1, lr
2ffed692:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
2ffed696:	ebb0 000e 	subs.w	r0, r0, lr
2ffed69a:	eb60 0100 	sbc.w	r1, r0, r0
2ffed69e:	eb12 0a00 	adds.w	sl, r2, r0
2ffed6a2:	eb43 0b01 	adc.w	fp, r3, r1
2ffed6a6:	45c1      	cmp	r9, r8
2ffed6a8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
2ffed6aa:	bf38      	it	cc
2ffed6ac:	4b3b      	ldrcc	r3, [pc, #236]	; (2ffed79c <stm32_rtc_diff_calendar+0x1c0>)
2ffed6ae:	eba9 0108 	sub.w	r1, r9, r8
2ffed6b2:	bf38      	it	cc
2ffed6b4:	189b      	addcc	r3, r3, r2
2ffed6b6:	9c07      	ldr	r4, [sp, #28]
2ffed6b8:	bf3c      	itt	cc
2ffed6ba:	f813 3c01 	ldrbcc.w	r3, [r3, #-1]
2ffed6be:	18c9      	addcc	r1, r1, r3
2ffed6c0:	1c53      	adds	r3, r2, #1
2ffed6c2:	429c      	cmp	r4, r3
2ffed6c4:	d837      	bhi.n	2ffed736 <stm32_rtc_diff_calendar+0x15a>
2ffed6c6:	1e50      	subs	r0, r2, #1
2ffed6c8:	4284      	cmp	r4, r0
2ffed6ca:	d342      	bcc.n	2ffed752 <stm32_rtc_diff_calendar+0x176>
2ffed6cc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
2ffed6ce:	9e08      	ldr	r6, [sp, #32]
2ffed6d0:	1c5d      	adds	r5, r3, #1
2ffed6d2:	42ae      	cmp	r6, r5
2ffed6d4:	d907      	bls.n	2ffed6e6 <stm32_rtc_diff_calendar+0x10a>
2ffed6d6:	1af0      	subs	r0, r6, r3
2ffed6d8:	f240 1c6d 	movw	ip, #365	; 0x16d
2ffed6dc:	fb0c 1100 	mla	r1, ip, r0, r1
2ffed6e0:	f46f 70b6 	mvn.w	r0, #364	; 0x16c
2ffed6e4:	4401      	add	r1, r0
2ffed6e6:	9201      	str	r2, [sp, #4]
2ffed6e8:	b181      	cbz	r1, 2ffed70c <stm32_rtc_diff_calendar+0x130>
2ffed6ea:	9300      	str	r3, [sp, #0]
2ffed6ec:	4618      	mov	r0, r3
2ffed6ee:	f7ff fed7 	bl	2ffed4a0 <stm32_is_a_leap_year>
2ffed6f2:	9b00      	ldr	r3, [sp, #0]
2ffed6f4:	9a01      	ldr	r2, [sp, #4]
2ffed6f6:	429e      	cmp	r6, r3
2ffed6f8:	d136      	bne.n	2ffed768 <stm32_rtc_diff_calendar+0x18c>
2ffed6fa:	b138      	cbz	r0, 2ffed70c <stm32_rtc_diff_calendar+0x130>
2ffed6fc:	2a02      	cmp	r2, #2
2ffed6fe:	d805      	bhi.n	2ffed70c <stm32_rtc_diff_calendar+0x130>
2ffed700:	2c02      	cmp	r4, #2
2ffed702:	d903      	bls.n	2ffed70c <stm32_rtc_diff_calendar+0x130>
2ffed704:	f1b9 0f1c 	cmp.w	r9, #28
2ffed708:	d800      	bhi.n	2ffed70c <stm32_rtc_diff_calendar+0x130>
2ffed70a:	3101      	adds	r1, #1
2ffed70c:	4b24      	ldr	r3, [pc, #144]	; (2ffed7a0 <stm32_rtc_diff_calendar+0x1c4>)
2ffed70e:	6878      	ldr	r0, [r7, #4]
2ffed710:	fbe3 ab01 	umlal	sl, fp, r3, r1
2ffed714:	f005 ff2b 	bl	2fff356e <stm32mp_clk_disable>
2ffed718:	4650      	mov	r0, sl
2ffed71a:	4659      	mov	r1, fp
2ffed71c:	b011      	add	sp, #68	; 0x44
2ffed71e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffed722:	182e      	adds	r6, r5, r0
2ffed724:	3001      	adds	r0, #1
2ffed726:	4284      	cmp	r4, r0
2ffed728:	f816 6c01 	ldrb.w	r6, [r6, #-1]
2ffed72c:	4431      	add	r1, r6
2ffed72e:	d9ca      	bls.n	2ffed6c6 <stm32_rtc_diff_calendar+0xea>
2ffed730:	280b      	cmp	r0, #11
2ffed732:	d9f6      	bls.n	2ffed722 <stm32_rtc_diff_calendar+0x146>
2ffed734:	e7c7      	b.n	2ffed6c6 <stm32_rtc_diff_calendar+0xea>
2ffed736:	4d19      	ldr	r5, [pc, #100]	; (2ffed79c <stm32_rtc_diff_calendar+0x1c0>)
2ffed738:	4618      	mov	r0, r3
2ffed73a:	e7f9      	b.n	2ffed730 <stm32_rtc_diff_calendar+0x154>
2ffed73c:	182e      	adds	r6, r5, r0
2ffed73e:	3001      	adds	r0, #1
2ffed740:	f816 6c01 	ldrb.w	r6, [r6, #-1]
2ffed744:	4431      	add	r1, r6
2ffed746:	4284      	cmp	r4, r0
2ffed748:	d901      	bls.n	2ffed74e <stm32_rtc_diff_calendar+0x172>
2ffed74a:	280c      	cmp	r0, #12
2ffed74c:	d1f6      	bne.n	2ffed73c <stm32_rtc_diff_calendar+0x160>
2ffed74e:	4813      	ldr	r0, [pc, #76]	; (2ffed79c <stm32_rtc_diff_calendar+0x1c0>)
2ffed750:	e007      	b.n	2ffed762 <stm32_rtc_diff_calendar+0x186>
2ffed752:	4d12      	ldr	r5, [pc, #72]	; (2ffed79c <stm32_rtc_diff_calendar+0x1c0>)
2ffed754:	2001      	movs	r0, #1
2ffed756:	e7f6      	b.n	2ffed746 <stm32_rtc_diff_calendar+0x16a>
2ffed758:	18c5      	adds	r5, r0, r3
2ffed75a:	3301      	adds	r3, #1
2ffed75c:	f815 5c01 	ldrb.w	r5, [r5, #-1]
2ffed760:	4429      	add	r1, r5
2ffed762:	2b0b      	cmp	r3, #11
2ffed764:	d9f8      	bls.n	2ffed758 <stm32_rtc_diff_calendar+0x17c>
2ffed766:	e7b1      	b.n	2ffed6cc <stm32_rtc_diff_calendar+0xf0>
2ffed768:	b128      	cbz	r0, 2ffed776 <stm32_rtc_diff_calendar+0x19a>
2ffed76a:	2a02      	cmp	r2, #2
2ffed76c:	d803      	bhi.n	2ffed776 <stm32_rtc_diff_calendar+0x19a>
2ffed76e:	f1b8 0f1c 	cmp.w	r8, #28
2ffed772:	bf98      	it	ls
2ffed774:	3101      	addls	r1, #1
2ffed776:	4630      	mov	r0, r6
2ffed778:	f7ff fe92 	bl	2ffed4a0 <stm32_is_a_leap_year>
2ffed77c:	b110      	cbz	r0, 2ffed784 <stm32_rtc_diff_calendar+0x1a8>
2ffed77e:	2c02      	cmp	r4, #2
2ffed780:	d900      	bls.n	2ffed784 <stm32_rtc_diff_calendar+0x1a8>
2ffed782:	3101      	adds	r1, #1
2ffed784:	42ae      	cmp	r6, r5
2ffed786:	d9c1      	bls.n	2ffed70c <stm32_rtc_diff_calendar+0x130>
2ffed788:	4628      	mov	r0, r5
2ffed78a:	f7ff fe89 	bl	2ffed4a0 <stm32_is_a_leap_year>
2ffed78e:	b100      	cbz	r0, 2ffed792 <stm32_rtc_diff_calendar+0x1b6>
2ffed790:	3101      	adds	r1, #1
2ffed792:	3501      	adds	r5, #1
2ffed794:	e7f6      	b.n	2ffed784 <stm32_rtc_diff_calendar+0x1a8>
2ffed796:	bf00      	nop
2ffed798:	2fffc310 	.word	0x2fffc310
2ffed79c:	2fff8617 	.word	0x2fff8617
2ffed7a0:	05265c00 	.word	0x05265c00

2ffed7a4 <stm32_rtc_get_timestamp>:
2ffed7a4:	b530      	push	{r4, r5, lr}
2ffed7a6:	b085      	sub	sp, #20
2ffed7a8:	4c17      	ldr	r4, [pc, #92]	; (2ffed808 <stm32_rtc_get_timestamp+0x64>)
2ffed7aa:	4605      	mov	r5, r0
2ffed7ac:	f7ff fede 	bl	2ffed56c <stm32_rtc_regs_lock>
2ffed7b0:	6860      	ldr	r0, [r4, #4]
2ffed7b2:	f005 fed9 	bl	2fff3568 <stm32mp_clk_enable>
2ffed7b6:	6823      	ldr	r3, [r4, #0]
2ffed7b8:	6d1a      	ldr	r2, [r3, #80]	; 0x50
2ffed7ba:	0711      	lsls	r1, r2, #28
2ffed7bc:	d51d      	bpl.n	2ffed7fa <stm32_rtc_get_timestamp+0x56>
2ffed7be:	b91d      	cbnz	r5, 2ffed7c8 <stm32_rtc_get_timestamp+0x24>
2ffed7c0:	4812      	ldr	r0, [pc, #72]	; (2ffed80c <stm32_rtc_get_timestamp+0x68>)
2ffed7c2:	21c1      	movs	r1, #193	; 0xc1
2ffed7c4:	f00a faf0 	bl	2fff7da8 <__assert>
2ffed7c8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
2ffed7ca:	4629      	mov	r1, r5
2ffed7cc:	a801      	add	r0, sp, #4
2ffed7ce:	9202      	str	r2, [sp, #8]
2ffed7d0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
2ffed7d2:	9303      	str	r3, [sp, #12]
2ffed7d4:	f7ff fea2 	bl	2ffed51c <stm32_rtc_get_time>
2ffed7d8:	4629      	mov	r1, r5
2ffed7da:	a801      	add	r0, sp, #4
2ffed7dc:	f7ff fe76 	bl	2ffed4cc <stm32_rtc_get_date>
2ffed7e0:	6822      	ldr	r2, [r4, #0]
2ffed7e2:	6dd3      	ldr	r3, [r2, #92]	; 0x5c
2ffed7e4:	f043 0308 	orr.w	r3, r3, #8
2ffed7e8:	65d3      	str	r3, [r2, #92]	; 0x5c
2ffed7ea:	6823      	ldr	r3, [r4, #0]
2ffed7ec:	6d1a      	ldr	r2, [r3, #80]	; 0x50
2ffed7ee:	06d2      	lsls	r2, r2, #27
2ffed7f0:	bf42      	ittt	mi
2ffed7f2:	6dda      	ldrmi	r2, [r3, #92]	; 0x5c
2ffed7f4:	f042 0210 	orrmi.w	r2, r2, #16
2ffed7f8:	65da      	strmi	r2, [r3, #92]	; 0x5c
2ffed7fa:	6860      	ldr	r0, [r4, #4]
2ffed7fc:	f005 feb7 	bl	2fff356e <stm32mp_clk_disable>
2ffed800:	f7ff fec0 	bl	2ffed584 <stm32_rtc_regs_unlock>
2ffed804:	b005      	add	sp, #20
2ffed806:	bd30      	pop	{r4, r5, pc}
2ffed808:	2fffc310 	.word	0x2fffc310
2ffed80c:	2fff8623 	.word	0x2fff8623

2ffed810 <stm32_rtc_set_tamper_timestamp>:
2ffed810:	b510      	push	{r4, lr}
2ffed812:	f7ff feab 	bl	2ffed56c <stm32_rtc_regs_lock>
2ffed816:	4c0f      	ldr	r4, [pc, #60]	; (2ffed854 <stm32_rtc_set_tamper_timestamp+0x44>)
2ffed818:	6860      	ldr	r0, [r4, #4]
2ffed81a:	f005 fea5 	bl	2fff3568 <stm32mp_clk_enable>
2ffed81e:	6823      	ldr	r3, [r4, #0]
2ffed820:	22ca      	movs	r2, #202	; 0xca
2ffed822:	625a      	str	r2, [r3, #36]	; 0x24
2ffed824:	2253      	movs	r2, #83	; 0x53
2ffed826:	6823      	ldr	r3, [r4, #0]
2ffed828:	625a      	str	r2, [r3, #36]	; 0x24
2ffed82a:	6822      	ldr	r2, [r4, #0]
2ffed82c:	6993      	ldr	r3, [r2, #24]
2ffed82e:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
2ffed832:	6193      	str	r3, [r2, #24]
2ffed834:	6822      	ldr	r2, [r4, #0]
2ffed836:	6a13      	ldr	r3, [r2, #32]
2ffed838:	f023 0308 	bic.w	r3, r3, #8
2ffed83c:	6213      	str	r3, [r2, #32]
2ffed83e:	22ff      	movs	r2, #255	; 0xff
2ffed840:	6823      	ldr	r3, [r4, #0]
2ffed842:	625a      	str	r2, [r3, #36]	; 0x24
2ffed844:	6860      	ldr	r0, [r4, #4]
2ffed846:	f005 fe92 	bl	2fff356e <stm32mp_clk_disable>
2ffed84a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffed84e:	f7ff be99 	b.w	2ffed584 <stm32_rtc_regs_unlock>
2ffed852:	bf00      	nop
2ffed854:	2fffc310 	.word	0x2fffc310

2ffed858 <stm32_rtc_is_timestamp_enable>:
2ffed858:	b538      	push	{r3, r4, r5, lr}
2ffed85a:	4c06      	ldr	r4, [pc, #24]	; (2ffed874 <stm32_rtc_is_timestamp_enable+0x1c>)
2ffed85c:	6860      	ldr	r0, [r4, #4]
2ffed85e:	f005 fe83 	bl	2fff3568 <stm32mp_clk_enable>
2ffed862:	6823      	ldr	r3, [r4, #0]
2ffed864:	6860      	ldr	r0, [r4, #4]
2ffed866:	699d      	ldr	r5, [r3, #24]
2ffed868:	f005 fe81 	bl	2fff356e <stm32mp_clk_disable>
2ffed86c:	f3c5 6040 	ubfx	r0, r5, #25, #1
2ffed870:	bd38      	pop	{r3, r4, r5, pc}
2ffed872:	bf00      	nop
2ffed874:	2fffc310 	.word	0x2fffc310

2ffed878 <stm32_rtc_init>:
2ffed878:	b510      	push	{r4, lr}
2ffed87a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2ffed87e:	4c09      	ldr	r4, [pc, #36]	; (2ffed8a4 <stm32_rtc_init+0x2c>)
2ffed880:	4a09      	ldr	r2, [pc, #36]	; (2ffed8a8 <stm32_rtc_init+0x30>)
2ffed882:	4620      	mov	r0, r4
2ffed884:	f008 fe06 	bl	2fff6494 <dt_get_node>
2ffed888:	2800      	cmp	r0, #0
2ffed88a:	db06      	blt.n	2ffed89a <stm32_rtc_init+0x22>
2ffed88c:	68e3      	ldr	r3, [r4, #12]
2ffed88e:	6820      	ldr	r0, [r4, #0]
2ffed890:	2b02      	cmp	r3, #2
2ffed892:	d103      	bne.n	2ffed89c <stm32_rtc_init+0x24>
2ffed894:	f001 f9c3 	bl	2ffeec1e <stm32mp_register_secure_periph_iomem>
2ffed898:	2000      	movs	r0, #0
2ffed89a:	bd10      	pop	{r4, pc}
2ffed89c:	f001 f9c2 	bl	2ffeec24 <stm32mp_register_non_secure_periph_iomem>
2ffed8a0:	e7fa      	b.n	2ffed898 <stm32_rtc_init+0x20>
2ffed8a2:	bf00      	nop
2ffed8a4:	2fffc310 	.word	0x2fffc310
2ffed8a8:	2fff863e 	.word	0x2fff863e

2ffed8ac <stm32_tamp_configure_internal>:
2ffed8ac:	290f      	cmp	r1, #15
2ffed8ae:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffed8b0:	d80e      	bhi.n	2ffed8d0 <stm32_tamp_configure_internal+0x24>
2ffed8b2:	4c12      	ldr	r4, [pc, #72]	; (2ffed8fc <stm32_tamp_configure_internal+0x50>)
2ffed8b4:	2500      	movs	r5, #0
2ffed8b6:	f04f 0e01 	mov.w	lr, #1
2ffed8ba:	6826      	ldr	r6, [r4, #0]
2ffed8bc:	f8d4 c008 	ldr.w	ip, [r4, #8]
2ffed8c0:	f106 072c 	add.w	r7, r6, #44	; 0x2c
2ffed8c4:	b2ab      	uxth	r3, r5
2ffed8c6:	4299      	cmp	r1, r3
2ffed8c8:	d806      	bhi.n	2ffed8d8 <stm32_tamp_configure_internal+0x2c>
2ffed8ca:	6160      	str	r0, [r4, #20]
2ffed8cc:	8221      	strh	r1, [r4, #16]
2ffed8ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffed8d0:	480b      	ldr	r0, [pc, #44]	; (2ffed900 <stm32_tamp_configure_internal+0x54>)
2ffed8d2:	21ab      	movs	r1, #171	; 0xab
2ffed8d4:	f00a fa68 	bl	2fff7da8 <__assert>
2ffed8d8:	f850 3035 	ldr.w	r3, [r0, r5, lsl #3]
2ffed8dc:	1c5a      	adds	r2, r3, #1
2ffed8de:	d00b      	beq.n	2ffed8f8 <stm32_tamp_configure_internal+0x4c>
2ffed8e0:	3310      	adds	r3, #16
2ffed8e2:	fa0e f303 	lsl.w	r3, lr, r3
2ffed8e6:	ea1c 0f03 	tst.w	ip, r3
2ffed8ea:	d005      	beq.n	2ffed8f8 <stm32_tamp_configure_internal+0x4c>
2ffed8ec:	6832      	ldr	r2, [r6, #0]
2ffed8ee:	431a      	orrs	r2, r3
2ffed8f0:	6032      	str	r2, [r6, #0]
2ffed8f2:	683a      	ldr	r2, [r7, #0]
2ffed8f4:	4313      	orrs	r3, r2
2ffed8f6:	603b      	str	r3, [r7, #0]
2ffed8f8:	3501      	adds	r5, #1
2ffed8fa:	e7e3      	b.n	2ffed8c4 <stm32_tamp_configure_internal+0x18>
2ffed8fc:	2fffc320 	.word	0x2fffc320
2ffed900:	2fff8674 	.word	0x2fff8674

2ffed904 <stm32_tamp_configure_external>:
2ffed904:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffed908:	2907      	cmp	r1, #7
2ffed90a:	b085      	sub	sp, #20
2ffed90c:	4607      	mov	r7, r0
2ffed90e:	460e      	mov	r6, r1
2ffed910:	9301      	str	r3, [sp, #4]
2ffed912:	d830      	bhi.n	2ffed976 <stm32_tamp_configure_external+0x72>
2ffed914:	493a      	ldr	r1, [pc, #232]	; (2ffeda00 <stm32_tamp_configure_external+0xfc>)
2ffed916:	230c      	movs	r3, #12
2ffed918:	fb13 0306 	smlabb	r3, r3, r6, r0
2ffed91c:	680c      	ldr	r4, [r1, #0]
2ffed91e:	4605      	mov	r5, r0
2ffed920:	9300      	str	r3, [sp, #0]
2ffed922:	4688      	mov	r8, r1
2ffed924:	f104 0e2c 	add.w	lr, r4, #44	; 0x2c
2ffed928:	f104 0904 	add.w	r9, r4, #4
2ffed92c:	2300      	movs	r3, #0
2ffed92e:	f04f 0a01 	mov.w	sl, #1
2ffed932:	9900      	ldr	r1, [sp, #0]
2ffed934:	42a9      	cmp	r1, r5
2ffed936:	d122      	bne.n	2ffed97e <stm32_tamp_configure_external+0x7a>
2ffed938:	60e2      	str	r2, [r4, #12]
2ffed93a:	2b00      	cmp	r3, #0
2ffed93c:	d059      	beq.n	2ffed9f2 <stm32_tamp_configure_external+0xee>
2ffed93e:	9a01      	ldr	r2, [sp, #4]
2ffed940:	2504      	movs	r5, #4
2ffed942:	4313      	orrs	r3, r2
2ffed944:	6123      	str	r3, [r4, #16]
2ffed946:	2104      	movs	r1, #4
2ffed948:	a803      	add	r0, sp, #12
2ffed94a:	f7ff fcd3 	bl	2ffed2f4 <stm32_rng_read>
2ffed94e:	b958      	cbnz	r0, 2ffed968 <stm32_tamp_configure_external+0x64>
2ffed950:	9b03      	ldr	r3, [sp, #12]
2ffed952:	3d01      	subs	r5, #1
2ffed954:	f015 05ff 	ands.w	r5, r5, #255	; 0xff
2ffed958:	6163      	str	r3, [r4, #20]
2ffed95a:	d1f4      	bne.n	2ffed946 <stm32_tamp_configure_external+0x42>
2ffed95c:	2364      	movs	r3, #100	; 0x64
2ffed95e:	69a2      	ldr	r2, [r4, #24]
2ffed960:	0452      	lsls	r2, r2, #17
2ffed962:	d544      	bpl.n	2ffed9ee <stm32_tamp_configure_external+0xea>
2ffed964:	2b00      	cmp	r3, #0
2ffed966:	d140      	bne.n	2ffed9ea <stm32_tamp_configure_external+0xe6>
2ffed968:	4826      	ldr	r0, [pc, #152]	; (2ffeda04 <stm32_tamp_configure_external+0x100>)
2ffed96a:	f003 f909 	bl	2fff0b80 <tf_log>
2ffed96e:	f003 f9a9 	bl	2fff0cc4 <console_flush>
2ffed972:	f009 e9de 	blx	2fff6d30 <do_panic>
2ffed976:	4824      	ldr	r0, [pc, #144]	; (2ffeda08 <stm32_tamp_configure_external+0x104>)
2ffed978:	21ca      	movs	r1, #202	; 0xca
2ffed97a:	f00a fa15 	bl	2fff7da8 <__assert>
2ffed97e:	6828      	ldr	r0, [r5, #0]
2ffed980:	1c41      	adds	r1, r0, #1
2ffed982:	d021      	beq.n	2ffed9c8 <stm32_tamp_configure_external+0xc4>
2ffed984:	6821      	ldr	r1, [r4, #0]
2ffed986:	fa0a fc00 	lsl.w	ip, sl, r0
2ffed98a:	ea4c 0101 	orr.w	r1, ip, r1
2ffed98e:	6021      	str	r1, [r4, #0]
2ffed990:	7929      	ldrb	r1, [r5, #4]
2ffed992:	2901      	cmp	r1, #1
2ffed994:	d11a      	bne.n	2ffed9cc <stm32_tamp_configure_external+0xc8>
2ffed996:	f100 0b18 	add.w	fp, r0, #24
2ffed99a:	fa01 f10b 	lsl.w	r1, r1, fp
2ffed99e:	f895 b005 	ldrb.w	fp, [r5, #5]
2ffed9a2:	f1bb 0f00 	cmp.w	fp, #0
2ffed9a6:	d001      	beq.n	2ffed9ac <stm32_tamp_configure_external+0xa8>
2ffed9a8:	ea41 010c 	orr.w	r1, r1, ip
2ffed9ac:	f895 b006 	ldrb.w	fp, [r5, #6]
2ffed9b0:	f1bb 0f00 	cmp.w	fp, #0
2ffed9b4:	d012      	beq.n	2ffed9dc <stm32_tamp_configure_external+0xd8>
2ffed9b6:	3010      	adds	r0, #16
2ffed9b8:	fa0a f000 	lsl.w	r0, sl, r0
2ffed9bc:	4301      	orrs	r1, r0
2ffed9be:	f8d9 0000 	ldr.w	r0, [r9]
2ffed9c2:	4301      	orrs	r1, r0
2ffed9c4:	f8c9 1000 	str.w	r1, [r9]
2ffed9c8:	350c      	adds	r5, #12
2ffed9ca:	e7b2      	b.n	2ffed932 <stm32_tamp_configure_external+0x2e>
2ffed9cc:	2902      	cmp	r1, #2
2ffed9ce:	f04f 0100 	mov.w	r1, #0
2ffed9d2:	bf04      	itt	eq
2ffed9d4:	ea43 030c 	orreq.w	r3, r3, ip
2ffed9d8:	b2db      	uxtbeq	r3, r3
2ffed9da:	e7e0      	b.n	2ffed99e <stm32_tamp_configure_external+0x9a>
2ffed9dc:	f8de 0000 	ldr.w	r0, [lr]
2ffed9e0:	ea4c 0000 	orr.w	r0, ip, r0
2ffed9e4:	f8ce 0000 	str.w	r0, [lr]
2ffed9e8:	e7e9      	b.n	2ffed9be <stm32_tamp_configure_external+0xba>
2ffed9ea:	3b01      	subs	r3, #1
2ffed9ec:	e7b7      	b.n	2ffed95e <stm32_tamp_configure_external+0x5a>
2ffed9ee:	2b00      	cmp	r3, #0
2ffed9f0:	d0ba      	beq.n	2ffed968 <stm32_tamp_configure_external+0x64>
2ffed9f2:	f8c8 7018 	str.w	r7, [r8, #24]
2ffed9f6:	f888 6012 	strb.w	r6, [r8, #18]
2ffed9fa:	b005      	add	sp, #20
2ffed9fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffeda00:	2fffc320 	.word	0x2fffc320
2ffeda04:	2fff864e 	.word	0x2fff864e
2ffeda08:	2fff8674 	.word	0x2fff8674

2ffeda0c <stm32_tamp_it_handler>:
2ffeda0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffeda10:	b08a      	sub	sp, #40	; 0x28
2ffeda12:	4d33      	ldr	r5, [pc, #204]	; (2ffedae0 <stm32_tamp_it_handler+0xd4>)
2ffeda14:	682b      	ldr	r3, [r5, #0]
2ffeda16:	f8d5 9014 	ldr.w	r9, [r5, #20]
2ffeda1a:	6b1c      	ldr	r4, [r3, #48]	; 0x30
2ffeda1c:	69af      	ldr	r7, [r5, #24]
2ffeda1e:	f7ff ff1b 	bl	2ffed858 <stm32_rtc_is_timestamp_enable>
2ffeda22:	b178      	cbz	r0, 2ffeda44 <stm32_tamp_it_handler+0x38>
2ffeda24:	a803      	add	r0, sp, #12
2ffeda26:	f7ff febd 	bl	2ffed7a4 <stm32_rtc_get_timestamp>
2ffeda2a:	482e      	ldr	r0, [pc, #184]	; (2ffedae4 <stm32_tamp_it_handler+0xd8>)
2ffeda2c:	f003 f8a8 	bl	2fff0b80 <tf_log>
2ffeda30:	9b05      	ldr	r3, [sp, #20]
2ffeda32:	9a08      	ldr	r2, [sp, #32]
2ffeda34:	9301      	str	r3, [sp, #4]
2ffeda36:	9b04      	ldr	r3, [sp, #16]
2ffeda38:	9907      	ldr	r1, [sp, #28]
2ffeda3a:	9300      	str	r3, [sp, #0]
2ffeda3c:	482a      	ldr	r0, [pc, #168]	; (2ffedae8 <stm32_tamp_it_handler+0xdc>)
2ffeda3e:	9b03      	ldr	r3, [sp, #12]
2ffeda40:	f003 f89e 	bl	2fff0b80 <tf_log>
2ffeda44:	0c23      	lsrs	r3, r4, #16
2ffeda46:	041b      	lsls	r3, r3, #16
2ffeda48:	2b00      	cmp	r3, #0
2ffeda4a:	d045      	beq.n	2ffedad8 <stm32_tamp_it_handler+0xcc>
2ffeda4c:	f04f 0800 	mov.w	r8, #0
2ffeda50:	f04f 0a01 	mov.w	sl, #1
2ffeda54:	8a2a      	ldrh	r2, [r5, #16]
2ffeda56:	fa5f f388 	uxtb.w	r3, r8
2ffeda5a:	4293      	cmp	r3, r2
2ffeda5c:	d322      	bcc.n	2ffedaa4 <stm32_tamp_it_handler+0x98>
2ffeda5e:	f014 0fff 	tst.w	r4, #255	; 0xff
2ffeda62:	d036      	beq.n	2ffedad2 <stm32_tamp_it_handler+0xc6>
2ffeda64:	2600      	movs	r6, #0
2ffeda66:	f04f 090c 	mov.w	r9, #12
2ffeda6a:	f04f 0a01 	mov.w	sl, #1
2ffeda6e:	7caa      	ldrb	r2, [r5, #18]
2ffeda70:	b2f3      	uxtb	r3, r6
2ffeda72:	429a      	cmp	r2, r3
2ffeda74:	d92d      	bls.n	2ffedad2 <stm32_tamp_it_handler+0xc6>
2ffeda76:	fb09 f303 	mul.w	r3, r9, r3
2ffeda7a:	58f8      	ldr	r0, [r7, r3]
2ffeda7c:	18fa      	adds	r2, r7, r3
2ffeda7e:	fa0a f800 	lsl.w	r8, sl, r0
2ffeda82:	ea18 0f04 	tst.w	r8, r4
2ffeda86:	d009      	beq.n	2ffeda9c <stm32_tamp_it_handler+0x90>
2ffeda88:	6893      	ldr	r3, [r2, #8]
2ffeda8a:	b103      	cbz	r3, 2ffeda8e <stm32_tamp_it_handler+0x82>
2ffeda8c:	4798      	blx	r3
2ffeda8e:	682a      	ldr	r2, [r5, #0]
2ffeda90:	ea24 0408 	bic.w	r4, r4, r8
2ffeda94:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
2ffeda96:	ea48 0303 	orr.w	r3, r8, r3
2ffeda9a:	63d3      	str	r3, [r2, #60]	; 0x3c
2ffeda9c:	3601      	adds	r6, #1
2ffeda9e:	2c00      	cmp	r4, #0
2ffedaa0:	d1e5      	bne.n	2ffeda6e <stm32_tamp_it_handler+0x62>
2ffedaa2:	e016      	b.n	2ffedad2 <stm32_tamp_it_handler+0xc6>
2ffedaa4:	f859 0033 	ldr.w	r0, [r9, r3, lsl #3]
2ffedaa8:	eb09 02c3 	add.w	r2, r9, r3, lsl #3
2ffedaac:	f100 0610 	add.w	r6, r0, #16
2ffedab0:	fa0a f606 	lsl.w	r6, sl, r6
2ffedab4:	4226      	tst	r6, r4
2ffedab6:	d008      	beq.n	2ffedaca <stm32_tamp_it_handler+0xbe>
2ffedab8:	6853      	ldr	r3, [r2, #4]
2ffedaba:	b103      	cbz	r3, 2ffedabe <stm32_tamp_it_handler+0xb2>
2ffedabc:	4798      	blx	r3
2ffedabe:	682a      	ldr	r2, [r5, #0]
2ffedac0:	ea24 0406 	bic.w	r4, r4, r6
2ffedac4:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
2ffedac6:	4333      	orrs	r3, r6
2ffedac8:	63d3      	str	r3, [r2, #60]	; 0x3c
2ffedaca:	f108 0801 	add.w	r8, r8, #1
2ffedace:	2c00      	cmp	r4, #0
2ffedad0:	d1c0      	bne.n	2ffeda54 <stm32_tamp_it_handler+0x48>
2ffedad2:	b00a      	add	sp, #40	; 0x28
2ffedad4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffedad8:	2c00      	cmp	r4, #0
2ffedada:	d1c0      	bne.n	2ffeda5e <stm32_tamp_it_handler+0x52>
2ffedadc:	e7f9      	b.n	2ffedad2 <stm32_tamp_it_handler+0xc6>
2ffedade:	bf00      	nop
2ffedae0:	2fffc320 	.word	0x2fffc320
2ffedae4:	2fff86e1 	.word	0x2fff86e1
2ffedae8:	2fff86f9 	.word	0x2fff86f9

2ffedaec <stm32_tamp_init>:
2ffedaec:	b5f0      	push	{r4, r5, r6, r7, lr}
2ffedaee:	b087      	sub	sp, #28
2ffedaf0:	a801      	add	r0, sp, #4
2ffedaf2:	f008 fbe5 	bl	2fff62c0 <fdt_get_address>
2ffedaf6:	b918      	cbnz	r0, 2ffedb00 <stm32_tamp_init+0x14>
2ffedaf8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffedafc:	b007      	add	sp, #28
2ffedafe:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffedb00:	4a38      	ldr	r2, [pc, #224]	; (2ffedbe4 <stm32_tamp_init+0xf8>)
2ffedb02:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2ffedb06:	a802      	add	r0, sp, #8
2ffedb08:	f008 fcc4 	bl	2fff6494 <dt_get_node>
2ffedb0c:	1e06      	subs	r6, r0, #0
2ffedb0e:	dbf3      	blt.n	2ffedaf8 <stm32_tamp_init+0xc>
2ffedb10:	9b02      	ldr	r3, [sp, #8]
2ffedb12:	b923      	cbnz	r3, 2ffedb1e <stm32_tamp_init+0x32>
2ffedb14:	f44f 71a6 	mov.w	r1, #332	; 0x14c
2ffedb18:	4833      	ldr	r0, [pc, #204]	; (2ffedbe8 <stm32_tamp_init+0xfc>)
2ffedb1a:	f00a f945 	bl	2fff7da8 <__assert>
2ffedb1e:	9803      	ldr	r0, [sp, #12]
2ffedb20:	1c42      	adds	r2, r0, #1
2ffedb22:	d102      	bne.n	2ffedb2a <stm32_tamp_init+0x3e>
2ffedb24:	f240 114d 	movw	r1, #333	; 0x14d
2ffedb28:	e7f6      	b.n	2ffedb18 <stm32_tamp_init+0x2c>
2ffedb2a:	4d30      	ldr	r5, [pc, #192]	; (2ffedbec <stm32_tamp_init+0x100>)
2ffedb2c:	2400      	movs	r4, #0
2ffedb2e:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
2ffedb32:	602b      	str	r3, [r5, #0]
2ffedb34:	6068      	str	r0, [r5, #4]
2ffedb36:	f005 fd17 	bl	2fff3568 <stm32mp_clk_enable>
2ffedb3a:	682a      	ldr	r2, [r5, #0]
2ffedb3c:	6014      	str	r4, [r2, #0]
2ffedb3e:	6054      	str	r4, [r2, #4]
2ffedb40:	60d4      	str	r4, [r2, #12]
2ffedb42:	6114      	str	r4, [r2, #16]
2ffedb44:	6a13      	ldr	r3, [r2, #32]
2ffedb46:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
2ffedb4a:	6213      	str	r3, [r2, #32]
2ffedb4c:	62d4      	str	r4, [r2, #44]	; 0x2c
2ffedb4e:	63d7      	str	r7, [r2, #60]	; 0x3c
2ffedb50:	6d11      	ldr	r1, [r2, #80]	; 0x50
2ffedb52:	f021 0101 	bic.w	r1, r1, #1
2ffedb56:	6511      	str	r1, [r2, #80]	; 0x50
2ffedb58:	9905      	ldr	r1, [sp, #20]
2ffedb5a:	3902      	subs	r1, #2
2ffedb5c:	2901      	cmp	r1, #1
2ffedb5e:	d83f      	bhi.n	2ffedbe0 <stm32_tamp_init+0xf4>
2ffedb60:	f8d2 33f0 	ldr.w	r3, [r2, #1008]	; 0x3f0
2ffedb64:	60ab      	str	r3, [r5, #8]
2ffedb66:	f8d2 33ec 	ldr.w	r3, [r2, #1004]	; 0x3ec
2ffedb6a:	f8d2 13f4 	ldr.w	r1, [r2, #1012]	; 0x3f4
2ffedb6e:	60eb      	str	r3, [r5, #12]
2ffedb70:	f413 6f70 	tst.w	r3, #3840	; 0xf00
2ffedb74:	d103      	bne.n	2ffedb7e <stm32_tamp_init+0x92>
2ffedb76:	481e      	ldr	r0, [pc, #120]	; (2ffedbf0 <stm32_tamp_init+0x104>)
2ffedb78:	f003 f802 	bl	2fff0b80 <tf_log>
2ffedb7c:	e7bc      	b.n	2ffedaf8 <stm32_tamp_init+0xc>
2ffedb7e:	6a13      	ldr	r3, [r2, #32]
2ffedb80:	4630      	mov	r0, r6
2ffedb82:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
2ffedb86:	6213      	str	r3, [r2, #32]
2ffedb88:	f006 fdfa 	bl	2fff4780 <dt_set_pinctrl_config>
2ffedb8c:	3001      	adds	r0, #1
2ffedb8e:	d00b      	beq.n	2ffedba8 <stm32_tamp_init+0xbc>
2ffedb90:	4a18      	ldr	r2, [pc, #96]	; (2ffedbf4 <stm32_tamp_init+0x108>)
2ffedb92:	4623      	mov	r3, r4
2ffedb94:	9801      	ldr	r0, [sp, #4]
2ffedb96:	4631      	mov	r1, r6
2ffedb98:	f009 ff69 	bl	2fff7a6e <fdt_getprop>
2ffedb9c:	b120      	cbz	r0, 2ffedba8 <stm32_tamp_init+0xbc>
2ffedb9e:	682a      	ldr	r2, [r5, #0]
2ffedba0:	6d13      	ldr	r3, [r2, #80]	; 0x50
2ffedba2:	f043 0301 	orr.w	r3, r3, #1
2ffedba6:	6513      	str	r3, [r2, #80]	; 0x50
2ffedba8:	2100      	movs	r1, #0
2ffedbaa:	4630      	mov	r0, r6
2ffedbac:	f001 fea0 	bl	2ffef8f0 <stm32_gic_enable_spi>
2ffedbb0:	2800      	cmp	r0, #0
2ffedbb2:	da03      	bge.n	2ffedbbc <stm32_tamp_init+0xd0>
2ffedbb4:	f003 f886 	bl	2fff0cc4 <console_flush>
2ffedbb8:	f009 e8ba 	blx	2fff6d30 <do_panic>
2ffedbbc:	4a0e      	ldr	r2, [pc, #56]	; (2ffedbf8 <stm32_tamp_init+0x10c>)
2ffedbbe:	2300      	movs	r3, #0
2ffedbc0:	9801      	ldr	r0, [sp, #4]
2ffedbc2:	4631      	mov	r1, r6
2ffedbc4:	f009 ff53 	bl	2fff7a6e <fdt_getprop>
2ffedbc8:	b140      	cbz	r0, 2ffedbdc <stm32_tamp_init+0xf0>
2ffedbca:	4a0c      	ldr	r2, [pc, #48]	; (2ffedbfc <stm32_tamp_init+0x110>)
2ffedbcc:	6813      	ldr	r3, [r2, #0]
2ffedbce:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
2ffedbd2:	6013      	str	r3, [r2, #0]
2ffedbd4:	6ed3      	ldr	r3, [r2, #108]	; 0x6c
2ffedbd6:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
2ffedbda:	66d3      	str	r3, [r2, #108]	; 0x6c
2ffedbdc:	2001      	movs	r0, #1
2ffedbde:	e78d      	b.n	2ffedafc <stm32_tamp_init+0x10>
2ffedbe0:	4620      	mov	r0, r4
2ffedbe2:	e78b      	b.n	2ffedafc <stm32_tamp_init+0x10>
2ffedbe4:	2fff8693 	.word	0x2fff8693
2ffedbe8:	2fff8674 	.word	0x2fff8674
2ffedbec:	2fffc320 	.word	0x2fffc320
2ffedbf0:	2fff86a1 	.word	0x2fff86a1
2ffedbf4:	2fff86c6 	.word	0x2fff86c6
2ffedbf8:	2fff86d3 	.word	0x2fff86d3
2ffedbfc:	5000d014 	.word	0x5000d014

2ffedc00 <stm32_timer_config>:
2ffedc00:	b510      	push	{r4, lr}
2ffedc02:	4604      	mov	r4, r0
2ffedc04:	6840      	ldr	r0, [r0, #4]
2ffedc06:	f005 fcaf 	bl	2fff3568 <stm32mp_clk_enable>
2ffedc0a:	6860      	ldr	r0, [r4, #4]
2ffedc0c:	f005 fe10 	bl	2fff3830 <stm32mp_clk_timer_get_rate>
2ffedc10:	4b18      	ldr	r3, [pc, #96]	; (2ffedc74 <stm32_timer_config+0x74>)
2ffedc12:	60a0      	str	r0, [r4, #8]
2ffedc14:	4298      	cmp	r0, r3
2ffedc16:	d808      	bhi.n	2ffedc2a <stm32_timer_config+0x2a>
2ffedc18:	4817      	ldr	r0, [pc, #92]	; (2ffedc78 <stm32_timer_config+0x78>)
2ffedc1a:	f002 ffb1 	bl	2fff0b80 <tf_log>
2ffedc1e:	6860      	ldr	r0, [r4, #4]
2ffedc20:	f005 fca5 	bl	2fff356e <stm32mp_clk_disable>
2ffedc24:	f06f 0015 	mvn.w	r0, #21
2ffedc28:	bd10      	pop	{r4, pc}
2ffedc2a:	6823      	ldr	r3, [r4, #0]
2ffedc2c:	7b21      	ldrb	r1, [r4, #12]
2ffedc2e:	6e9a      	ldr	r2, [r3, #104]	; 0x68
2ffedc30:	f002 020f 	and.w	r2, r2, #15
2ffedc34:	428a      	cmp	r2, r1
2ffedc36:	d018      	beq.n	2ffedc6a <stm32_timer_config+0x6a>
2ffedc38:	699a      	ldr	r2, [r3, #24]
2ffedc3a:	f022 0203 	bic.w	r2, r2, #3
2ffedc3e:	f042 0201 	orr.w	r2, r2, #1
2ffedc42:	619a      	str	r2, [r3, #24]
2ffedc44:	6a1a      	ldr	r2, [r3, #32]
2ffedc46:	f022 020a 	bic.w	r2, r2, #10
2ffedc4a:	621a      	str	r2, [r3, #32]
2ffedc4c:	689a      	ldr	r2, [r3, #8]
2ffedc4e:	f022 0277 	bic.w	r2, r2, #119	; 0x77
2ffedc52:	f042 0254 	orr.w	r2, r2, #84	; 0x54
2ffedc56:	609a      	str	r2, [r3, #8]
2ffedc58:	6699      	str	r1, [r3, #104]	; 0x68
2ffedc5a:	681a      	ldr	r2, [r3, #0]
2ffedc5c:	f042 0201 	orr.w	r2, r2, #1
2ffedc60:	601a      	str	r2, [r3, #0]
2ffedc62:	6a1a      	ldr	r2, [r3, #32]
2ffedc64:	f042 0201 	orr.w	r2, r2, #1
2ffedc68:	621a      	str	r2, [r3, #32]
2ffedc6a:	6860      	ldr	r0, [r4, #4]
2ffedc6c:	f005 fc7f 	bl	2fff356e <stm32mp_clk_disable>
2ffedc70:	2000      	movs	r0, #0
2ffedc72:	e7d9      	b.n	2ffedc28 <stm32_timer_config+0x28>
2ffedc74:	02faf07f 	.word	0x02faf07f
2ffedc78:	2fff8733 	.word	0x2fff8733

2ffedc7c <stm32_timer_start_capture.part.0>:
2ffedc7c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2ffedc80:	4606      	mov	r6, r0
2ffedc82:	6840      	ldr	r0, [r0, #4]
2ffedc84:	f242 7410 	movw	r4, #10000	; 0x2710
2ffedc88:	f005 fc6e 	bl	2fff3568 <stm32mp_clk_enable>
2ffedc8c:	6833      	ldr	r3, [r6, #0]
2ffedc8e:	2200      	movs	r2, #0
2ffedc90:	611a      	str	r2, [r3, #16]
2ffedc92:	6833      	ldr	r3, [r6, #0]
2ffedc94:	691f      	ldr	r7, [r3, #16]
2ffedc96:	f103 0210 	add.w	r2, r3, #16
2ffedc9a:	f017 0701 	ands.w	r7, r7, #1
2ffedc9e:	d10e      	bne.n	2ffedcbe <stm32_timer_start_capture.part.0+0x42>
2ffedca0:	b944      	cbnz	r4, 2ffedcb4 <stm32_timer_start_capture.part.0+0x38>
2ffedca2:	6870      	ldr	r0, [r6, #4]
2ffedca4:	f005 fc63 	bl	2fff356e <stm32mp_clk_disable>
2ffedca8:	2c00      	cmp	r4, #0
2ffedcaa:	bf0c      	ite	eq
2ffedcac:	4620      	moveq	r0, r4
2ffedcae:	4638      	movne	r0, r7
2ffedcb0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2ffedcb4:	200a      	movs	r0, #10
2ffedcb6:	3c01      	subs	r4, #1
2ffedcb8:	f004 fafe 	bl	2fff22b8 <udelay>
2ffedcbc:	e7e9      	b.n	2ffedc92 <stm32_timer_start_capture.part.0+0x16>
2ffedcbe:	2700      	movs	r7, #0
2ffedcc0:	2c00      	cmp	r4, #0
2ffedcc2:	d039      	beq.n	2ffedd38 <stm32_timer_start_capture.part.0+0xbc>
2ffedcc4:	6017      	str	r7, [r2, #0]
2ffedcc6:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffedcca:	ec55 4f0e 	mrrc	15, 0, r4, r5, cr14
2ffedcce:	491b      	ldr	r1, [pc, #108]	; (2ffedd3c <stm32_timer_start_capture.part.0+0xc0>)
2ffedcd0:	2300      	movs	r3, #0
2ffedcd2:	4a1b      	ldr	r2, [pc, #108]	; (2ffedd40 <stm32_timer_start_capture.part.0+0xc4>)
2ffedcd4:	fba0 0101 	umull	r0, r1, r0, r1
2ffedcd8:	f009 e9c8 	blx	2fff706c <__aeabi_uldivmod>
2ffedcdc:	eb10 0804 	adds.w	r8, r0, r4
2ffedce0:	eb41 0905 	adc.w	r9, r1, r5
2ffedce4:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffedce8:	4599      	cmp	r9, r3
2ffedcea:	bf08      	it	eq
2ffedcec:	4590      	cmpeq	r8, r2
2ffedcee:	d20f      	bcs.n	2ffedd10 <stm32_timer_start_capture.part.0+0x94>
2ffedcf0:	4814      	ldr	r0, [pc, #80]	; (2ffedd44 <stm32_timer_start_capture.part.0+0xc8>)
2ffedcf2:	2400      	movs	r4, #0
2ffedcf4:	f002 ff44 	bl	2fff0b80 <tf_log>
2ffedcf8:	e7d3      	b.n	2ffedca2 <stm32_timer_start_capture.part.0+0x26>
2ffedcfa:	200a      	movs	r0, #10
2ffedcfc:	3c01      	subs	r4, #1
2ffedcfe:	f004 fadb 	bl	2fff22b8 <udelay>
2ffedd02:	6833      	ldr	r3, [r6, #0]
2ffedd04:	691a      	ldr	r2, [r3, #16]
2ffedd06:	0792      	lsls	r2, r2, #30
2ffedd08:	d405      	bmi.n	2ffedd16 <stm32_timer_start_capture.part.0+0x9a>
2ffedd0a:	2c00      	cmp	r4, #0
2ffedd0c:	d1f5      	bne.n	2ffedcfa <stm32_timer_start_capture.part.0+0x7e>
2ffedd0e:	e7c8      	b.n	2ffedca2 <stm32_timer_start_capture.part.0+0x26>
2ffedd10:	f242 7410 	movw	r4, #10000	; 0x2710
2ffedd14:	e7f5      	b.n	2ffedd02 <stm32_timer_start_capture.part.0+0x86>
2ffedd16:	2c00      	cmp	r4, #0
2ffedd18:	d0c3      	beq.n	2ffedca2 <stm32_timer_start_capture.part.0+0x26>
2ffedd1a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
2ffedd1c:	42ba      	cmp	r2, r7
2ffedd1e:	4613      	mov	r3, r2
2ffedd20:	bf28      	it	cs
2ffedd22:	463b      	movcs	r3, r7
2ffedd24:	42ba      	cmp	r2, r7
2ffedd26:	bf2c      	ite	cs
2ffedd28:	ebc3 0302 	rsbcs	r3, r3, r2
2ffedd2c:	ebc3 0307 	rsbcc	r3, r3, r7
2ffedd30:	4617      	mov	r7, r2
2ffedd32:	2b01      	cmp	r3, #1
2ffedd34:	d8d6      	bhi.n	2ffedce4 <stm32_timer_start_capture.part.0+0x68>
2ffedd36:	e7b4      	b.n	2ffedca2 <stm32_timer_start_capture.part.0+0x26>
2ffedd38:	4627      	mov	r7, r4
2ffedd3a:	e7b2      	b.n	2ffedca2 <stm32_timer_start_capture.part.0+0x26>
2ffedd3c:	000186a0 	.word	0x000186a0
2ffedd40:	000f4240 	.word	0x000f4240
2ffedd44:	2fff87a9 	.word	0x2fff87a9

2ffedd48 <stm32_timer_csi_freq>:
2ffedd48:	b510      	push	{r4, lr}
2ffedd4a:	4c0b      	ldr	r4, [pc, #44]	; (2ffedd78 <stm32_timer_csi_freq+0x30>)
2ffedd4c:	6923      	ldr	r3, [r4, #16]
2ffedd4e:	b90b      	cbnz	r3, 2ffedd54 <stm32_timer_csi_freq+0xc>
2ffedd50:	2000      	movs	r0, #0
2ffedd52:	bd10      	pop	{r4, pc}
2ffedd54:	f104 0010 	add.w	r0, r4, #16
2ffedd58:	f7ff ff52 	bl	2ffedc00 <stm32_timer_config>
2ffedd5c:	2800      	cmp	r0, #0
2ffedd5e:	dbf7      	blt.n	2ffedd50 <stm32_timer_csi_freq+0x8>
2ffedd60:	f104 0010 	add.w	r0, r4, #16
2ffedd64:	f7ff ff8a 	bl	2ffedc7c <stm32_timer_start_capture.part.0>
2ffedd68:	2800      	cmp	r0, #0
2ffedd6a:	d0f1      	beq.n	2ffedd50 <stm32_timer_csi_freq+0x8>
2ffedd6c:	69a3      	ldr	r3, [r4, #24]
2ffedd6e:	fbb3 f0f0 	udiv	r0, r3, r0
2ffedd72:	01c0      	lsls	r0, r0, #7
2ffedd74:	e7ed      	b.n	2ffedd52 <stm32_timer_csi_freq+0xa>
2ffedd76:	bf00      	nop
2ffedd78:	2fffc33c 	.word	0x2fffc33c

2ffedd7c <stm32_timer_hsi_freq>:
2ffedd7c:	b510      	push	{r4, lr}
2ffedd7e:	4c0a      	ldr	r4, [pc, #40]	; (2ffedda8 <stm32_timer_hsi_freq+0x2c>)
2ffedd80:	6823      	ldr	r3, [r4, #0]
2ffedd82:	b90b      	cbnz	r3, 2ffedd88 <stm32_timer_hsi_freq+0xc>
2ffedd84:	2000      	movs	r0, #0
2ffedd86:	bd10      	pop	{r4, pc}
2ffedd88:	4620      	mov	r0, r4
2ffedd8a:	f7ff ff39 	bl	2ffedc00 <stm32_timer_config>
2ffedd8e:	2800      	cmp	r0, #0
2ffedd90:	dbf8      	blt.n	2ffedd84 <stm32_timer_hsi_freq+0x8>
2ffedd92:	4620      	mov	r0, r4
2ffedd94:	f7ff ff72 	bl	2ffedc7c <stm32_timer_start_capture.part.0>
2ffedd98:	2800      	cmp	r0, #0
2ffedd9a:	d0f3      	beq.n	2ffedd84 <stm32_timer_hsi_freq+0x8>
2ffedd9c:	68a3      	ldr	r3, [r4, #8]
2ffedd9e:	fbb3 f0f0 	udiv	r0, r3, r0
2ffedda2:	0280      	lsls	r0, r0, #10
2ffedda4:	e7ef      	b.n	2ffedd86 <stm32_timer_hsi_freq+0xa>
2ffedda6:	bf00      	nop
2ffedda8:	2fffc33c 	.word	0x2fffc33c

2ffeddac <stm32_timer_freq_func>:
2ffeddac:	b508      	push	{r3, lr}
2ffeddae:	4b09      	ldr	r3, [pc, #36]	; (2ffeddd4 <stm32_timer_freq_func+0x28>)
2ffeddb0:	b129      	cbz	r1, 2ffeddbe <stm32_timer_freq_func+0x12>
2ffeddb2:	2901      	cmp	r1, #1
2ffeddb4:	d008      	beq.n	2ffeddc8 <stm32_timer_freq_func+0x1c>
2ffeddb6:	f002 ff85 	bl	2fff0cc4 <console_flush>
2ffeddba:	f008 efba 	blx	2fff6d30 <do_panic>
2ffeddbe:	681b      	ldr	r3, [r3, #0]
2ffeddc0:	b10b      	cbz	r3, 2ffeddc6 <stm32_timer_freq_func+0x1a>
2ffeddc2:	4b05      	ldr	r3, [pc, #20]	; (2ffeddd8 <stm32_timer_freq_func+0x2c>)
2ffeddc4:	6003      	str	r3, [r0, #0]
2ffeddc6:	bd08      	pop	{r3, pc}
2ffeddc8:	691b      	ldr	r3, [r3, #16]
2ffeddca:	2b00      	cmp	r3, #0
2ffeddcc:	d0fb      	beq.n	2ffeddc6 <stm32_timer_freq_func+0x1a>
2ffeddce:	4b03      	ldr	r3, [pc, #12]	; (2ffedddc <stm32_timer_freq_func+0x30>)
2ffeddd0:	e7f8      	b.n	2ffeddc4 <stm32_timer_freq_func+0x18>
2ffeddd2:	bf00      	nop
2ffeddd4:	2fffc33c 	.word	0x2fffc33c
2ffeddd8:	2ffedd7d 	.word	0x2ffedd7d
2ffedddc:	2ffedd49 	.word	0x2ffedd49

2ffedde0 <stm32_timer_init>:
2ffedde0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
2ffedde4:	b087      	sub	sp, #28
2ffedde6:	a801      	add	r0, sp, #4
2ffedde8:	f008 fa6a 	bl	2fff62c0 <fdt_get_address>
2ffeddec:	2800      	cmp	r0, #0
2ffeddee:	d05b      	beq.n	2ffedea8 <stm32_timer_init+0xc8>
2ffeddf0:	4a2f      	ldr	r2, [pc, #188]	; (2ffedeb0 <stm32_timer_init+0xd0>)
2ffeddf2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2ffeddf6:	a802      	add	r0, sp, #8
2ffeddf8:	f008 fb4c 	bl	2fff6494 <dt_get_node>
2ffeddfc:	1e06      	subs	r6, r0, #0
2ffeddfe:	da0b      	bge.n	2ffede18 <stm32_timer_init+0x38>
2ffede00:	492c      	ldr	r1, [pc, #176]	; (2ffedeb4 <stm32_timer_init+0xd4>)
2ffede02:	2400      	movs	r4, #0
2ffede04:	482c      	ldr	r0, [pc, #176]	; (2ffedeb8 <stm32_timer_init+0xd8>)
2ffede06:	f002 febb 	bl	2fff0b80 <tf_log>
2ffede0a:	fab4 f484 	clz	r4, r4
2ffede0e:	0964      	lsrs	r4, r4, #5
2ffede10:	4260      	negs	r0, r4
2ffede12:	b007      	add	sp, #28
2ffede14:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2ffede18:	4d28      	ldr	r5, [pc, #160]	; (2ffedebc <stm32_timer_init+0xdc>)
2ffede1a:	2400      	movs	r4, #0
2ffede1c:	4f28      	ldr	r7, [pc, #160]	; (2ffedec0 <stm32_timer_init+0xe0>)
2ffede1e:	f105 0810 	add.w	r8, r5, #16
2ffede22:	9b05      	ldr	r3, [sp, #20]
2ffede24:	2b02      	cmp	r3, #2
2ffede26:	d11b      	bne.n	2ffede60 <stm32_timer_init+0x80>
2ffede28:	9801      	ldr	r0, [sp, #4]
2ffede2a:	2300      	movs	r3, #0
2ffede2c:	463a      	mov	r2, r7
2ffede2e:	4631      	mov	r1, r6
2ffede30:	3401      	adds	r4, #1
2ffede32:	f009 fe1c 	bl	2fff7a6e <fdt_getprop>
2ffede36:	b2e4      	uxtb	r4, r4
2ffede38:	4681      	mov	r9, r0
2ffede3a:	b1c8      	cbz	r0, 2ffede70 <stm32_timer_init+0x90>
2ffede3c:	9b02      	ldr	r3, [sp, #8]
2ffede3e:	9803      	ldr	r0, [sp, #12]
2ffede40:	602b      	str	r3, [r5, #0]
2ffede42:	6068      	str	r0, [r5, #4]
2ffede44:	f005 fcf4 	bl	2fff3830 <stm32mp_clk_timer_get_rate>
2ffede48:	f8d9 3000 	ldr.w	r3, [r9]
2ffede4c:	60a8      	str	r0, [r5, #8]
2ffede4e:	0e1b      	lsrs	r3, r3, #24
2ffede50:	481a      	ldr	r0, [pc, #104]	; (2ffedebc <stm32_timer_init+0xdc>)
2ffede52:	732b      	strb	r3, [r5, #12]
2ffede54:	f7ff fed4 	bl	2ffedc00 <stm32_timer_config>
2ffede58:	2800      	cmp	r0, #0
2ffede5a:	da09      	bge.n	2ffede70 <stm32_timer_init+0x90>
2ffede5c:	2300      	movs	r3, #0
2ffede5e:	602b      	str	r3, [r5, #0]
2ffede60:	4a13      	ldr	r2, [pc, #76]	; (2ffedeb0 <stm32_timer_init+0xd0>)
2ffede62:	4631      	mov	r1, r6
2ffede64:	a802      	add	r0, sp, #8
2ffede66:	f008 fb15 	bl	2fff6494 <dt_get_node>
2ffede6a:	1e06      	subs	r6, r0, #0
2ffede6c:	dad9      	bge.n	2ffede22 <stm32_timer_init+0x42>
2ffede6e:	e7cc      	b.n	2ffede0a <stm32_timer_init+0x2a>
2ffede70:	4a14      	ldr	r2, [pc, #80]	; (2ffedec4 <stm32_timer_init+0xe4>)
2ffede72:	2300      	movs	r3, #0
2ffede74:	9801      	ldr	r0, [sp, #4]
2ffede76:	4631      	mov	r1, r6
2ffede78:	f009 fdf9 	bl	2fff7a6e <fdt_getprop>
2ffede7c:	4681      	mov	r9, r0
2ffede7e:	2800      	cmp	r0, #0
2ffede80:	d0ee      	beq.n	2ffede60 <stm32_timer_init+0x80>
2ffede82:	9b02      	ldr	r3, [sp, #8]
2ffede84:	9803      	ldr	r0, [sp, #12]
2ffede86:	612b      	str	r3, [r5, #16]
2ffede88:	6168      	str	r0, [r5, #20]
2ffede8a:	f005 fcd1 	bl	2fff3830 <stm32mp_clk_timer_get_rate>
2ffede8e:	f8d9 3000 	ldr.w	r3, [r9]
2ffede92:	61a8      	str	r0, [r5, #24]
2ffede94:	4640      	mov	r0, r8
2ffede96:	0e1b      	lsrs	r3, r3, #24
2ffede98:	772b      	strb	r3, [r5, #28]
2ffede9a:	f7ff feb1 	bl	2ffedc00 <stm32_timer_config>
2ffede9e:	2800      	cmp	r0, #0
2ffedea0:	bfbc      	itt	lt
2ffedea2:	2300      	movlt	r3, #0
2ffedea4:	612b      	strlt	r3, [r5, #16]
2ffedea6:	e7db      	b.n	2ffede60 <stm32_timer_init+0x80>
2ffedea8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffedeac:	e7b1      	b.n	2ffede12 <stm32_timer_init+0x32>
2ffedeae:	bf00      	nop
2ffedeb0:	2fff8762 	.word	0x2fff8762
2ffedeb4:	2fff871b 	.word	0x2fff871b
2ffedeb8:	2fff8772 	.word	0x2fff8772
2ffedebc:	2fffc33c 	.word	0x2fffc33c
2ffedec0:	2fff8787 	.word	0x2fff8787
2ffedec4:	2fff8798 	.word	0x2fff8798

2ffedec8 <stm32mp1_tamper_action>:
2ffedec8:	b508      	push	{r3, lr}
2ffedeca:	4b05      	ldr	r3, [pc, #20]	; (2ffedee0 <stm32mp1_tamper_action+0x18>)
2ffedecc:	f853 1020 	ldr.w	r1, [r3, r0, lsl #2]
2ffeded0:	4804      	ldr	r0, [pc, #16]	; (2ffedee4 <stm32mp1_tamper_action+0x1c>)
2ffeded2:	f002 fe55 	bl	2fff0b80 <tf_log>
2ffeded6:	f009 eab4 	blx	2fff7440 <plat_my_core_pos>
2ffededa:	f003 f965 	bl	2fff11a8 <stm32mp_plat_reset>
2ffedede:	bf00      	nop
2ffedee0:	2fff8988 	.word	0x2fff8988
2ffedee4:	2fff8904 	.word	0x2fff8904

2ffedee8 <sp_min_plat_fiq_handler>:
2ffedee8:	b510      	push	{r4, lr}
2ffedeea:	4601      	mov	r1, r0
2ffedeec:	f3c0 0409 	ubfx	r4, r0, #0, #10
2ffedef0:	2cb1      	cmp	r4, #177	; 0xb1
2ffedef2:	d824      	bhi.n	2ffedf3e <sp_min_plat_fiq_handler+0x56>
2ffedef4:	2cb0      	cmp	r4, #176	; 0xb0
2ffedef6:	d23f      	bcs.n	2ffedf78 <sp_min_plat_fiq_handler+0x90>
2ffedef8:	2c0e      	cmp	r4, #14
2ffedefa:	d046      	beq.n	2ffedf8a <sp_min_plat_fiq_handler+0xa2>
2ffedefc:	d812      	bhi.n	2ffedf24 <sp_min_plat_fiq_handler+0x3c>
2ffedefe:	2c09      	cmp	r4, #9
2ffedf00:	d154      	bne.n	2ffedfac <sp_min_plat_fiq_handler+0xc4>
2ffedf02:	f003 f869 	bl	2fff0fd8 <stm32mp_mask_timer>
2ffedf06:	4620      	mov	r0, r4
2ffedf08:	f001 faea 	bl	2ffef4e0 <gicv2_end_of_interrupt>
2ffedf0c:	f001 fc56 	bl	2ffef7bc <plat_ic_get_pending_interrupt_id>
2ffedf10:	f5b0 7f7f 	cmp.w	r0, #1020	; 0x3fc
2ffedf14:	4604      	mov	r4, r0
2ffedf16:	d24e      	bcs.n	2ffedfb6 <sp_min_plat_fiq_handler+0xce>
2ffedf18:	f001 fae2 	bl	2ffef4e0 <gicv2_end_of_interrupt>
2ffedf1c:	4620      	mov	r0, r4
2ffedf1e:	f001 fc5b 	bl	2ffef7d8 <plat_ic_disable_interrupt>
2ffedf22:	e7f3      	b.n	2ffedf0c <sp_min_plat_fiq_handler+0x24>
2ffedf24:	2c1d      	cmp	r4, #29
2ffedf26:	d027      	beq.n	2ffedf78 <sp_min_plat_fiq_handler+0x90>
2ffedf28:	2c24      	cmp	r4, #36	; 0x24
2ffedf2a:	d13f      	bne.n	2ffedfac <sp_min_plat_fiq_handler+0xc4>
2ffedf2c:	4823      	ldr	r0, [pc, #140]	; (2ffedfbc <sp_min_plat_fiq_handler+0xd4>)
2ffedf2e:	f004 f85f 	bl	2fff1ff0 <tzc400_init>
2ffedf32:	f004 f963 	bl	2fff21fc <tzc400_it_handler>
2ffedf36:	f002 fec5 	bl	2fff0cc4 <console_flush>
2ffedf3a:	f008 eefa 	blx	2fff6d30 <do_panic>
2ffedf3e:	2ce5      	cmp	r4, #229	; 0xe5
2ffedf40:	d01f      	beq.n	2ffedf82 <sp_min_plat_fiq_handler+0x9a>
2ffedf42:	d804      	bhi.n	2ffedf4e <sp_min_plat_fiq_handler+0x66>
2ffedf44:	3cb6      	subs	r4, #182	; 0xb6
2ffedf46:	2c01      	cmp	r4, #1
2ffedf48:	d830      	bhi.n	2ffedfac <sp_min_plat_fiq_handler+0xc4>
2ffedf4a:	f007 fb51 	bl	2fff55f0 <stm32_iwdg_it_handler>
2ffedf4e:	2cf4      	cmp	r4, #244	; 0xf4
2ffedf50:	d12c      	bne.n	2ffedfac <sp_min_plat_fiq_handler+0xc4>
2ffedf52:	481b      	ldr	r0, [pc, #108]	; (2ffedfc0 <sp_min_plat_fiq_handler+0xd8>)
2ffedf54:	f002 fe14 	bl	2fff0b80 <tf_log>
2ffedf58:	4818      	ldr	r0, [pc, #96]	; (2ffedfbc <sp_min_plat_fiq_handler+0xd4>)
2ffedf5a:	f004 f849 	bl	2fff1ff0 <tzc400_init>
2ffedf5e:	ee39 3f70 	mrc	15, 1, r3, cr9, cr0, {3}
2ffedf62:	b1eb      	cbz	r3, 2ffedfa0 <sp_min_plat_fiq_handler+0xb8>
2ffedf64:	2300      	movs	r3, #0
2ffedf66:	ee29 3f70 	mcr	15, 1, r3, cr9, cr0, {3}
2ffedf6a:	f004 f929 	bl	2fff21c0 <tzc400_is_pending_interrupt>
2ffedf6e:	b1d8      	cbz	r0, 2ffedfa8 <sp_min_plat_fiq_handler+0xc0>
2ffedf70:	4814      	ldr	r0, [pc, #80]	; (2ffedfc4 <sp_min_plat_fiq_handler+0xdc>)
2ffedf72:	f002 fe05 	bl	2fff0b80 <tf_log>
2ffedf76:	e7de      	b.n	2ffedf36 <sp_min_plat_fiq_handler+0x4e>
2ffedf78:	4608      	mov	r0, r1
2ffedf7a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffedf7e:	f7ff b809 	b.w	2ffecf94 <stm32mp1_calib_it_handler>
2ffedf82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffedf86:	f7ff bd41 	b.w	2ffeda0c <stm32_tamp_it_handler>
2ffedf8a:	f009 ea5a 	blx	2fff7440 <plat_my_core_pos>
2ffedf8e:	b910      	cbnz	r0, 2ffedf96 <sp_min_plat_fiq_handler+0xae>
2ffedf90:	2001      	movs	r0, #1
2ffedf92:	f7fe fff9 	bl	2ffecf88 <stm32mp1_calib_set_wakeup>
2ffedf96:	200e      	movs	r0, #14
2ffedf98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffedf9c:	f001 baa0 	b.w	2ffef4e0 <gicv2_end_of_interrupt>
2ffedfa0:	4809      	ldr	r0, [pc, #36]	; (2ffedfc8 <sp_min_plat_fiq_handler+0xe0>)
2ffedfa2:	f002 fded 	bl	2fff0b80 <tf_log>
2ffedfa6:	e7e0      	b.n	2ffedf6a <sp_min_plat_fiq_handler+0x82>
2ffedfa8:	4808      	ldr	r0, [pc, #32]	; (2ffedfcc <sp_min_plat_fiq_handler+0xe4>)
2ffedfaa:	e7e2      	b.n	2ffedf72 <sp_min_plat_fiq_handler+0x8a>
2ffedfac:	4808      	ldr	r0, [pc, #32]	; (2ffedfd0 <sp_min_plat_fiq_handler+0xe8>)
2ffedfae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffedfb2:	f002 bde5 	b.w	2fff0b80 <tf_log>
2ffedfb6:	f003 f81c 	bl	2fff0ff2 <stm32mp_wait_cpu_reset>
2ffedfba:	bf00      	nop
2ffedfbc:	5c006000 	.word	0x5c006000
2ffedfc0:	2fff87ef 	.word	0x2fff87ef
2ffedfc4:	2fff8841 	.word	0x2fff8841
2ffedfc8:	2fff8812 	.word	0x2fff8812
2ffedfcc:	2fff8866 	.word	0x2fff8866
2ffedfd0:	2fff888d 	.word	0x2fff888d

2ffedfd4 <sp_min_plat_get_bl33_ep_info>:
2ffedfd4:	b570      	push	{r4, r5, r6, lr}
2ffedfd6:	4c15      	ldr	r4, [pc, #84]	; (2ffee02c <sp_min_plat_get_bl33_ep_info+0x58>)
2ffedfd8:	68a3      	ldr	r3, [r4, #8]
2ffedfda:	bb13      	cbnz	r3, 2ffee022 <sp_min_plat_get_bl33_ep_info+0x4e>
2ffedfdc:	2041      	movs	r0, #65	; 0x41
2ffedfde:	f005 fac3 	bl	2fff3568 <stm32mp_clk_enable>
2ffedfe2:	4b13      	ldr	r3, [pc, #76]	; (2ffee030 <sp_min_plat_get_bl33_ep_info+0x5c>)
2ffedfe4:	2041      	movs	r0, #65	; 0x41
2ffedfe6:	681e      	ldr	r6, [r3, #0]
2ffedfe8:	685d      	ldr	r5, [r3, #4]
2ffedfea:	f005 fac0 	bl	2fff356e <stm32mp_clk_disable>
2ffedfee:	f008 fc3b 	bl	2fff6868 <stm32_restore_context>
2ffedff2:	b118      	cbz	r0, 2ffedffc <sp_min_plat_get_bl33_ep_info+0x28>
2ffedff4:	f002 fe66 	bl	2fff0cc4 <console_flush>
2ffedff8:	f008 ee9a 	blx	2fff6d30 <do_panic>
2ffedffc:	2001      	movs	r0, #1
2ffedffe:	f7fd fa3d 	bl	2ffeb47c <cm_get_context>
2ffee002:	6983      	ldr	r3, [r0, #24]
2ffee004:	60e3      	str	r3, [r4, #12]
2ffee006:	4b0b      	ldr	r3, [pc, #44]	; (2ffee034 <sp_min_plat_get_bl33_ep_info+0x60>)
2ffee008:	429e      	cmp	r6, r3
2ffee00a:	d10c      	bne.n	2ffee026 <sp_min_plat_get_bl33_ep_info+0x52>
2ffee00c:	f1b5 4f40 	cmp.w	r5, #3221225472	; 0xc0000000
2ffee010:	d3f0      	bcc.n	2ffedff4 <sp_min_plat_get_bl33_ep_info+0x20>
2ffee012:	f008 fa75 	bl	2fff6500 <dt_get_ddr_size>
2ffee016:	f100 4040 	add.w	r0, r0, #3221225472	; 0xc0000000
2ffee01a:	3801      	subs	r0, #1
2ffee01c:	42a8      	cmp	r0, r5
2ffee01e:	d3e9      	bcc.n	2ffedff4 <sp_min_plat_get_bl33_ep_info+0x20>
2ffee020:	60a5      	str	r5, [r4, #8]
2ffee022:	4802      	ldr	r0, [pc, #8]	; (2ffee02c <sp_min_plat_get_bl33_ep_info+0x58>)
2ffee024:	bd70      	pop	{r4, r5, r6, pc}
2ffee026:	6903      	ldr	r3, [r0, #16]
2ffee028:	60a3      	str	r3, [r4, #8]
2ffee02a:	e7fa      	b.n	2ffee022 <sp_min_plat_get_bl33_ep_info+0x4e>
2ffee02c:	2fffc35c 	.word	0x2fffc35c
2ffee030:	5c00a110 	.word	0x5c00a110
2ffee034:	ca7face0 	.word	0xca7face0

2ffee038 <sp_min_early_platform_setup2>:
2ffee038:	b530      	push	{r4, r5, lr}
2ffee03a:	4604      	mov	r4, r0
2ffee03c:	b087      	sub	sp, #28
2ffee03e:	ee11 3f11 	mrc	15, 0, r3, cr1, cr1, {0}
2ffee042:	f043 0320 	orr.w	r3, r3, #32
2ffee046:	ee01 3f11 	mcr	15, 0, r3, cr1, cr1, {0}
2ffee04a:	4a41      	ldr	r2, [pc, #260]	; (2ffee150 <sp_min_early_platform_setup2+0x118>)
2ffee04c:	2302      	movs	r3, #2
2ffee04e:	4941      	ldr	r1, [pc, #260]	; (2ffee154 <sp_min_early_platform_setup2+0x11c>)
2ffee050:	6812      	ldr	r2, [r2, #0]
2ffee052:	9300      	str	r3, [sp, #0]
2ffee054:	4b40      	ldr	r3, [pc, #256]	; (2ffee158 <sp_min_early_platform_setup2+0x120>)
2ffee056:	4610      	mov	r0, r2
2ffee058:	1acb      	subs	r3, r1, r3
2ffee05a:	2100      	movs	r1, #0
2ffee05c:	f003 fa26 	bl	2fff14ac <mmap_add_region>
2ffee060:	f002 ffac 	bl	2fff0fbc <configure_mmu>
2ffee064:	b924      	cbnz	r4, 2ffee070 <sp_min_early_platform_setup2+0x38>
2ffee066:	f240 1151 	movw	r1, #337	; 0x151
2ffee06a:	483c      	ldr	r0, [pc, #240]	; (2ffee15c <sp_min_early_platform_setup2+0x124>)
2ffee06c:	f009 fe9c 	bl	2fff7da8 <__assert>
2ffee070:	7823      	ldrb	r3, [r4, #0]
2ffee072:	2b05      	cmp	r3, #5
2ffee074:	d002      	beq.n	2ffee07c <sp_min_early_platform_setup2+0x44>
2ffee076:	f44f 71a9 	mov.w	r1, #338	; 0x152
2ffee07a:	e7f6      	b.n	2ffee06a <sp_min_early_platform_setup2+0x32>
2ffee07c:	7863      	ldrb	r3, [r4, #1]
2ffee07e:	2b01      	cmp	r3, #1
2ffee080:	d802      	bhi.n	2ffee088 <sp_min_early_platform_setup2+0x50>
2ffee082:	f240 1153 	movw	r1, #339	; 0x153
2ffee086:	e7f0      	b.n	2ffee06a <sp_min_early_platform_setup2+0x32>
2ffee088:	68a3      	ldr	r3, [r4, #8]
2ffee08a:	b153      	cbz	r3, 2ffee0a2 <sp_min_early_platform_setup2+0x6a>
2ffee08c:	681a      	ldr	r2, [r3, #0]
2ffee08e:	2a05      	cmp	r2, #5
2ffee090:	d10f      	bne.n	2ffee0b2 <sp_min_early_platform_setup2+0x7a>
2ffee092:	689d      	ldr	r5, [r3, #8]
2ffee094:	4c32      	ldr	r4, [pc, #200]	; (2ffee160 <sp_min_early_platform_setup2+0x128>)
2ffee096:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
2ffee098:	c40f      	stmia	r4!, {r0, r1, r2, r3}
2ffee09a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
2ffee09c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
2ffee09e:	682b      	ldr	r3, [r5, #0]
2ffee0a0:	6023      	str	r3, [r4, #0]
2ffee0a2:	f008 f8ff 	bl	2fff62a4 <dt_open_and_check>
2ffee0a6:	2800      	cmp	r0, #0
2ffee0a8:	da05      	bge.n	2ffee0b6 <sp_min_early_platform_setup2+0x7e>
2ffee0aa:	f002 fe0b 	bl	2fff0cc4 <console_flush>
2ffee0ae:	f008 ee40 	blx	2fff6d30 <do_panic>
2ffee0b2:	68db      	ldr	r3, [r3, #12]
2ffee0b4:	e7e9      	b.n	2ffee08a <sp_min_early_platform_setup2+0x52>
2ffee0b6:	f004 fb21 	bl	2fff26fc <bsec_probe>
2ffee0ba:	2800      	cmp	r0, #0
2ffee0bc:	d1f5      	bne.n	2ffee0aa <sp_min_early_platform_setup2+0x72>
2ffee0be:	f005 ff1f 	bl	2fff3f00 <stm32mp1_clk_probe>
2ffee0c2:	2800      	cmp	r0, #0
2ffee0c4:	dbf1      	blt.n	2ffee0aa <sp_min_early_platform_setup2+0x72>
2ffee0c6:	f7ff f89f 	bl	2ffed208 <etzpc_init>
2ffee0ca:	4604      	mov	r4, r0
2ffee0cc:	2800      	cmp	r0, #0
2ffee0ce:	d1ec      	bne.n	2ffee0aa <sp_min_early_platform_setup2+0x72>
2ffee0d0:	f7ff f89a 	bl	2ffed208 <etzpc_init>
2ffee0d4:	f240 31ff 	movw	r1, #1023	; 0x3ff
2ffee0d8:	4620      	mov	r0, r4
2ffee0da:	f7ff f883 	bl	2ffed1e4 <etzpc_configure_tzma>
2ffee0de:	213e      	movs	r1, #62	; 0x3e
2ffee0e0:	2001      	movs	r0, #1
2ffee0e2:	f7ff f87f 	bl	2ffed1e4 <etzpc_configure_tzma>
2ffee0e6:	a802      	add	r0, sp, #8
2ffee0e8:	f008 f9e6 	bl	2fff64b8 <dt_get_stdout_uart_info>
2ffee0ec:	2800      	cmp	r0, #0
2ffee0ee:	dd0f      	ble.n	2ffee110 <sp_min_early_platform_setup2+0xd8>
2ffee0f0:	9b05      	ldr	r3, [sp, #20]
2ffee0f2:	b16b      	cbz	r3, 2ffee110 <sp_min_early_platform_setup2+0xd8>
2ffee0f4:	4b1b      	ldr	r3, [pc, #108]	; (2ffee164 <sp_min_early_platform_setup2+0x12c>)
2ffee0f6:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
2ffee0fa:	9802      	ldr	r0, [sp, #8]
2ffee0fc:	4621      	mov	r1, r4
2ffee0fe:	f008 efd4 	blx	2fff70a8 <console_stm32_register>
2ffee102:	2800      	cmp	r0, #0
2ffee104:	d0d1      	beq.n	2ffee0aa <sp_min_early_platform_setup2+0x72>
2ffee106:	4817      	ldr	r0, [pc, #92]	; (2ffee164 <sp_min_early_platform_setup2+0x12c>)
2ffee108:	f240 1107 	movw	r1, #263	; 0x107
2ffee10c:	f002 fda0 	bl	2fff0c50 <console_set_scope>
2ffee110:	f007 fcf8 	bl	2fff5b04 <dt_pmic_status>
2ffee114:	2800      	cmp	r0, #0
2ffee116:	dd01      	ble.n	2ffee11c <sp_min_early_platform_setup2+0xe4>
2ffee118:	f007 fdd4 	bl	2fff5cc4 <initialize_pmic>
2ffee11c:	f008 fbe6 	bl	2fff68ec <stm32_are_pll1_settings_valid_in_context>
2ffee120:	4604      	mov	r4, r0
2ffee122:	b978      	cbnz	r0, 2ffee144 <sp_min_early_platform_setup2+0x10c>
2ffee124:	f007 fcee 	bl	2fff5b04 <dt_pmic_status>
2ffee128:	2800      	cmp	r0, #0
2ffee12a:	dd0f      	ble.n	2ffee14c <sp_min_early_platform_setup2+0x114>
2ffee12c:	f002 ff2e 	bl	2fff0f8c <stm32mp_get_cpu_supply_name>
2ffee130:	2800      	cmp	r0, #0
2ffee132:	d0ba      	beq.n	2ffee0aa <sp_min_early_platform_setup2+0x72>
2ffee134:	f007 fe3a 	bl	2fff5dac <stpmic1_regulator_voltage_get>
2ffee138:	2800      	cmp	r0, #0
2ffee13a:	dbb6      	blt.n	2ffee0aa <sp_min_early_platform_setup2+0x72>
2ffee13c:	f005 fc1a 	bl	2fff3974 <stm32mp1_clk_compute_all_pll1_settings>
2ffee140:	2800      	cmp	r0, #0
2ffee142:	d1b2      	bne.n	2ffee0aa <sp_min_early_platform_setup2+0x72>
2ffee144:	f000 fb40 	bl	2ffee7c8 <stm32mp1_init_lp_states>
2ffee148:	b007      	add	sp, #28
2ffee14a:	bd30      	pop	{r4, r5, pc}
2ffee14c:	4620      	mov	r0, r4
2ffee14e:	e7f5      	b.n	2ffee13c <sp_min_early_platform_setup2+0x104>
2ffee150:	2fff87c4 	.word	0x2fff87c4
2ffee154:	2fffb000 	.word	0x2fffb000
2ffee158:	2ffeb000 	.word	0x2ffeb000
2ffee15c:	2fff87c8 	.word	0x2fff87c8
2ffee160:	2fffc35c 	.word	0x2fffc35c
2ffee164:	2fffc380 	.word	0x2fffc380

2ffee168 <sp_min_platform_setup>:
2ffee168:	b508      	push	{r3, lr}
2ffee16a:	f006 fa7b 	bl	2fff4664 <ddr_save_sr_mode>
2ffee16e:	f008 fc33 	bl	2fff69d8 <stm32mp1_security_setup>
2ffee172:	f004 f8f9 	bl	2fff2368 <generic_delay_timer_init>
2ffee176:	f001 fb73 	bl	2ffef860 <stm32_gic_init>
2ffee17a:	f7ff fb7d 	bl	2ffed878 <stm32_rtc_init>
2ffee17e:	1e01      	subs	r1, r0, #0
2ffee180:	da02      	bge.n	2ffee188 <sp_min_platform_setup+0x20>
2ffee182:	481c      	ldr	r0, [pc, #112]	; (2ffee1f4 <sp_min_platform_setup+0x8c>)
2ffee184:	f002 fcfc 	bl	2fff0b80 <tf_log>
2ffee188:	f7ff f924 	bl	2ffed3d4 <stm32_rng_init>
2ffee18c:	1e01      	subs	r1, r0, #0
2ffee18e:	da02      	bge.n	2ffee196 <sp_min_platform_setup+0x2e>
2ffee190:	4819      	ldr	r0, [pc, #100]	; (2ffee1f8 <sp_min_platform_setup+0x90>)
2ffee192:	f002 fcf5 	bl	2fff0b80 <tf_log>
2ffee196:	f7ff fca9 	bl	2ffedaec <stm32_tamp_init>
2ffee19a:	2800      	cmp	r0, #0
2ffee19c:	dd0b      	ble.n	2ffee1b6 <sp_min_platform_setup+0x4e>
2ffee19e:	4817      	ldr	r0, [pc, #92]	; (2ffee1fc <sp_min_platform_setup+0x94>)
2ffee1a0:	2106      	movs	r1, #6
2ffee1a2:	f7ff fb83 	bl	2ffed8ac <stm32_tamp_configure_internal>
2ffee1a6:	4816      	ldr	r0, [pc, #88]	; (2ffee200 <sp_min_platform_setup+0x98>)
2ffee1a8:	2300      	movs	r3, #0
2ffee1aa:	461a      	mov	r2, r3
2ffee1ac:	2103      	movs	r1, #3
2ffee1ae:	f7ff fba9 	bl	2ffed904 <stm32_tamp_configure_external>
2ffee1b2:	f7ff fb2d 	bl	2ffed810 <stm32_rtc_set_tamper_timestamp>
2ffee1b6:	f7ff fe13 	bl	2ffedde0 <stm32_timer_init>
2ffee1ba:	b908      	cbnz	r0, 2ffee1c0 <sp_min_platform_setup+0x58>
2ffee1bc:	f7fe ff4c 	bl	2ffed058 <stm32mp1_calib_init>
2ffee1c0:	f007 fa42 	bl	2fff5648 <stm32_iwdg_init>
2ffee1c4:	2800      	cmp	r0, #0
2ffee1c6:	da03      	bge.n	2ffee1d0 <sp_min_platform_setup+0x68>
2ffee1c8:	f002 fd7c 	bl	2fff0cc4 <console_flush>
2ffee1cc:	f008 edb0 	blx	2fff6d30 <do_panic>
2ffee1d0:	480c      	ldr	r0, [pc, #48]	; (2ffee204 <sp_min_platform_setup+0x9c>)
2ffee1d2:	f004 fc9c 	bl	2fff2b0e <fdt_rcc_enable_it>
2ffee1d6:	1e01      	subs	r1, r0, #0
2ffee1d8:	da03      	bge.n	2ffee1e2 <sp_min_platform_setup+0x7a>
2ffee1da:	480b      	ldr	r0, [pc, #44]	; (2ffee208 <sp_min_platform_setup+0xa0>)
2ffee1dc:	f002 fcd0 	bl	2fff0b80 <tf_log>
2ffee1e0:	e7f2      	b.n	2ffee1c8 <sp_min_platform_setup+0x60>
2ffee1e2:	2106      	movs	r1, #6
2ffee1e4:	f001 fafa 	bl	2ffef7dc <plat_ic_set_interrupt_priority>
2ffee1e8:	f000 fe60 	bl	2ffeeeac <stm32mp_lock_periph_registering>
2ffee1ec:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffee1f0:	f002 bbf8 	b.w	2fff09e4 <stm32mp1_init_scmi_server>
2ffee1f4:	2fff88b8 	.word	0x2fff88b8
2ffee1f8:	2fff88d3 	.word	0x2fff88d3
2ffee1fc:	2fffb1b8 	.word	0x2fffb1b8
2ffee200:	2fffb194 	.word	0x2fffb194
2ffee204:	2fff88ee 	.word	0x2fff88ee
2ffee208:	2fff88f5 	.word	0x2fff88f5

2ffee20c <sp_min_plat_arch_setup>:
2ffee20c:	4770      	bx	lr
	...

2ffee210 <smp_synchro>:
2ffee210:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2ffee212:	4604      	mov	r4, r0
2ffee214:	460f      	mov	r7, r1
2ffee216:	f7fd fe29 	bl	2ffebe6c <psci_is_last_on_cpu>
2ffee21a:	2801      	cmp	r0, #1
2ffee21c:	d02e      	beq.n	2ffee27c <smp_synchro+0x6c>
2ffee21e:	4e22      	ldr	r6, [pc, #136]	; (2ffee2a8 <smp_synchro+0x98>)
2ffee220:	f009 e90e 	blx	2fff7440 <plat_my_core_pos>
2ffee224:	b1b0      	cbz	r0, 2ffee254 <smp_synchro+0x44>
2ffee226:	4d21      	ldr	r5, [pc, #132]	; (2ffee2ac <smp_synchro+0x9c>)
2ffee228:	4628      	mov	r0, r5
2ffee22a:	f008 ecfc 	blx	2fff6c24 <spin_lock>
2ffee22e:	6833      	ldr	r3, [r6, #0]
2ffee230:	4628      	mov	r0, r5
2ffee232:	9301      	str	r3, [sp, #4]
2ffee234:	f008 ed08 	blx	2fff6c48 <spin_unlock>
2ffee238:	9b01      	ldr	r3, [sp, #4]
2ffee23a:	429c      	cmp	r4, r3
2ffee23c:	d12a      	bne.n	2ffee294 <smp_synchro+0x84>
2ffee23e:	481b      	ldr	r0, [pc, #108]	; (2ffee2ac <smp_synchro+0x9c>)
2ffee240:	f008 ecf0 	blx	2fff6c24 <spin_lock>
2ffee244:	4b1a      	ldr	r3, [pc, #104]	; (2ffee2b0 <smp_synchro+0xa0>)
2ffee246:	4819      	ldr	r0, [pc, #100]	; (2ffee2ac <smp_synchro+0x9c>)
2ffee248:	601c      	str	r4, [r3, #0]
2ffee24a:	b003      	add	sp, #12
2ffee24c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
2ffee250:	f00c bc6a 	b.w	2fffab28 <__spin_unlock_from_thumb>
2ffee254:	4815      	ldr	r0, [pc, #84]	; (2ffee2ac <smp_synchro+0x9c>)
2ffee256:	4d15      	ldr	r5, [pc, #84]	; (2ffee2ac <smp_synchro+0x9c>)
2ffee258:	f008 ece4 	blx	2fff6c24 <spin_lock>
2ffee25c:	6034      	str	r4, [r6, #0]
2ffee25e:	4813      	ldr	r0, [pc, #76]	; (2ffee2ac <smp_synchro+0x9c>)
2ffee260:	4e13      	ldr	r6, [pc, #76]	; (2ffee2b0 <smp_synchro+0xa0>)
2ffee262:	f008 ecf2 	blx	2fff6c48 <spin_unlock>
2ffee266:	4628      	mov	r0, r5
2ffee268:	f008 ecdc 	blx	2fff6c24 <spin_lock>
2ffee26c:	6833      	ldr	r3, [r6, #0]
2ffee26e:	4628      	mov	r0, r5
2ffee270:	9300      	str	r3, [sp, #0]
2ffee272:	f008 ecea 	blx	2fff6c48 <spin_unlock>
2ffee276:	9b00      	ldr	r3, [sp, #0]
2ffee278:	429c      	cmp	r4, r3
2ffee27a:	d101      	bne.n	2ffee280 <smp_synchro+0x70>
2ffee27c:	b003      	add	sp, #12
2ffee27e:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffee280:	2f00      	cmp	r7, #0
2ffee282:	d0f0      	beq.n	2ffee266 <smp_synchro+0x56>
2ffee284:	2101      	movs	r1, #1
2ffee286:	200e      	movs	r0, #14
2ffee288:	f001 fa06 	bl	2ffef698 <gicv2_raise_sgi>
2ffee28c:	200a      	movs	r0, #10
2ffee28e:	f004 f813 	bl	2fff22b8 <udelay>
2ffee292:	e7e8      	b.n	2ffee266 <smp_synchro+0x56>
2ffee294:	2f00      	cmp	r7, #0
2ffee296:	d0c7      	beq.n	2ffee228 <smp_synchro+0x18>
2ffee298:	2100      	movs	r1, #0
2ffee29a:	200e      	movs	r0, #14
2ffee29c:	f001 f9fc 	bl	2ffef698 <gicv2_raise_sgi>
2ffee2a0:	200a      	movs	r0, #10
2ffee2a2:	f004 f809 	bl	2fff22b8 <udelay>
2ffee2a6:	e7bf      	b.n	2ffee228 <smp_synchro+0x18>
2ffee2a8:	2fffc398 	.word	0x2fffc398
2ffee2ac:	2fffcba8 	.word	0x2fffcba8
2ffee2b0:	2fffc39c 	.word	0x2fffc39c

2ffee2b4 <stm32_apply_pmic_suspend_config>:
2ffee2b4:	2806      	cmp	r0, #6
2ffee2b6:	b510      	push	{r4, lr}
2ffee2b8:	d903      	bls.n	2ffee2c2 <stm32_apply_pmic_suspend_config+0xe>
2ffee2ba:	480d      	ldr	r0, [pc, #52]	; (2ffee2f0 <stm32_apply_pmic_suspend_config+0x3c>)
2ffee2bc:	2170      	movs	r1, #112	; 0x70
2ffee2be:	f009 fd73 	bl	2fff7da8 <__assert>
2ffee2c2:	4b0c      	ldr	r3, [pc, #48]	; (2ffee2f4 <stm32_apply_pmic_suspend_config+0x40>)
2ffee2c4:	220c      	movs	r2, #12
2ffee2c6:	fb02 3000 	mla	r0, r2, r0, r3
2ffee2ca:	6884      	ldr	r4, [r0, #8]
2ffee2cc:	b17c      	cbz	r4, 2ffee2ee <stm32_apply_pmic_suspend_config+0x3a>
2ffee2ce:	f007 fc75 	bl	2fff5bbc <initialize_pmic_i2c>
2ffee2d2:	b918      	cbnz	r0, 2ffee2dc <stm32_apply_pmic_suspend_config+0x28>
2ffee2d4:	f002 fcf6 	bl	2fff0cc4 <console_flush>
2ffee2d8:	f008 ed2a 	blx	2fff6d30 <do_panic>
2ffee2dc:	4620      	mov	r0, r4
2ffee2de:	f007 fc2a 	bl	2fff5b36 <pmic_set_lp_config>
2ffee2e2:	2800      	cmp	r0, #0
2ffee2e4:	dbf6      	blt.n	2ffee2d4 <stm32_apply_pmic_suspend_config+0x20>
2ffee2e6:	f007 fc21 	bl	2fff5b2c <pmic_configure_boot_on_regulators>
2ffee2ea:	2800      	cmp	r0, #0
2ffee2ec:	dbf2      	blt.n	2ffee2d4 <stm32_apply_pmic_suspend_config+0x20>
2ffee2ee:	bd10      	pop	{r4, pc}
2ffee2f0:	2fff89f4 	.word	0x2fff89f4
2ffee2f4:	2fff89a0 	.word	0x2fff89a0

2ffee2f8 <enter_cstop>:
2ffee2f8:	230c      	movs	r3, #12
2ffee2fa:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
2ffee2fe:	460f      	mov	r7, r1
2ffee300:	4343      	muls	r3, r0
2ffee302:	f8df 914c 	ldr.w	r9, [pc, #332]	; 2ffee450 <enter_cstop+0x158>
2ffee306:	4606      	mov	r6, r0
2ffee308:	f859 8003 	ldr.w	r8, [r9, r3]
2ffee30c:	f002 fdf2 	bl	2fff0ef4 <stm32mp_pwr_base>
2ffee310:	4604      	mov	r4, r0
2ffee312:	f002 fdf3 	bl	2fff0efc <stm32mp_rcc_base>
2ffee316:	4605      	mov	r5, r0
2ffee318:	f008 fbbe 	bl	2fff6a98 <stm32mp1_syscfg_disable_io_compensation>
2ffee31c:	2001      	movs	r0, #1
2ffee31e:	f006 f8bb 	bl	2fff4498 <ddr_set_sr_mode>
2ffee322:	2001      	movs	r0, #1
2ffee324:	f008 ee48 	blx	2fff6fb8 <dcsw_op_all>
2ffee328:	f008 fa14 	bl	2fff6754 <stm32_clean_context>
2ffee32c:	2e04      	cmp	r6, #4
2ffee32e:	d101      	bne.n	2ffee334 <enter_cstop+0x3c>
2ffee330:	f008 faf2 	bl	2fff6918 <stm32_save_ddr_training_area>
2ffee334:	f007 fbe6 	bl	2fff5b04 <dt_pmic_status>
2ffee338:	2800      	cmp	r0, #0
2ffee33a:	dd06      	ble.n	2ffee34a <enter_cstop+0x52>
2ffee33c:	4630      	mov	r0, r6
2ffee33e:	f7ff ffb9 	bl	2ffee2b4 <stm32_apply_pmic_suspend_config>
2ffee342:	2e02      	cmp	r6, #2
2ffee344:	bf08      	it	eq
2ffee346:	f048 0802 	orreq.w	r8, r8, #2
2ffee34a:	f8d5 3418 	ldr.w	r3, [r5, #1048]	; 0x418
2ffee34e:	220c      	movs	r2, #12
2ffee350:	fb02 9906 	mla	r9, r2, r6, r9
2ffee354:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
2ffee358:	f8c5 3418 	str.w	r3, [r5, #1048]	; 0x418
2ffee35c:	f8d5 3414 	ldr.w	r3, [r5, #1044]	; 0x414
2ffee360:	f8d9 2004 	ldr.w	r2, [r9, #4]
2ffee364:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
2ffee368:	f8c5 3414 	str.w	r3, [r5, #1044]	; 0x414
2ffee36c:	6923      	ldr	r3, [r4, #16]
2ffee36e:	f423 7302 	bic.w	r3, r3, #520	; 0x208
2ffee372:	f023 0301 	bic.w	r3, r3, #1
2ffee376:	4313      	orrs	r3, r2
2ffee378:	6123      	str	r3, [r4, #16]
2ffee37a:	6823      	ldr	r3, [r4, #0]
2ffee37c:	f023 0307 	bic.w	r3, r3, #7
2ffee380:	ea43 0308 	orr.w	r3, r3, r8
2ffee384:	6023      	str	r3, [r4, #0]
2ffee386:	4b2c      	ldr	r3, [pc, #176]	; (2ffee438 <enter_cstop+0x140>)
2ffee388:	f8c5 3418 	str.w	r3, [r5, #1048]	; 0x418
2ffee38c:	f8d5 3104 	ldr.w	r3, [r5, #260]	; 0x104
2ffee390:	f043 0303 	orr.w	r3, r3, #3
2ffee394:	f8c5 3104 	str.w	r3, [r5, #260]	; 0x104
2ffee398:	f007 f90a 	bl	2fff55b0 <stm32_iwdg_refresh>
2ffee39c:	2008      	movs	r0, #8
2ffee39e:	f001 fa1f 	bl	2ffef7e0 <plat_ic_set_priority_mask>
2ffee3a2:	4b26      	ldr	r3, [pc, #152]	; (2ffee43c <enter_cstop+0x144>)
2ffee3a4:	6018      	str	r0, [r3, #0]
2ffee3a6:	a801      	add	r0, sp, #4
2ffee3a8:	f005 ff4e 	bl	2fff4248 <ddr_standby_sr_entry>
2ffee3ac:	4605      	mov	r5, r0
2ffee3ae:	b118      	cbz	r0, 2ffee3b8 <enter_cstop+0xc0>
2ffee3b0:	f002 fc88 	bl	2fff0cc4 <console_flush>
2ffee3b4:	f008 ecbc 	blx	2fff6d30 <do_panic>
2ffee3b8:	f8df 9098 	ldr.w	r9, [pc, #152]	; 2ffee454 <enter_cstop+0x15c>
2ffee3bc:	2041      	movs	r0, #65	; 0x41
2ffee3be:	f8df 8098 	ldr.w	r8, [pc, #152]	; 2ffee458 <enter_cstop+0x160>
2ffee3c2:	f005 f8d1 	bl	2fff3568 <stm32mp_clk_enable>
2ffee3c6:	f8c9 5000 	str.w	r5, [r9]
2ffee3ca:	f8c8 5000 	str.w	r5, [r8]
2ffee3ce:	f005 fd23 	bl	2fff3e18 <stm32mp1_clock_stopmode_save>
2ffee3d2:	481b      	ldr	r0, [pc, #108]	; (2ffee440 <enter_cstop+0x148>)
2ffee3d4:	f7ff f8e2 	bl	2ffed59c <stm32_rtc_get_calendar>
2ffee3d8:	f004 fc04 	bl	2fff2be4 <stm32mp_stgen_get_counter>
2ffee3dc:	460b      	mov	r3, r1
2ffee3de:	2e04      	cmp	r6, #4
2ffee3e0:	4918      	ldr	r1, [pc, #96]	; (2ffee444 <enter_cstop+0x14c>)
2ffee3e2:	4602      	mov	r2, r0
2ffee3e4:	e9c1 2300 	strd	r2, r3, [r1]
2ffee3e8:	d11d      	bne.n	2ffee426 <enter_cstop+0x12e>
2ffee3ea:	4917      	ldr	r1, [pc, #92]	; (2ffee448 <enter_cstop+0x150>)
2ffee3ec:	f8c9 7000 	str.w	r7, [r9]
2ffee3f0:	f8c8 1000 	str.w	r1, [r8]
2ffee3f4:	9801      	ldr	r0, [sp, #4]
2ffee3f6:	4912      	ldr	r1, [pc, #72]	; (2ffee440 <enter_cstop+0x148>)
2ffee3f8:	f008 f9f4 	bl	2fff67e4 <stm32_save_context>
2ffee3fc:	2800      	cmp	r0, #0
2ffee3fe:	d1d7      	bne.n	2ffee3b0 <enter_cstop+0xb8>
2ffee400:	f000 faa2 	bl	2ffee948 <stm32mp1_get_retram_enabled>
2ffee404:	f104 0208 	add.w	r2, r4, #8
2ffee408:	b130      	cbz	r0, 2ffee418 <enter_cstop+0x120>
2ffee40a:	68a3      	ldr	r3, [r4, #8]
2ffee40c:	f043 0302 	orr.w	r3, r3, #2
2ffee410:	60a3      	str	r3, [r4, #8]
2ffee412:	6813      	ldr	r3, [r2, #0]
2ffee414:	0399      	lsls	r1, r3, #14
2ffee416:	d5fc      	bpl.n	2ffee412 <enter_cstop+0x11a>
2ffee418:	68a3      	ldr	r3, [r4, #8]
2ffee41a:	f043 0301 	orr.w	r3, r3, #1
2ffee41e:	60a3      	str	r3, [r4, #8]
2ffee420:	6813      	ldr	r3, [r2, #0]
2ffee422:	03db      	lsls	r3, r3, #15
2ffee424:	d5fc      	bpl.n	2ffee420 <enter_cstop+0x128>
2ffee426:	2041      	movs	r0, #65	; 0x41
2ffee428:	f005 f8a1 	bl	2fff356e <stm32mp_clk_disable>
2ffee42c:	4b07      	ldr	r3, [pc, #28]	; (2ffee44c <enter_cstop+0x154>)
2ffee42e:	2201      	movs	r2, #1
2ffee430:	701a      	strb	r2, [r3, #0]
2ffee432:	b003      	add	sp, #12
2ffee434:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2ffee438:	00110f1f 	.word	0x00110f1f
2ffee43c:	2fffc3a4 	.word	0x2fffc3a4
2ffee440:	2fffcbac 	.word	0x2fffcbac
2ffee444:	2fffcbb8 	.word	0x2fffcbb8
2ffee448:	ca7face0 	.word	0xca7face0
2ffee44c:	2fffc3a0 	.word	0x2fffc3a0
2ffee450:	2fff89a0 	.word	0x2fff89a0
2ffee454:	5c00a114 	.word	0x5c00a114
2ffee458:	5c00a110 	.word	0x5c00a110

2ffee45c <stm32_exit_cstop>:
2ffee45c:	b530      	push	{r4, r5, lr}
2ffee45e:	b085      	sub	sp, #20
2ffee460:	f002 fd48 	bl	2fff0ef4 <stm32mp_pwr_base>
2ffee464:	4605      	mov	r5, r0
2ffee466:	f002 fd49 	bl	2fff0efc <stm32mp_rcc_base>
2ffee46a:	4b1f      	ldr	r3, [pc, #124]	; (2ffee4e8 <stm32_exit_cstop+0x8c>)
2ffee46c:	4604      	mov	r4, r0
2ffee46e:	781a      	ldrb	r2, [r3, #0]
2ffee470:	2a00      	cmp	r2, #0
2ffee472:	d036      	beq.n	2ffee4e2 <stm32_exit_cstop+0x86>
2ffee474:	2200      	movs	r2, #0
2ffee476:	701a      	strb	r2, [r3, #0]
2ffee478:	f005 fdec 	bl	2fff4054 <ddr_sw_self_refresh_exit>
2ffee47c:	b118      	cbz	r0, 2ffee486 <stm32_exit_cstop+0x2a>
2ffee47e:	f002 fc21 	bl	2fff0cc4 <console_flush>
2ffee482:	f008 ec56 	blx	2fff6d30 <do_panic>
2ffee486:	f006 f8f5 	bl	2fff4674 <ddr_restore_sr_mode>
2ffee48a:	4b18      	ldr	r3, [pc, #96]	; (2ffee4ec <stm32_exit_cstop+0x90>)
2ffee48c:	6818      	ldr	r0, [r3, #0]
2ffee48e:	f001 f9a7 	bl	2ffef7e0 <plat_ic_set_priority_mask>
2ffee492:	f8d4 3414 	ldr.w	r3, [r4, #1044]	; 0x414
2ffee496:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
2ffee49a:	f8c4 3414 	str.w	r3, [r4, #1044]	; 0x414
2ffee49e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
2ffee4a2:	f043 0303 	orr.w	r3, r3, #3
2ffee4a6:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
2ffee4aa:	f3bf 8f4f 	dsb	sy
2ffee4ae:	f3bf 8f6f 	isb	sy
2ffee4b2:	68ab      	ldr	r3, [r5, #8]
2ffee4b4:	a801      	add	r0, sp, #4
2ffee4b6:	f023 0303 	bic.w	r3, r3, #3
2ffee4ba:	60ab      	str	r3, [r5, #8]
2ffee4bc:	f7ff f86e 	bl	2ffed59c <stm32_rtc_get_calendar>
2ffee4c0:	490b      	ldr	r1, [pc, #44]	; (2ffee4f0 <stm32_exit_cstop+0x94>)
2ffee4c2:	a801      	add	r0, sp, #4
2ffee4c4:	f7ff f88a 	bl	2ffed5dc <stm32_rtc_diff_calendar>
2ffee4c8:	460b      	mov	r3, r1
2ffee4ca:	4602      	mov	r2, r0
2ffee4cc:	4909      	ldr	r1, [pc, #36]	; (2ffee4f4 <stm32_exit_cstop+0x98>)
2ffee4ce:	e9d1 0100 	ldrd	r0, r1, [r1]
2ffee4d2:	f004 fb8f 	bl	2fff2bf4 <stm32mp_stgen_restore_counter>
2ffee4d6:	f008 faab 	bl	2fff6a30 <stm32mp1_syscfg_enable_io_compensation>
2ffee4da:	f005 fcc3 	bl	2fff3e64 <stm32mp1_clock_stopmode_resume>
2ffee4de:	2800      	cmp	r0, #0
2ffee4e0:	d1cd      	bne.n	2ffee47e <stm32_exit_cstop+0x22>
2ffee4e2:	b005      	add	sp, #20
2ffee4e4:	bd30      	pop	{r4, r5, pc}
2ffee4e6:	bf00      	nop
2ffee4e8:	2fffc3a0 	.word	0x2fffc3a0
2ffee4ec:	2fffc3a4 	.word	0x2fffc3a4
2ffee4f0:	2fffcbac 	.word	0x2fffcbac
2ffee4f4:	2fffcbb8 	.word	0x2fffcbb8

2ffee4f8 <stm32_pwr_down_wfi>:
2ffee4f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffee4fa:	f240 34ff 	movw	r4, #1023	; 0x3ff
2ffee4fe:	4e0b      	ldr	r6, [pc, #44]	; (2ffee52c <stm32_pwr_down_wfi+0x34>)
2ffee500:	2000      	movs	r0, #0
2ffee502:	4627      	mov	r7, r4
2ffee504:	f7fe fd40 	bl	2ffecf88 <stm32mp1_calib_set_wakeup>
2ffee508:	f7fe fd38 	bl	2ffecf7c <stm32mp1_calib_get_wakeup>
2ffee50c:	b968      	cbnz	r0, 2ffee52a <stm32_pwr_down_wfi+0x32>
2ffee50e:	4630      	mov	r0, r6
2ffee510:	f008 effc 	blx	2fff750c <wfi_svc_int_enable>
2ffee514:	f000 ffd2 	bl	2ffef4bc <gicv2_acknowledge_interrupt>
2ffee518:	42a0      	cmp	r0, r4
2ffee51a:	4605      	mov	r5, r0
2ffee51c:	d001      	beq.n	2ffee522 <stm32_pwr_down_wfi+0x2a>
2ffee51e:	f000 ffdf 	bl	2ffef4e0 <gicv2_end_of_interrupt>
2ffee522:	f007 f845 	bl	2fff55b0 <stm32_iwdg_refresh>
2ffee526:	42bd      	cmp	r5, r7
2ffee528:	d0ee      	beq.n	2ffee508 <stm32_pwr_down_wfi+0x10>
2ffee52a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffee52c:	2fffc3a8 	.word	0x2fffc3a8

2ffee530 <stm32_auto_stop>:
2ffee530:	b510      	push	{r4, lr}
2ffee532:	f008 ef86 	blx	2fff7440 <plat_my_core_pos>
2ffee536:	4604      	mov	r4, r0
2ffee538:	b988      	cbnz	r0, 2ffee55e <stm32_auto_stop+0x2e>
2ffee53a:	4601      	mov	r1, r0
2ffee53c:	2001      	movs	r0, #1
2ffee53e:	f7ff fe67 	bl	2ffee210 <smp_synchro>
2ffee542:	4621      	mov	r1, r4
2ffee544:	2002      	movs	r0, #2
2ffee546:	f7ff fed7 	bl	2ffee2f8 <enter_cstop>
2ffee54a:	f7ff ffd5 	bl	2ffee4f8 <stm32_pwr_down_wfi>
2ffee54e:	f7ff ff85 	bl	2ffee45c <stm32_exit_cstop>
2ffee552:	2101      	movs	r1, #1
2ffee554:	2002      	movs	r0, #2
2ffee556:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffee55a:	f7ff be59 	b.w	2ffee210 <smp_synchro>
2ffee55e:	2001      	movs	r0, #1
2ffee560:	f008 ed2a 	blx	2fff6fb8 <dcsw_op_all>
2ffee564:	2100      	movs	r1, #0
2ffee566:	2001      	movs	r0, #1
2ffee568:	f7ff fe52 	bl	2ffee210 <smp_synchro>
2ffee56c:	2008      	movs	r0, #8
2ffee56e:	f001 f937 	bl	2ffef7e0 <plat_ic_set_priority_mask>
2ffee572:	bf30      	wfi
2ffee574:	f001 f934 	bl	2ffef7e0 <plat_ic_set_priority_mask>
2ffee578:	e7eb      	b.n	2ffee552 <stm32_auto_stop+0x22>
	...

2ffee57c <stm32_enter_low_power>:
2ffee57c:	b508      	push	{r3, lr}
2ffee57e:	b1c8      	cbz	r0, 2ffee5b4 <stm32_enter_low_power+0x38>
2ffee580:	2806      	cmp	r0, #6
2ffee582:	d129      	bne.n	2ffee5d8 <stm32_enter_low_power+0x5c>
2ffee584:	2000      	movs	r0, #0
2ffee586:	f005 fe5f 	bl	2fff4248 <ddr_standby_sr_entry>
2ffee58a:	b110      	cbz	r0, 2ffee592 <stm32_enter_low_power+0x16>
2ffee58c:	4815      	ldr	r0, [pc, #84]	; (2ffee5e4 <stm32_enter_low_power+0x68>)
2ffee58e:	f002 faf7 	bl	2fff0b80 <tf_log>
2ffee592:	f007 fab7 	bl	2fff5b04 <dt_pmic_status>
2ffee596:	2800      	cmp	r0, #0
2ffee598:	dd22      	ble.n	2ffee5e0 <stm32_enter_low_power+0x64>
2ffee59a:	f007 fb0f 	bl	2fff5bbc <initialize_pmic_i2c>
2ffee59e:	b918      	cbnz	r0, 2ffee5a8 <stm32_enter_low_power+0x2c>
2ffee5a0:	f002 fb90 	bl	2fff0cc4 <console_flush>
2ffee5a4:	f008 ebc4 	blx	2fff6d30 <do_panic>
2ffee5a8:	f007 fc92 	bl	2fff5ed0 <stpmic1_switch_off>
2ffee5ac:	2064      	movs	r0, #100	; 0x64
2ffee5ae:	f003 fe83 	bl	2fff22b8 <udelay>
2ffee5b2:	e7f5      	b.n	2ffee5a0 <stm32_enter_low_power+0x24>
2ffee5b4:	f002 fc9e 	bl	2fff0ef4 <stm32mp_pwr_base>
2ffee5b8:	6903      	ldr	r3, [r0, #16]
2ffee5ba:	f423 7302 	bic.w	r3, r3, #520	; 0x208
2ffee5be:	f023 0301 	bic.w	r3, r3, #1
2ffee5c2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
2ffee5c6:	6103      	str	r3, [r0, #16]
2ffee5c8:	6803      	ldr	r3, [r0, #0]
2ffee5ca:	f023 0307 	bic.w	r3, r3, #7
2ffee5ce:	6003      	str	r3, [r0, #0]
2ffee5d0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffee5d4:	f7ff bf90 	b.w	2ffee4f8 <stm32_pwr_down_wfi>
2ffee5d8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffee5dc:	f7ff be8c 	b.w	2ffee2f8 <enter_cstop>
2ffee5e0:	bd08      	pop	{r3, pc}
2ffee5e2:	bf00      	nop
2ffee5e4:	2fff8a1a 	.word	0x2fff8a1a

2ffee5e8 <stm32_pwr_domain_off>:
2ffee5e8:	4770      	bx	lr

2ffee5ea <stm32_validate_power_state>:
2ffee5ea:	03c3      	lsls	r3, r0, #15
2ffee5ec:	d408      	bmi.n	2ffee600 <stm32_validate_power_state+0x16>
2ffee5ee:	f010 7f40 	tst.w	r0, #50331648	; 0x3000000
2ffee5f2:	d105      	bne.n	2ffee600 <stm32_validate_power_state+0x16>
2ffee5f4:	b280      	uxth	r0, r0
2ffee5f6:	b918      	cbnz	r0, 2ffee600 <stm32_validate_power_state+0x16>
2ffee5f8:	7048      	strb	r0, [r1, #1]
2ffee5fa:	2301      	movs	r3, #1
2ffee5fc:	700b      	strb	r3, [r1, #0]
2ffee5fe:	4770      	bx	lr
2ffee600:	f06f 0001 	mvn.w	r0, #1
2ffee604:	4770      	bx	lr
	...

2ffee608 <stm32_validate_ns_entrypoint>:
2ffee608:	f1b0 4f40 	cmp.w	r0, #3221225472	; 0xc0000000
2ffee60c:	bf23      	ittte	cs
2ffee60e:	4b03      	ldrcs	r3, [pc, #12]	; (2ffee61c <stm32_validate_ns_entrypoint+0x14>)
2ffee610:	6018      	strcs	r0, [r3, #0]
2ffee612:	2000      	movcs	r0, #0
2ffee614:	f06f 0008 	mvncc.w	r0, #8
2ffee618:	4770      	bx	lr
2ffee61a:	bf00      	nop
2ffee61c:	2fffcbc4 	.word	0x2fffcbc4

2ffee620 <stm32_node_hw_state>:
2ffee620:	2900      	cmp	r1, #0
2ffee622:	bf14      	ite	ne
2ffee624:	f06f 0001 	mvnne.w	r0, #1
2ffee628:	2000      	moveq	r0, #0
2ffee62a:	4770      	bx	lr

2ffee62c <stm32_get_sys_suspend_power_state>:
2ffee62c:	2302      	movs	r3, #2
2ffee62e:	7003      	strb	r3, [r0, #0]
2ffee630:	7043      	strb	r3, [r0, #1]
2ffee632:	4770      	bx	lr

2ffee634 <stm32_system_reset>:
2ffee634:	b508      	push	{r3, lr}
2ffee636:	f002 fc61 	bl	2fff0efc <stm32mp_rcc_base>
2ffee63a:	f8d0 3404 	ldr.w	r3, [r0, #1028]	; 0x404
2ffee63e:	f043 0301 	orr.w	r3, r3, #1
2ffee642:	f8c0 3404 	str.w	r3, [r0, #1028]	; 0x404
2ffee646:	e7fe      	b.n	2ffee646 <stm32_system_reset+0x12>

2ffee648 <stm32_pwr_domain_suspend>:
2ffee648:	b508      	push	{r3, lr}
2ffee64a:	2000      	movs	r0, #0
2ffee64c:	f000 f950 	bl	2ffee8f0 <stm32mp1_get_lp_soc_mode>
2ffee650:	4b02      	ldr	r3, [pc, #8]	; (2ffee65c <stm32_pwr_domain_suspend+0x14>)
2ffee652:	6819      	ldr	r1, [r3, #0]
2ffee654:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffee658:	f7ff bf90 	b.w	2ffee57c <stm32_enter_low_power>
2ffee65c:	2fffcbc4 	.word	0x2fffcbc4

2ffee660 <stm32_system_off>:
2ffee660:	b508      	push	{r3, lr}
2ffee662:	2001      	movs	r0, #1
2ffee664:	f000 f944 	bl	2ffee8f0 <stm32mp1_get_lp_soc_mode>
2ffee668:	4604      	mov	r4, r0
2ffee66a:	f002 fd89 	bl	2fff1180 <stm32mp_is_single_core>
2ffee66e:	b958      	cbnz	r0, 2ffee688 <stm32_system_off+0x28>
2ffee670:	f002 fc44 	bl	2fff0efc <stm32mp_rcc_base>
2ffee674:	f8d0 3404 	ldr.w	r3, [r0, #1028]	; 0x404
2ffee678:	2101      	movs	r1, #1
2ffee67a:	f043 0320 	orr.w	r3, r3, #32
2ffee67e:	f8c0 3404 	str.w	r3, [r0, #1028]	; 0x404
2ffee682:	2009      	movs	r0, #9
2ffee684:	f001 f808 	bl	2ffef698 <gicv2_raise_sgi>
2ffee688:	2100      	movs	r1, #0
2ffee68a:	4620      	mov	r0, r4
2ffee68c:	f7ff ff76 	bl	2ffee57c <stm32_enter_low_power>
2ffee690:	f7ff ff32 	bl	2ffee4f8 <stm32_pwr_down_wfi>
2ffee694:	f002 fb16 	bl	2fff0cc4 <console_flush>
2ffee698:	f008 eb4a 	blx	2fff6d30 <do_panic>

2ffee69c <stm32_pwr_domain_pwr_down_wfi>:
2ffee69c:	b508      	push	{r3, lr}
2ffee69e:	ee10 3fb0 	mrc	15, 0, r3, cr0, cr0, {5}
2ffee6a2:	f013 0fff 	tst.w	r3, #255	; 0xff
2ffee6a6:	d108      	bne.n	2ffee6ba <stm32_pwr_domain_pwr_down_wfi+0x1e>
2ffee6a8:	4b0b      	ldr	r3, [pc, #44]	; (2ffee6d8 <stm32_pwr_domain_pwr_down_wfi+0x3c>)
2ffee6aa:	681c      	ldr	r4, [r3, #0]
2ffee6ac:	f7ff ff24 	bl	2ffee4f8 <stm32_pwr_down_wfi>
2ffee6b0:	f7ff fed4 	bl	2ffee45c <stm32_exit_cstop>
2ffee6b4:	f008 ecd2 	blx	2fff705c <disable_mmu_icache_secure>
2ffee6b8:	47a0      	blx	r4
2ffee6ba:	f002 fc1f 	bl	2fff0efc <stm32mp_rcc_base>
2ffee6be:	2320      	movs	r3, #32
2ffee6c0:	f8c0 3404 	str.w	r3, [r0, #1028]	; 0x404
2ffee6c4:	f3bf 8f4f 	dsb	sy
2ffee6c8:	f3bf 8f6f 	isb	sy
2ffee6cc:	bf30      	wfi
2ffee6ce:	f002 faf9 	bl	2fff0cc4 <console_flush>
2ffee6d2:	f008 eb2e 	blx	2fff6d30 <do_panic>
2ffee6d6:	bf00      	nop
2ffee6d8:	2fffcbc8 	.word	0x2fffcbc8

2ffee6dc <stm32_pwr_domain_on_finish>:
2ffee6dc:	b508      	push	{r3, lr}
2ffee6de:	f001 f8b4 	bl	2ffef84a <stm32_gic_pcpu_init>
2ffee6e2:	4b02      	ldr	r3, [pc, #8]	; (2ffee6ec <stm32_pwr_domain_on_finish+0x10>)
2ffee6e4:	681b      	ldr	r3, [r3, #0]
2ffee6e6:	ee0e 3f10 	mcr	15, 0, r3, cr14, cr0, {0}
2ffee6ea:	bd08      	pop	{r3, pc}
2ffee6ec:	2fffcbc0 	.word	0x2fffcbc0

2ffee6f0 <stm32_pwr_domain_on>:
2ffee6f0:	b570      	push	{r4, r5, r6, lr}
2ffee6f2:	4606      	mov	r6, r0
2ffee6f4:	ee10 5fb0 	mrc	15, 0, r5, cr0, cr0, {5}
2ffee6f8:	f002 fd42 	bl	2fff1180 <stm32mp_is_single_core>
2ffee6fc:	4604      	mov	r4, r0
2ffee6fe:	bb18      	cbnz	r0, 2ffee748 <stm32_pwr_domain_on+0x58>
2ffee700:	42ae      	cmp	r6, r5
2ffee702:	d024      	beq.n	2ffee74e <stm32_pwr_domain_on+0x5e>
2ffee704:	4d15      	ldr	r5, [pc, #84]	; (2ffee75c <stm32_pwr_domain_on+0x6c>)
2ffee706:	2101      	movs	r1, #1
2ffee708:	4e15      	ldr	r6, [pc, #84]	; (2ffee760 <stm32_pwr_domain_on+0x70>)
2ffee70a:	6028      	str	r0, [r5, #0]
2ffee70c:	f000 ffc4 	bl	2ffef698 <gicv2_raise_sgi>
2ffee710:	200a      	movs	r0, #10
2ffee712:	f003 fdd1 	bl	2fff22b8 <udelay>
2ffee716:	6832      	ldr	r2, [r6, #0]
2ffee718:	4b12      	ldr	r3, [pc, #72]	; (2ffee764 <stm32_pwr_domain_on+0x74>)
2ffee71a:	429a      	cmp	r2, r3
2ffee71c:	d11a      	bne.n	2ffee754 <stm32_pwr_domain_on+0x64>
2ffee71e:	2041      	movs	r0, #65	; 0x41
2ffee720:	f004 ff22 	bl	2fff3568 <stm32mp_clk_enable>
2ffee724:	ee1e 2f10 	mrc	15, 0, r2, cr14, cr0, {0}
2ffee728:	4b0f      	ldr	r3, [pc, #60]	; (2ffee768 <stm32_pwr_domain_on+0x78>)
2ffee72a:	2041      	movs	r0, #65	; 0x41
2ffee72c:	601a      	str	r2, [r3, #0]
2ffee72e:	6832      	ldr	r2, [r6, #0]
2ffee730:	4b0e      	ldr	r3, [pc, #56]	; (2ffee76c <stm32_pwr_domain_on+0x7c>)
2ffee732:	601a      	str	r2, [r3, #0]
2ffee734:	4b0e      	ldr	r3, [pc, #56]	; (2ffee770 <stm32_pwr_domain_on+0x80>)
2ffee736:	602b      	str	r3, [r5, #0]
2ffee738:	f004 ff19 	bl	2fff356e <stm32mp_clk_disable>
2ffee73c:	2008      	movs	r0, #8
2ffee73e:	2101      	movs	r1, #1
2ffee740:	f000 ffaa 	bl	2ffef698 <gicv2_raise_sgi>
2ffee744:	4620      	mov	r0, r4
2ffee746:	bd70      	pop	{r4, r5, r6, pc}
2ffee748:	f06f 0005 	mvn.w	r0, #5
2ffee74c:	e7fb      	b.n	2ffee746 <stm32_pwr_domain_on+0x56>
2ffee74e:	f06f 0001 	mvn.w	r0, #1
2ffee752:	e7f8      	b.n	2ffee746 <stm32_pwr_domain_on+0x56>
2ffee754:	f06f 0008 	mvn.w	r0, #8
2ffee758:	e7f5      	b.n	2ffee746 <stm32_pwr_domain_on+0x56>
2ffee75a:	bf00      	nop
2ffee75c:	5c00a110 	.word	0x5c00a110
2ffee760:	2fffcbc8 	.word	0x2fffcbc8
2ffee764:	2ffeb2e0 	.word	0x2ffeb2e0
2ffee768:	2fffcbc0 	.word	0x2fffcbc0
2ffee76c:	5c00a114 	.word	0x5c00a114
2ffee770:	ca7face1 	.word	0xca7face1

2ffee774 <stm32_cpu_standby>:
2ffee774:	2801      	cmp	r0, #1
2ffee776:	b510      	push	{r4, lr}
2ffee778:	d003      	beq.n	2ffee782 <stm32_cpu_standby+0xe>
2ffee77a:	480c      	ldr	r0, [pc, #48]	; (2ffee7ac <stm32_cpu_standby+0x38>)
2ffee77c:	2128      	movs	r1, #40	; 0x28
2ffee77e:	f009 fb13 	bl	2fff7da8 <__assert>
2ffee782:	f3bf 8f4f 	dsb	sy
2ffee786:	f3bf 8f6f 	isb	sy
2ffee78a:	f240 34ff 	movw	r4, #1023	; 0x3ff
2ffee78e:	bf30      	wfi
2ffee790:	f000 fe94 	bl	2ffef4bc <gicv2_acknowledge_interrupt>
2ffee794:	f2a0 32fe 	subw	r2, r0, #1022	; 0x3fe
2ffee798:	2a01      	cmp	r2, #1
2ffee79a:	d903      	bls.n	2ffee7a4 <stm32_cpu_standby+0x30>
2ffee79c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffee7a0:	f000 be9e 	b.w	2ffef4e0 <gicv2_end_of_interrupt>
2ffee7a4:	42a0      	cmp	r0, r4
2ffee7a6:	d0f2      	beq.n	2ffee78e <stm32_cpu_standby+0x1a>
2ffee7a8:	bd10      	pop	{r4, pc}
2ffee7aa:	bf00      	nop
2ffee7ac:	2fff8a64 	.word	0x2fff8a64

2ffee7b0 <stm32_pwr_domain_suspend_finish>:
2ffee7b0:	4770      	bx	lr
	...

2ffee7b4 <plat_setup_psci_ops>:
2ffee7b4:	4b02      	ldr	r3, [pc, #8]	; (2ffee7c0 <plat_setup_psci_ops+0xc>)
2ffee7b6:	6018      	str	r0, [r3, #0]
2ffee7b8:	2000      	movs	r0, #0
2ffee7ba:	4b02      	ldr	r3, [pc, #8]	; (2ffee7c4 <plat_setup_psci_ops+0x10>)
2ffee7bc:	600b      	str	r3, [r1, #0]
2ffee7be:	4770      	bx	lr
2ffee7c0:	2fffcbc8 	.word	0x2fffcbc8
2ffee7c4:	2fff8a84 	.word	0x2fff8a84

2ffee7c8 <stm32mp1_init_lp_states>:
2ffee7c8:	b570      	push	{r4, r5, r6, lr}
2ffee7ca:	b08a      	sub	sp, #40	; 0x28
2ffee7cc:	a801      	add	r0, sp, #4
2ffee7ce:	f007 fd77 	bl	2fff62c0 <fdt_get_address>
2ffee7d2:	b938      	cbnz	r0, 2ffee7e4 <stm32mp1_init_lp_states+0x1c>
2ffee7d4:	4935      	ldr	r1, [pc, #212]	; (2ffee8ac <stm32mp1_init_lp_states+0xe4>)
2ffee7d6:	4836      	ldr	r0, [pc, #216]	; (2ffee8b0 <stm32mp1_init_lp_states+0xe8>)
2ffee7d8:	f002 f9d2 	bl	2fff0b80 <tf_log>
2ffee7dc:	f002 fa72 	bl	2fff0cc4 <console_flush>
2ffee7e0:	f008 eaa6 	blx	2fff6d30 <do_panic>
2ffee7e4:	4833      	ldr	r0, [pc, #204]	; (2ffee8b4 <stm32mp1_init_lp_states+0xec>)
2ffee7e6:	f007 fe77 	bl	2fff64d8 <dt_get_node_by_compatible>
2ffee7ea:	1e05      	subs	r5, r0, #0
2ffee7ec:	dbf2      	blt.n	2ffee7d4 <stm32mp1_init_lp_states+0xc>
2ffee7ee:	4a2f      	ldr	r2, [pc, #188]	; (2ffee8ac <stm32mp1_init_lp_states+0xe4>)
2ffee7f0:	2300      	movs	r3, #0
2ffee7f2:	9801      	ldr	r0, [sp, #4]
2ffee7f4:	4629      	mov	r1, r5
2ffee7f6:	f009 f93a 	bl	2fff7a6e <fdt_getprop>
2ffee7fa:	2800      	cmp	r0, #0
2ffee7fc:	d0ea      	beq.n	2ffee7d4 <stm32mp1_init_lp_states+0xc>
2ffee7fe:	6802      	ldr	r2, [r0, #0]
2ffee800:	9801      	ldr	r0, [sp, #4]
2ffee802:	f3c2 2107 	ubfx	r1, r2, #8, #8
2ffee806:	0e13      	lsrs	r3, r2, #24
2ffee808:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
2ffee80c:	f3c2 4207 	ubfx	r2, r2, #16, #8
2ffee810:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
2ffee814:	4629      	mov	r1, r5
2ffee816:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2ffee81a:	4a27      	ldr	r2, [pc, #156]	; (2ffee8b8 <stm32mp1_init_lp_states+0xf0>)
2ffee81c:	6013      	str	r3, [r2, #0]
2ffee81e:	ab02      	add	r3, sp, #8
2ffee820:	4a26      	ldr	r2, [pc, #152]	; (2ffee8bc <stm32mp1_init_lp_states+0xf4>)
2ffee822:	f009 f924 	bl	2fff7a6e <fdt_getprop>
2ffee826:	2800      	cmp	r0, #0
2ffee828:	d0d8      	beq.n	2ffee7dc <stm32mp1_init_lp_states+0x14>
2ffee82a:	9c02      	ldr	r4, [sp, #8]
2ffee82c:	08a4      	lsrs	r4, r4, #2
2ffee82e:	2c07      	cmp	r4, #7
2ffee830:	d8d4      	bhi.n	2ffee7dc <stm32mp1_init_lp_states+0x14>
2ffee832:	4922      	ldr	r1, [pc, #136]	; (2ffee8bc <stm32mp1_init_lp_states+0xf4>)
2ffee834:	ae03      	add	r6, sp, #12
2ffee836:	4623      	mov	r3, r4
2ffee838:	4632      	mov	r2, r6
2ffee83a:	4628      	mov	r0, r5
2ffee83c:	f007 fdc0 	bl	2fff63c0 <fdt_read_uint32_array>
2ffee840:	2800      	cmp	r0, #0
2ffee842:	da26      	bge.n	2ffee892 <stm32mp1_init_lp_states+0xca>
2ffee844:	481e      	ldr	r0, [pc, #120]	; (2ffee8c0 <stm32mp1_init_lp_states+0xf8>)
2ffee846:	f002 f99b 	bl	2fff0b80 <tf_log>
2ffee84a:	e7c7      	b.n	2ffee7dc <stm32mp1_init_lp_states+0x14>
2ffee84c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
2ffee850:	2906      	cmp	r1, #6
2ffee852:	d901      	bls.n	2ffee858 <stm32mp1_init_lp_states+0x90>
2ffee854:	481b      	ldr	r0, [pc, #108]	; (2ffee8c4 <stm32mp1_init_lp_states+0xfc>)
2ffee856:	e7f6      	b.n	2ffee846 <stm32mp1_init_lp_states+0x7e>
2ffee858:	5450      	strb	r0, [r2, r1]
2ffee85a:	3301      	adds	r3, #1
2ffee85c:	429c      	cmp	r4, r3
2ffee85e:	d1f5      	bne.n	2ffee84c <stm32mp1_init_lp_states+0x84>
2ffee860:	2306      	movs	r3, #6
2ffee862:	5cd1      	ldrb	r1, [r2, r3]
2ffee864:	2901      	cmp	r1, #1
2ffee866:	d118      	bne.n	2ffee89a <stm32mp1_init_lp_states+0xd2>
2ffee868:	4a17      	ldr	r2, [pc, #92]	; (2ffee8c8 <stm32mp1_init_lp_states+0x100>)
2ffee86a:	6013      	str	r3, [r2, #0]
2ffee86c:	4630      	mov	r0, r6
2ffee86e:	f007 fd27 	bl	2fff62c0 <fdt_get_address>
2ffee872:	b1c0      	cbz	r0, 2ffee8a6 <stm32mp1_init_lp_states+0xde>
2ffee874:	480f      	ldr	r0, [pc, #60]	; (2ffee8b4 <stm32mp1_init_lp_states+0xec>)
2ffee876:	f007 fe2f 	bl	2fff64d8 <dt_get_node_by_compatible>
2ffee87a:	1e01      	subs	r1, r0, #0
2ffee87c:	db13      	blt.n	2ffee8a6 <stm32mp1_init_lp_states+0xde>
2ffee87e:	4a13      	ldr	r2, [pc, #76]	; (2ffee8cc <stm32mp1_init_lp_states+0x104>)
2ffee880:	2300      	movs	r3, #0
2ffee882:	9803      	ldr	r0, [sp, #12]
2ffee884:	f009 f8f3 	bl	2fff7a6e <fdt_getprop>
2ffee888:	4b11      	ldr	r3, [pc, #68]	; (2ffee8d0 <stm32mp1_init_lp_states+0x108>)
2ffee88a:	b948      	cbnz	r0, 2ffee8a0 <stm32mp1_init_lp_states+0xd8>
2ffee88c:	7018      	strb	r0, [r3, #0]
2ffee88e:	b00a      	add	sp, #40	; 0x28
2ffee890:	bd70      	pop	{r4, r5, r6, pc}
2ffee892:	4a10      	ldr	r2, [pc, #64]	; (2ffee8d4 <stm32mp1_init_lp_states+0x10c>)
2ffee894:	2300      	movs	r3, #0
2ffee896:	2001      	movs	r0, #1
2ffee898:	e7e0      	b.n	2ffee85c <stm32mp1_init_lp_states+0x94>
2ffee89a:	3b01      	subs	r3, #1
2ffee89c:	d1e1      	bne.n	2ffee862 <stm32mp1_init_lp_states+0x9a>
2ffee89e:	e7e5      	b.n	2ffee86c <stm32mp1_init_lp_states+0xa4>
2ffee8a0:	2201      	movs	r2, #1
2ffee8a2:	701a      	strb	r2, [r3, #0]
2ffee8a4:	e7f3      	b.n	2ffee88e <stm32mp1_init_lp_states+0xc6>
2ffee8a6:	480c      	ldr	r0, [pc, #48]	; (2ffee8d8 <stm32mp1_init_lp_states+0x110>)
2ffee8a8:	e7cd      	b.n	2ffee846 <stm32mp1_init_lp_states+0x7e>
2ffee8aa:	bf00      	nop
2ffee8ac:	2fff8b01 	.word	0x2fff8b01
2ffee8b0:	2fff8b15 	.word	0x2fff8b15
2ffee8b4:	2fff8b29 	.word	0x2fff8b29
2ffee8b8:	2fffcbdc 	.word	0x2fffcbdc
2ffee8bc:	2fff8b3d 	.word	0x2fff8b3d
2ffee8c0:	2fff8b60 	.word	0x2fff8b60
2ffee8c4:	2fff8b69 	.word	0x2fff8b69
2ffee8c8:	2fffcbcc 	.word	0x2fffcbcc
2ffee8cc:	2fff8b78 	.word	0x2fff8b78
2ffee8d0:	2fffcbd3 	.word	0x2fffcbd3
2ffee8d4:	2fffcbd4 	.word	0x2fffcbd4
2ffee8d8:	2fff8b9c 	.word	0x2fff8b9c

2ffee8dc <stm32mp1_set_pm_domain_state>:
2ffee8dc:	2802      	cmp	r0, #2
2ffee8de:	bf9d      	ittte	ls
2ffee8e0:	4b02      	ldrls	r3, [pc, #8]	; (2ffee8ec <stm32mp1_set_pm_domain_state+0x10>)
2ffee8e2:	5419      	strbls	r1, [r3, r0]
2ffee8e4:	2000      	movls	r0, #0
2ffee8e6:	f06f 0015 	mvnhi.w	r0, #21
2ffee8ea:	4770      	bx	lr
2ffee8ec:	2fffcbd0 	.word	0x2fffcbd0

2ffee8f0 <stm32mp1_get_lp_soc_mode>:
2ffee8f0:	2801      	cmp	r0, #1
2ffee8f2:	b510      	push	{r4, lr}
2ffee8f4:	d102      	bne.n	2ffee8fc <stm32mp1_get_lp_soc_mode+0xc>
2ffee8f6:	4b0f      	ldr	r3, [pc, #60]	; (2ffee934 <stm32mp1_get_lp_soc_mode+0x44>)
2ffee8f8:	6818      	ldr	r0, [r3, #0]
2ffee8fa:	bd10      	pop	{r4, pc}
2ffee8fc:	4b0e      	ldr	r3, [pc, #56]	; (2ffee938 <stm32mp1_get_lp_soc_mode+0x48>)
2ffee8fe:	4a0f      	ldr	r2, [pc, #60]	; (2ffee93c <stm32mp1_get_lp_soc_mode+0x4c>)
2ffee900:	6818      	ldr	r0, [r3, #0]
2ffee902:	7854      	ldrb	r4, [r2, #1]
2ffee904:	7893      	ldrb	r3, [r2, #2]
2ffee906:	490e      	ldr	r1, [pc, #56]	; (2ffee940 <stm32mp1_get_lp_soc_mode+0x50>)
2ffee908:	2800      	cmp	r0, #0
2ffee90a:	d0f6      	beq.n	2ffee8fa <stm32mp1_get_lp_soc_mode+0xa>
2ffee90c:	2806      	cmp	r0, #6
2ffee90e:	d903      	bls.n	2ffee918 <stm32mp1_get_lp_soc_mode+0x28>
2ffee910:	480c      	ldr	r0, [pc, #48]	; (2ffee944 <stm32mp1_get_lp_soc_mode+0x54>)
2ffee912:	21aa      	movs	r1, #170	; 0xaa
2ffee914:	f009 fa48 	bl	2fff7da8 <__assert>
2ffee918:	2804      	cmp	r0, #4
2ffee91a:	d103      	bne.n	2ffee924 <stm32mp1_get_lp_soc_mode+0x34>
2ffee91c:	b103      	cbz	r3, 2ffee920 <stm32mp1_get_lp_soc_mode+0x30>
2ffee91e:	b92c      	cbnz	r4, 2ffee92c <stm32mp1_get_lp_soc_mode+0x3c>
2ffee920:	3801      	subs	r0, #1
2ffee922:	e7f1      	b.n	2ffee908 <stm32mp1_get_lp_soc_mode+0x18>
2ffee924:	2803      	cmp	r0, #3
2ffee926:	d101      	bne.n	2ffee92c <stm32mp1_get_lp_soc_mode+0x3c>
2ffee928:	2b00      	cmp	r3, #0
2ffee92a:	d0f9      	beq.n	2ffee920 <stm32mp1_get_lp_soc_mode+0x30>
2ffee92c:	5c42      	ldrb	r2, [r0, r1]
2ffee92e:	2a01      	cmp	r2, #1
2ffee930:	d1f6      	bne.n	2ffee920 <stm32mp1_get_lp_soc_mode+0x30>
2ffee932:	e7e2      	b.n	2ffee8fa <stm32mp1_get_lp_soc_mode+0xa>
2ffee934:	2fffcbdc 	.word	0x2fffcbdc
2ffee938:	2fffcbcc 	.word	0x2fffcbcc
2ffee93c:	2fffcbd0 	.word	0x2fffcbd0
2ffee940:	2fffcbd4 	.word	0x2fffcbd4
2ffee944:	2fff8ad8 	.word	0x2fff8ad8

2ffee948 <stm32mp1_get_retram_enabled>:
2ffee948:	4b01      	ldr	r3, [pc, #4]	; (2ffee950 <stm32mp1_get_retram_enabled+0x8>)
2ffee94a:	7818      	ldrb	r0, [r3, #0]
2ffee94c:	4770      	bx	lr
2ffee94e:	bf00      	nop
2ffee950:	2fffcbd3 	.word	0x2fffcbd3

2ffee954 <get_gpioz_nbpin>:
2ffee954:	b538      	push	{r3, r4, r5, lr}
2ffee956:	4c0a      	ldr	r4, [pc, #40]	; (2ffee980 <get_gpioz_nbpin+0x2c>)
2ffee958:	f994 3000 	ldrsb.w	r3, [r4]
2ffee95c:	4625      	mov	r5, r4
2ffee95e:	2b00      	cmp	r3, #0
2ffee960:	da0a      	bge.n	2ffee978 <get_gpioz_nbpin+0x24>
2ffee962:	f007 fe69 	bl	2fff6638 <fdt_get_gpioz_nbpins_from_dt>
2ffee966:	b240      	sxtb	r0, r0
2ffee968:	7020      	strb	r0, [r4, #0]
2ffee96a:	f030 0308 	bics.w	r3, r0, #8
2ffee96e:	d003      	beq.n	2ffee978 <get_gpioz_nbpin+0x24>
2ffee970:	4804      	ldr	r0, [pc, #16]	; (2ffee984 <get_gpioz_nbpin+0x30>)
2ffee972:	218f      	movs	r1, #143	; 0x8f
2ffee974:	f009 fa18 	bl	2fff7da8 <__assert>
2ffee978:	f995 0000 	ldrsb.w	r0, [r5]
2ffee97c:	bd38      	pop	{r3, r4, r5, pc}
2ffee97e:	bf00      	nop
2ffee980:	2fffb1e8 	.word	0x2fffb1e8
2ffee984:	2fff8c25 	.word	0x2fff8c25

2ffee988 <register_periph>:
2ffee988:	2813      	cmp	r0, #19
2ffee98a:	b570      	push	{r4, r5, r6, lr}
2ffee98c:	4604      	mov	r4, r0
2ffee98e:	460d      	mov	r5, r1
2ffee990:	d817      	bhi.n	2ffee9c2 <register_periph+0x3a>
2ffee992:	4925      	ldr	r1, [pc, #148]	; (2ffeea28 <register_periph+0xa0>)
2ffee994:	4b25      	ldr	r3, [pc, #148]	; (2ffeea2c <register_periph+0xa4>)
2ffee996:	7809      	ldrb	r1, [r1, #0]
2ffee998:	5c1a      	ldrb	r2, [r3, r0]
2ffee99a:	b9b1      	cbnz	r1, 2ffee9ca <register_periph+0x42>
2ffee99c:	b10a      	cbz	r2, 2ffee9a2 <register_periph+0x1a>
2ffee99e:	42aa      	cmp	r2, r5
2ffee9a0:	d115      	bne.n	2ffee9ce <register_periph+0x46>
2ffee9a2:	551d      	strb	r5, [r3, r4]
2ffee9a4:	1e66      	subs	r6, r4, #1
2ffee9a6:	2e07      	cmp	r6, #7
2ffee9a8:	d815      	bhi.n	2ffee9d6 <register_periph+0x4e>
2ffee9aa:	f7ff ffd3 	bl	2ffee954 <get_gpioz_nbpin>
2ffee9ae:	4286      	cmp	r6, r0
2ffee9b0:	d311      	bcc.n	2ffee9d6 <register_periph+0x4e>
2ffee9b2:	f7ff ffcf 	bl	2ffee954 <get_gpioz_nbpin>
2ffee9b6:	4602      	mov	r2, r0
2ffee9b8:	4631      	mov	r1, r6
2ffee9ba:	481d      	ldr	r0, [pc, #116]	; (2ffeea30 <register_periph+0xa8>)
2ffee9bc:	f002 f8e0 	bl	2fff0b80 <tf_log>
2ffee9c0:	e005      	b.n	2ffee9ce <register_periph+0x46>
2ffee9c2:	481c      	ldr	r0, [pc, #112]	; (2ffeea34 <register_periph+0xac>)
2ffee9c4:	2198      	movs	r1, #152	; 0x98
2ffee9c6:	f009 f9ef 	bl	2fff7da8 <__assert>
2ffee9ca:	42aa      	cmp	r2, r5
2ffee9cc:	d02a      	beq.n	2ffeea24 <register_periph+0x9c>
2ffee9ce:	f002 f979 	bl	2fff0cc4 <console_flush>
2ffee9d2:	f008 e9ae 	blx	2fff6d30 <do_panic>
2ffee9d6:	2d01      	cmp	r5, #1
2ffee9d8:	d124      	bne.n	2ffeea24 <register_periph+0x9c>
2ffee9da:	2c12      	cmp	r4, #18
2ffee9dc:	d822      	bhi.n	2ffeea24 <register_periph+0x9c>
2ffee9de:	e8df f004 	tbb	[pc, r4]
2ffee9e2:	0a1b      	.short	0x0a1b
2ffee9e4:	0a0a0a0a 	.word	0x0a0a0a0a
2ffee9e8:	190a0a0a 	.word	0x190a0a0a
2ffee9ec:	210f1d15 	.word	0x210f1d15
2ffee9f0:	131f1721 	.word	0x131f1721
2ffee9f4:	11          	.byte	0x11
2ffee9f5:	00          	.byte	0x00
2ffee9f6:	205f      	movs	r0, #95	; 0x5f
2ffee9f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffee9fc:	f005 b87c 	b.w	2fff3af8 <stm32mp1_register_clock_parents_secure>
2ffeea00:	2044      	movs	r0, #68	; 0x44
2ffeea02:	e7f9      	b.n	2ffee9f8 <register_periph+0x70>
2ffeea04:	2094      	movs	r0, #148	; 0x94
2ffeea06:	e7f7      	b.n	2ffee9f8 <register_periph+0x70>
2ffeea08:	2087      	movs	r0, #135	; 0x87
2ffeea0a:	e7f5      	b.n	2ffee9f8 <register_periph+0x70>
2ffeea0c:	208c      	movs	r0, #140	; 0x8c
2ffeea0e:	e7f3      	b.n	2ffee9f8 <register_periph+0x70>
2ffeea10:	207c      	movs	r0, #124	; 0x7c
2ffeea12:	e7f1      	b.n	2ffee9f8 <register_periph+0x70>
2ffeea14:	2061      	movs	r0, #97	; 0x61
2ffeea16:	e7ef      	b.n	2ffee9f8 <register_periph+0x70>
2ffeea18:	2060      	movs	r0, #96	; 0x60
2ffeea1a:	e7ed      	b.n	2ffee9f8 <register_periph+0x70>
2ffeea1c:	208e      	movs	r0, #142	; 0x8e
2ffeea1e:	e7eb      	b.n	2ffee9f8 <register_periph+0x70>
2ffeea20:	20c0      	movs	r0, #192	; 0xc0
2ffeea22:	e7e9      	b.n	2ffee9f8 <register_periph+0x70>
2ffeea24:	bd70      	pop	{r4, r5, r6, pc}
2ffeea26:	bf00      	nop
2ffeea28:	2fffcbe0 	.word	0x2fffcbe0
2ffeea2c:	2fffcbe1 	.word	0x2fffcbe1
2ffeea30:	2fff8c52 	.word	0x2fff8c52
2ffeea34:	2fff8c25 	.word	0x2fff8c25

2ffeea38 <register_periph_iomem>:
2ffeea38:	b508      	push	{r3, lr}
2ffeea3a:	4b38      	ldr	r3, [pc, #224]	; (2ffeeb1c <register_periph_iomem+0xe4>)
2ffeea3c:	4298      	cmp	r0, r3
2ffeea3e:	d068      	beq.n	2ffeeb12 <register_periph_iomem+0xda>
2ffeea40:	d82b      	bhi.n	2ffeea9a <register_periph_iomem+0x62>
2ffeea42:	4b37      	ldr	r3, [pc, #220]	; (2ffeeb20 <register_periph_iomem+0xe8>)
2ffeea44:	4298      	cmp	r0, r3
2ffeea46:	d064      	beq.n	2ffeeb12 <register_periph_iomem+0xda>
2ffeea48:	d819      	bhi.n	2ffeea7e <register_periph_iomem+0x46>
2ffeea4a:	4b36      	ldr	r3, [pc, #216]	; (2ffeeb24 <register_periph_iomem+0xec>)
2ffeea4c:	4298      	cmp	r0, r3
2ffeea4e:	d060      	beq.n	2ffeeb12 <register_periph_iomem+0xda>
2ffeea50:	d806      	bhi.n	2ffeea60 <register_periph_iomem+0x28>
2ffeea52:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
2ffeea56:	4298      	cmp	r0, r3
2ffeea58:	d05b      	beq.n	2ffeeb12 <register_periph_iomem+0xda>
2ffeea5a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
2ffeea5e:	e008      	b.n	2ffeea72 <register_periph_iomem+0x3a>
2ffeea60:	4b31      	ldr	r3, [pc, #196]	; (2ffeeb28 <register_periph_iomem+0xf0>)
2ffeea62:	4298      	cmp	r0, r3
2ffeea64:	d055      	beq.n	2ffeeb12 <register_periph_iomem+0xda>
2ffeea66:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
2ffeea6a:	4298      	cmp	r0, r3
2ffeea6c:	d051      	beq.n	2ffeeb12 <register_periph_iomem+0xda>
2ffeea6e:	f5a3 4300 	sub.w	r3, r3, #32768	; 0x8000
2ffeea72:	4298      	cmp	r0, r3
2ffeea74:	d04d      	beq.n	2ffeeb12 <register_periph_iomem+0xda>
2ffeea76:	f002 f925 	bl	2fff0cc4 <console_flush>
2ffeea7a:	f008 e95a 	blx	2fff6d30 <do_panic>
2ffeea7e:	4b2b      	ldr	r3, [pc, #172]	; (2ffeeb2c <register_periph_iomem+0xf4>)
2ffeea80:	4298      	cmp	r0, r3
2ffeea82:	d046      	beq.n	2ffeeb12 <register_periph_iomem+0xda>
2ffeea84:	d9e5      	bls.n	2ffeea52 <register_periph_iomem+0x1a>
2ffeea86:	4b2a      	ldr	r3, [pc, #168]	; (2ffeeb30 <register_periph_iomem+0xf8>)
2ffeea88:	4298      	cmp	r0, r3
2ffeea8a:	d042      	beq.n	2ffeeb12 <register_periph_iomem+0xda>
2ffeea8c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
2ffeea90:	4298      	cmp	r0, r3
2ffeea92:	d03e      	beq.n	2ffeeb12 <register_periph_iomem+0xda>
2ffeea94:	f1b0 2f50 	cmp.w	r0, #1342197760	; 0x50005000
2ffeea98:	e7ec      	b.n	2ffeea74 <register_periph_iomem+0x3c>
2ffeea9a:	4b26      	ldr	r3, [pc, #152]	; (2ffeeb34 <register_periph_iomem+0xfc>)
2ffeea9c:	4298      	cmp	r0, r3
2ffeea9e:	d032      	beq.n	2ffeeb06 <register_periph_iomem+0xce>
2ffeeaa0:	d80c      	bhi.n	2ffeeabc <register_periph_iomem+0x84>
2ffeeaa2:	4b25      	ldr	r3, [pc, #148]	; (2ffeeb38 <register_periph_iomem+0x100>)
2ffeeaa4:	4298      	cmp	r0, r3
2ffeeaa6:	d034      	beq.n	2ffeeb12 <register_periph_iomem+0xda>
2ffeeaa8:	d9d3      	bls.n	2ffeea52 <register_periph_iomem+0x1a>
2ffeeaaa:	4b24      	ldr	r3, [pc, #144]	; (2ffeeb3c <register_periph_iomem+0x104>)
2ffeeaac:	4298      	cmp	r0, r3
2ffeeaae:	d02c      	beq.n	2ffeeb0a <register_periph_iomem+0xd2>
2ffeeab0:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
2ffeeab4:	4298      	cmp	r0, r3
2ffeeab6:	d02a      	beq.n	2ffeeb0e <register_periph_iomem+0xd6>
2ffeeab8:	4b21      	ldr	r3, [pc, #132]	; (2ffeeb40 <register_periph_iomem+0x108>)
2ffeeaba:	e7da      	b.n	2ffeea72 <register_periph_iomem+0x3a>
2ffeeabc:	4b21      	ldr	r3, [pc, #132]	; (2ffeeb44 <register_periph_iomem+0x10c>)
2ffeeabe:	4298      	cmp	r0, r3
2ffeeac0:	d01b      	beq.n	2ffeeafa <register_periph_iomem+0xc2>
2ffeeac2:	d808      	bhi.n	2ffeead6 <register_periph_iomem+0x9e>
2ffeeac4:	f1b0 4fb8 	cmp.w	r0, #1543503872	; 0x5c000000
2ffeeac8:	d012      	beq.n	2ffeeaf0 <register_periph_iomem+0xb8>
2ffeeaca:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
2ffeeace:	4298      	cmp	r0, r3
2ffeead0:	d022      	beq.n	2ffeeb18 <register_periph_iomem+0xe0>
2ffeead2:	4b1d      	ldr	r3, [pc, #116]	; (2ffeeb48 <register_periph_iomem+0x110>)
2ffeead4:	e7cd      	b.n	2ffeea72 <register_periph_iomem+0x3a>
2ffeead6:	4b1d      	ldr	r3, [pc, #116]	; (2ffeeb4c <register_periph_iomem+0x114>)
2ffeead8:	4298      	cmp	r0, r3
2ffeeada:	d012      	beq.n	2ffeeb02 <register_periph_iomem+0xca>
2ffeeadc:	f503 43a0 	add.w	r3, r3, #20480	; 0x5000
2ffeeae0:	4298      	cmp	r0, r3
2ffeeae2:	d00c      	beq.n	2ffeeafe <register_periph_iomem+0xc6>
2ffeeae4:	f5a3 43c0 	sub.w	r3, r3, #24576	; 0x6000
2ffeeae8:	4298      	cmp	r0, r3
2ffeeaea:	d1c4      	bne.n	2ffeea76 <register_periph_iomem+0x3e>
2ffeeaec:	200c      	movs	r0, #12
2ffeeaee:	e000      	b.n	2ffeeaf2 <register_periph_iomem+0xba>
2ffeeaf0:	2012      	movs	r0, #18
2ffeeaf2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffeeaf6:	f7ff bf47 	b.w	2ffee988 <register_periph>
2ffeeafa:	200a      	movs	r0, #10
2ffeeafc:	e7f9      	b.n	2ffeeaf2 <register_periph_iomem+0xba>
2ffeeafe:	200b      	movs	r0, #11
2ffeeb00:	e7f7      	b.n	2ffeeaf2 <register_periph_iomem+0xba>
2ffeeb02:	2010      	movs	r0, #16
2ffeeb04:	e7f5      	b.n	2ffeeaf2 <register_periph_iomem+0xba>
2ffeeb06:	200f      	movs	r0, #15
2ffeeb08:	e7f3      	b.n	2ffeeaf2 <register_periph_iomem+0xba>
2ffeeb0a:	2000      	movs	r0, #0
2ffeeb0c:	e7f1      	b.n	2ffeeaf2 <register_periph_iomem+0xba>
2ffeeb0e:	2009      	movs	r0, #9
2ffeeb10:	e7ef      	b.n	2ffeeaf2 <register_periph_iomem+0xba>
2ffeeb12:	2902      	cmp	r1, #2
2ffeeb14:	d1af      	bne.n	2ffeea76 <register_periph_iomem+0x3e>
2ffeeb16:	bd08      	pop	{r3, pc}
2ffeeb18:	2011      	movs	r0, #17
2ffeeb1a:	e7ea      	b.n	2ffeeaf2 <register_periph_iomem+0xba>
2ffeeb1c:	50008000 	.word	0x50008000
2ffeeb20:	44003000 	.word	0x44003000
2ffeeb24:	40010000 	.word	0x40010000
2ffeeb28:	40018000 	.word	0x40018000
2ffeeb2c:	50004000 	.word	0x50004000
2ffeeb30:	50006000 	.word	0x50006000
2ffeeb34:	54003000 	.word	0x54003000
2ffeeb38:	5000b000 	.word	0x5000b000
2ffeeb3c:	54001000 	.word	0x54001000
2ffeeb40:	5000c000 	.word	0x5000c000
2ffeeb44:	5c002000 	.word	0x5c002000
2ffeeb48:	5a002000 	.word	0x5a002000
2ffeeb4c:	5c004000 	.word	0x5c004000

2ffeeb50 <stm32mp_gpio_bank_is_non_secure.part.5>:
2ffeeb50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffeeb54:	2400      	movs	r4, #0
2ffeeb56:	4e0c      	ldr	r6, [pc, #48]	; (2ffeeb88 <stm32mp_gpio_bank_is_non_secure.part.5+0x38>)
2ffeeb58:	4625      	mov	r5, r4
2ffeeb5a:	f8df 8030 	ldr.w	r8, [pc, #48]	; 2ffeeb8c <stm32mp_gpio_bank_is_non_secure.part.5+0x3c>
2ffeeb5e:	2701      	movs	r7, #1
2ffeeb60:	f7ff fef8 	bl	2ffee954 <get_gpioz_nbpin>
2ffeeb64:	4284      	cmp	r4, r0
2ffeeb66:	d306      	bcc.n	2ffeeb76 <stm32mp_gpio_bank_is_non_secure.part.5+0x26>
2ffeeb68:	f7ff fef4 	bl	2ffee954 <get_gpioz_nbpin>
2ffeeb6c:	1a2b      	subs	r3, r5, r0
2ffeeb6e:	4258      	negs	r0, r3
2ffeeb70:	4158      	adcs	r0, r3
2ffeeb72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffeeb76:	7037      	strb	r7, [r6, #0]
2ffeeb78:	3401      	adds	r4, #1
2ffeeb7a:	f814 3008 	ldrb.w	r3, [r4, r8]
2ffeeb7e:	2b01      	cmp	r3, #1
2ffeeb80:	bf18      	it	ne
2ffeeb82:	3501      	addne	r5, #1
2ffeeb84:	e7ec      	b.n	2ffeeb60 <stm32mp_gpio_bank_is_non_secure.part.5+0x10>
2ffeeb86:	bf00      	nop
2ffeeb88:	2fffcbe0 	.word	0x2fffcbe0
2ffeeb8c:	2fffcbe1 	.word	0x2fffcbe1

2ffeeb90 <check_decprot>:
2ffeeb90:	b570      	push	{r4, r5, r6, lr}
2ffeeb92:	460d      	mov	r5, r1
2ffeeb94:	4604      	mov	r4, r0
2ffeeb96:	f7fe faf3 	bl	2ffed180 <etzpc_get_decprot>
2ffeeb9a:	42a8      	cmp	r0, r5
2ffeeb9c:	4603      	mov	r3, r0
2ffeeb9e:	d012      	beq.n	2ffeebc6 <check_decprot+0x36>
2ffeeba0:	2d03      	cmp	r5, #3
2ffeeba2:	d819      	bhi.n	2ffeebd8 <check_decprot+0x48>
2ffeeba4:	e8df f005 	tbb	[pc, r5]
2ffeeba8:	0229291c 	.word	0x0229291c
2ffeebac:	b958      	cbnz	r0, 2ffeebc6 <check_decprot+0x36>
2ffeebae:	4a16      	ldr	r2, [pc, #88]	; (2ffeec08 <check_decprot+0x78>)
2ffeebb0:	200c      	movs	r0, #12
2ffeebb2:	fb00 2103 	mla	r1, r0, r3, r2
2ffeebb6:	684d      	ldr	r5, [r1, #4]
2ffeebb8:	42ac      	cmp	r4, r5
2ffeebba:	d106      	bne.n	2ffeebca <check_decprot+0x3a>
2ffeebbc:	6889      	ldr	r1, [r1, #8]
2ffeebbe:	4622      	mov	r2, r4
2ffeebc0:	4812      	ldr	r0, [pc, #72]	; (2ffeec0c <check_decprot+0x7c>)
2ffeebc2:	f001 ffdd 	bl	2fff0b80 <tf_log>
2ffeebc6:	2001      	movs	r0, #1
2ffeebc8:	e018      	b.n	2ffeebfc <check_decprot+0x6c>
2ffeebca:	3301      	adds	r3, #1
2ffeebcc:	2b0c      	cmp	r3, #12
2ffeebce:	d1f0      	bne.n	2ffeebb2 <check_decprot+0x22>
2ffeebd0:	480f      	ldr	r0, [pc, #60]	; (2ffeec10 <check_decprot+0x80>)
2ffeebd2:	4621      	mov	r1, r4
2ffeebd4:	f001 ffd4 	bl	2fff0b80 <tf_log>
2ffeebd8:	f002 f874 	bl	2fff0cc4 <console_flush>
2ffeebdc:	f008 e8a8 	blx	2fff6d30 <do_panic>
2ffeebe0:	4809      	ldr	r0, [pc, #36]	; (2ffeec08 <check_decprot+0x78>)
2ffeebe2:	2200      	movs	r2, #0
2ffeebe4:	250c      	movs	r5, #12
2ffeebe6:	fb05 0102 	mla	r1, r5, r2, r0
2ffeebea:	684e      	ldr	r6, [r1, #4]
2ffeebec:	42b4      	cmp	r4, r6
2ffeebee:	d106      	bne.n	2ffeebfe <check_decprot+0x6e>
2ffeebf0:	6889      	ldr	r1, [r1, #8]
2ffeebf2:	4622      	mov	r2, r4
2ffeebf4:	4807      	ldr	r0, [pc, #28]	; (2ffeec14 <check_decprot+0x84>)
2ffeebf6:	f001 ffc3 	bl	2fff0b80 <tf_log>
2ffeebfa:	2000      	movs	r0, #0
2ffeebfc:	bd70      	pop	{r4, r5, r6, pc}
2ffeebfe:	3201      	adds	r2, #1
2ffeec00:	2a0c      	cmp	r2, #12
2ffeec02:	d1f0      	bne.n	2ffeebe6 <check_decprot+0x56>
2ffeec04:	e7e4      	b.n	2ffeebd0 <check_decprot+0x40>
2ffeec06:	bf00      	nop
2ffeec08:	2fff8c80 	.word	0x2fff8c80
2ffeec0c:	2fff8bbf 	.word	0x2fff8bbf
2ffeec10:	2fff8be4 	.word	0x2fff8be4
2ffeec14:	2fff8bf3 	.word	0x2fff8bf3

2ffeec18 <stm32mp_register_secure_periph>:
2ffeec18:	2101      	movs	r1, #1
2ffeec1a:	f7ff beb5 	b.w	2ffee988 <register_periph>

2ffeec1e <stm32mp_register_secure_periph_iomem>:
2ffeec1e:	2101      	movs	r1, #1
2ffeec20:	f7ff bf0a 	b.w	2ffeea38 <register_periph_iomem>

2ffeec24 <stm32mp_register_non_secure_periph_iomem>:
2ffeec24:	2102      	movs	r1, #2
2ffeec26:	f7ff bf07 	b.w	2ffeea38 <register_periph_iomem>
	...

2ffeec2c <stm32mp_register_secure_gpio>:
2ffeec2c:	2819      	cmp	r0, #25
2ffeec2e:	b508      	push	{r3, lr}
2ffeec30:	460b      	mov	r3, r1
2ffeec32:	d105      	bne.n	2ffeec40 <stm32mp_register_secure_gpio+0x14>
2ffeec34:	2101      	movs	r1, #1
2ffeec36:	1858      	adds	r0, r3, r1
2ffeec38:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffeec3c:	f7ff bea4 	b.w	2ffee988 <register_periph>
2ffeec40:	4601      	mov	r1, r0
2ffeec42:	4803      	ldr	r0, [pc, #12]	; (2ffeec50 <stm32mp_register_secure_gpio+0x24>)
2ffeec44:	f001 ff9c 	bl	2fff0b80 <tf_log>
2ffeec48:	f002 f83c 	bl	2fff0cc4 <console_flush>
2ffeec4c:	f008 e870 	blx	2fff6d30 <do_panic>
2ffeec50:	2fff8db7 	.word	0x2fff8db7

2ffeec54 <stm32mp_register_non_secure_gpio>:
2ffeec54:	2819      	cmp	r0, #25
2ffeec56:	460b      	mov	r3, r1
2ffeec58:	d103      	bne.n	2ffeec62 <stm32mp_register_non_secure_gpio+0xe>
2ffeec5a:	2102      	movs	r1, #2
2ffeec5c:	1c58      	adds	r0, r3, #1
2ffeec5e:	f7ff be93 	b.w	2ffee988 <register_periph>
2ffeec62:	4770      	bx	lr

2ffeec64 <stm32mp1_register_etzpc_decprot>:
2ffeec64:	b570      	push	{r4, r5, r6, lr}
2ffeec66:	b3b9      	cbz	r1, 2ffeecd8 <stm32mp1_register_etzpc_decprot+0x74>
2ffeec68:	2903      	cmp	r1, #3
2ffeec6a:	d918      	bls.n	2ffeec9e <stm32mp1_register_etzpc_decprot+0x3a>
2ffeec6c:	f002 f82a 	bl	2fff0cc4 <console_flush>
2ffeec70:	f008 e85e 	blx	2fff6d30 <do_panic>
2ffeec74:	2901      	cmp	r1, #1
2ffeec76:	d8f9      	bhi.n	2ffeec6c <stm32mp1_register_etzpc_decprot+0x8>
2ffeec78:	bd70      	pop	{r4, r5, r6, pc}
2ffeec7a:	3301      	adds	r3, #1
2ffeec7c:	2b0c      	cmp	r3, #12
2ffeec7e:	d007      	beq.n	2ffeec90 <stm32mp1_register_etzpc_decprot+0x2c>
2ffeec80:	fb04 5203 	mla	r2, r4, r3, r5
2ffeec84:	6856      	ldr	r6, [r2, #4]
2ffeec86:	42b0      	cmp	r0, r6
2ffeec88:	d1f7      	bne.n	2ffeec7a <stm32mp1_register_etzpc_decprot+0x16>
2ffeec8a:	6810      	ldr	r0, [r2, #0]
2ffeec8c:	1c43      	adds	r3, r0, #1
2ffeec8e:	d102      	bne.n	2ffeec96 <stm32mp1_register_etzpc_decprot+0x32>
2ffeec90:	2901      	cmp	r1, #1
2ffeec92:	d1f1      	bne.n	2ffeec78 <stm32mp1_register_etzpc_decprot+0x14>
2ffeec94:	e7ea      	b.n	2ffeec6c <stm32mp1_register_etzpc_decprot+0x8>
2ffeec96:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffeec9a:	f7ff be75 	b.w	2ffee988 <register_periph>
2ffeec9e:	280b      	cmp	r0, #11
2ffeeca0:	d838      	bhi.n	2ffeed14 <stm32mp1_register_etzpc_decprot+0xb0>
2ffeeca2:	a301      	add	r3, pc, #4	; (adr r3, 2ffeeca8 <stm32mp1_register_etzpc_decprot+0x44>)
2ffeeca4:	f853 f020 	ldr.w	pc, [r3, r0, lsl #2]
2ffeeca8:	2ffeec6d 	.word	0x2ffeec6d
2ffeecac:	2ffeec6d 	.word	0x2ffeec6d
2ffeecb0:	2ffeed15 	.word	0x2ffeed15
2ffeecb4:	2ffeed15 	.word	0x2ffeed15
2ffeecb8:	2ffeed15 	.word	0x2ffeed15
2ffeecbc:	2ffeed15 	.word	0x2ffeed15
2ffeecc0:	2ffeed15 	.word	0x2ffeed15
2ffeecc4:	2ffeed15 	.word	0x2ffeed15
2ffeecc8:	2ffeed15 	.word	0x2ffeed15
2ffeeccc:	2ffeed15 	.word	0x2ffeed15
2ffeecd0:	2ffeec75 	.word	0x2ffeec75
2ffeecd4:	2ffeec75 	.word	0x2ffeec75
2ffeecd8:	280b      	cmp	r0, #11
2ffeecda:	d820      	bhi.n	2ffeed1e <stm32mp1_register_etzpc_decprot+0xba>
2ffeecdc:	a301      	add	r3, pc, #4	; (adr r3, 2ffeece4 <stm32mp1_register_etzpc_decprot+0x80>)
2ffeecde:	f853 f020 	ldr.w	pc, [r3, r0, lsl #2]
2ffeece2:	bf00      	nop
2ffeece4:	2ffeec79 	.word	0x2ffeec79
2ffeece8:	2ffeec79 	.word	0x2ffeec79
2ffeecec:	2ffeed1f 	.word	0x2ffeed1f
2ffeecf0:	2ffeed1f 	.word	0x2ffeed1f
2ffeecf4:	2ffeed1f 	.word	0x2ffeed1f
2ffeecf8:	2ffeed1f 	.word	0x2ffeed1f
2ffeecfc:	2ffeed1f 	.word	0x2ffeed1f
2ffeed00:	2ffeed1f 	.word	0x2ffeed1f
2ffeed04:	2ffeed1f 	.word	0x2ffeed1f
2ffeed08:	2ffeed1f 	.word	0x2ffeed1f
2ffeed0c:	2ffeec75 	.word	0x2ffeec75
2ffeed10:	2ffeec75 	.word	0x2ffeec75
2ffeed14:	2102      	movs	r1, #2
2ffeed16:	4d03      	ldr	r5, [pc, #12]	; (2ffeed24 <stm32mp1_register_etzpc_decprot+0xc0>)
2ffeed18:	2300      	movs	r3, #0
2ffeed1a:	240c      	movs	r4, #12
2ffeed1c:	e7b0      	b.n	2ffeec80 <stm32mp1_register_etzpc_decprot+0x1c>
2ffeed1e:	2101      	movs	r1, #1
2ffeed20:	e7f9      	b.n	2ffeed16 <stm32mp1_register_etzpc_decprot+0xb2>
2ffeed22:	bf00      	nop
2ffeed24:	2fff8c80 	.word	0x2fff8c80

2ffeed28 <stm32mp_gpio_bank_is_non_secure>:
2ffeed28:	4a04      	ldr	r2, [pc, #16]	; (2ffeed3c <stm32mp_gpio_bank_is_non_secure+0x14>)
2ffeed2a:	2819      	cmp	r0, #25
2ffeed2c:	f04f 0301 	mov.w	r3, #1
2ffeed30:	7013      	strb	r3, [r2, #0]
2ffeed32:	d101      	bne.n	2ffeed38 <stm32mp_gpio_bank_is_non_secure+0x10>
2ffeed34:	f7ff bf0c 	b.w	2ffeeb50 <stm32mp_gpio_bank_is_non_secure.part.5>
2ffeed38:	4618      	mov	r0, r3
2ffeed3a:	4770      	bx	lr
2ffeed3c:	2fffcbe0 	.word	0x2fffcbe0

2ffeed40 <stm32mp_nsec_can_access_clock>:
2ffeed40:	2805      	cmp	r0, #5
2ffeed42:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffeed46:	d90f      	bls.n	2ffeed68 <stm32mp_nsec_can_access_clock+0x28>
2ffeed48:	f1a0 03b4 	sub.w	r3, r0, #180	; 0xb4
2ffeed4c:	2b08      	cmp	r3, #8
2ffeed4e:	d90b      	bls.n	2ffeed68 <stm32mp_nsec_can_access_clock+0x28>
2ffeed50:	2887      	cmp	r0, #135	; 0x87
2ffeed52:	d052      	beq.n	2ffeedfa <stm32mp_nsec_can_access_clock+0xba>
2ffeed54:	d812      	bhi.n	2ffeed7c <stm32mp_nsec_can_access_clock+0x3c>
2ffeed56:	285f      	cmp	r0, #95	; 0x5f
2ffeed58:	d029      	beq.n	2ffeedae <stm32mp_nsec_can_access_clock+0x6e>
2ffeed5a:	d807      	bhi.n	2ffeed6c <stm32mp_nsec_can_access_clock+0x2c>
2ffeed5c:	2844      	cmp	r0, #68	; 0x44
2ffeed5e:	d042      	beq.n	2ffeede6 <stm32mp_nsec_can_access_clock+0xa6>
2ffeed60:	2845      	cmp	r0, #69	; 0x45
2ffeed62:	d001      	beq.n	2ffeed68 <stm32mp_nsec_can_access_clock+0x28>
2ffeed64:	2841      	cmp	r0, #65	; 0x41
2ffeed66:	d106      	bne.n	2ffeed76 <stm32mp_nsec_can_access_clock+0x36>
2ffeed68:	2001      	movs	r0, #1
2ffeed6a:	e005      	b.n	2ffeed78 <stm32mp_nsec_can_access_clock+0x38>
2ffeed6c:	2861      	cmp	r0, #97	; 0x61
2ffeed6e:	d03e      	beq.n	2ffeedee <stm32mp_nsec_can_access_clock+0xae>
2ffeed70:	d33b      	bcc.n	2ffeedea <stm32mp_nsec_can_access_clock+0xaa>
2ffeed72:	287c      	cmp	r0, #124	; 0x7c
2ffeed74:	d03d      	beq.n	2ffeedf2 <stm32mp_nsec_can_access_clock+0xb2>
2ffeed76:	2000      	movs	r0, #0
2ffeed78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffeed7c:	28c0      	cmp	r0, #192	; 0xc0
2ffeed7e:	d03a      	beq.n	2ffeedf6 <stm32mp_nsec_can_access_clock+0xb6>
2ffeed80:	d80d      	bhi.n	2ffeed9e <stm32mp_nsec_can_access_clock+0x5e>
2ffeed82:	288e      	cmp	r0, #142	; 0x8e
2ffeed84:	d03b      	beq.n	2ffeedfe <stm32mp_nsec_can_access_clock+0xbe>
2ffeed86:	2894      	cmp	r0, #148	; 0x94
2ffeed88:	d02b      	beq.n	2ffeede2 <stm32mp_nsec_can_access_clock+0xa2>
2ffeed8a:	288c      	cmp	r0, #140	; 0x8c
2ffeed8c:	d1f3      	bne.n	2ffeed76 <stm32mp_nsec_can_access_clock+0x36>
2ffeed8e:	230a      	movs	r3, #10
2ffeed90:	4a1c      	ldr	r2, [pc, #112]	; (2ffeee04 <stm32mp_nsec_can_access_clock+0xc4>)
2ffeed92:	2101      	movs	r1, #1
2ffeed94:	7011      	strb	r1, [r2, #0]
2ffeed96:	4a1c      	ldr	r2, [pc, #112]	; (2ffeee08 <stm32mp_nsec_can_access_clock+0xc8>)
2ffeed98:	5cd0      	ldrb	r0, [r2, r3]
2ffeed9a:	1a40      	subs	r0, r0, r1
2ffeed9c:	e016      	b.n	2ffeedcc <stm32mp_nsec_can_access_clock+0x8c>
2ffeed9e:	28c2      	cmp	r0, #194	; 0xc2
2ffeeda0:	d3e9      	bcc.n	2ffeed76 <stm32mp_nsec_can_access_clock+0x36>
2ffeeda2:	28c3      	cmp	r0, #195	; 0xc3
2ffeeda4:	d9e0      	bls.n	2ffeed68 <stm32mp_nsec_can_access_clock+0x28>
2ffeeda6:	28c4      	cmp	r0, #196	; 0xc4
2ffeeda8:	d1e5      	bne.n	2ffeed76 <stm32mp_nsec_can_access_clock+0x36>
2ffeedaa:	230d      	movs	r3, #13
2ffeedac:	e7f0      	b.n	2ffeed90 <stm32mp_nsec_can_access_clock+0x50>
2ffeedae:	4e15      	ldr	r6, [pc, #84]	; (2ffeee04 <stm32mp_nsec_can_access_clock+0xc4>)
2ffeedb0:	2201      	movs	r2, #1
2ffeedb2:	f8df 8054 	ldr.w	r8, [pc, #84]	; 2ffeee08 <stm32mp_nsec_can_access_clock+0xc8>
2ffeedb6:	2500      	movs	r5, #0
2ffeedb8:	7032      	strb	r2, [r6, #0]
2ffeedba:	462c      	mov	r4, r5
2ffeedbc:	4617      	mov	r7, r2
2ffeedbe:	f7ff fdc9 	bl	2ffee954 <get_gpioz_nbpin>
2ffeedc2:	4285      	cmp	r5, r0
2ffeedc4:	d305      	bcc.n	2ffeedd2 <stm32mp_nsec_can_access_clock+0x92>
2ffeedc6:	f7ff fdc5 	bl	2ffee954 <get_gpioz_nbpin>
2ffeedca:	1a20      	subs	r0, r4, r0
2ffeedcc:	bf18      	it	ne
2ffeedce:	2001      	movne	r0, #1
2ffeedd0:	e7d2      	b.n	2ffeed78 <stm32mp_nsec_can_access_clock+0x38>
2ffeedd2:	7037      	strb	r7, [r6, #0]
2ffeedd4:	3501      	adds	r5, #1
2ffeedd6:	f815 3008 	ldrb.w	r3, [r5, r8]
2ffeedda:	2b01      	cmp	r3, #1
2ffeeddc:	bf08      	it	eq
2ffeedde:	3401      	addeq	r4, #1
2ffeede0:	e7ed      	b.n	2ffeedbe <stm32mp_nsec_can_access_clock+0x7e>
2ffeede2:	2312      	movs	r3, #18
2ffeede4:	e7d4      	b.n	2ffeed90 <stm32mp_nsec_can_access_clock+0x50>
2ffeede6:	230c      	movs	r3, #12
2ffeede8:	e7d2      	b.n	2ffeed90 <stm32mp_nsec_can_access_clock+0x50>
2ffeedea:	2300      	movs	r3, #0
2ffeedec:	e7d0      	b.n	2ffeed90 <stm32mp_nsec_can_access_clock+0x50>
2ffeedee:	2309      	movs	r3, #9
2ffeedf0:	e7ce      	b.n	2ffeed90 <stm32mp_nsec_can_access_clock+0x50>
2ffeedf2:	230f      	movs	r3, #15
2ffeedf4:	e7cc      	b.n	2ffeed90 <stm32mp_nsec_can_access_clock+0x50>
2ffeedf6:	2310      	movs	r3, #16
2ffeedf8:	e7ca      	b.n	2ffeed90 <stm32mp_nsec_can_access_clock+0x50>
2ffeedfa:	2311      	movs	r3, #17
2ffeedfc:	e7c8      	b.n	2ffeed90 <stm32mp_nsec_can_access_clock+0x50>
2ffeedfe:	230b      	movs	r3, #11
2ffeee00:	e7c6      	b.n	2ffeed90 <stm32mp_nsec_can_access_clock+0x50>
2ffeee02:	bf00      	nop
2ffeee04:	2fffcbe0 	.word	0x2fffcbe0
2ffeee08:	2fffcbe1 	.word	0x2fffcbe1

2ffeee0c <stm32mp_nsec_can_access_reset>:
2ffeee0c:	f5b0 6f48 	cmp.w	r0, #3200	; 0xc80
2ffeee10:	d039      	beq.n	2ffeee86 <stm32mp_nsec_can_access_reset+0x7a>
2ffeee12:	d816      	bhi.n	2ffeee42 <stm32mp_nsec_can_access_reset+0x36>
2ffeee14:	f640 4342 	movw	r3, #3138	; 0xc42
2ffeee18:	4298      	cmp	r0, r3
2ffeee1a:	d02a      	beq.n	2ffeee72 <stm32mp_nsec_can_access_reset+0x66>
2ffeee1c:	d807      	bhi.n	2ffeee2e <stm32mp_nsec_can_access_reset+0x22>
2ffeee1e:	f5b0 6f06 	cmp.w	r0, #2144	; 0x860
2ffeee22:	d024      	beq.n	2ffeee6e <stm32mp_nsec_can_access_reset+0x62>
2ffeee24:	f5b0 6f44 	cmp.w	r0, #3136	; 0xc40
2ffeee28:	d03a      	beq.n	2ffeeea0 <stm32mp_nsec_can_access_reset+0x94>
2ffeee2a:	2000      	movs	r0, #0
2ffeee2c:	4770      	bx	lr
2ffeee2e:	f640 4343 	movw	r3, #3139	; 0xc43
2ffeee32:	4298      	cmp	r0, r3
2ffeee34:	d02c      	beq.n	2ffeee90 <stm32mp_nsec_can_access_reset+0x84>
2ffeee36:	f640 4344 	movw	r3, #3140	; 0xc44
2ffeee3a:	4298      	cmp	r0, r3
2ffeee3c:	d1f5      	bne.n	2ffeee2a <stm32mp_nsec_can_access_reset+0x1e>
2ffeee3e:	2312      	movs	r3, #18
2ffeee40:	e018      	b.n	2ffeee74 <stm32mp_nsec_can_access_reset+0x68>
2ffeee42:	f640 4386 	movw	r3, #3206	; 0xc86
2ffeee46:	4298      	cmp	r0, r3
2ffeee48:	d026      	beq.n	2ffeee98 <stm32mp_nsec_can_access_reset+0x8c>
2ffeee4a:	d809      	bhi.n	2ffeee60 <stm32mp_nsec_can_access_reset+0x54>
2ffeee4c:	f640 4384 	movw	r3, #3204	; 0xc84
2ffeee50:	4298      	cmp	r0, r3
2ffeee52:	d01f      	beq.n	2ffeee94 <stm32mp_nsec_can_access_reset+0x88>
2ffeee54:	f640 4385 	movw	r3, #3205	; 0xc85
2ffeee58:	4298      	cmp	r0, r3
2ffeee5a:	d1e6      	bne.n	2ffeee2a <stm32mp_nsec_can_access_reset+0x1e>
2ffeee5c:	2309      	movs	r3, #9
2ffeee5e:	e009      	b.n	2ffeee74 <stm32mp_nsec_can_access_reset+0x68>
2ffeee60:	f5b0 6f50 	cmp.w	r0, #3328	; 0xd00
2ffeee64:	d01a      	beq.n	2ffeee9c <stm32mp_nsec_can_access_reset+0x90>
2ffeee66:	f242 0321 	movw	r3, #8225	; 0x2021
2ffeee6a:	4298      	cmp	r0, r3
2ffeee6c:	d1dd      	bne.n	2ffeee2a <stm32mp_nsec_can_access_reset+0x1e>
2ffeee6e:	230d      	movs	r3, #13
2ffeee70:	e000      	b.n	2ffeee74 <stm32mp_nsec_can_access_reset+0x68>
2ffeee72:	230a      	movs	r3, #10
2ffeee74:	4a0b      	ldr	r2, [pc, #44]	; (2ffeeea4 <stm32mp_nsec_can_access_reset+0x98>)
2ffeee76:	2101      	movs	r1, #1
2ffeee78:	7011      	strb	r1, [r2, #0]
2ffeee7a:	4a0b      	ldr	r2, [pc, #44]	; (2ffeeea8 <stm32mp_nsec_can_access_reset+0x9c>)
2ffeee7c:	5cd0      	ldrb	r0, [r2, r3]
2ffeee7e:	1a40      	subs	r0, r0, r1
2ffeee80:	bf18      	it	ne
2ffeee82:	2001      	movne	r0, #1
2ffeee84:	4770      	bx	lr
2ffeee86:	4b07      	ldr	r3, [pc, #28]	; (2ffeeea4 <stm32mp_nsec_can_access_reset+0x98>)
2ffeee88:	2201      	movs	r2, #1
2ffeee8a:	701a      	strb	r2, [r3, #0]
2ffeee8c:	f7ff be60 	b.w	2ffeeb50 <stm32mp_gpio_bank_is_non_secure.part.5>
2ffeee90:	230b      	movs	r3, #11
2ffeee92:	e7ef      	b.n	2ffeee74 <stm32mp_nsec_can_access_reset+0x68>
2ffeee94:	2300      	movs	r3, #0
2ffeee96:	e7ed      	b.n	2ffeee74 <stm32mp_nsec_can_access_reset+0x68>
2ffeee98:	230f      	movs	r3, #15
2ffeee9a:	e7eb      	b.n	2ffeee74 <stm32mp_nsec_can_access_reset+0x68>
2ffeee9c:	230e      	movs	r3, #14
2ffeee9e:	e7e9      	b.n	2ffeee74 <stm32mp_nsec_can_access_reset+0x68>
2ffeeea0:	2311      	movs	r3, #17
2ffeeea2:	e7e7      	b.n	2ffeee74 <stm32mp_nsec_can_access_reset+0x68>
2ffeeea4:	2fffcbe0 	.word	0x2fffcbe0
2ffeeea8:	2fffcbe1 	.word	0x2fffcbe1

2ffeeeac <stm32mp_lock_periph_registering>:
2ffeeeac:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffeeeb0:	2400      	movs	r4, #0
2ffeeeb2:	4f7b      	ldr	r7, [pc, #492]	; (2ffef0a0 <stm32mp_lock_periph_registering+0x1f4>)
2ffeeeb4:	2301      	movs	r3, #1
2ffeeeb6:	4d7b      	ldr	r5, [pc, #492]	; (2ffef0a4 <stm32mp_lock_periph_registering+0x1f8>)
2ffeeeb8:	f8df 8204 	ldr.w	r8, [pc, #516]	; 2ffef0c0 <stm32mp_lock_periph_registering+0x214>
2ffeeebc:	463e      	mov	r6, r7
2ffeeebe:	702b      	strb	r3, [r5, #0]
2ffeeec0:	5de3      	ldrb	r3, [r4, r7]
2ffeeec2:	2b02      	cmp	r3, #2
2ffeeec4:	d904      	bls.n	2ffeeed0 <stm32mp_lock_periph_registering+0x24>
2ffeeec6:	f240 21e3 	movw	r1, #739	; 0x2e3
2ffeeeca:	4877      	ldr	r0, [pc, #476]	; (2ffef0a8 <stm32mp_lock_periph_registering+0x1fc>)
2ffeeecc:	f008 ff6c 	bl	2fff7da8 <__assert>
2ffeeed0:	2b01      	cmp	r3, #1
2ffeeed2:	d106      	bne.n	2ffeeee2 <stm32mp_lock_periph_registering+0x36>
2ffeeed4:	4b75      	ldr	r3, [pc, #468]	; (2ffef0ac <stm32mp_lock_periph_registering+0x200>)
2ffeeed6:	4622      	mov	r2, r4
2ffeeed8:	f858 1024 	ldr.w	r1, [r8, r4, lsl #2]
2ffeeedc:	4874      	ldr	r0, [pc, #464]	; (2ffef0b0 <stm32mp_lock_periph_registering+0x204>)
2ffeeede:	f001 fe4f 	bl	2fff0b80 <tf_log>
2ffeeee2:	3401      	adds	r4, #1
2ffeeee4:	2c14      	cmp	r4, #20
2ffeeee6:	d1eb      	bne.n	2ffeeec0 <stm32mp_lock_periph_registering+0x14>
2ffeeee8:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 2ffef0c4 <stm32mp_lock_periph_registering+0x218>
2ffeeeec:	f005 f806 	bl	2fff3efc <stm32mp1_dump_clocks_state>
2ffeeef0:	f8df 81d4 	ldr.w	r8, [pc, #468]	; 2ffef0c8 <stm32mp_lock_periph_registering+0x21c>
2ffeeef4:	f004 fb21 	bl	2fff353a <stm32mp1_rcc_is_mckprot>
2ffeeef8:	4682      	mov	sl, r0
2ffeeefa:	2400      	movs	r4, #0
2ffeeefc:	4627      	mov	r7, r4
2ffeeefe:	f004 fb15 	bl	2fff352c <stm32mp1_rcc_is_secure>
2ffeef02:	4681      	mov	r9, r0
2ffeef04:	5df3      	ldrb	r3, [r6, r7]
2ffeef06:	2b01      	cmp	r3, #1
2ffeef08:	d120      	bne.n	2ffeef4c <stm32mp_lock_periph_registering+0xa0>
2ffeef0a:	2f0d      	cmp	r7, #13
2ffeef0c:	d001      	beq.n	2ffeef12 <stm32mp_lock_periph_registering+0x66>
2ffeef0e:	2f13      	cmp	r7, #19
2ffeef10:	d10a      	bne.n	2ffeef28 <stm32mp_lock_periph_registering+0x7c>
2ffeef12:	f1ba 0f00 	cmp.w	sl, #0
2ffeef16:	f040 80bc 	bne.w	2ffef092 <stm32mp_lock_periph_registering+0x1e6>
2ffeef1a:	4966      	ldr	r1, [pc, #408]	; (2ffef0b4 <stm32mp_lock_periph_registering+0x208>)
2ffeef1c:	4a66      	ldr	r2, [pc, #408]	; (2ffef0b8 <stm32mp_lock_periph_registering+0x20c>)
2ffeef1e:	f1b9 0f00 	cmp.w	r9, #0
2ffeef22:	bf08      	it	eq
2ffeef24:	4641      	moveq	r1, r8
2ffeef26:	e009      	b.n	2ffeef3c <stm32mp_lock_periph_registering+0x90>
2ffeef28:	f1b9 0f00 	cmp.w	r9, #0
2ffeef2c:	d10e      	bne.n	2ffeef4c <stm32mp_lock_periph_registering+0xa0>
2ffeef2e:	4a62      	ldr	r2, [pc, #392]	; (2ffef0b8 <stm32mp_lock_periph_registering+0x20c>)
2ffeef30:	4641      	mov	r1, r8
2ffeef32:	4b62      	ldr	r3, [pc, #392]	; (2ffef0bc <stm32mp_lock_periph_registering+0x210>)
2ffeef34:	f1ba 0f00 	cmp.w	sl, #0
2ffeef38:	bf18      	it	ne
2ffeef3a:	461a      	movne	r2, r3
2ffeef3c:	4b60      	ldr	r3, [pc, #384]	; (2ffef0c0 <stm32mp_lock_periph_registering+0x214>)
2ffeef3e:	4658      	mov	r0, fp
2ffeef40:	9700      	str	r7, [sp, #0]
2ffeef42:	3401      	adds	r4, #1
2ffeef44:	f853 3027 	ldr.w	r3, [r3, r7, lsl #2]
2ffeef48:	f001 fe1a 	bl	2fff0b80 <tf_log>
2ffeef4c:	3701      	adds	r7, #1
2ffeef4e:	2f14      	cmp	r7, #20
2ffeef50:	d1d8      	bne.n	2ffeef04 <stm32mp_lock_periph_registering+0x58>
2ffeef52:	b11c      	cbz	r4, 2ffeef5c <stm32mp_lock_periph_registering+0xb0>
2ffeef54:	f001 feb6 	bl	2fff0cc4 <console_flush>
2ffeef58:	f007 eeea 	blx	2fff6d30 <do_panic>
2ffeef5c:	782b      	ldrb	r3, [r5, #0]
2ffeef5e:	b913      	cbnz	r3, 2ffeef66 <stm32mp_lock_periph_registering+0xba>
2ffeef60:	f240 2189 	movw	r1, #649	; 0x289
2ffeef64:	e7b1      	b.n	2ffeeeca <stm32mp_lock_periph_registering+0x1e>
2ffeef66:	4621      	mov	r1, r4
2ffeef68:	4620      	mov	r0, r4
2ffeef6a:	f04f 0801 	mov.w	r8, #1
2ffeef6e:	f7ff fe0f 	bl	2ffeeb90 <check_decprot>
2ffeef72:	4607      	mov	r7, r0
2ffeef74:	4621      	mov	r1, r4
2ffeef76:	2001      	movs	r0, #1
2ffeef78:	f7ff fe0a 	bl	2ffeeb90 <check_decprot>
2ffeef7c:	7cb3      	ldrb	r3, [r6, #18]
2ffeef7e:	4007      	ands	r7, r0
2ffeef80:	f885 8000 	strb.w	r8, [r5]
2ffeef84:	2003      	movs	r0, #3
2ffeef86:	4543      	cmp	r3, r8
2ffeef88:	b2ff      	uxtb	r7, r7
2ffeef8a:	bf14      	ite	ne
2ffeef8c:	2103      	movne	r1, #3
2ffeef8e:	2100      	moveq	r1, #0
2ffeef90:	f7ff fdfe 	bl	2ffeeb90 <check_decprot>
2ffeef94:	7c73      	ldrb	r3, [r6, #17]
2ffeef96:	4007      	ands	r7, r0
2ffeef98:	f885 8000 	strb.w	r8, [r5]
2ffeef9c:	2004      	movs	r0, #4
2ffeef9e:	4543      	cmp	r3, r8
2ffeefa0:	bf14      	ite	ne
2ffeefa2:	2103      	movne	r1, #3
2ffeefa4:	2100      	moveq	r1, #0
2ffeefa6:	f7ff fdf3 	bl	2ffeeb90 <check_decprot>
2ffeefaa:	7ab3      	ldrb	r3, [r6, #10]
2ffeefac:	4007      	ands	r7, r0
2ffeefae:	f885 8000 	strb.w	r8, [r5]
2ffeefb2:	2005      	movs	r0, #5
2ffeefb4:	4543      	cmp	r3, r8
2ffeefb6:	bf14      	ite	ne
2ffeefb8:	2103      	movne	r1, #3
2ffeefba:	2100      	moveq	r1, #0
2ffeefbc:	f7ff fde8 	bl	2ffeeb90 <check_decprot>
2ffeefc0:	7bf3      	ldrb	r3, [r6, #15]
2ffeefc2:	4007      	ands	r7, r0
2ffeefc4:	f885 8000 	strb.w	r8, [r5]
2ffeefc8:	2007      	movs	r0, #7
2ffeefca:	4543      	cmp	r3, r8
2ffeefcc:	bf14      	ite	ne
2ffeefce:	2103      	movne	r1, #3
2ffeefd0:	2100      	moveq	r1, #0
2ffeefd2:	f7ff fddd 	bl	2ffeeb90 <check_decprot>
2ffeefd6:	7a73      	ldrb	r3, [r6, #9]
2ffeefd8:	4007      	ands	r7, r0
2ffeefda:	f885 8000 	strb.w	r8, [r5]
2ffeefde:	2008      	movs	r0, #8
2ffeefe0:	4543      	cmp	r3, r8
2ffeefe2:	bf14      	ite	ne
2ffeefe4:	2103      	movne	r1, #3
2ffeefe6:	2100      	moveq	r1, #0
2ffeefe8:	f7ff fdd2 	bl	2ffeeb90 <check_decprot>
2ffeefec:	7833      	ldrb	r3, [r6, #0]
2ffeefee:	4007      	ands	r7, r0
2ffeeff0:	f885 8000 	strb.w	r8, [r5]
2ffeeff4:	2009      	movs	r0, #9
2ffeeff6:	4543      	cmp	r3, r8
2ffeeff8:	bf14      	ite	ne
2ffeeffa:	2103      	movne	r1, #3
2ffeeffc:	2100      	moveq	r1, #0
2ffeeffe:	f7ff fdc7 	bl	2ffeeb90 <check_decprot>
2ffef002:	4007      	ands	r7, r0
2ffef004:	4641      	mov	r1, r8
2ffef006:	ea87 0708 	eor.w	r7, r7, r8
2ffef00a:	200a      	movs	r0, #10
2ffef00c:	f7ff fdc0 	bl	2ffeeb90 <check_decprot>
2ffef010:	b930      	cbnz	r0, 2ffef020 <stm32mp_lock_periph_registering+0x174>
2ffef012:	4621      	mov	r1, r4
2ffef014:	200a      	movs	r0, #10
2ffef016:	f7ff fdbb 	bl	2ffeeb90 <check_decprot>
2ffef01a:	ea80 0408 	eor.w	r4, r0, r8
2ffef01e:	b2e4      	uxtb	r4, r4
2ffef020:	433c      	orrs	r4, r7
2ffef022:	2101      	movs	r1, #1
2ffef024:	200b      	movs	r0, #11
2ffef026:	f7ff fdb3 	bl	2ffeeb90 <check_decprot>
2ffef02a:	4601      	mov	r1, r0
2ffef02c:	bb08      	cbnz	r0, 2ffef072 <stm32mp_lock_periph_registering+0x1c6>
2ffef02e:	200b      	movs	r0, #11
2ffef030:	f7ff fdae 	bl	2ffeeb90 <check_decprot>
2ffef034:	f080 0001 	eor.w	r0, r0, #1
2ffef038:	b2c0      	uxtb	r0, r0
2ffef03a:	7af3      	ldrb	r3, [r6, #11]
2ffef03c:	2701      	movs	r7, #1
2ffef03e:	4304      	orrs	r4, r0
2ffef040:	200c      	movs	r0, #12
2ffef042:	42bb      	cmp	r3, r7
2ffef044:	f004 0401 	and.w	r4, r4, #1
2ffef048:	702f      	strb	r7, [r5, #0]
2ffef04a:	bf14      	ite	ne
2ffef04c:	2103      	movne	r1, #3
2ffef04e:	2100      	moveq	r1, #0
2ffef050:	f7ff fd9e 	bl	2ffeeb90 <check_decprot>
2ffef054:	4078      	eors	r0, r7
2ffef056:	f010 0fff 	tst.w	r0, #255	; 0xff
2ffef05a:	f47f af7b 	bne.w	2ffeef54 <stm32mp_lock_periph_registering+0xa8>
2ffef05e:	2c00      	cmp	r4, #0
2ffef060:	f47f af78 	bne.w	2ffeef54 <stm32mp_lock_periph_registering+0xa8>
2ffef064:	f7ff fc76 	bl	2ffee954 <get_gpioz_nbpin>
2ffef068:	4284      	cmp	r4, r0
2ffef06a:	d304      	bcc.n	2ffef076 <stm32mp_lock_periph_registering+0x1ca>
2ffef06c:	b003      	add	sp, #12
2ffef06e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffef072:	2000      	movs	r0, #0
2ffef074:	e7e1      	b.n	2ffef03a <stm32mp_lock_periph_registering+0x18e>
2ffef076:	702f      	strb	r7, [r5, #0]
2ffef078:	f104 0801 	add.w	r8, r4, #1
2ffef07c:	4621      	mov	r1, r4
2ffef07e:	2019      	movs	r0, #25
2ffef080:	f816 2008 	ldrb.w	r2, [r6, r8]
2ffef084:	4644      	mov	r4, r8
2ffef086:	1e53      	subs	r3, r2, #1
2ffef088:	425a      	negs	r2, r3
2ffef08a:	415a      	adcs	r2, r3
2ffef08c:	f005 fc7a 	bl	2fff4984 <set_gpio_secure_cfg>
2ffef090:	e7e8      	b.n	2ffef064 <stm32mp_lock_periph_registering+0x1b8>
2ffef092:	f1b9 0f00 	cmp.w	r9, #0
2ffef096:	f47f af59 	bne.w	2ffeef4c <stm32mp_lock_periph_registering+0xa0>
2ffef09a:	4a08      	ldr	r2, [pc, #32]	; (2ffef0bc <stm32mp_lock_periph_registering+0x210>)
2ffef09c:	4641      	mov	r1, r8
2ffef09e:	e74d      	b.n	2ffeef3c <stm32mp_lock_periph_registering+0x90>
2ffef0a0:	2fffcbe1 	.word	0x2fffcbe1
2ffef0a4:	2fffcbe0 	.word	0x2fffcbe0
2ffef0a8:	2fff8c25 	.word	0x2fff8c25
2ffef0ac:	2fff8d73 	.word	0x2fff8d73
2ffef0b0:	2fff8d7a 	.word	0x2fff8d7a
2ffef0b4:	2fff8d64 	.word	0x2fff8d64
2ffef0b8:	2fff8d6b 	.word	0x2fff8d6b
2ffef0bc:	2fff8d6f 	.word	0x2fff8d6f
2ffef0c0:	2fff8d10 	.word	0x2fff8d10
2ffef0c4:	2fff8d90 	.word	0x2fff8d90
2ffef0c8:	2fff8d60 	.word	0x2fff8d60

2ffef0cc <plat_get_power_domain_tree_desc>:
2ffef0cc:	4800      	ldr	r0, [pc, #0]	; (2ffef0d0 <plat_get_power_domain_tree_desc+0x4>)
2ffef0ce:	4770      	bx	lr
2ffef0d0:	2fff8e72 	.word	0x2fff8e72

2ffef0d4 <plat_core_pos_by_mpidr>:
2ffef0d4:	f410 0f7f 	tst.w	r0, #16711680	; 0xff0000
2ffef0d8:	d109      	bne.n	2ffef0ee <plat_core_pos_by_mpidr+0x1a>
2ffef0da:	f410 4f7f 	tst.w	r0, #65280	; 0xff00
2ffef0de:	b2c3      	uxtb	r3, r0
2ffef0e0:	d105      	bne.n	2ffef0ee <plat_core_pos_by_mpidr+0x1a>
2ffef0e2:	2b01      	cmp	r3, #1
2ffef0e4:	bf94      	ite	ls
2ffef0e6:	4618      	movls	r0, r3
2ffef0e8:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
2ffef0ec:	4770      	bx	lr
2ffef0ee:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffef0f2:	4770      	bx	lr

2ffef0f4 <gicd_read_igroupr>:
2ffef0f4:	0949      	lsrs	r1, r1, #5
2ffef0f6:	3080      	adds	r0, #128	; 0x80
2ffef0f8:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
2ffef0fc:	4770      	bx	lr

2ffef0fe <gicd_read_icfgr>:
2ffef0fe:	0909      	lsrs	r1, r1, #4
2ffef100:	f500 6040 	add.w	r0, r0, #3072	; 0xc00
2ffef104:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
2ffef108:	4770      	bx	lr

2ffef10a <gicd_write_igroupr>:
2ffef10a:	0949      	lsrs	r1, r1, #5
2ffef10c:	3080      	adds	r0, #128	; 0x80
2ffef10e:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
2ffef112:	4770      	bx	lr

2ffef114 <gicd_write_isenabler>:
2ffef114:	0949      	lsrs	r1, r1, #5
2ffef116:	f500 7080 	add.w	r0, r0, #256	; 0x100
2ffef11a:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
2ffef11e:	4770      	bx	lr

2ffef120 <gicd_write_icenabler>:
2ffef120:	0949      	lsrs	r1, r1, #5
2ffef122:	f500 70c0 	add.w	r0, r0, #384	; 0x180
2ffef126:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
2ffef12a:	4770      	bx	lr

2ffef12c <gicd_write_ipriorityr>:
2ffef12c:	f021 0103 	bic.w	r1, r1, #3
2ffef130:	f500 6080 	add.w	r0, r0, #1024	; 0x400
2ffef134:	500a      	str	r2, [r1, r0]
2ffef136:	4770      	bx	lr

2ffef138 <gicd_write_icfgr>:
2ffef138:	0909      	lsrs	r1, r1, #4
2ffef13a:	f500 6040 	add.w	r0, r0, #3072	; 0xc00
2ffef13e:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
2ffef142:	4770      	bx	lr

2ffef144 <gicd_set_igroupr>:
2ffef144:	b510      	push	{r4, lr}
2ffef146:	460b      	mov	r3, r1
2ffef148:	4604      	mov	r4, r0
2ffef14a:	f7ff ffd3 	bl	2ffef0f4 <gicd_read_igroupr>
2ffef14e:	f003 011f 	and.w	r1, r3, #31
2ffef152:	2201      	movs	r2, #1
2ffef154:	408a      	lsls	r2, r1
2ffef156:	4619      	mov	r1, r3
2ffef158:	4302      	orrs	r2, r0
2ffef15a:	4620      	mov	r0, r4
2ffef15c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffef160:	f7ff bfd3 	b.w	2ffef10a <gicd_write_igroupr>

2ffef164 <gicd_clr_igroupr>:
2ffef164:	b510      	push	{r4, lr}
2ffef166:	460b      	mov	r3, r1
2ffef168:	4604      	mov	r4, r0
2ffef16a:	f7ff ffc3 	bl	2ffef0f4 <gicd_read_igroupr>
2ffef16e:	f003 011f 	and.w	r1, r3, #31
2ffef172:	2201      	movs	r2, #1
2ffef174:	408a      	lsls	r2, r1
2ffef176:	4619      	mov	r1, r3
2ffef178:	ea20 0202 	bic.w	r2, r0, r2
2ffef17c:	4620      	mov	r0, r4
2ffef17e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffef182:	f7ff bfc2 	b.w	2ffef10a <gicd_write_igroupr>

2ffef186 <gicd_set_isenabler>:
2ffef186:	f001 031f 	and.w	r3, r1, #31
2ffef18a:	2201      	movs	r2, #1
2ffef18c:	409a      	lsls	r2, r3
2ffef18e:	f7ff bfc1 	b.w	2ffef114 <gicd_write_isenabler>

2ffef192 <gicd_set_icenabler>:
2ffef192:	f001 031f 	and.w	r3, r1, #31
2ffef196:	2201      	movs	r2, #1
2ffef198:	409a      	lsls	r2, r3
2ffef19a:	f7ff bfc1 	b.w	2ffef120 <gicd_write_icenabler>

2ffef19e <gicd_set_ipriorityr>:
2ffef19e:	f501 6180 	add.w	r1, r1, #1024	; 0x400
2ffef1a2:	b2d2      	uxtb	r2, r2
2ffef1a4:	540a      	strb	r2, [r1, r0]
2ffef1a6:	4770      	bx	lr

2ffef1a8 <gicd_set_icfgr>:
2ffef1a8:	b570      	push	{r4, r5, r6, lr}
2ffef1aa:	4606      	mov	r6, r0
2ffef1ac:	004c      	lsls	r4, r1, #1
2ffef1ae:	460d      	mov	r5, r1
2ffef1b0:	f004 041e 	and.w	r4, r4, #30
2ffef1b4:	f7ff ffa3 	bl	2ffef0fe <gicd_read_icfgr>
2ffef1b8:	2303      	movs	r3, #3
2ffef1ba:	f002 0203 	and.w	r2, r2, #3
2ffef1be:	4629      	mov	r1, r5
2ffef1c0:	40a3      	lsls	r3, r4
2ffef1c2:	ea20 0003 	bic.w	r0, r0, r3
2ffef1c6:	40a2      	lsls	r2, r4
2ffef1c8:	4302      	orrs	r2, r0
2ffef1ca:	4630      	mov	r0, r6
2ffef1cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffef1d0:	f7ff bfb2 	b.w	2ffef138 <gicd_write_icfgr>

2ffef1d4 <gicv2_get_cpuif_id>:
2ffef1d4:	f8d0 0800 	ldr.w	r0, [r0, #2048]	; 0x800
2ffef1d8:	b2c0      	uxtb	r0, r0
2ffef1da:	4770      	bx	lr

2ffef1dc <gicv2_spis_configure_defaults>:
2ffef1dc:	b570      	push	{r4, r5, r6, lr}
2ffef1de:	4606      	mov	r6, r0
2ffef1e0:	6844      	ldr	r4, [r0, #4]
2ffef1e2:	2520      	movs	r5, #32
2ffef1e4:	f004 041f 	and.w	r4, r4, #31
2ffef1e8:	3401      	adds	r4, #1
2ffef1ea:	0164      	lsls	r4, r4, #5
2ffef1ec:	42a5      	cmp	r5, r4
2ffef1ee:	d306      	bcc.n	2ffef1fe <gicv2_spis_configure_defaults+0x22>
2ffef1f0:	2520      	movs	r5, #32
2ffef1f2:	42a5      	cmp	r5, r4
2ffef1f4:	d30b      	bcc.n	2ffef20e <gicv2_spis_configure_defaults+0x32>
2ffef1f6:	2520      	movs	r5, #32
2ffef1f8:	42a5      	cmp	r5, r4
2ffef1fa:	d310      	bcc.n	2ffef21e <gicv2_spis_configure_defaults+0x42>
2ffef1fc:	bd70      	pop	{r4, r5, r6, pc}
2ffef1fe:	4629      	mov	r1, r5
2ffef200:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
2ffef204:	4630      	mov	r0, r6
2ffef206:	3520      	adds	r5, #32
2ffef208:	f7ff ff7f 	bl	2ffef10a <gicd_write_igroupr>
2ffef20c:	e7ee      	b.n	2ffef1ec <gicv2_spis_configure_defaults+0x10>
2ffef20e:	4629      	mov	r1, r5
2ffef210:	f04f 3280 	mov.w	r2, #2155905152	; 0x80808080
2ffef214:	4630      	mov	r0, r6
2ffef216:	3504      	adds	r5, #4
2ffef218:	f7ff ff88 	bl	2ffef12c <gicd_write_ipriorityr>
2ffef21c:	e7e9      	b.n	2ffef1f2 <gicv2_spis_configure_defaults+0x16>
2ffef21e:	4629      	mov	r1, r5
2ffef220:	2200      	movs	r2, #0
2ffef222:	4630      	mov	r0, r6
2ffef224:	3510      	adds	r5, #16
2ffef226:	f7ff ff87 	bl	2ffef138 <gicd_write_icfgr>
2ffef22a:	e7e5      	b.n	2ffef1f8 <gicv2_spis_configure_defaults+0x1c>

2ffef22c <gicv2_secure_spis_configure_props>:
2ffef22c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffef230:	4607      	mov	r7, r0
2ffef232:	460c      	mov	r4, r1
2ffef234:	4690      	mov	r8, r2
2ffef236:	2a00      	cmp	r2, #0
2ffef238:	d03e      	beq.n	2ffef2b8 <gicv2_secure_spis_configure_props+0x8c>
2ffef23a:	b919      	cbnz	r1, 2ffef244 <gicv2_secure_spis_configure_props+0x18>
2ffef23c:	2183      	movs	r1, #131	; 0x83
2ffef23e:	481f      	ldr	r0, [pc, #124]	; (2ffef2bc <gicv2_secure_spis_configure_props+0x90>)
2ffef240:	f008 fdb2 	bl	2fff7da8 <__assert>
2ffef244:	2600      	movs	r6, #0
2ffef246:	f500 6900 	add.w	r9, r0, #2048	; 0x800
2ffef24a:	f834 1026 	ldrh.w	r1, [r4, r6, lsl #2]
2ffef24e:	00b5      	lsls	r5, r6, #2
2ffef250:	f3c1 0109 	ubfx	r1, r1, #0, #10
2ffef254:	eb04 0a05 	add.w	sl, r4, r5
2ffef258:	291f      	cmp	r1, #31
2ffef25a:	d92a      	bls.n	2ffef2b2 <gicv2_secure_spis_configure_props+0x86>
2ffef25c:	f89a 3002 	ldrb.w	r3, [sl, #2]
2ffef260:	f013 0f0c 	tst.w	r3, #12
2ffef264:	d001      	beq.n	2ffef26a <gicv2_secure_spis_configure_props+0x3e>
2ffef266:	218c      	movs	r1, #140	; 0x8c
2ffef268:	e7e9      	b.n	2ffef23e <gicv2_secure_spis_configure_props+0x12>
2ffef26a:	4638      	mov	r0, r7
2ffef26c:	f7ff ff7a 	bl	2ffef164 <gicd_clr_igroupr>
2ffef270:	5962      	ldr	r2, [r4, r5]
2ffef272:	4638      	mov	r0, r7
2ffef274:	5b61      	ldrh	r1, [r4, r5]
2ffef276:	f3c2 2287 	ubfx	r2, r2, #10, #8
2ffef27a:	f3c1 0109 	ubfx	r1, r1, #0, #10
2ffef27e:	f7ff ff8e 	bl	2ffef19e <gicd_set_ipriorityr>
2ffef282:	5b63      	ldrh	r3, [r4, r5]
2ffef284:	4638      	mov	r0, r7
2ffef286:	f8d9 2000 	ldr.w	r2, [r9]
2ffef28a:	f3c3 0309 	ubfx	r3, r3, #0, #10
2ffef28e:	b2d2      	uxtb	r2, r2
2ffef290:	f803 2009 	strb.w	r2, [r3, r9]
2ffef294:	f89a 2002 	ldrb.w	r2, [sl, #2]
2ffef298:	5b61      	ldrh	r1, [r4, r5]
2ffef29a:	f3c2 1201 	ubfx	r2, r2, #4, #2
2ffef29e:	f3c1 0109 	ubfx	r1, r1, #0, #10
2ffef2a2:	f7ff ff81 	bl	2ffef1a8 <gicd_set_icfgr>
2ffef2a6:	5b61      	ldrh	r1, [r4, r5]
2ffef2a8:	4638      	mov	r0, r7
2ffef2aa:	f3c1 0109 	ubfx	r1, r1, #0, #10
2ffef2ae:	f7ff ff6a 	bl	2ffef186 <gicd_set_isenabler>
2ffef2b2:	3601      	adds	r6, #1
2ffef2b4:	45b0      	cmp	r8, r6
2ffef2b6:	d1c8      	bne.n	2ffef24a <gicv2_secure_spis_configure_props+0x1e>
2ffef2b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffef2bc:	2fff8e74 	.word	0x2fff8e74

2ffef2c0 <gicv2_secure_ppi_sgi_setup_props>:
2ffef2c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffef2c4:	4604      	mov	r4, r0
2ffef2c6:	460f      	mov	r7, r1
2ffef2c8:	4690      	mov	r8, r2
2ffef2ca:	b122      	cbz	r2, 2ffef2d6 <gicv2_secure_ppi_sgi_setup_props+0x16>
2ffef2cc:	b919      	cbnz	r1, 2ffef2d6 <gicv2_secure_ppi_sgi_setup_props+0x16>
2ffef2ce:	21ad      	movs	r1, #173	; 0xad
2ffef2d0:	4827      	ldr	r0, [pc, #156]	; (2ffef370 <gicv2_secure_ppi_sgi_setup_props+0xb0>)
2ffef2d2:	f008 fd69 	bl	2fff7da8 <__assert>
2ffef2d6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
2ffef2da:	2100      	movs	r1, #0
2ffef2dc:	4620      	mov	r0, r4
2ffef2de:	2500      	movs	r5, #0
2ffef2e0:	f7ff ff1e 	bl	2ffef120 <gicd_write_icenabler>
2ffef2e4:	4629      	mov	r1, r5
2ffef2e6:	f04f 3280 	mov.w	r2, #2155905152	; 0x80808080
2ffef2ea:	4620      	mov	r0, r4
2ffef2ec:	3504      	adds	r5, #4
2ffef2ee:	f7ff ff1d 	bl	2ffef12c <gicd_write_ipriorityr>
2ffef2f2:	2d20      	cmp	r5, #32
2ffef2f4:	d1f6      	bne.n	2ffef2e4 <gicv2_secure_ppi_sgi_setup_props+0x24>
2ffef2f6:	2500      	movs	r5, #0
2ffef2f8:	f04f 0901 	mov.w	r9, #1
2ffef2fc:	462e      	mov	r6, r5
2ffef2fe:	4546      	cmp	r6, r8
2ffef300:	d10b      	bne.n	2ffef31a <gicv2_secure_ppi_sgi_setup_props+0x5a>
2ffef302:	43ea      	mvns	r2, r5
2ffef304:	4620      	mov	r0, r4
2ffef306:	2100      	movs	r1, #0
2ffef308:	f7ff feff 	bl	2ffef10a <gicd_write_igroupr>
2ffef30c:	462a      	mov	r2, r5
2ffef30e:	4620      	mov	r0, r4
2ffef310:	2100      	movs	r1, #0
2ffef312:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffef316:	f7ff befd 	b.w	2ffef114 <gicd_write_isenabler>
2ffef31a:	f837 1026 	ldrh.w	r1, [r7, r6, lsl #2]
2ffef31e:	ea4f 0a86 	mov.w	sl, r6, lsl #2
2ffef322:	f3c1 0109 	ubfx	r1, r1, #0, #10
2ffef326:	eb07 030a 	add.w	r3, r7, sl
2ffef32a:	291f      	cmp	r1, #31
2ffef32c:	d81e      	bhi.n	2ffef36c <gicv2_secure_ppi_sgi_setup_props+0xac>
2ffef32e:	789a      	ldrb	r2, [r3, #2]
2ffef330:	f012 0f0c 	tst.w	r2, #12
2ffef334:	d001      	beq.n	2ffef33a <gicv2_secure_ppi_sgi_setup_props+0x7a>
2ffef336:	21c1      	movs	r1, #193	; 0xc1
2ffef338:	e7ca      	b.n	2ffef2d0 <gicv2_secure_ppi_sgi_setup_props+0x10>
2ffef33a:	f501 737c 	add.w	r3, r1, #1008	; 0x3f0
2ffef33e:	f3c3 0309 	ubfx	r3, r3, #0, #10
2ffef342:	2b0f      	cmp	r3, #15
2ffef344:	d804      	bhi.n	2ffef350 <gicv2_secure_ppi_sgi_setup_props+0x90>
2ffef346:	f3c2 1201 	ubfx	r2, r2, #4, #2
2ffef34a:	4620      	mov	r0, r4
2ffef34c:	f7ff ff2c 	bl	2ffef1a8 <gicd_set_icfgr>
2ffef350:	f837 100a 	ldrh.w	r1, [r7, sl]
2ffef354:	4620      	mov	r0, r4
2ffef356:	f857 200a 	ldr.w	r2, [r7, sl]
2ffef35a:	f3c1 0109 	ubfx	r1, r1, #0, #10
2ffef35e:	f3c2 2287 	ubfx	r2, r2, #10, #8
2ffef362:	fa09 f301 	lsl.w	r3, r9, r1
2ffef366:	431d      	orrs	r5, r3
2ffef368:	f7ff ff19 	bl	2ffef19e <gicd_set_ipriorityr>
2ffef36c:	3601      	adds	r6, #1
2ffef36e:	e7c6      	b.n	2ffef2fe <gicv2_secure_ppi_sgi_setup_props+0x3e>
2ffef370:	2fff8e74 	.word	0x2fff8e74

2ffef374 <gicv2_cpuif_enable>:
2ffef374:	b508      	push	{r3, lr}
2ffef376:	4b08      	ldr	r3, [pc, #32]	; (2ffef398 <gicv2_cpuif_enable+0x24>)
2ffef378:	681b      	ldr	r3, [r3, #0]
2ffef37a:	b91b      	cbnz	r3, 2ffef384 <gicv2_cpuif_enable+0x10>
2ffef37c:	2126      	movs	r1, #38	; 0x26
2ffef37e:	4807      	ldr	r0, [pc, #28]	; (2ffef39c <gicv2_cpuif_enable+0x28>)
2ffef380:	f008 fd12 	bl	2fff7da8 <__assert>
2ffef384:	685b      	ldr	r3, [r3, #4]
2ffef386:	b90b      	cbnz	r3, 2ffef38c <gicv2_cpuif_enable+0x18>
2ffef388:	2127      	movs	r1, #39	; 0x27
2ffef38a:	e7f8      	b.n	2ffef37e <gicv2_cpuif_enable+0xa>
2ffef38c:	22ff      	movs	r2, #255	; 0xff
2ffef38e:	605a      	str	r2, [r3, #4]
2ffef390:	f240 12e9 	movw	r2, #489	; 0x1e9
2ffef394:	601a      	str	r2, [r3, #0]
2ffef396:	bd08      	pop	{r3, pc}
2ffef398:	2fffcbf8 	.word	0x2fffcbf8
2ffef39c:	2fff8e97 	.word	0x2fff8e97

2ffef3a0 <gicv2_pcpu_distif_init>:
2ffef3a0:	b510      	push	{r4, lr}
2ffef3a2:	4c0c      	ldr	r4, [pc, #48]	; (2ffef3d4 <gicv2_pcpu_distif_init+0x34>)
2ffef3a4:	6823      	ldr	r3, [r4, #0]
2ffef3a6:	b91b      	cbnz	r3, 2ffef3b0 <gicv2_pcpu_distif_init+0x10>
2ffef3a8:	2150      	movs	r1, #80	; 0x50
2ffef3aa:	480b      	ldr	r0, [pc, #44]	; (2ffef3d8 <gicv2_pcpu_distif_init+0x38>)
2ffef3ac:	f008 fcfc 	bl	2fff7da8 <__assert>
2ffef3b0:	6818      	ldr	r0, [r3, #0]
2ffef3b2:	b908      	cbnz	r0, 2ffef3b8 <gicv2_pcpu_distif_init+0x18>
2ffef3b4:	2151      	movs	r1, #81	; 0x51
2ffef3b6:	e7f8      	b.n	2ffef3aa <gicv2_pcpu_distif_init+0xa>
2ffef3b8:	695a      	ldr	r2, [r3, #20]
2ffef3ba:	6919      	ldr	r1, [r3, #16]
2ffef3bc:	f7ff ff80 	bl	2ffef2c0 <gicv2_secure_ppi_sgi_setup_props>
2ffef3c0:	6823      	ldr	r3, [r4, #0]
2ffef3c2:	681a      	ldr	r2, [r3, #0]
2ffef3c4:	6813      	ldr	r3, [r2, #0]
2ffef3c6:	07d9      	lsls	r1, r3, #31
2ffef3c8:	bf5c      	itt	pl
2ffef3ca:	f043 0301 	orrpl.w	r3, r3, #1
2ffef3ce:	6013      	strpl	r3, [r2, #0]
2ffef3d0:	bd10      	pop	{r4, pc}
2ffef3d2:	bf00      	nop
2ffef3d4:	2fffcbf8 	.word	0x2fffcbf8
2ffef3d8:	2fff8e97 	.word	0x2fff8e97

2ffef3dc <gicv2_distif_init>:
2ffef3dc:	b538      	push	{r3, r4, r5, lr}
2ffef3de:	4d0e      	ldr	r5, [pc, #56]	; (2ffef418 <gicv2_distif_init+0x3c>)
2ffef3e0:	682b      	ldr	r3, [r5, #0]
2ffef3e2:	b91b      	cbnz	r3, 2ffef3ec <gicv2_distif_init+0x10>
2ffef3e4:	2168      	movs	r1, #104	; 0x68
2ffef3e6:	480d      	ldr	r0, [pc, #52]	; (2ffef41c <gicv2_distif_init+0x40>)
2ffef3e8:	f008 fcde 	bl	2fff7da8 <__assert>
2ffef3ec:	6818      	ldr	r0, [r3, #0]
2ffef3ee:	b908      	cbnz	r0, 2ffef3f4 <gicv2_distif_init+0x18>
2ffef3f0:	2169      	movs	r1, #105	; 0x69
2ffef3f2:	e7f8      	b.n	2ffef3e6 <gicv2_distif_init+0xa>
2ffef3f4:	6804      	ldr	r4, [r0, #0]
2ffef3f6:	f024 0303 	bic.w	r3, r4, #3
2ffef3fa:	f044 0401 	orr.w	r4, r4, #1
2ffef3fe:	6003      	str	r3, [r0, #0]
2ffef400:	f7ff feec 	bl	2ffef1dc <gicv2_spis_configure_defaults>
2ffef404:	682b      	ldr	r3, [r5, #0]
2ffef406:	695a      	ldr	r2, [r3, #20]
2ffef408:	6919      	ldr	r1, [r3, #16]
2ffef40a:	6818      	ldr	r0, [r3, #0]
2ffef40c:	f7ff ff0e 	bl	2ffef22c <gicv2_secure_spis_configure_props>
2ffef410:	682b      	ldr	r3, [r5, #0]
2ffef412:	681b      	ldr	r3, [r3, #0]
2ffef414:	601c      	str	r4, [r3, #0]
2ffef416:	bd38      	pop	{r3, r4, r5, pc}
2ffef418:	2fffcbf8 	.word	0x2fffcbf8
2ffef41c:	2fff8e97 	.word	0x2fff8e97

2ffef420 <gicv2_driver_init>:
2ffef420:	b510      	push	{r4, lr}
2ffef422:	b918      	cbnz	r0, 2ffef42c <gicv2_driver_init+0xc>
2ffef424:	2183      	movs	r1, #131	; 0x83
2ffef426:	4814      	ldr	r0, [pc, #80]	; (2ffef478 <gicv2_driver_init+0x58>)
2ffef428:	f008 fcbe 	bl	2fff7da8 <__assert>
2ffef42c:	6803      	ldr	r3, [r0, #0]
2ffef42e:	b90b      	cbnz	r3, 2ffef434 <gicv2_driver_init+0x14>
2ffef430:	2184      	movs	r1, #132	; 0x84
2ffef432:	e7f8      	b.n	2ffef426 <gicv2_driver_init+0x6>
2ffef434:	6842      	ldr	r2, [r0, #4]
2ffef436:	b90a      	cbnz	r2, 2ffef43c <gicv2_driver_init+0x1c>
2ffef438:	2185      	movs	r1, #133	; 0x85
2ffef43a:	e7f4      	b.n	2ffef426 <gicv2_driver_init+0x6>
2ffef43c:	6942      	ldr	r2, [r0, #20]
2ffef43e:	b11a      	cbz	r2, 2ffef448 <gicv2_driver_init+0x28>
2ffef440:	6902      	ldr	r2, [r0, #16]
2ffef442:	b90a      	cbnz	r2, 2ffef448 <gicv2_driver_init+0x28>
2ffef444:	2188      	movs	r1, #136	; 0x88
2ffef446:	e7ee      	b.n	2ffef426 <gicv2_driver_init+0x6>
2ffef448:	f8d3 3fe8 	ldr.w	r3, [r3, #4072]	; 0xfe8
2ffef44c:	f3c3 1303 	ubfx	r3, r3, #4, #4
2ffef450:	3b01      	subs	r3, #1
2ffef452:	2b01      	cmp	r3, #1
2ffef454:	d901      	bls.n	2ffef45a <gicv2_driver_init+0x3a>
2ffef456:	219b      	movs	r1, #155	; 0x9b
2ffef458:	e7e5      	b.n	2ffef426 <gicv2_driver_init+0x6>
2ffef45a:	4c08      	ldr	r4, [pc, #32]	; (2ffef47c <gicv2_driver_init+0x5c>)
2ffef45c:	2104      	movs	r1, #4
2ffef45e:	6020      	str	r0, [r4, #0]
2ffef460:	4620      	mov	r0, r4
2ffef462:	f007 ed02 	blx	2fff6e68 <flush_dcache_range>
2ffef466:	6820      	ldr	r0, [r4, #0]
2ffef468:	2118      	movs	r1, #24
2ffef46a:	f007 ecfe 	blx	2fff6e68 <flush_dcache_range>
2ffef46e:	4804      	ldr	r0, [pc, #16]	; (2ffef480 <gicv2_driver_init+0x60>)
2ffef470:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffef474:	f001 bb84 	b.w	2fff0b80 <tf_log>
2ffef478:	2fff8e97 	.word	0x2fff8e97
2ffef47c:	2fffcbf8 	.word	0x2fffcbf8
2ffef480:	2fff8eb7 	.word	0x2fff8eb7

2ffef484 <gicv2_get_pending_interrupt_id>:
2ffef484:	b508      	push	{r3, lr}
2ffef486:	4b0b      	ldr	r3, [pc, #44]	; (2ffef4b4 <gicv2_get_pending_interrupt_id+0x30>)
2ffef488:	681b      	ldr	r3, [r3, #0]
2ffef48a:	b91b      	cbnz	r3, 2ffef494 <gicv2_get_pending_interrupt_id+0x10>
2ffef48c:	21d5      	movs	r1, #213	; 0xd5
2ffef48e:	480a      	ldr	r0, [pc, #40]	; (2ffef4b8 <gicv2_get_pending_interrupt_id+0x34>)
2ffef490:	f008 fc8a 	bl	2fff7da8 <__assert>
2ffef494:	685b      	ldr	r3, [r3, #4]
2ffef496:	b90b      	cbnz	r3, 2ffef49c <gicv2_get_pending_interrupt_id+0x18>
2ffef498:	21d6      	movs	r1, #214	; 0xd6
2ffef49a:	e7f8      	b.n	2ffef48e <gicv2_get_pending_interrupt_id+0xa>
2ffef49c:	6998      	ldr	r0, [r3, #24]
2ffef49e:	f240 32fe 	movw	r2, #1022	; 0x3fe
2ffef4a2:	f3c0 0009 	ubfx	r0, r0, #0, #10
2ffef4a6:	4290      	cmp	r0, r2
2ffef4a8:	bf04      	itt	eq
2ffef4aa:	6a98      	ldreq	r0, [r3, #40]	; 0x28
2ffef4ac:	f3c0 0009 	ubfxeq	r0, r0, #0, #10
2ffef4b0:	bd08      	pop	{r3, pc}
2ffef4b2:	bf00      	nop
2ffef4b4:	2fffcbf8 	.word	0x2fffcbf8
2ffef4b8:	2fff8e97 	.word	0x2fff8e97

2ffef4bc <gicv2_acknowledge_interrupt>:
2ffef4bc:	b508      	push	{r3, lr}
2ffef4be:	4b06      	ldr	r3, [pc, #24]	; (2ffef4d8 <gicv2_acknowledge_interrupt+0x1c>)
2ffef4c0:	681b      	ldr	r3, [r3, #0]
2ffef4c2:	b91b      	cbnz	r3, 2ffef4cc <gicv2_acknowledge_interrupt+0x10>
2ffef4c4:	21eb      	movs	r1, #235	; 0xeb
2ffef4c6:	4805      	ldr	r0, [pc, #20]	; (2ffef4dc <gicv2_acknowledge_interrupt+0x20>)
2ffef4c8:	f008 fc6e 	bl	2fff7da8 <__assert>
2ffef4cc:	685b      	ldr	r3, [r3, #4]
2ffef4ce:	b90b      	cbnz	r3, 2ffef4d4 <gicv2_acknowledge_interrupt+0x18>
2ffef4d0:	21ec      	movs	r1, #236	; 0xec
2ffef4d2:	e7f8      	b.n	2ffef4c6 <gicv2_acknowledge_interrupt+0xa>
2ffef4d4:	68d8      	ldr	r0, [r3, #12]
2ffef4d6:	bd08      	pop	{r3, pc}
2ffef4d8:	2fffcbf8 	.word	0x2fffcbf8
2ffef4dc:	2fff8e97 	.word	0x2fff8e97

2ffef4e0 <gicv2_end_of_interrupt>:
2ffef4e0:	b508      	push	{r3, lr}
2ffef4e2:	4b06      	ldr	r3, [pc, #24]	; (2ffef4fc <gicv2_end_of_interrupt+0x1c>)
2ffef4e4:	681b      	ldr	r3, [r3, #0]
2ffef4e6:	b91b      	cbnz	r3, 2ffef4f0 <gicv2_end_of_interrupt+0x10>
2ffef4e8:	21f7      	movs	r1, #247	; 0xf7
2ffef4ea:	4805      	ldr	r0, [pc, #20]	; (2ffef500 <gicv2_end_of_interrupt+0x20>)
2ffef4ec:	f008 fc5c 	bl	2fff7da8 <__assert>
2ffef4f0:	685b      	ldr	r3, [r3, #4]
2ffef4f2:	b90b      	cbnz	r3, 2ffef4f8 <gicv2_end_of_interrupt+0x18>
2ffef4f4:	21f8      	movs	r1, #248	; 0xf8
2ffef4f6:	e7f8      	b.n	2ffef4ea <gicv2_end_of_interrupt+0xa>
2ffef4f8:	6118      	str	r0, [r3, #16]
2ffef4fa:	bd08      	pop	{r3, pc}
2ffef4fc:	2fffcbf8 	.word	0x2fffcbf8
2ffef500:	2fff8e97 	.word	0x2fff8e97

2ffef504 <gicv2_set_pe_target_mask>:
2ffef504:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffef506:	4604      	mov	r4, r0
2ffef508:	4e16      	ldr	r6, [pc, #88]	; (2ffef564 <gicv2_set_pe_target_mask+0x60>)
2ffef50a:	6833      	ldr	r3, [r6, #0]
2ffef50c:	b923      	cbnz	r3, 2ffef518 <gicv2_set_pe_target_mask+0x14>
2ffef50e:	f240 111f 	movw	r1, #287	; 0x11f
2ffef512:	4815      	ldr	r0, [pc, #84]	; (2ffef568 <gicv2_set_pe_target_mask+0x64>)
2ffef514:	f008 fc48 	bl	2fff7da8 <__assert>
2ffef518:	6818      	ldr	r0, [r3, #0]
2ffef51a:	b910      	cbnz	r0, 2ffef522 <gicv2_set_pe_target_mask+0x1e>
2ffef51c:	f44f 7190 	mov.w	r1, #288	; 0x120
2ffef520:	e7f7      	b.n	2ffef512 <gicv2_set_pe_target_mask+0xe>
2ffef522:	689d      	ldr	r5, [r3, #8]
2ffef524:	b915      	cbnz	r5, 2ffef52c <gicv2_set_pe_target_mask+0x28>
2ffef526:	f240 1121 	movw	r1, #289	; 0x121
2ffef52a:	e7f2      	b.n	2ffef512 <gicv2_set_pe_target_mask+0xe>
2ffef52c:	2c07      	cmp	r4, #7
2ffef52e:	d902      	bls.n	2ffef536 <gicv2_set_pe_target_mask+0x32>
2ffef530:	f44f 7191 	mov.w	r1, #290	; 0x122
2ffef534:	e7ed      	b.n	2ffef512 <gicv2_set_pe_target_mask+0xe>
2ffef536:	68db      	ldr	r3, [r3, #12]
2ffef538:	42a3      	cmp	r3, r4
2ffef53a:	d802      	bhi.n	2ffef542 <gicv2_set_pe_target_mask+0x3e>
2ffef53c:	f240 1123 	movw	r1, #291	; 0x123
2ffef540:	e7e7      	b.n	2ffef512 <gicv2_set_pe_target_mask+0xe>
2ffef542:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
2ffef546:	00a7      	lsls	r7, r4, #2
2ffef548:	b95b      	cbnz	r3, 2ffef562 <gicv2_set_pe_target_mask+0x5e>
2ffef54a:	f7ff fe43 	bl	2ffef1d4 <gicv2_get_cpuif_id>
2ffef54e:	6833      	ldr	r3, [r6, #0]
2ffef550:	2104      	movs	r1, #4
2ffef552:	f845 0024 	str.w	r0, [r5, r4, lsl #2]
2ffef556:	6898      	ldr	r0, [r3, #8]
2ffef558:	4438      	add	r0, r7
2ffef55a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
2ffef55e:	f00b baf7 	b.w	2fffab50 <__flush_dcache_range_from_thumb>
2ffef562:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffef564:	2fffcbf8 	.word	0x2fffcbf8
2ffef568:	2fff8e97 	.word	0x2fff8e97

2ffef56c <gicv2_enable_interrupt>:
2ffef56c:	b508      	push	{r3, lr}
2ffef56e:	4601      	mov	r1, r0
2ffef570:	4b0d      	ldr	r3, [pc, #52]	; (2ffef5a8 <gicv2_enable_interrupt+0x3c>)
2ffef572:	681a      	ldr	r2, [r3, #0]
2ffef574:	b922      	cbnz	r2, 2ffef580 <gicv2_enable_interrupt+0x14>
2ffef576:	f240 1151 	movw	r1, #337	; 0x151
2ffef57a:	480c      	ldr	r0, [pc, #48]	; (2ffef5ac <gicv2_enable_interrupt+0x40>)
2ffef57c:	f008 fc14 	bl	2fff7da8 <__assert>
2ffef580:	6812      	ldr	r2, [r2, #0]
2ffef582:	b912      	cbnz	r2, 2ffef58a <gicv2_enable_interrupt+0x1e>
2ffef584:	f44f 71a9 	mov.w	r1, #338	; 0x152
2ffef588:	e7f7      	b.n	2ffef57a <gicv2_enable_interrupt+0xe>
2ffef58a:	f5b0 7f7f 	cmp.w	r0, #1020	; 0x3fc
2ffef58e:	d302      	bcc.n	2ffef596 <gicv2_enable_interrupt+0x2a>
2ffef590:	f240 1153 	movw	r1, #339	; 0x153
2ffef594:	e7f1      	b.n	2ffef57a <gicv2_enable_interrupt+0xe>
2ffef596:	f3bf 8f4a 	dsb	ishst
2ffef59a:	681b      	ldr	r3, [r3, #0]
2ffef59c:	6818      	ldr	r0, [r3, #0]
2ffef59e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffef5a2:	f7ff bdf0 	b.w	2ffef186 <gicd_set_isenabler>
2ffef5a6:	bf00      	nop
2ffef5a8:	2fffcbf8 	.word	0x2fffcbf8
2ffef5ac:	2fff8e97 	.word	0x2fff8e97

2ffef5b0 <gicv2_disable_interrupt>:
2ffef5b0:	b508      	push	{r3, lr}
2ffef5b2:	4601      	mov	r1, r0
2ffef5b4:	4b0b      	ldr	r3, [pc, #44]	; (2ffef5e4 <gicv2_disable_interrupt+0x34>)
2ffef5b6:	681b      	ldr	r3, [r3, #0]
2ffef5b8:	b923      	cbnz	r3, 2ffef5c4 <gicv2_disable_interrupt+0x14>
2ffef5ba:	f44f 71b1 	mov.w	r1, #354	; 0x162
2ffef5be:	480a      	ldr	r0, [pc, #40]	; (2ffef5e8 <gicv2_disable_interrupt+0x38>)
2ffef5c0:	f008 fbf2 	bl	2fff7da8 <__assert>
2ffef5c4:	6818      	ldr	r0, [r3, #0]
2ffef5c6:	b910      	cbnz	r0, 2ffef5ce <gicv2_disable_interrupt+0x1e>
2ffef5c8:	f240 1163 	movw	r1, #355	; 0x163
2ffef5cc:	e7f7      	b.n	2ffef5be <gicv2_disable_interrupt+0xe>
2ffef5ce:	f5b1 7f7f 	cmp.w	r1, #1020	; 0x3fc
2ffef5d2:	d302      	bcc.n	2ffef5da <gicv2_disable_interrupt+0x2a>
2ffef5d4:	f44f 71b2 	mov.w	r1, #356	; 0x164
2ffef5d8:	e7f1      	b.n	2ffef5be <gicv2_disable_interrupt+0xe>
2ffef5da:	f7ff fdda 	bl	2ffef192 <gicd_set_icenabler>
2ffef5de:	f3bf 8f4a 	dsb	ishst
2ffef5e2:	bd08      	pop	{r3, pc}
2ffef5e4:	2fffcbf8 	.word	0x2fffcbf8
2ffef5e8:	2fff8e97 	.word	0x2fff8e97

2ffef5ec <gicv2_set_interrupt_priority>:
2ffef5ec:	b508      	push	{r3, lr}
2ffef5ee:	460a      	mov	r2, r1
2ffef5f0:	4b0c      	ldr	r3, [pc, #48]	; (2ffef624 <gicv2_set_interrupt_priority+0x38>)
2ffef5f2:	681b      	ldr	r3, [r3, #0]
2ffef5f4:	b923      	cbnz	r3, 2ffef600 <gicv2_set_interrupt_priority+0x14>
2ffef5f6:	f44f 71ba 	mov.w	r1, #372	; 0x174
2ffef5fa:	480b      	ldr	r0, [pc, #44]	; (2ffef628 <gicv2_set_interrupt_priority+0x3c>)
2ffef5fc:	f008 fbd4 	bl	2fff7da8 <__assert>
2ffef600:	681b      	ldr	r3, [r3, #0]
2ffef602:	b913      	cbnz	r3, 2ffef60a <gicv2_set_interrupt_priority+0x1e>
2ffef604:	f240 1175 	movw	r1, #373	; 0x175
2ffef608:	e7f7      	b.n	2ffef5fa <gicv2_set_interrupt_priority+0xe>
2ffef60a:	f5b0 7f7f 	cmp.w	r0, #1020	; 0x3fc
2ffef60e:	d302      	bcc.n	2ffef616 <gicv2_set_interrupt_priority+0x2a>
2ffef610:	f44f 71bb 	mov.w	r1, #374	; 0x176
2ffef614:	e7f1      	b.n	2ffef5fa <gicv2_set_interrupt_priority+0xe>
2ffef616:	4601      	mov	r1, r0
2ffef618:	4618      	mov	r0, r3
2ffef61a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffef61e:	f7ff bdbe 	b.w	2ffef19e <gicd_set_ipriorityr>
2ffef622:	bf00      	nop
2ffef624:	2fffcbf8 	.word	0x2fffcbf8
2ffef628:	2fff8e97 	.word	0x2fff8e97

2ffef62c <gicv2_set_interrupt_type>:
2ffef62c:	b570      	push	{r4, r5, r6, lr}
2ffef62e:	4604      	mov	r4, r0
2ffef630:	4d16      	ldr	r5, [pc, #88]	; (2ffef68c <gicv2_set_interrupt_type+0x60>)
2ffef632:	460e      	mov	r6, r1
2ffef634:	682b      	ldr	r3, [r5, #0]
2ffef636:	b923      	cbnz	r3, 2ffef642 <gicv2_set_interrupt_type+0x16>
2ffef638:	f240 1181 	movw	r1, #385	; 0x181
2ffef63c:	4814      	ldr	r0, [pc, #80]	; (2ffef690 <gicv2_set_interrupt_type+0x64>)
2ffef63e:	f008 fbb3 	bl	2fff7da8 <__assert>
2ffef642:	681b      	ldr	r3, [r3, #0]
2ffef644:	b913      	cbnz	r3, 2ffef64c <gicv2_set_interrupt_type+0x20>
2ffef646:	f44f 71c1 	mov.w	r1, #386	; 0x182
2ffef64a:	e7f7      	b.n	2ffef63c <gicv2_set_interrupt_type+0x10>
2ffef64c:	f5b0 7f7f 	cmp.w	r0, #1020	; 0x3fc
2ffef650:	d302      	bcc.n	2ffef658 <gicv2_set_interrupt_type+0x2c>
2ffef652:	f240 1183 	movw	r1, #387	; 0x183
2ffef656:	e7f1      	b.n	2ffef63c <gicv2_set_interrupt_type+0x10>
2ffef658:	480e      	ldr	r0, [pc, #56]	; (2ffef694 <gicv2_set_interrupt_type+0x68>)
2ffef65a:	f007 eae4 	blx	2fff6c24 <spin_lock>
2ffef65e:	b15e      	cbz	r6, 2ffef678 <gicv2_set_interrupt_type+0x4c>
2ffef660:	2e01      	cmp	r6, #1
2ffef662:	d10f      	bne.n	2ffef684 <gicv2_set_interrupt_type+0x58>
2ffef664:	682b      	ldr	r3, [r5, #0]
2ffef666:	4621      	mov	r1, r4
2ffef668:	6818      	ldr	r0, [r3, #0]
2ffef66a:	f7ff fd6b 	bl	2ffef144 <gicd_set_igroupr>
2ffef66e:	4809      	ldr	r0, [pc, #36]	; (2ffef694 <gicv2_set_interrupt_type+0x68>)
2ffef670:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffef674:	f00b ba58 	b.w	2fffab28 <__spin_unlock_from_thumb>
2ffef678:	682b      	ldr	r3, [r5, #0]
2ffef67a:	4621      	mov	r1, r4
2ffef67c:	6818      	ldr	r0, [r3, #0]
2ffef67e:	f7ff fd71 	bl	2ffef164 <gicd_clr_igroupr>
2ffef682:	e7f4      	b.n	2ffef66e <gicv2_set_interrupt_type+0x42>
2ffef684:	f240 118f 	movw	r1, #399	; 0x18f
2ffef688:	e7d8      	b.n	2ffef63c <gicv2_set_interrupt_type+0x10>
2ffef68a:	bf00      	nop
2ffef68c:	2fffcbf8 	.word	0x2fffcbf8
2ffef690:	2fff8e97 	.word	0x2fff8e97
2ffef694:	2fffcbfc 	.word	0x2fffcbfc

2ffef698 <gicv2_raise_sgi>:
2ffef698:	b510      	push	{r4, lr}
2ffef69a:	4c18      	ldr	r4, [pc, #96]	; (2ffef6fc <gicv2_raise_sgi+0x64>)
2ffef69c:	6822      	ldr	r2, [r4, #0]
2ffef69e:	b922      	cbnz	r2, 2ffef6aa <gicv2_raise_sgi+0x12>
2ffef6a0:	f240 119f 	movw	r1, #415	; 0x19f
2ffef6a4:	4816      	ldr	r0, [pc, #88]	; (2ffef700 <gicv2_raise_sgi+0x68>)
2ffef6a6:	f008 fb7f 	bl	2fff7da8 <__assert>
2ffef6aa:	2907      	cmp	r1, #7
2ffef6ac:	d902      	bls.n	2ffef6b4 <gicv2_raise_sgi+0x1c>
2ffef6ae:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
2ffef6b2:	e7f7      	b.n	2ffef6a4 <gicv2_raise_sgi+0xc>
2ffef6b4:	6813      	ldr	r3, [r2, #0]
2ffef6b6:	b913      	cbnz	r3, 2ffef6be <gicv2_raise_sgi+0x26>
2ffef6b8:	f240 11a1 	movw	r1, #417	; 0x1a1
2ffef6bc:	e7f2      	b.n	2ffef6a4 <gicv2_raise_sgi+0xc>
2ffef6be:	6893      	ldr	r3, [r2, #8]
2ffef6c0:	b913      	cbnz	r3, 2ffef6c8 <gicv2_raise_sgi+0x30>
2ffef6c2:	f240 11a7 	movw	r1, #423	; 0x1a7
2ffef6c6:	e7ed      	b.n	2ffef6a4 <gicv2_raise_sgi+0xc>
2ffef6c8:	68d2      	ldr	r2, [r2, #12]
2ffef6ca:	4291      	cmp	r1, r2
2ffef6cc:	d302      	bcc.n	2ffef6d4 <gicv2_raise_sgi+0x3c>
2ffef6ce:	f44f 71d4 	mov.w	r1, #424	; 0x1a8
2ffef6d2:	e7e7      	b.n	2ffef6a4 <gicv2_raise_sgi+0xc>
2ffef6d4:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
2ffef6d8:	b913      	cbnz	r3, 2ffef6e0 <gicv2_raise_sgi+0x48>
2ffef6da:	f44f 71d6 	mov.w	r1, #428	; 0x1ac
2ffef6de:	e7e1      	b.n	2ffef6a4 <gicv2_raise_sgi+0xc>
2ffef6e0:	041b      	lsls	r3, r3, #16
2ffef6e2:	f000 000f 	and.w	r0, r0, #15
2ffef6e6:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
2ffef6ea:	4303      	orrs	r3, r0
2ffef6ec:	f3bf 8f4a 	dsb	ishst
2ffef6f0:	6822      	ldr	r2, [r4, #0]
2ffef6f2:	6812      	ldr	r2, [r2, #0]
2ffef6f4:	f8c2 3f00 	str.w	r3, [r2, #3840]	; 0xf00
2ffef6f8:	bd10      	pop	{r4, pc}
2ffef6fa:	bf00      	nop
2ffef6fc:	2fffcbf8 	.word	0x2fffcbf8
2ffef700:	2fff8e97 	.word	0x2fff8e97

2ffef704 <gicv2_set_spi_routing>:
2ffef704:	4b18      	ldr	r3, [pc, #96]	; (2ffef768 <gicv2_set_spi_routing+0x64>)
2ffef706:	b510      	push	{r4, lr}
2ffef708:	681a      	ldr	r2, [r3, #0]
2ffef70a:	b922      	cbnz	r2, 2ffef716 <gicv2_set_spi_routing+0x12>
2ffef70c:	f44f 71e1 	mov.w	r1, #450	; 0x1c2
2ffef710:	4816      	ldr	r0, [pc, #88]	; (2ffef76c <gicv2_set_spi_routing+0x68>)
2ffef712:	f008 fb49 	bl	2fff7da8 <__assert>
2ffef716:	6813      	ldr	r3, [r2, #0]
2ffef718:	b913      	cbnz	r3, 2ffef720 <gicv2_set_spi_routing+0x1c>
2ffef71a:	f240 11c3 	movw	r1, #451	; 0x1c3
2ffef71e:	e7f7      	b.n	2ffef710 <gicv2_set_spi_routing+0xc>
2ffef720:	f1a0 0420 	sub.w	r4, r0, #32
2ffef724:	f5b4 7f77 	cmp.w	r4, #988	; 0x3dc
2ffef728:	d302      	bcc.n	2ffef730 <gicv2_set_spi_routing+0x2c>
2ffef72a:	f240 11c5 	movw	r1, #453	; 0x1c5
2ffef72e:	e7ef      	b.n	2ffef710 <gicv2_set_spi_routing+0xc>
2ffef730:	6894      	ldr	r4, [r2, #8]
2ffef732:	b914      	cbnz	r4, 2ffef73a <gicv2_set_spi_routing+0x36>
2ffef734:	f240 11cb 	movw	r1, #459	; 0x1cb
2ffef738:	e7ea      	b.n	2ffef710 <gicv2_set_spi_routing+0xc>
2ffef73a:	2907      	cmp	r1, #7
2ffef73c:	d902      	bls.n	2ffef744 <gicv2_set_spi_routing+0x40>
2ffef73e:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
2ffef742:	e7e5      	b.n	2ffef710 <gicv2_set_spi_routing+0xc>
2ffef744:	68d2      	ldr	r2, [r2, #12]
2ffef746:	4291      	cmp	r1, r2
2ffef748:	d302      	bcc.n	2ffef750 <gicv2_set_spi_routing+0x4c>
2ffef74a:	f240 11cd 	movw	r1, #461	; 0x1cd
2ffef74e:	e7df      	b.n	2ffef710 <gicv2_set_spi_routing+0xc>
2ffef750:	f854 2021 	ldr.w	r2, [r4, r1, lsl #2]
2ffef754:	b912      	cbnz	r2, 2ffef75c <gicv2_set_spi_routing+0x58>
2ffef756:	f240 11d5 	movw	r1, #469	; 0x1d5
2ffef75a:	e7d9      	b.n	2ffef710 <gicv2_set_spi_routing+0xc>
2ffef75c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
2ffef760:	b2d2      	uxtb	r2, r2
2ffef762:	541a      	strb	r2, [r3, r0]
2ffef764:	bd10      	pop	{r4, pc}
2ffef766:	bf00      	nop
2ffef768:	2fffcbf8 	.word	0x2fffcbf8
2ffef76c:	2fff8e97 	.word	0x2fff8e97

2ffef770 <gicv2_set_pmr>:
2ffef770:	b508      	push	{r3, lr}
2ffef772:	4b0b      	ldr	r3, [pc, #44]	; (2ffef7a0 <gicv2_set_pmr+0x30>)
2ffef774:	681a      	ldr	r2, [r3, #0]
2ffef776:	b922      	cbnz	r2, 2ffef782 <gicv2_set_pmr+0x12>
2ffef778:	f240 2109 	movw	r1, #521	; 0x209
2ffef77c:	4809      	ldr	r0, [pc, #36]	; (2ffef7a4 <gicv2_set_pmr+0x34>)
2ffef77e:	f008 fb13 	bl	2fff7da8 <__assert>
2ffef782:	6852      	ldr	r2, [r2, #4]
2ffef784:	b912      	cbnz	r2, 2ffef78c <gicv2_set_pmr+0x1c>
2ffef786:	f240 210a 	movw	r1, #522	; 0x20a
2ffef78a:	e7f7      	b.n	2ffef77c <gicv2_set_pmr+0xc>
2ffef78c:	6852      	ldr	r2, [r2, #4]
2ffef78e:	f3bf 8f5a 	dmb	ishst
2ffef792:	681b      	ldr	r3, [r3, #0]
2ffef794:	685b      	ldr	r3, [r3, #4]
2ffef796:	6058      	str	r0, [r3, #4]
2ffef798:	f3bf 8f4a 	dsb	ishst
2ffef79c:	4610      	mov	r0, r2
2ffef79e:	bd08      	pop	{r3, pc}
2ffef7a0:	2fffcbf8 	.word	0x2fffcbf8
2ffef7a4:	2fff8e97 	.word	0x2fff8e97

2ffef7a8 <gicv2_interrupt_set_cfg>:
2ffef7a8:	4b03      	ldr	r3, [pc, #12]	; (2ffef7b8 <gicv2_interrupt_set_cfg+0x10>)
2ffef7aa:	460a      	mov	r2, r1
2ffef7ac:	4601      	mov	r1, r0
2ffef7ae:	681b      	ldr	r3, [r3, #0]
2ffef7b0:	6818      	ldr	r0, [r3, #0]
2ffef7b2:	f7ff bcf9 	b.w	2ffef1a8 <gicd_set_icfgr>
2ffef7b6:	bf00      	nop
2ffef7b8:	2fffcbf8 	.word	0x2fffcbf8

2ffef7bc <plat_ic_get_pending_interrupt_id>:
2ffef7bc:	b508      	push	{r3, lr}
2ffef7be:	f7ff fe61 	bl	2ffef484 <gicv2_get_pending_interrupt_id>
2ffef7c2:	f240 33ff 	movw	r3, #1023	; 0x3ff
2ffef7c6:	4298      	cmp	r0, r3
2ffef7c8:	bf08      	it	eq
2ffef7ca:	f04f 30ff 	moveq.w	r0, #4294967295	; 0xffffffff
2ffef7ce:	bd08      	pop	{r3, pc}

2ffef7d0 <plat_ic_acknowledge_interrupt>:
2ffef7d0:	f7ff be74 	b.w	2ffef4bc <gicv2_acknowledge_interrupt>

2ffef7d4 <plat_ic_end_of_interrupt>:
2ffef7d4:	f7ff be84 	b.w	2ffef4e0 <gicv2_end_of_interrupt>

2ffef7d8 <plat_ic_disable_interrupt>:
2ffef7d8:	f7ff beea 	b.w	2ffef5b0 <gicv2_disable_interrupt>

2ffef7dc <plat_ic_set_interrupt_priority>:
2ffef7dc:	f7ff bf06 	b.w	2ffef5ec <gicv2_set_interrupt_priority>

2ffef7e0 <plat_ic_set_priority_mask>:
2ffef7e0:	f7ff bfc6 	b.w	2ffef770 <gicv2_set_pmr>

2ffef7e4 <fdt32_to_cpu>:
2ffef7e4:	ba00      	rev	r0, r0
2ffef7e6:	4770      	bx	lr

2ffef7e8 <enable_gic_interrupt>:
2ffef7e8:	b538      	push	{r3, r4, r5, lr}
2ffef7ea:	4603      	mov	r3, r0
2ffef7ec:	6800      	ldr	r0, [r0, #0]
2ffef7ee:	f7ff fff9 	bl	2ffef7e4 <fdt32_to_cpu>
2ffef7f2:	b340      	cbz	r0, 2ffef846 <enable_gic_interrupt+0x5e>
2ffef7f4:	2801      	cmp	r0, #1
2ffef7f6:	bf0c      	ite	eq
2ffef7f8:	2410      	moveq	r4, #16
2ffef7fa:	2400      	movne	r4, #0
2ffef7fc:	6858      	ldr	r0, [r3, #4]
2ffef7fe:	f7ff fff1 	bl	2ffef7e4 <fdt32_to_cpu>
2ffef802:	4404      	add	r4, r0
2ffef804:	6898      	ldr	r0, [r3, #8]
2ffef806:	f7ff ffed 	bl	2ffef7e4 <fdt32_to_cpu>
2ffef80a:	2803      	cmp	r0, #3
2ffef80c:	f1a4 0320 	sub.w	r3, r4, #32
2ffef810:	bf94      	ite	ls
2ffef812:	2502      	movls	r5, #2
2ffef814:	2500      	movhi	r5, #0
2ffef816:	f5b3 7f77 	cmp.w	r3, #988	; 0x3dc
2ffef81a:	d212      	bcs.n	2ffef842 <enable_gic_interrupt+0x5a>
2ffef81c:	2100      	movs	r1, #0
2ffef81e:	4620      	mov	r0, r4
2ffef820:	f7ff ff04 	bl	2ffef62c <gicv2_set_interrupt_type>
2ffef824:	2110      	movs	r1, #16
2ffef826:	4620      	mov	r0, r4
2ffef828:	f7ff fee0 	bl	2ffef5ec <gicv2_set_interrupt_priority>
2ffef82c:	2100      	movs	r1, #0
2ffef82e:	4620      	mov	r0, r4
2ffef830:	f7ff ff68 	bl	2ffef704 <gicv2_set_spi_routing>
2ffef834:	4620      	mov	r0, r4
2ffef836:	4629      	mov	r1, r5
2ffef838:	f7ff ffb6 	bl	2ffef7a8 <gicv2_interrupt_set_cfg>
2ffef83c:	4620      	mov	r0, r4
2ffef83e:	f7ff fe95 	bl	2ffef56c <gicv2_enable_interrupt>
2ffef842:	4620      	mov	r0, r4
2ffef844:	bd38      	pop	{r3, r4, r5, pc}
2ffef846:	2420      	movs	r4, #32
2ffef848:	e7d8      	b.n	2ffef7fc <enable_gic_interrupt+0x14>

2ffef84a <stm32_gic_pcpu_init>:
2ffef84a:	b508      	push	{r3, lr}
2ffef84c:	f7ff fda8 	bl	2ffef3a0 <gicv2_pcpu_distif_init>
2ffef850:	f007 edf6 	blx	2fff7440 <plat_my_core_pos>
2ffef854:	f7ff fe56 	bl	2ffef504 <gicv2_set_pe_target_mask>
2ffef858:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffef85c:	f7ff bd8a 	b.w	2ffef374 <gicv2_cpuif_enable>

2ffef860 <stm32_gic_init>:
2ffef860:	b570      	push	{r4, r5, r6, lr}
2ffef862:	b086      	sub	sp, #24
2ffef864:	a801      	add	r0, sp, #4
2ffef866:	f006 fd2b 	bl	2fff62c0 <fdt_get_address>
2ffef86a:	b918      	cbnz	r0, 2ffef874 <stm32_gic_init+0x14>
2ffef86c:	f001 fa2a 	bl	2fff0cc4 <console_flush>
2ffef870:	f007 ea5e 	blx	2fff6d30 <do_panic>
2ffef874:	4a19      	ldr	r2, [pc, #100]	; (2ffef8dc <stm32_gic_init+0x7c>)
2ffef876:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2ffef87a:	a802      	add	r0, sp, #8
2ffef87c:	f006 fe0a 	bl	2fff6494 <dt_get_node>
2ffef880:	1e05      	subs	r5, r0, #0
2ffef882:	dbf3      	blt.n	2ffef86c <stm32_gic_init+0xc>
2ffef884:	9b02      	ldr	r3, [sp, #8]
2ffef886:	4629      	mov	r1, r5
2ffef888:	4c15      	ldr	r4, [pc, #84]	; (2ffef8e0 <stm32_gic_init+0x80>)
2ffef88a:	4a16      	ldr	r2, [pc, #88]	; (2ffef8e4 <stm32_gic_init+0x84>)
2ffef88c:	6023      	str	r3, [r4, #0]
2ffef88e:	2300      	movs	r3, #0
2ffef890:	9801      	ldr	r0, [sp, #4]
2ffef892:	f008 f8ec 	bl	2fff7a6e <fdt_getprop>
2ffef896:	2800      	cmp	r0, #0
2ffef898:	d0e8      	beq.n	2ffef86c <stm32_gic_init+0xc>
2ffef89a:	6880      	ldr	r0, [r0, #8]
2ffef89c:	f7ff ffa2 	bl	2ffef7e4 <fdt32_to_cpu>
2ffef8a0:	6060      	str	r0, [r4, #4]
2ffef8a2:	2300      	movs	r3, #0
2ffef8a4:	4a10      	ldr	r2, [pc, #64]	; (2ffef8e8 <stm32_gic_init+0x88>)
2ffef8a6:	4629      	mov	r1, r5
2ffef8a8:	9801      	ldr	r0, [sp, #4]
2ffef8aa:	f008 f8e0 	bl	2fff7a6e <fdt_getprop>
2ffef8ae:	2800      	cmp	r0, #0
2ffef8b0:	d0dc      	beq.n	2ffef86c <stm32_gic_init+0xc>
2ffef8b2:	6800      	ldr	r0, [r0, #0]
2ffef8b4:	4e0d      	ldr	r6, [pc, #52]	; (2ffef8ec <stm32_gic_init+0x8c>)
2ffef8b6:	f7ff ff95 	bl	2ffef7e4 <fdt32_to_cpu>
2ffef8ba:	4629      	mov	r1, r5
2ffef8bc:	6030      	str	r0, [r6, #0]
2ffef8be:	9801      	ldr	r0, [sp, #4]
2ffef8c0:	f008 f8e6 	bl	2fff7a90 <fdt_get_phandle>
2ffef8c4:	6070      	str	r0, [r6, #4]
2ffef8c6:	2800      	cmp	r0, #0
2ffef8c8:	d0d0      	beq.n	2ffef86c <stm32_gic_init+0xc>
2ffef8ca:	4620      	mov	r0, r4
2ffef8cc:	f7ff fda8 	bl	2ffef420 <gicv2_driver_init>
2ffef8d0:	f7ff fd84 	bl	2ffef3dc <gicv2_distif_init>
2ffef8d4:	f7ff ffb9 	bl	2ffef84a <stm32_gic_pcpu_init>
2ffef8d8:	b006      	add	sp, #24
2ffef8da:	bd70      	pop	{r4, r5, r6, pc}
2ffef8dc:	2fff8efe 	.word	0x2fff8efe
2ffef8e0:	2fffb1ec 	.word	0x2fffb1ec
2ffef8e4:	2fff8b39 	.word	0x2fff8b39
2ffef8e8:	2fff8f10 	.word	0x2fff8f10
2ffef8ec:	2fffcc00 	.word	0x2fffcc00

2ffef8f0 <stm32_gic_enable_spi>:
2ffef8f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
2ffef8f4:	b087      	sub	sp, #28
2ffef8f6:	4606      	mov	r6, r0
2ffef8f8:	a802      	add	r0, sp, #8
2ffef8fa:	460c      	mov	r4, r1
2ffef8fc:	f006 fce0 	bl	2fff62c0 <fdt_get_address>
2ffef900:	b918      	cbnz	r0, 2ffef90a <stm32_gic_enable_spi+0x1a>
2ffef902:	f001 f9df 	bl	2fff0cc4 <console_flush>
2ffef906:	f007 ea14 	blx	2fff6d30 <do_panic>
2ffef90a:	4a42      	ldr	r2, [pc, #264]	; (2ffefa14 <stm32_gic_enable_spi+0x124>)
2ffef90c:	2300      	movs	r3, #0
2ffef90e:	9802      	ldr	r0, [sp, #8]
2ffef910:	4631      	mov	r1, r6
2ffef912:	f008 f8ac 	bl	2fff7a6e <fdt_getprop>
2ffef916:	b130      	cbz	r0, 2ffef926 <stm32_gic_enable_spi+0x36>
2ffef918:	4b3f      	ldr	r3, [pc, #252]	; (2ffefa18 <stm32_gic_enable_spi+0x128>)
2ffef91a:	6800      	ldr	r0, [r0, #0]
2ffef91c:	685b      	ldr	r3, [r3, #4]
2ffef91e:	f7ff ff61 	bl	2ffef7e4 <fdt32_to_cpu>
2ffef922:	4283      	cmp	r3, r0
2ffef924:	d173      	bne.n	2ffefa0e <stm32_gic_enable_spi+0x11e>
2ffef926:	b37c      	cbz	r4, 2ffef988 <stm32_gic_enable_spi+0x98>
2ffef928:	4630      	mov	r0, r6
2ffef92a:	f006 fcd5 	bl	2fff62d8 <fdt_get_status>
2ffef92e:	2802      	cmp	r0, #2
2ffef930:	4623      	mov	r3, r4
2ffef932:	9802      	ldr	r0, [sp, #8]
2ffef934:	4631      	mov	r1, r6
2ffef936:	bf0c      	ite	eq
2ffef938:	4a38      	ldreq	r2, [pc, #224]	; (2ffefa1c <stm32_gic_enable_spi+0x12c>)
2ffef93a:	4a39      	ldrne	r2, [pc, #228]	; (2ffefa20 <stm32_gic_enable_spi+0x130>)
2ffef93c:	f008 f9cd 	bl	2fff7cda <fdt_stringlist_search>
2ffef940:	2800      	cmp	r0, #0
2ffef942:	4604      	mov	r4, r0
2ffef944:	db1c      	blt.n	2ffef980 <stm32_gic_enable_spi+0x90>
2ffef946:	4605      	mov	r5, r0
2ffef948:	f10d 0307 	add.w	r3, sp, #7
2ffef94c:	aa03      	add	r2, sp, #12
2ffef94e:	a904      	add	r1, sp, #16
2ffef950:	4630      	mov	r0, r6
2ffef952:	f006 fcf3 	bl	2fff633c <fdt_get_interrupt>
2ffef956:	1e04      	subs	r4, r0, #0
2ffef958:	db12      	blt.n	2ffef980 <stm32_gic_enable_spi+0x90>
2ffef95a:	9f03      	ldr	r7, [sp, #12]
2ffef95c:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2ffef960:	9b04      	ldr	r3, [sp, #16]
2ffef962:	2600      	movs	r6, #0
2ffef964:	f027 0703 	bic.w	r7, r7, #3
2ffef968:	441f      	add	r7, r3
2ffef96a:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 2ffefa18 <stm32_gic_enable_spi+0x128>
2ffef96e:	f8df 90b4 	ldr.w	r9, [pc, #180]	; 2ffefa24 <stm32_gic_enable_spi+0x134>
2ffef972:	9b04      	ldr	r3, [sp, #16]
2ffef974:	42bb      	cmp	r3, r7
2ffef976:	d203      	bcs.n	2ffef980 <stm32_gic_enable_spi+0x90>
2ffef978:	42b5      	cmp	r5, r6
2ffef97a:	da08      	bge.n	2ffef98e <stm32_gic_enable_spi+0x9e>
2ffef97c:	1c6a      	adds	r2, r5, #1
2ffef97e:	d006      	beq.n	2ffef98e <stm32_gic_enable_spi+0x9e>
2ffef980:	4620      	mov	r0, r4
2ffef982:	b007      	add	sp, #28
2ffef984:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2ffef988:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
2ffef98c:	e7dc      	b.n	2ffef948 <stm32_gic_enable_spi+0x58>
2ffef98e:	f89d 2007 	ldrb.w	r2, [sp, #7]
2ffef992:	b942      	cbnz	r2, 2ffef9a6 <stm32_gic_enable_spi+0xb6>
2ffef994:	1c68      	adds	r0, r5, #1
2ffef996:	d001      	beq.n	2ffef99c <stm32_gic_enable_spi+0xac>
2ffef998:	42b5      	cmp	r5, r6
2ffef99a:	d112      	bne.n	2ffef9c2 <stm32_gic_enable_spi+0xd2>
2ffef99c:	4618      	mov	r0, r3
2ffef99e:	f7ff ff23 	bl	2ffef7e8 <enable_gic_interrupt>
2ffef9a2:	4604      	mov	r4, r0
2ffef9a4:	e00d      	b.n	2ffef9c2 <stm32_gic_enable_spi+0xd2>
2ffef9a6:	6818      	ldr	r0, [r3, #0]
2ffef9a8:	f7ff ff1c 	bl	2ffef7e4 <fdt32_to_cpu>
2ffef9ac:	f8d8 2004 	ldr.w	r2, [r8, #4]
2ffef9b0:	4290      	cmp	r0, r2
2ffef9b2:	d10e      	bne.n	2ffef9d2 <stm32_gic_enable_spi+0xe2>
2ffef9b4:	1c69      	adds	r1, r5, #1
2ffef9b6:	f103 0004 	add.w	r0, r3, #4
2ffef9ba:	9004      	str	r0, [sp, #16]
2ffef9bc:	d0ef      	beq.n	2ffef99e <stm32_gic_enable_spi+0xae>
2ffef9be:	42b5      	cmp	r5, r6
2ffef9c0:	d0ed      	beq.n	2ffef99e <stm32_gic_enable_spi+0xae>
2ffef9c2:	f8d8 2000 	ldr.w	r2, [r8]
2ffef9c6:	9b04      	ldr	r3, [sp, #16]
2ffef9c8:	eb03 0382 	add.w	r3, r3, r2, lsl #2
2ffef9cc:	9304      	str	r3, [sp, #16]
2ffef9ce:	3601      	adds	r6, #1
2ffef9d0:	e7cf      	b.n	2ffef972 <stm32_gic_enable_spi+0x82>
2ffef9d2:	a805      	add	r0, sp, #20
2ffef9d4:	f006 fc74 	bl	2fff62c0 <fdt_get_address>
2ffef9d8:	2800      	cmp	r0, #0
2ffef9da:	d092      	beq.n	2ffef902 <stm32_gic_enable_spi+0x12>
2ffef9dc:	9b04      	ldr	r3, [sp, #16]
2ffef9de:	6818      	ldr	r0, [r3, #0]
2ffef9e0:	f7ff ff00 	bl	2ffef7e4 <fdt32_to_cpu>
2ffef9e4:	4601      	mov	r1, r0
2ffef9e6:	9805      	ldr	r0, [sp, #20]
2ffef9e8:	f008 f933 	bl	2fff7c52 <fdt_node_offset_by_phandle>
2ffef9ec:	1e01      	subs	r1, r0, #0
2ffef9ee:	db88      	blt.n	2ffef902 <stm32_gic_enable_spi+0x12>
2ffef9f0:	9805      	ldr	r0, [sp, #20]
2ffef9f2:	2300      	movs	r3, #0
2ffef9f4:	464a      	mov	r2, r9
2ffef9f6:	f008 f83a 	bl	2fff7a6e <fdt_getprop>
2ffef9fa:	2800      	cmp	r0, #0
2ffef9fc:	d081      	beq.n	2ffef902 <stm32_gic_enable_spi+0x12>
2ffef9fe:	6800      	ldr	r0, [r0, #0]
2ffefa00:	f7ff fef0 	bl	2ffef7e4 <fdt32_to_cpu>
2ffefa04:	9b04      	ldr	r3, [sp, #16]
2ffefa06:	3001      	adds	r0, #1
2ffefa08:	eb03 0380 	add.w	r3, r3, r0, lsl #2
2ffefa0c:	e7de      	b.n	2ffef9cc <stm32_gic_enable_spi+0xdc>
2ffefa0e:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2ffefa12:	e7b5      	b.n	2ffef980 <stm32_gic_enable_spi+0x90>
2ffefa14:	2fff8ed6 	.word	0x2fff8ed6
2ffefa18:	2fffcc00 	.word	0x2fffcc00
2ffefa1c:	2fff8eee 	.word	0x2fff8eee
2ffefa20:	2fff8ee7 	.word	0x2fff8ee7
2ffefa24:	2fff8f10 	.word	0x2fff8f10

2ffefa28 <plat_get_target_pwr_state>:
2ffefa28:	b508      	push	{r3, lr}
2ffefa2a:	b91a      	cbnz	r2, 2ffefa34 <plat_get_target_pwr_state+0xc>
2ffefa2c:	4806      	ldr	r0, [pc, #24]	; (2ffefa48 <plat_get_target_pwr_state+0x20>)
2ffefa2e:	219d      	movs	r1, #157	; 0x9d
2ffefa30:	f008 f9ba 	bl	2fff7da8 <__assert>
2ffefa34:	440a      	add	r2, r1
2ffefa36:	2002      	movs	r0, #2
2ffefa38:	f811 3b01 	ldrb.w	r3, [r1], #1
2ffefa3c:	4298      	cmp	r0, r3
2ffefa3e:	bf28      	it	cs
2ffefa40:	4618      	movcs	r0, r3
2ffefa42:	428a      	cmp	r2, r1
2ffefa44:	d1f8      	bne.n	2ffefa38 <plat_get_target_pwr_state+0x10>
2ffefa46:	bd08      	pop	{r3, pc}
2ffefa48:	2fff8f50 	.word	0x2fff8f50

2ffefa4c <bsec_main>:
2ffefa4c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2ffefa4e:	461e      	mov	r6, r3
2ffefa50:	2300      	movs	r3, #0
2ffefa52:	4604      	mov	r4, r0
2ffefa54:	9301      	str	r3, [sp, #4]
2ffefa56:	1f43      	subs	r3, r0, #5
2ffefa58:	2b01      	cmp	r3, #1
2ffefa5a:	460d      	mov	r5, r1
2ffefa5c:	4617      	mov	r7, r2
2ffefa5e:	d802      	bhi.n	2ffefa66 <bsec_main+0x1a>
2ffefa60:	f06f 0402 	mvn.w	r4, #2
2ffefa64:	e061      	b.n	2ffefb2a <bsec_main+0xde>
2ffefa66:	4608      	mov	r0, r1
2ffefa68:	f002 ffba 	bl	2fff29e0 <bsec_check_nsec_access_rights>
2ffefa6c:	2800      	cmp	r0, #0
2ffefa6e:	d1f7      	bne.n	2ffefa60 <bsec_main+0x14>
2ffefa70:	3c01      	subs	r4, #1
2ffefa72:	2c06      	cmp	r4, #6
2ffefa74:	d8f4      	bhi.n	2ffefa60 <bsec_main+0x14>
2ffefa76:	a301      	add	r3, pc, #4	; (adr r3, 2ffefa7c <bsec_main+0x30>)
2ffefa78:	f853 f024 	ldr.w	pc, [r3, r4, lsl #2]
2ffefa7c:	2ffefa99 	.word	0x2ffefa99
2ffefa80:	2ffefaad 	.word	0x2ffefaad
2ffefa84:	2ffefb31 	.word	0x2ffefb31
2ffefa88:	2ffefb3f 	.word	0x2ffefb3f
2ffefa8c:	2ffefa61 	.word	0x2ffefa61
2ffefa90:	2ffefa61 	.word	0x2ffefa61
2ffefa94:	2ffefb6b 	.word	0x2ffefb6b
2ffefa98:	4629      	mov	r1, r5
2ffefa9a:	4630      	mov	r0, r6
2ffefa9c:	f002 fd30 	bl	2fff2500 <bsec_read_otp>
2ffefaa0:	4604      	mov	r4, r0
2ffefaa2:	2800      	cmp	r0, #0
2ffefaa4:	d041      	beq.n	2ffefb2a <bsec_main+0xde>
2ffefaa6:	f06f 0401 	mvn.w	r4, #1
2ffefaaa:	e03e      	b.n	2ffefb2a <bsec_main+0xde>
2ffefaac:	2d08      	cmp	r5, #8
2ffefaae:	f04f 0300 	mov.w	r3, #0
2ffefab2:	6033      	str	r3, [r6, #0]
2ffefab4:	d10f      	bne.n	2ffefad6 <bsec_main+0x8a>
2ffefab6:	4629      	mov	r1, r5
2ffefab8:	a801      	add	r0, sp, #4
2ffefaba:	f002 fd21 	bl	2fff2500 <bsec_read_otp>
2ffefabe:	4604      	mov	r4, r0
2ffefac0:	2800      	cmp	r0, #0
2ffefac2:	d1f0      	bne.n	2ffefaa6 <bsec_main+0x5a>
2ffefac4:	9b01      	ldr	r3, [sp, #4]
2ffefac6:	f407 7240 	and.w	r2, r7, #768	; 0x300
2ffefaca:	f413 7340 	ands.w	r3, r3, #768	; 0x300
2ffeface:	d107      	bne.n	2ffefae0 <bsec_main+0x94>
2ffefad0:	b96a      	cbnz	r2, 2ffefaee <bsec_main+0xa2>
2ffefad2:	2300      	movs	r3, #0
2ffefad4:	6033      	str	r3, [r6, #0]
2ffefad6:	4629      	mov	r1, r5
2ffefad8:	4638      	mov	r0, r7
2ffefada:	f002 ff13 	bl	2fff2904 <bsec_program_otp>
2ffefade:	e7df      	b.n	2ffefaa0 <bsec_main+0x54>
2ffefae0:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
2ffefae4:	d1f4      	bne.n	2ffefad0 <bsec_main+0x84>
2ffefae6:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
2ffefaea:	d1f1      	bne.n	2ffefad0 <bsec_main+0x84>
2ffefaec:	e7f1      	b.n	2ffefad2 <bsec_main+0x86>
2ffefaee:	05bb      	lsls	r3, r7, #22
2ffefaf0:	d419      	bmi.n	2ffefb26 <bsec_main+0xda>
2ffefaf2:	4b20      	ldr	r3, [pc, #128]	; (2ffefb74 <bsec_main+0x128>)
2ffefaf4:	2118      	movs	r1, #24
2ffefaf6:	f8d3 0094 	ldr.w	r0, [r3, #148]	; 0x94
2ffefafa:	f103 53da 	add.w	r3, r3, #457179136	; 0x1b400000
2ffefafe:	f503 23ca 	add.w	r3, r3, #413696	; 0x65000
2ffefb02:	f503 639b 	add.w	r3, r3, #1240	; 0x4d8
2ffefb06:	6003      	str	r3, [r0, #0]
2ffefb08:	f007 e9ae 	blx	2fff6e68 <flush_dcache_range>
2ffefb0c:	f005 fffa 	bl	2fff5b04 <dt_pmic_status>
2ffefb10:	2800      	cmp	r0, #0
2ffefb12:	dd06      	ble.n	2ffefb22 <bsec_main+0xd6>
2ffefb14:	f006 f8d6 	bl	2fff5cc4 <initialize_pmic>
2ffefb18:	f001 fa38 	bl	2fff0f8c <stm32mp_get_cpu_supply_name>
2ffefb1c:	b118      	cbz	r0, 2ffefb26 <bsec_main+0xda>
2ffefb1e:	f006 fa27 	bl	2fff5f70 <stpmic1_regulator_mask_reset_set>
2ffefb22:	2301      	movs	r3, #1
2ffefb24:	e7d6      	b.n	2ffefad4 <bsec_main+0x88>
2ffefb26:	2302      	movs	r3, #2
2ffefb28:	6033      	str	r3, [r6, #0]
2ffefb2a:	4620      	mov	r0, r4
2ffefb2c:	b003      	add	sp, #12
2ffefb2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffefb30:	4629      	mov	r1, r5
2ffefb32:	4638      	mov	r0, r7
2ffefb34:	2300      	movs	r3, #0
2ffefb36:	6033      	str	r3, [r6, #0]
2ffefb38:	f002 fe8a 	bl	2fff2850 <bsec_write_otp>
2ffefb3c:	e7b0      	b.n	2ffefaa0 <bsec_main+0x54>
2ffefb3e:	2300      	movs	r3, #0
2ffefb40:	4629      	mov	r1, r5
2ffefb42:	6033      	str	r3, [r6, #0]
2ffefb44:	a801      	add	r0, sp, #4
2ffefb46:	f002 fcdb 	bl	2fff2500 <bsec_read_otp>
2ffefb4a:	2800      	cmp	r0, #0
2ffefb4c:	d1ab      	bne.n	2ffefaa6 <bsec_main+0x5a>
2ffefb4e:	4628      	mov	r0, r5
2ffefb50:	f002 fd96 	bl	2fff2680 <bsec_shadow_register>
2ffefb54:	2800      	cmp	r0, #0
2ffefb56:	d1a6      	bne.n	2ffefaa6 <bsec_main+0x5a>
2ffefb58:	4629      	mov	r1, r5
2ffefb5a:	4630      	mov	r0, r6
2ffefb5c:	f002 fcd0 	bl	2fff2500 <bsec_read_otp>
2ffefb60:	2800      	cmp	r0, #0
2ffefb62:	d1a0      	bne.n	2ffefaa6 <bsec_main+0x5a>
2ffefb64:	9801      	ldr	r0, [sp, #4]
2ffefb66:	4629      	mov	r1, r5
2ffefb68:	e7e6      	b.n	2ffefb38 <bsec_main+0xec>
2ffefb6a:	4628      	mov	r0, r5
2ffefb6c:	f002 fd14 	bl	2fff2598 <bsec_permanent_lock_otp>
2ffefb70:	e796      	b.n	2ffefaa0 <bsec_main+0x54>
2ffefb72:	bf00      	nop
2ffefb74:	2ffc0078 	.word	0x2ffc0078

2ffefb78 <pm_domain_scv_handler>:
2ffefb78:	3100      	adds	r1, #0
2ffefb7a:	bf18      	it	ne
2ffefb7c:	2101      	movne	r1, #1
2ffefb7e:	b508      	push	{r3, lr}
2ffefb80:	f7fe feac 	bl	2ffee8dc <stm32mp1_set_pm_domain_state>
2ffefb84:	2800      	cmp	r0, #0
2ffefb86:	bfb4      	ite	lt
2ffefb88:	f06f 0001 	mvnlt.w	r0, #1
2ffefb8c:	2000      	movge	r0, #0
2ffefb8e:	bd08      	pop	{r3, pc}

2ffefb90 <pwr_scv_handler>:
2ffefb90:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2ffefb94:	4681      	mov	r9, r0
2ffefb96:	f421 767f 	bic.w	r6, r1, #1020	; 0x3fc
2ffefb9a:	460c      	mov	r4, r1
2ffefb9c:	f026 0603 	bic.w	r6, r6, #3
2ffefba0:	4615      	mov	r5, r2
2ffefba2:	b12e      	cbz	r6, 2ffefbb0 <pwr_scv_handler+0x20>
2ffefba4:	f001 f9a6 	bl	2fff0ef4 <stm32mp_pwr_base>
2ffefba8:	4286      	cmp	r6, r0
2ffefbaa:	d12f      	bne.n	2ffefc0c <pwr_scv_handler+0x7c>
2ffefbac:	f3c4 0409 	ubfx	r4, r4, #0, #10
2ffefbb0:	2c20      	cmp	r4, #32
2ffefbb2:	d01c      	beq.n	2ffefbee <pwr_scv_handler+0x5e>
2ffefbb4:	2c28      	cmp	r4, #40	; 0x28
2ffefbb6:	d003      	beq.n	2ffefbc0 <pwr_scv_handler+0x30>
2ffefbb8:	2c0c      	cmp	r4, #12
2ffefbba:	d121      	bne.n	2ffefc00 <pwr_scv_handler+0x70>
2ffefbbc:	4f15      	ldr	r7, [pc, #84]	; (2ffefc14 <pwr_scv_handler+0x84>)
2ffefbbe:	e000      	b.n	2ffefbc2 <pwr_scv_handler+0x32>
2ffefbc0:	273f      	movs	r7, #63	; 0x3f
2ffefbc2:	403d      	ands	r5, r7
2ffefbc4:	f001 f996 	bl	2fff0ef4 <stm32mp_pwr_base>
2ffefbc8:	1826      	adds	r6, r4, r0
2ffefbca:	4680      	mov	r8, r0
2ffefbcc:	f001 f9a2 	bl	2fff0f14 <stm32mp_pwr_regs_lock>
2ffefbd0:	f1b9 0f02 	cmp.w	r9, #2
2ffefbd4:	d00d      	beq.n	2ffefbf2 <pwr_scv_handler+0x62>
2ffefbd6:	f1b9 0f03 	cmp.w	r9, #3
2ffefbda:	d013      	beq.n	2ffefc04 <pwr_scv_handler+0x74>
2ffefbdc:	f1b9 0f01 	cmp.w	r9, #1
2ffefbe0:	d10c      	bne.n	2ffefbfc <pwr_scv_handler+0x6c>
2ffefbe2:	6833      	ldr	r3, [r6, #0]
2ffefbe4:	ea23 0307 	bic.w	r3, r3, r7
2ffefbe8:	431d      	orrs	r5, r3
2ffefbea:	6035      	str	r5, [r6, #0]
2ffefbec:	e006      	b.n	2ffefbfc <pwr_scv_handler+0x6c>
2ffefbee:	4f0a      	ldr	r7, [pc, #40]	; (2ffefc18 <pwr_scv_handler+0x88>)
2ffefbf0:	e7e7      	b.n	2ffefbc2 <pwr_scv_handler+0x32>
2ffefbf2:	f854 3008 	ldr.w	r3, [r4, r8]
2ffefbf6:	431d      	orrs	r5, r3
2ffefbf8:	f844 5008 	str.w	r5, [r4, r8]
2ffefbfc:	f001 f996 	bl	2fff0f2c <stm32mp_pwr_regs_unlock>
2ffefc00:	2000      	movs	r0, #0
2ffefc02:	e005      	b.n	2ffefc10 <pwr_scv_handler+0x80>
2ffefc04:	6833      	ldr	r3, [r6, #0]
2ffefc06:	ea23 0505 	bic.w	r5, r3, r5
2ffefc0a:	e7ee      	b.n	2ffefbea <pwr_scv_handler+0x5a>
2ffefc0c:	f06f 0002 	mvn.w	r0, #2
2ffefc10:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2ffefc14:	51000300 	.word	0x51000300
2ffefc18:	0fff3f3f 	.word	0x0fff3f3f

2ffefc1c <rcc_scv_handler>:
2ffefc1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffefc1e:	4607      	mov	r7, r0
2ffefc20:	f421 667f 	bic.w	r6, r1, #4080	; 0xff0
2ffefc24:	460c      	mov	r4, r1
2ffefc26:	f026 060f 	bic.w	r6, r6, #15
2ffefc2a:	4615      	mov	r5, r2
2ffefc2c:	b12e      	cbz	r6, 2ffefc3a <rcc_scv_handler+0x1e>
2ffefc2e:	f001 f965 	bl	2fff0efc <stm32mp_rcc_base>
2ffefc32:	4286      	cmp	r6, r0
2ffefc34:	d120      	bne.n	2ffefc78 <rcc_scv_handler+0x5c>
2ffefc36:	f3c4 040b 	ubfx	r4, r4, #0, #12
2ffefc3a:	f240 4314 	movw	r3, #1044	; 0x414
2ffefc3e:	429c      	cmp	r4, r3
2ffefc40:	d002      	beq.n	2ffefc48 <rcc_scv_handler+0x2c>
2ffefc42:	f5b4 6f83 	cmp.w	r4, #1048	; 0x418
2ffefc46:	d117      	bne.n	2ffefc78 <rcc_scv_handler+0x5c>
2ffefc48:	f001 f958 	bl	2fff0efc <stm32mp_rcc_base>
2ffefc4c:	4420      	add	r0, r4
2ffefc4e:	2f02      	cmp	r7, #2
2ffefc50:	f405 1180 	and.w	r1, r5, #1048576	; 0x100000
2ffefc54:	d00a      	beq.n	2ffefc6c <rcc_scv_handler+0x50>
2ffefc56:	2f03      	cmp	r7, #3
2ffefc58:	d00b      	beq.n	2ffefc72 <rcc_scv_handler+0x56>
2ffefc5a:	2f01      	cmp	r7, #1
2ffefc5c:	d104      	bne.n	2ffefc68 <rcc_scv_handler+0x4c>
2ffefc5e:	460a      	mov	r2, r1
2ffefc60:	f44f 1180 	mov.w	r1, #1048576	; 0x100000
2ffefc64:	f006 fd4e 	bl	2fff6704 <stm32mp_mmio_clrsetbits_32_shregs>
2ffefc68:	2000      	movs	r0, #0
2ffefc6a:	e007      	b.n	2ffefc7c <rcc_scv_handler+0x60>
2ffefc6c:	f006 fd66 	bl	2fff673c <stm32mp_mmio_setbits_32_shregs>
2ffefc70:	e7fa      	b.n	2ffefc68 <rcc_scv_handler+0x4c>
2ffefc72:	f006 fd56 	bl	2fff6722 <stm32mp_mmio_clrbits_32_shregs>
2ffefc76:	e7f7      	b.n	2ffefc68 <rcc_scv_handler+0x4c>
2ffefc78:	f06f 0002 	mvn.w	r0, #2
2ffefc7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

2ffefc7e <rcc_cal_scv_handler>:
2ffefc7e:	2801      	cmp	r0, #1
2ffefc80:	b508      	push	{r3, lr}
2ffefc82:	d004      	beq.n	2ffefc8e <rcc_cal_scv_handler+0x10>
2ffefc84:	2804      	cmp	r0, #4
2ffefc86:	d00a      	beq.n	2ffefc9e <rcc_cal_scv_handler+0x20>
2ffefc88:	f06f 0002 	mvn.w	r0, #2
2ffefc8c:	e004      	b.n	2ffefc98 <rcc_cal_scv_handler+0x1a>
2ffefc8e:	f7fd f9d5 	bl	2ffed03c <stm32mp1_calib_start_csi_cal>
2ffefc92:	b110      	cbz	r0, 2ffefc9a <rcc_cal_scv_handler+0x1c>
2ffefc94:	f06f 0001 	mvn.w	r0, #1
2ffefc98:	bd08      	pop	{r3, pc}
2ffefc9a:	2000      	movs	r0, #0
2ffefc9c:	e7fc      	b.n	2ffefc98 <rcc_cal_scv_handler+0x1a>
2ffefc9e:	f7fd f9bf 	bl	2ffed020 <stm32mp1_calib_start_hsi_cal>
2ffefca2:	e7f6      	b.n	2ffefc92 <rcc_cal_scv_handler+0x14>

2ffefca4 <rcc_opp_scv_handler>:
2ffefca4:	b573      	push	{r0, r1, r4, r5, r6, lr}
2ffefca6:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
2ffefcaa:	4616      	mov	r6, r2
2ffefcac:	4604      	mov	r4, r0
2ffefcae:	fbb1 f1f5 	udiv	r1, r1, r5
2ffefcb2:	9101      	str	r1, [sp, #4]
2ffefcb4:	b120      	cbz	r0, 2ffefcc0 <rcc_opp_scv_handler+0x1c>
2ffefcb6:	2801      	cmp	r0, #1
2ffefcb8:	d00b      	beq.n	2ffefcd2 <rcc_opp_scv_handler+0x2e>
2ffefcba:	f06f 0402 	mvn.w	r4, #2
2ffefcbe:	e005      	b.n	2ffefccc <rcc_opp_scv_handler+0x28>
2ffefcc0:	4608      	mov	r0, r1
2ffefcc2:	f003 fe1f 	bl	2fff3904 <stm32mp1_set_opp_khz>
2ffefcc6:	b108      	cbz	r0, 2ffefccc <rcc_opp_scv_handler+0x28>
2ffefcc8:	f06f 0401 	mvn.w	r4, #1
2ffefccc:	4620      	mov	r0, r4
2ffefcce:	b002      	add	sp, #8
2ffefcd0:	bd70      	pop	{r4, r5, r6, pc}
2ffefcd2:	a801      	add	r0, sp, #4
2ffefcd4:	f003 fdfa 	bl	2fff38cc <stm32mp1_round_opp_khz>
2ffefcd8:	2800      	cmp	r0, #0
2ffefcda:	d1f5      	bne.n	2ffefcc8 <rcc_opp_scv_handler+0x24>
2ffefcdc:	9b01      	ldr	r3, [sp, #4]
2ffefcde:	4a03      	ldr	r2, [pc, #12]	; (2ffefcec <rcc_opp_scv_handler+0x48>)
2ffefce0:	4293      	cmp	r3, r2
2ffefce2:	d8f1      	bhi.n	2ffefcc8 <rcc_opp_scv_handler+0x24>
2ffefce4:	435d      	muls	r5, r3
2ffefce6:	4604      	mov	r4, r0
2ffefce8:	6035      	str	r5, [r6, #0]
2ffefcea:	e7ef      	b.n	2ffefccc <rcc_opp_scv_handler+0x28>
2ffefcec:	00418937 	.word	0x00418937

2ffefcf0 <stm32mp1_svc_setup>:
2ffefcf0:	2000      	movs	r0, #0
2ffefcf2:	4770      	bx	lr

2ffefcf4 <stm32mp1_svc_smc_handler>:
2ffefcf4:	b573      	push	{r0, r1, r4, r5, r6, lr}
2ffefcf6:	4605      	mov	r5, r0
2ffefcf8:	9e08      	ldr	r6, [sp, #32]
2ffefcfa:	4608      	mov	r0, r1
2ffefcfc:	4611      	mov	r1, r2
2ffefcfe:	461a      	mov	r2, r3
2ffefd00:	4b36      	ldr	r3, [pc, #216]	; (2ffefddc <stm32mp1_svc_smc_handler+0xe8>)
2ffefd02:	2400      	movs	r4, #0
2ffefd04:	9401      	str	r4, [sp, #4]
2ffefd06:	429d      	cmp	r5, r3
2ffefd08:	d046      	beq.n	2ffefd98 <stm32mp1_svc_smc_handler+0xa4>
2ffefd0a:	d819      	bhi.n	2ffefd40 <stm32mp1_svc_smc_handler+0x4c>
2ffefd0c:	3b07      	subs	r3, #7
2ffefd0e:	429d      	cmp	r5, r3
2ffefd10:	d03f      	beq.n	2ffefd92 <stm32mp1_svc_smc_handler+0x9e>
2ffefd12:	d80c      	bhi.n	2ffefd2e <stm32mp1_svc_smc_handler+0x3a>
2ffefd14:	3b02      	subs	r3, #2
2ffefd16:	429d      	cmp	r5, r3
2ffefd18:	d037      	beq.n	2ffefd8a <stm32mp1_svc_smc_handler+0x96>
2ffefd1a:	3301      	adds	r3, #1
2ffefd1c:	429d      	cmp	r5, r3
2ffefd1e:	d03f      	beq.n	2ffefda0 <stm32mp1_svc_smc_handler+0xac>
2ffefd20:	482f      	ldr	r0, [pc, #188]	; (2ffefde0 <stm32mp1_svc_smc_handler+0xec>)
2ffefd22:	4629      	mov	r1, r5
2ffefd24:	f000 ff2c 	bl	2fff0b80 <tf_log>
2ffefd28:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffefd2c:	e02f      	b.n	2ffefd8e <stm32mp1_svc_smc_handler+0x9a>
2ffefd2e:	4b2d      	ldr	r3, [pc, #180]	; (2ffefde4 <stm32mp1_svc_smc_handler+0xf0>)
2ffefd30:	429d      	cmp	r5, r3
2ffefd32:	d026      	beq.n	2ffefd82 <stm32mp1_svc_smc_handler+0x8e>
2ffefd34:	3305      	adds	r3, #5
2ffefd36:	429d      	cmp	r5, r3
2ffefd38:	d1f2      	bne.n	2ffefd20 <stm32mp1_svc_smc_handler+0x2c>
2ffefd3a:	f7ff ff1d 	bl	2ffefb78 <pm_domain_scv_handler>
2ffefd3e:	e026      	b.n	2ffefd8e <stm32mp1_svc_smc_handler+0x9a>
2ffefd40:	4b29      	ldr	r3, [pc, #164]	; (2ffefde8 <stm32mp1_svc_smc_handler+0xf4>)
2ffefd42:	429d      	cmp	r5, r3
2ffefd44:	d033      	beq.n	2ffefdae <stm32mp1_svc_smc_handler+0xba>
2ffefd46:	d80b      	bhi.n	2ffefd60 <stm32mp1_svc_smc_handler+0x6c>
2ffefd48:	f6a3 73f7 	subw	r3, r3, #4087	; 0xff7
2ffefd4c:	429d      	cmp	r5, r3
2ffefd4e:	d02a      	beq.n	2ffefda6 <stm32mp1_svc_smc_handler+0xb2>
2ffefd50:	f603 73f6 	addw	r3, r3, #4086	; 0xff6
2ffefd54:	429d      	cmp	r5, r3
2ffefd56:	d1e3      	bne.n	2ffefd20 <stm32mp1_svc_smc_handler+0x2c>
2ffefd58:	4620      	mov	r0, r4
2ffefd5a:	f000 fcaf 	bl	2fff06bc <scmi_smt_fastcall_smc_entry>
2ffefd5e:	e024      	b.n	2ffefdaa <stm32mp1_svc_smc_handler+0xb6>
2ffefd60:	4b22      	ldr	r3, [pc, #136]	; (2ffefdec <stm32mp1_svc_smc_handler+0xf8>)
2ffefd62:	429d      	cmp	r5, r3
2ffefd64:	d025      	beq.n	2ffefdb2 <stm32mp1_svc_smc_handler+0xbe>
2ffefd66:	3302      	adds	r3, #2
2ffefd68:	429d      	cmp	r5, r3
2ffefd6a:	d004      	beq.n	2ffefd76 <stm32mp1_svc_smc_handler+0x82>
2ffefd6c:	3b03      	subs	r3, #3
2ffefd6e:	429d      	cmp	r5, r3
2ffefd70:	d1d6      	bne.n	2ffefd20 <stm32mp1_svc_smc_handler+0x2c>
2ffefd72:	200d      	movs	r0, #13
2ffefd74:	e00b      	b.n	2ffefd8e <stm32mp1_svc_smc_handler+0x9a>
2ffefd76:	4620      	mov	r0, r4
2ffefd78:	2301      	movs	r3, #1
2ffefd7a:	9301      	str	r3, [sp, #4]
2ffefd7c:	9b01      	ldr	r3, [sp, #4]
2ffefd7e:	6073      	str	r3, [r6, #4]
2ffefd80:	e005      	b.n	2ffefd8e <stm32mp1_svc_smc_handler+0x9a>
2ffefd82:	ab01      	add	r3, sp, #4
2ffefd84:	f7ff fe62 	bl	2ffefa4c <bsec_main>
2ffefd88:	e7f8      	b.n	2ffefd7c <stm32mp1_svc_smc_handler+0x88>
2ffefd8a:	f7ff ff47 	bl	2ffefc1c <rcc_scv_handler>
2ffefd8e:	6030      	str	r0, [r6, #0]
2ffefd90:	e020      	b.n	2ffefdd4 <stm32mp1_svc_smc_handler+0xe0>
2ffefd92:	f7ff ff74 	bl	2ffefc7e <rcc_cal_scv_handler>
2ffefd96:	e7fa      	b.n	2ffefd8e <stm32mp1_svc_smc_handler+0x9a>
2ffefd98:	aa01      	add	r2, sp, #4
2ffefd9a:	f7ff ff83 	bl	2ffefca4 <rcc_opp_scv_handler>
2ffefd9e:	e7ed      	b.n	2ffefd7c <stm32mp1_svc_smc_handler+0x88>
2ffefda0:	f7ff fef6 	bl	2ffefb90 <pwr_scv_handler>
2ffefda4:	e7f3      	b.n	2ffefd8e <stm32mp1_svc_smc_handler+0x9a>
2ffefda6:	f7fe fbc3 	bl	2ffee530 <stm32_auto_stop>
2ffefdaa:	4620      	mov	r0, r4
2ffefdac:	e7ef      	b.n	2ffefd8e <stm32mp1_svc_smc_handler+0x9a>
2ffefdae:	2001      	movs	r0, #1
2ffefdb0:	e7d3      	b.n	2ffefd5a <stm32mp1_svc_smc_handler+0x66>
2ffefdb2:	4b0f      	ldr	r3, [pc, #60]	; (2ffefdf0 <stm32mp1_svc_smc_handler+0xfc>)
2ffefdb4:	60f3      	str	r3, [r6, #12]
2ffefdb6:	f103 5361 	add.w	r3, r3, #943718400	; 0x38400000
2ffefdba:	f503 130f 	add.w	r3, r3, #2342912	; 0x23c000
2ffefdbe:	f603 2331 	addw	r3, r3, #2609	; 0xa31
2ffefdc2:	60b3      	str	r3, [r6, #8]
2ffefdc4:	f1a3 7344 	sub.w	r3, r3, #51380224	; 0x3100000
2ffefdc8:	f5a3 33e1 	sub.w	r3, r3, #115200	; 0x1c200
2ffefdcc:	3b96      	subs	r3, #150	; 0x96
2ffefdce:	6073      	str	r3, [r6, #4]
2ffefdd0:	4b08      	ldr	r3, [pc, #32]	; (2ffefdf4 <stm32mp1_svc_smc_handler+0x100>)
2ffefdd2:	6033      	str	r3, [r6, #0]
2ffefdd4:	4630      	mov	r0, r6
2ffefdd6:	b002      	add	sp, #8
2ffefdd8:	bd70      	pop	{r4, r5, r6, pc}
2ffefdda:	bf00      	nop
2ffefddc:	82001009 	.word	0x82001009
2ffefde0:	2fff8f6f 	.word	0x2fff8f6f
2ffefde4:	82001003 	.word	0x82001003
2ffefde8:	82002001 	.word	0x82002001
2ffefdec:	8200ff01 	.word	0x8200ff01
2ffefdf0:	14c29459 	.word	0x14c29459
2ffefdf4:	50aa78a7 	.word	0x50aa78a7

2ffefdf8 <discover_list_protocols>:
2ffefdf8:	b5f0      	push	{r4, r5, r6, r7, lr}
2ffefdfa:	4605      	mov	r5, r0
2ffefdfc:	b087      	sub	sp, #28
2ffefdfe:	2100      	movs	r1, #0
2ffefe00:	2210      	movs	r2, #16
2ffefe02:	a802      	add	r0, sp, #8
2ffefe04:	e9cd 1100 	strd	r1, r1, [sp]
2ffefe08:	f008 f817 	bl	2fff7e3a <memset>
2ffefe0c:	692b      	ldr	r3, [r5, #16]
2ffefe0e:	2b04      	cmp	r3, #4
2ffefe10:	d006      	beq.n	2ffefe20 <discover_list_protocols+0x28>
2ffefe12:	f06f 0109 	mvn.w	r1, #9
2ffefe16:	4628      	mov	r0, r5
2ffefe18:	f000 fabe 	bl	2fff0398 <scmi_status_response>
2ffefe1c:	b007      	add	sp, #28
2ffefe1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffefe20:	69ab      	ldr	r3, [r5, #24]
2ffefe22:	2b10      	cmp	r3, #16
2ffefe24:	d803      	bhi.n	2ffefe2e <discover_list_protocols+0x36>
2ffefe26:	4817      	ldr	r0, [pc, #92]	; (2ffefe84 <discover_list_protocols+0x8c>)
2ffefe28:	2198      	movs	r1, #152	; 0x98
2ffefe2a:	f007 ffbd 	bl	2fff7da8 <__assert>
2ffefe2e:	6828      	ldr	r0, [r5, #0]
2ffefe30:	68ef      	ldr	r7, [r5, #12]
2ffefe32:	f000 fcc5 	bl	2fff07c0 <plat_scmi_protocol_list>
2ffefe36:	4606      	mov	r6, r0
2ffefe38:	b1f8      	cbz	r0, 2ffefe7a <discover_list_protocols+0x82>
2ffefe3a:	4603      	mov	r3, r0
2ffefe3c:	1b9c      	subs	r4, r3, r6
2ffefe3e:	f813 2b01 	ldrb.w	r2, [r3], #1
2ffefe42:	2a00      	cmp	r2, #0
2ffefe44:	d1fa      	bne.n	2ffefe3c <discover_list_protocols+0x44>
2ffefe46:	683b      	ldr	r3, [r7, #0]
2ffefe48:	42a3      	cmp	r3, r4
2ffefe4a:	d218      	bcs.n	2ffefe7e <discover_list_protocols+0x86>
2ffefe4c:	1ae4      	subs	r4, r4, r3
2ffefe4e:	2c08      	cmp	r4, #8
2ffefe50:	bf28      	it	cs
2ffefe52:	2408      	movcs	r4, #8
2ffefe54:	9401      	str	r4, [sp, #4]
2ffefe56:	2208      	movs	r2, #8
2ffefe58:	eb0d 0002 	add.w	r0, sp, r2
2ffefe5c:	4669      	mov	r1, sp
2ffefe5e:	f007 ffcb 	bl	2fff7df8 <memcpy>
2ffefe62:	6839      	ldr	r1, [r7, #0]
2ffefe64:	4622      	mov	r2, r4
2ffefe66:	a804      	add	r0, sp, #16
2ffefe68:	4431      	add	r1, r6
2ffefe6a:	f007 ffc5 	bl	2fff7df8 <memcpy>
2ffefe6e:	2210      	movs	r2, #16
2ffefe70:	a902      	add	r1, sp, #8
2ffefe72:	4628      	mov	r0, r5
2ffefe74:	f000 faa8 	bl	2fff03c8 <scmi_write_response>
2ffefe78:	e7d0      	b.n	2ffefe1c <discover_list_protocols+0x24>
2ffefe7a:	4604      	mov	r4, r0
2ffefe7c:	e7e3      	b.n	2ffefe46 <discover_list_protocols+0x4e>
2ffefe7e:	2400      	movs	r4, #0
2ffefe80:	e7e8      	b.n	2ffefe54 <discover_list_protocols+0x5c>
2ffefe82:	bf00      	nop
2ffefe84:	2fff8fac 	.word	0x2fff8fac

2ffefe88 <discover_implementation_version>:
2ffefe88:	2300      	movs	r3, #0
2ffefe8a:	b507      	push	{r0, r1, r2, lr}
2ffefe8c:	e9cd 3300 	strd	r3, r3, [sp]
2ffefe90:	6903      	ldr	r3, [r0, #16]
2ffefe92:	b133      	cbz	r3, 2ffefea2 <discover_implementation_version+0x1a>
2ffefe94:	f06f 0109 	mvn.w	r1, #9
2ffefe98:	f000 fa7e 	bl	2fff0398 <scmi_status_response>
2ffefe9c:	b003      	add	sp, #12
2ffefe9e:	f85d fb04 	ldr.w	pc, [sp], #4
2ffefea2:	2208      	movs	r2, #8
2ffefea4:	4669      	mov	r1, sp
2ffefea6:	f000 fa8f 	bl	2fff03c8 <scmi_write_response>
2ffefeaa:	e7f7      	b.n	2ffefe9c <discover_implementation_version+0x14>

2ffefeac <report_message_attributes>:
2ffefeac:	b507      	push	{r0, r1, r2, lr}
2ffefeae:	2200      	movs	r2, #0
2ffefeb0:	e9cd 2200 	strd	r2, r2, [sp]
2ffefeb4:	6902      	ldr	r2, [r0, #16]
2ffefeb6:	4603      	mov	r3, r0
2ffefeb8:	68c1      	ldr	r1, [r0, #12]
2ffefeba:	2a04      	cmp	r2, #4
2ffefebc:	d004      	beq.n	2ffefec8 <report_message_attributes+0x1c>
2ffefebe:	f06f 0109 	mvn.w	r1, #9
2ffefec2:	f000 fa69 	bl	2fff0398 <scmi_status_response>
2ffefec6:	e00a      	b.n	2ffefede <report_message_attributes+0x32>
2ffefec8:	680a      	ldr	r2, [r1, #0]
2ffefeca:	2a06      	cmp	r2, #6
2ffefecc:	d80a      	bhi.n	2ffefee4 <report_message_attributes+0x38>
2ffefece:	4907      	ldr	r1, [pc, #28]	; (2ffefeec <report_message_attributes+0x40>)
2ffefed0:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
2ffefed4:	b132      	cbz	r2, 2ffefee4 <report_message_attributes+0x38>
2ffefed6:	2208      	movs	r2, #8
2ffefed8:	4669      	mov	r1, sp
2ffefeda:	f000 fa75 	bl	2fff03c8 <scmi_write_response>
2ffefede:	b003      	add	sp, #12
2ffefee0:	f85d fb04 	ldr.w	pc, [sp], #4
2ffefee4:	f06f 0103 	mvn.w	r1, #3
2ffefee8:	4618      	mov	r0, r3
2ffefeea:	e7ea      	b.n	2ffefec2 <report_message_attributes+0x16>
2ffefeec:	2fff8fc8 	.word	0x2fff8fc8

2ffefef0 <report_version>:
2ffefef0:	b507      	push	{r0, r1, r2, lr}
2ffefef2:	f44f 3300 	mov.w	r3, #131072	; 0x20000
2ffefef6:	2200      	movs	r2, #0
2ffefef8:	e9cd 2300 	strd	r2, r3, [sp]
2ffefefc:	6903      	ldr	r3, [r0, #16]
2ffefefe:	b133      	cbz	r3, 2ffeff0e <report_version+0x1e>
2ffeff00:	f06f 0109 	mvn.w	r1, #9
2ffeff04:	f000 fa48 	bl	2fff0398 <scmi_status_response>
2ffeff08:	b003      	add	sp, #12
2ffeff0a:	f85d fb04 	ldr.w	pc, [sp], #4
2ffeff0e:	2208      	movs	r2, #8
2ffeff10:	4669      	mov	r1, sp
2ffeff12:	f000 fa59 	bl	2fff03c8 <scmi_write_response>
2ffeff16:	e7f7      	b.n	2ffeff08 <report_version+0x18>

2ffeff18 <report_attributes>:
2ffeff18:	b513      	push	{r0, r1, r4, lr}
2ffeff1a:	4604      	mov	r4, r0
2ffeff1c:	f000 fc44 	bl	2fff07a8 <plat_scmi_protocol_count>
2ffeff20:	2300      	movs	r3, #0
2ffeff22:	b2c0      	uxtb	r0, r0
2ffeff24:	9300      	str	r3, [sp, #0]
2ffeff26:	6923      	ldr	r3, [r4, #16]
2ffeff28:	9001      	str	r0, [sp, #4]
2ffeff2a:	b133      	cbz	r3, 2ffeff3a <report_attributes+0x22>
2ffeff2c:	f06f 0109 	mvn.w	r1, #9
2ffeff30:	4620      	mov	r0, r4
2ffeff32:	f000 fa31 	bl	2fff0398 <scmi_status_response>
2ffeff36:	b002      	add	sp, #8
2ffeff38:	bd10      	pop	{r4, pc}
2ffeff3a:	2208      	movs	r2, #8
2ffeff3c:	4669      	mov	r1, sp
2ffeff3e:	4620      	mov	r0, r4
2ffeff40:	f000 fa42 	bl	2fff03c8 <scmi_write_response>
2ffeff44:	e7f7      	b.n	2ffeff36 <report_attributes+0x1e>
	...

2ffeff48 <discover_sub_vendor>:
2ffeff48:	b530      	push	{r4, r5, lr}
2ffeff4a:	b087      	sub	sp, #28
2ffeff4c:	4604      	mov	r4, r0
2ffeff4e:	f000 fc27 	bl	2fff07a0 <plat_scmi_sub_vendor_name>
2ffeff52:	4605      	mov	r5, r0
2ffeff54:	2214      	movs	r2, #20
2ffeff56:	2100      	movs	r1, #0
2ffeff58:	a801      	add	r0, sp, #4
2ffeff5a:	f007 ff6e 	bl	2fff7e3a <memset>
2ffeff5e:	6923      	ldr	r3, [r4, #16]
2ffeff60:	b133      	cbz	r3, 2ffeff70 <discover_sub_vendor+0x28>
2ffeff62:	f06f 0109 	mvn.w	r1, #9
2ffeff66:	4620      	mov	r0, r4
2ffeff68:	f000 fa16 	bl	2fff0398 <scmi_status_response>
2ffeff6c:	b007      	add	sp, #28
2ffeff6e:	bd30      	pop	{r4, r5, pc}
2ffeff70:	4628      	mov	r0, r5
2ffeff72:	f008 f8c3 	bl	2fff80fc <strlen>
2ffeff76:	280f      	cmp	r0, #15
2ffeff78:	d903      	bls.n	2ffeff82 <discover_sub_vendor+0x3a>
2ffeff7a:	4807      	ldr	r0, [pc, #28]	; (2ffeff98 <discover_sub_vendor+0x50>)
2ffeff7c:	2166      	movs	r1, #102	; 0x66
2ffeff7e:	f007 ff13 	bl	2fff7da8 <__assert>
2ffeff82:	4629      	mov	r1, r5
2ffeff84:	2210      	movs	r2, #16
2ffeff86:	a802      	add	r0, sp, #8
2ffeff88:	f008 f89d 	bl	2fff80c6 <strlcpy>
2ffeff8c:	2214      	movs	r2, #20
2ffeff8e:	a901      	add	r1, sp, #4
2ffeff90:	4620      	mov	r0, r4
2ffeff92:	f000 fa19 	bl	2fff03c8 <scmi_write_response>
2ffeff96:	e7e9      	b.n	2ffeff6c <discover_sub_vendor+0x24>
2ffeff98:	2fff8fac 	.word	0x2fff8fac

2ffeff9c <discover_vendor>:
2ffeff9c:	b530      	push	{r4, r5, lr}
2ffeff9e:	b087      	sub	sp, #28
2ffeffa0:	4604      	mov	r4, r0
2ffeffa2:	f000 fbf9 	bl	2fff0798 <plat_scmi_vendor_name>
2ffeffa6:	4605      	mov	r5, r0
2ffeffa8:	2214      	movs	r2, #20
2ffeffaa:	2100      	movs	r1, #0
2ffeffac:	a801      	add	r0, sp, #4
2ffeffae:	f007 ff44 	bl	2fff7e3a <memset>
2ffeffb2:	6923      	ldr	r3, [r4, #16]
2ffeffb4:	b133      	cbz	r3, 2ffeffc4 <discover_vendor+0x28>
2ffeffb6:	f06f 0109 	mvn.w	r1, #9
2ffeffba:	4620      	mov	r0, r4
2ffeffbc:	f000 f9ec 	bl	2fff0398 <scmi_status_response>
2ffeffc0:	b007      	add	sp, #28
2ffeffc2:	bd30      	pop	{r4, r5, pc}
2ffeffc4:	4628      	mov	r0, r5
2ffeffc6:	f008 f899 	bl	2fff80fc <strlen>
2ffeffca:	280f      	cmp	r0, #15
2ffeffcc:	d903      	bls.n	2ffeffd6 <discover_vendor+0x3a>
2ffeffce:	4807      	ldr	r0, [pc, #28]	; (2ffeffec <discover_vendor+0x50>)
2ffeffd0:	2155      	movs	r1, #85	; 0x55
2ffeffd2:	f007 fee9 	bl	2fff7da8 <__assert>
2ffeffd6:	4629      	mov	r1, r5
2ffeffd8:	2210      	movs	r2, #16
2ffeffda:	a802      	add	r0, sp, #8
2ffeffdc:	f008 f873 	bl	2fff80c6 <strlcpy>
2ffeffe0:	2214      	movs	r2, #20
2ffeffe2:	a901      	add	r1, sp, #4
2ffeffe4:	4620      	mov	r0, r4
2ffeffe6:	f000 f9ef 	bl	2fff03c8 <scmi_write_response>
2ffeffea:	e7e9      	b.n	2ffeffc0 <discover_vendor+0x24>
2ffeffec:	2fff8fac 	.word	0x2fff8fac

2ffefff0 <scmi_msg_get_base_handler>:
2ffefff0:	6883      	ldr	r3, [r0, #8]
2ffefff2:	2b06      	cmp	r3, #6
2ffefff4:	d809      	bhi.n	2fff000a <scmi_msg_get_base_handler+0x1a>
2ffefff6:	2207      	movs	r2, #7
2ffefff8:	4293      	cmp	r3, r2
2ffefffa:	bf28      	it	cs
2ffefffc:	2300      	movcs	r3, #0
2ffefffe:	f3af 8014 	nop.w	{20}
2fff0002:	4a03      	ldr	r2, [pc, #12]	; (2fff0010 <scmi_msg_get_base_handler+0x20>)
2fff0004:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
2fff0008:	4770      	bx	lr
2fff000a:	2000      	movs	r0, #0
2fff000c:	4770      	bx	lr
2fff000e:	bf00      	nop
2fff0010:	2fff8fc8 	.word	0x2fff8fc8

2fff0014 <confine_array_index>:
2fff0014:	4288      	cmp	r0, r1
2fff0016:	bf28      	it	cs
2fff0018:	2000      	movcs	r0, #0
2fff001a:	f3af 8014 	nop.w	{20}
2fff001e:	4770      	bx	lr

2fff0020 <report_message_attributes>:
2fff0020:	b507      	push	{r0, r1, r2, lr}
2fff0022:	2200      	movs	r2, #0
2fff0024:	e9cd 2200 	strd	r2, r2, [sp]
2fff0028:	6902      	ldr	r2, [r0, #16]
2fff002a:	4603      	mov	r3, r0
2fff002c:	68c1      	ldr	r1, [r0, #12]
2fff002e:	2a04      	cmp	r2, #4
2fff0030:	d004      	beq.n	2fff003c <report_message_attributes+0x1c>
2fff0032:	f06f 0109 	mvn.w	r1, #9
2fff0036:	f000 f9af 	bl	2fff0398 <scmi_status_response>
2fff003a:	e00a      	b.n	2fff0052 <report_message_attributes+0x32>
2fff003c:	680a      	ldr	r2, [r1, #0]
2fff003e:	2a07      	cmp	r2, #7
2fff0040:	d80a      	bhi.n	2fff0058 <report_message_attributes+0x38>
2fff0042:	4907      	ldr	r1, [pc, #28]	; (2fff0060 <report_message_attributes+0x40>)
2fff0044:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
2fff0048:	b132      	cbz	r2, 2fff0058 <report_message_attributes+0x38>
2fff004a:	2208      	movs	r2, #8
2fff004c:	4669      	mov	r1, sp
2fff004e:	f000 f9bb 	bl	2fff03c8 <scmi_write_response>
2fff0052:	b003      	add	sp, #12
2fff0054:	f85d fb04 	ldr.w	pc, [sp], #4
2fff0058:	f06f 0103 	mvn.w	r1, #3
2fff005c:	4618      	mov	r0, r3
2fff005e:	e7ea      	b.n	2fff0036 <report_message_attributes+0x16>
2fff0060:	2fff8fe4 	.word	0x2fff8fe4

2fff0064 <report_version>:
2fff0064:	b507      	push	{r0, r1, r2, lr}
2fff0066:	f44f 3300 	mov.w	r3, #131072	; 0x20000
2fff006a:	2200      	movs	r2, #0
2fff006c:	e9cd 2300 	strd	r2, r3, [sp]
2fff0070:	6903      	ldr	r3, [r0, #16]
2fff0072:	b133      	cbz	r3, 2fff0082 <report_version+0x1e>
2fff0074:	f06f 0109 	mvn.w	r1, #9
2fff0078:	f000 f98e 	bl	2fff0398 <scmi_status_response>
2fff007c:	b003      	add	sp, #12
2fff007e:	f85d fb04 	ldr.w	pc, [sp], #4
2fff0082:	2208      	movs	r2, #8
2fff0084:	4669      	mov	r1, sp
2fff0086:	f000 f99f 	bl	2fff03c8 <scmi_write_response>
2fff008a:	e7f7      	b.n	2fff007c <report_version+0x18>

2fff008c <write_rate_desc_array_in_buffer>:
2fff008c:	f010 0303 	ands.w	r3, r0, #3
2fff0090:	b510      	push	{r4, lr}
2fff0092:	d106      	bne.n	2fff00a2 <write_rate_desc_array_in_buffer+0x16>
2fff0094:	eb01 0282 	add.w	r2, r1, r2, lsl #2
2fff0098:	4291      	cmp	r1, r2
2fff009a:	f100 0008 	add.w	r0, r0, #8
2fff009e:	d105      	bne.n	2fff00ac <write_rate_desc_array_in_buffer+0x20>
2fff00a0:	bd10      	pop	{r4, pc}
2fff00a2:	4806      	ldr	r0, [pc, #24]	; (2fff00bc <write_rate_desc_array_in_buffer+0x30>)
2fff00a4:	f240 1111 	movw	r1, #273	; 0x111
2fff00a8:	f007 fe7e 	bl	2fff7da8 <__assert>
2fff00ac:	f851 4b04 	ldr.w	r4, [r1], #4
2fff00b0:	f840 3c04 	str.w	r3, [r0, #-4]
2fff00b4:	f840 4c08 	str.w	r4, [r0, #-8]
2fff00b8:	e7ee      	b.n	2fff0098 <write_rate_desc_array_in_buffer+0xc>
2fff00ba:	bf00      	nop
2fff00bc:	2fff9004 	.word	0x2fff9004

2fff00c0 <report_attributes>:
2fff00c0:	b513      	push	{r0, r1, r4, lr}
2fff00c2:	4604      	mov	r4, r0
2fff00c4:	6800      	ldr	r0, [r0, #0]
2fff00c6:	f000 fb8b 	bl	2fff07e0 <plat_scmi_clock_count>
2fff00ca:	2300      	movs	r3, #0
2fff00cc:	b280      	uxth	r0, r0
2fff00ce:	9300      	str	r3, [sp, #0]
2fff00d0:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
2fff00d4:	6923      	ldr	r3, [r4, #16]
2fff00d6:	9001      	str	r0, [sp, #4]
2fff00d8:	b133      	cbz	r3, 2fff00e8 <report_attributes+0x28>
2fff00da:	f06f 0109 	mvn.w	r1, #9
2fff00de:	4620      	mov	r0, r4
2fff00e0:	f000 f95a 	bl	2fff0398 <scmi_status_response>
2fff00e4:	b002      	add	sp, #8
2fff00e6:	bd10      	pop	{r4, pc}
2fff00e8:	2208      	movs	r2, #8
2fff00ea:	4669      	mov	r1, sp
2fff00ec:	4620      	mov	r0, r4
2fff00ee:	f000 f96b 	bl	2fff03c8 <scmi_write_response>
2fff00f2:	e7f7      	b.n	2fff00e4 <report_attributes+0x24>

2fff00f4 <scmi_clock_describe_rates>:
2fff00f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
2fff00f8:	b08f      	sub	sp, #60	; 0x3c
2fff00fa:	6907      	ldr	r7, [r0, #16]
2fff00fc:	2600      	movs	r6, #0
2fff00fe:	f8d0 900c 	ldr.w	r9, [r0, #12]
2fff0102:	4604      	mov	r4, r0
2fff0104:	2f08      	cmp	r7, #8
2fff0106:	e9cd 6602 	strd	r6, r6, [sp, #8]
2fff010a:	d004      	beq.n	2fff0116 <scmi_clock_describe_rates+0x22>
2fff010c:	f06f 0109 	mvn.w	r1, #9
2fff0110:	f000 f942 	bl	2fff0398 <scmi_status_response>
2fff0114:	e048      	b.n	2fff01a8 <scmi_clock_describe_rates+0xb4>
2fff0116:	f8d9 5000 	ldr.w	r5, [r9]
2fff011a:	6800      	ldr	r0, [r0, #0]
2fff011c:	f000 fb60 	bl	2fff07e0 <plat_scmi_clock_count>
2fff0120:	4285      	cmp	r5, r0
2fff0122:	d303      	bcc.n	2fff012c <scmi_clock_describe_rates+0x38>
2fff0124:	f06f 0101 	mvn.w	r1, #1
2fff0128:	4620      	mov	r0, r4
2fff012a:	e7f1      	b.n	2fff0110 <scmi_clock_describe_rates+0x1c>
2fff012c:	f8d9 5000 	ldr.w	r5, [r9]
2fff0130:	6820      	ldr	r0, [r4, #0]
2fff0132:	f000 fb55 	bl	2fff07e0 <plat_scmi_clock_count>
2fff0136:	4601      	mov	r1, r0
2fff0138:	4628      	mov	r0, r5
2fff013a:	f7ff ff6b 	bl	2fff0014 <confine_array_index>
2fff013e:	4601      	mov	r1, r0
2fff0140:	4680      	mov	r8, r0
2fff0142:	6820      	ldr	r0, [r4, #0]
2fff0144:	466b      	mov	r3, sp
2fff0146:	4632      	mov	r2, r6
2fff0148:	f000 fb64 	bl	2fff0814 <plat_scmi_clock_rates_array>
2fff014c:	4605      	mov	r5, r0
2fff014e:	bb70      	cbnz	r0, 2fff01ae <scmi_clock_describe_rates+0xba>
2fff0150:	f8d9 3004 	ldr.w	r3, [r9, #4]
2fff0154:	aa04      	add	r2, sp, #16
2fff0156:	9e00      	ldr	r6, [sp, #0]
2fff0158:	4641      	mov	r1, r8
2fff015a:	6820      	ldr	r0, [r4, #0]
2fff015c:	1af6      	subs	r6, r6, r3
2fff015e:	ab0e      	add	r3, sp, #56	; 0x38
2fff0160:	2e0a      	cmp	r6, #10
2fff0162:	46b1      	mov	r9, r6
2fff0164:	bf28      	it	cs
2fff0166:	f04f 090a 	movcs.w	r9, #10
2fff016a:	f843 9d34 	str.w	r9, [r3, #-52]!
2fff016e:	f000 fb51 	bl	2fff0814 <plat_scmi_clock_rates_array>
2fff0172:	4605      	mov	r5, r0
2fff0174:	2800      	cmp	r0, #0
2fff0176:	d137      	bne.n	2fff01e8 <scmi_clock_describe_rates+0xf4>
2fff0178:	6960      	ldr	r0, [r4, #20]
2fff017a:	a904      	add	r1, sp, #16
2fff017c:	9a01      	ldr	r2, [sp, #4]
2fff017e:	eba6 0609 	sub.w	r6, r6, r9
2fff0182:	3008      	adds	r0, #8
2fff0184:	f7ff ff82 	bl	2fff008c <write_rate_desc_array_in_buffer>
2fff0188:	9b01      	ldr	r3, [sp, #4]
2fff018a:	463a      	mov	r2, r7
2fff018c:	6960      	ldr	r0, [r4, #20]
2fff018e:	a902      	add	r1, sp, #8
2fff0190:	f3c3 030b 	ubfx	r3, r3, #0, #12
2fff0194:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
2fff0198:	e9cd 5302 	strd	r5, r3, [sp, #8]
2fff019c:	f007 fe2c 	bl	2fff7df8 <memcpy>
2fff01a0:	9b01      	ldr	r3, [sp, #4]
2fff01a2:	3301      	adds	r3, #1
2fff01a4:	00db      	lsls	r3, r3, #3
2fff01a6:	61e3      	str	r3, [r4, #28]
2fff01a8:	b00f      	add	sp, #60	; 0x3c
2fff01aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2fff01ae:	1c43      	adds	r3, r0, #1
2fff01b0:	d11a      	bne.n	2fff01e8 <scmi_clock_describe_rates+0xf4>
2fff01b2:	6820      	ldr	r0, [r4, #0]
2fff01b4:	aa04      	add	r2, sp, #16
2fff01b6:	9606      	str	r6, [sp, #24]
2fff01b8:	4641      	mov	r1, r8
2fff01ba:	e9cd 6604 	strd	r6, r6, [sp, #16]
2fff01be:	f000 fb2c 	bl	2fff081a <plat_scmi_clock_rates_by_step>
2fff01c2:	4605      	mov	r5, r0
2fff01c4:	b980      	cbnz	r0, 2fff01e8 <scmi_clock_describe_rates+0xf4>
2fff01c6:	6960      	ldr	r0, [r4, #20]
2fff01c8:	2203      	movs	r2, #3
2fff01ca:	a904      	add	r1, sp, #16
2fff01cc:	3008      	adds	r0, #8
2fff01ce:	f7ff ff5d 	bl	2fff008c <write_rate_desc_array_in_buffer>
2fff01d2:	6960      	ldr	r0, [r4, #20]
2fff01d4:	f241 0303 	movw	r3, #4099	; 0x1003
2fff01d8:	463a      	mov	r2, r7
2fff01da:	a902      	add	r1, sp, #8
2fff01dc:	e9cd 5302 	strd	r5, r3, [sp, #8]
2fff01e0:	f007 fe0a 	bl	2fff7df8 <memcpy>
2fff01e4:	2320      	movs	r3, #32
2fff01e6:	e7de      	b.n	2fff01a6 <scmi_clock_describe_rates+0xb2>
2fff01e8:	4629      	mov	r1, r5
2fff01ea:	e79d      	b.n	2fff0128 <scmi_clock_describe_rates+0x34>

2fff01ec <scmi_clock_rate_get>:
2fff01ec:	6903      	ldr	r3, [r0, #16]
2fff01ee:	b5f0      	push	{r4, r5, r6, r7, lr}
2fff01f0:	2b04      	cmp	r3, #4
2fff01f2:	68c6      	ldr	r6, [r0, #12]
2fff01f4:	b085      	sub	sp, #20
2fff01f6:	f04f 0500 	mov.w	r5, #0
2fff01fa:	4604      	mov	r4, r0
2fff01fc:	9501      	str	r5, [sp, #4]
2fff01fe:	9502      	str	r5, [sp, #8]
2fff0200:	9503      	str	r5, [sp, #12]
2fff0202:	d005      	beq.n	2fff0210 <scmi_clock_rate_get+0x24>
2fff0204:	f06f 0109 	mvn.w	r1, #9
2fff0208:	f000 f8c6 	bl	2fff0398 <scmi_status_response>
2fff020c:	b005      	add	sp, #20
2fff020e:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff0210:	6837      	ldr	r7, [r6, #0]
2fff0212:	6800      	ldr	r0, [r0, #0]
2fff0214:	f000 fae4 	bl	2fff07e0 <plat_scmi_clock_count>
2fff0218:	4287      	cmp	r7, r0
2fff021a:	d303      	bcc.n	2fff0224 <scmi_clock_rate_get+0x38>
2fff021c:	f06f 0101 	mvn.w	r1, #1
2fff0220:	4620      	mov	r0, r4
2fff0222:	e7f1      	b.n	2fff0208 <scmi_clock_rate_get+0x1c>
2fff0224:	6836      	ldr	r6, [r6, #0]
2fff0226:	6820      	ldr	r0, [r4, #0]
2fff0228:	f000 fada 	bl	2fff07e0 <plat_scmi_clock_count>
2fff022c:	4601      	mov	r1, r0
2fff022e:	4630      	mov	r0, r6
2fff0230:	f7ff fef0 	bl	2fff0014 <confine_array_index>
2fff0234:	4601      	mov	r1, r0
2fff0236:	6820      	ldr	r0, [r4, #0]
2fff0238:	f000 fb35 	bl	2fff08a6 <plat_scmi_clock_get_rate>
2fff023c:	9002      	str	r0, [sp, #8]
2fff023e:	220c      	movs	r2, #12
2fff0240:	9503      	str	r5, [sp, #12]
2fff0242:	a901      	add	r1, sp, #4
2fff0244:	4620      	mov	r0, r4
2fff0246:	f000 f8bf 	bl	2fff03c8 <scmi_write_response>
2fff024a:	e7df      	b.n	2fff020c <scmi_clock_rate_get+0x20>

2fff024c <scmi_clock_rate_set>:
2fff024c:	6903      	ldr	r3, [r0, #16]
2fff024e:	b570      	push	{r4, r5, r6, lr}
2fff0250:	2b10      	cmp	r3, #16
2fff0252:	4604      	mov	r4, r0
2fff0254:	d005      	beq.n	2fff0262 <scmi_clock_rate_set+0x16>
2fff0256:	f06f 0109 	mvn.w	r1, #9
2fff025a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff025e:	f000 b89b 	b.w	2fff0398 <scmi_status_response>
2fff0262:	68c5      	ldr	r5, [r0, #12]
2fff0264:	6800      	ldr	r0, [r0, #0]
2fff0266:	686e      	ldr	r6, [r5, #4]
2fff0268:	f000 faba 	bl	2fff07e0 <plat_scmi_clock_count>
2fff026c:	4286      	cmp	r6, r0
2fff026e:	d303      	bcc.n	2fff0278 <scmi_clock_rate_set+0x2c>
2fff0270:	f06f 0101 	mvn.w	r1, #1
2fff0274:	4620      	mov	r0, r4
2fff0276:	e7f0      	b.n	2fff025a <scmi_clock_rate_set+0xe>
2fff0278:	686e      	ldr	r6, [r5, #4]
2fff027a:	6820      	ldr	r0, [r4, #0]
2fff027c:	f000 fab0 	bl	2fff07e0 <plat_scmi_clock_count>
2fff0280:	4601      	mov	r1, r0
2fff0282:	4630      	mov	r0, r6
2fff0284:	f7ff fec6 	bl	2fff0014 <confine_array_index>
2fff0288:	68aa      	ldr	r2, [r5, #8]
2fff028a:	4601      	mov	r1, r0
2fff028c:	6820      	ldr	r0, [r4, #0]
2fff028e:	f000 fae6 	bl	2fff085e <plat_scmi_clock_set_rate>
2fff0292:	4601      	mov	r1, r0
2fff0294:	e7ee      	b.n	2fff0274 <scmi_clock_rate_set+0x28>
	...

2fff0298 <scmi_clock_attributes>:
2fff0298:	b570      	push	{r4, r5, r6, lr}
2fff029a:	4604      	mov	r4, r0
2fff029c:	68c5      	ldr	r5, [r0, #12]
2fff029e:	b086      	sub	sp, #24
2fff02a0:	2218      	movs	r2, #24
2fff02a2:	2100      	movs	r1, #0
2fff02a4:	4668      	mov	r0, sp
2fff02a6:	f007 fdc8 	bl	2fff7e3a <memset>
2fff02aa:	6923      	ldr	r3, [r4, #16]
2fff02ac:	2b04      	cmp	r3, #4
2fff02ae:	d006      	beq.n	2fff02be <scmi_clock_attributes+0x26>
2fff02b0:	f06f 0109 	mvn.w	r1, #9
2fff02b4:	4620      	mov	r0, r4
2fff02b6:	f000 f86f 	bl	2fff0398 <scmi_status_response>
2fff02ba:	b006      	add	sp, #24
2fff02bc:	bd70      	pop	{r4, r5, r6, pc}
2fff02be:	682e      	ldr	r6, [r5, #0]
2fff02c0:	6820      	ldr	r0, [r4, #0]
2fff02c2:	f000 fa8d 	bl	2fff07e0 <plat_scmi_clock_count>
2fff02c6:	4286      	cmp	r6, r0
2fff02c8:	d302      	bcc.n	2fff02d0 <scmi_clock_attributes+0x38>
2fff02ca:	f06f 0101 	mvn.w	r1, #1
2fff02ce:	e7f1      	b.n	2fff02b4 <scmi_clock_attributes+0x1c>
2fff02d0:	682d      	ldr	r5, [r5, #0]
2fff02d2:	6820      	ldr	r0, [r4, #0]
2fff02d4:	f000 fa84 	bl	2fff07e0 <plat_scmi_clock_count>
2fff02d8:	4601      	mov	r1, r0
2fff02da:	4628      	mov	r0, r5
2fff02dc:	f7ff fe9a 	bl	2fff0014 <confine_array_index>
2fff02e0:	4601      	mov	r1, r0
2fff02e2:	4605      	mov	r5, r0
2fff02e4:	6820      	ldr	r0, [r4, #0]
2fff02e6:	f000 fa87 	bl	2fff07f8 <plat_scmi_clock_get_name>
2fff02ea:	4606      	mov	r6, r0
2fff02ec:	b910      	cbnz	r0, 2fff02f4 <scmi_clock_attributes+0x5c>
2fff02ee:	f06f 0103 	mvn.w	r1, #3
2fff02f2:	e7df      	b.n	2fff02b4 <scmi_clock_attributes+0x1c>
2fff02f4:	f007 ff02 	bl	2fff80fc <strlen>
2fff02f8:	280f      	cmp	r0, #15
2fff02fa:	d903      	bls.n	2fff0304 <scmi_clock_attributes+0x6c>
2fff02fc:	4809      	ldr	r0, [pc, #36]	; (2fff0324 <scmi_clock_attributes+0x8c>)
2fff02fe:	21a0      	movs	r1, #160	; 0xa0
2fff0300:	f007 fd52 	bl	2fff7da8 <__assert>
2fff0304:	2210      	movs	r2, #16
2fff0306:	4631      	mov	r1, r6
2fff0308:	a802      	add	r0, sp, #8
2fff030a:	f007 fedc 	bl	2fff80c6 <strlcpy>
2fff030e:	6820      	ldr	r0, [r4, #0]
2fff0310:	4629      	mov	r1, r5
2fff0312:	f000 fad8 	bl	2fff08c6 <plat_scmi_clock_get_state>
2fff0316:	9001      	str	r0, [sp, #4]
2fff0318:	2218      	movs	r2, #24
2fff031a:	4669      	mov	r1, sp
2fff031c:	4620      	mov	r0, r4
2fff031e:	f000 f853 	bl	2fff03c8 <scmi_write_response>
2fff0322:	e7ca      	b.n	2fff02ba <scmi_clock_attributes+0x22>
2fff0324:	2fff9004 	.word	0x2fff9004

2fff0328 <scmi_clock_config_set>:
2fff0328:	6903      	ldr	r3, [r0, #16]
2fff032a:	b570      	push	{r4, r5, r6, lr}
2fff032c:	2b08      	cmp	r3, #8
2fff032e:	4604      	mov	r4, r0
2fff0330:	d005      	beq.n	2fff033e <scmi_clock_config_set+0x16>
2fff0332:	f06f 0109 	mvn.w	r1, #9
2fff0336:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff033a:	f000 b82d 	b.w	2fff0398 <scmi_status_response>
2fff033e:	68c5      	ldr	r5, [r0, #12]
2fff0340:	6800      	ldr	r0, [r0, #0]
2fff0342:	682e      	ldr	r6, [r5, #0]
2fff0344:	f000 fa4c 	bl	2fff07e0 <plat_scmi_clock_count>
2fff0348:	4286      	cmp	r6, r0
2fff034a:	d303      	bcc.n	2fff0354 <scmi_clock_config_set+0x2c>
2fff034c:	f06f 0101 	mvn.w	r1, #1
2fff0350:	4620      	mov	r0, r4
2fff0352:	e7f0      	b.n	2fff0336 <scmi_clock_config_set+0xe>
2fff0354:	682e      	ldr	r6, [r5, #0]
2fff0356:	6820      	ldr	r0, [r4, #0]
2fff0358:	f000 fa42 	bl	2fff07e0 <plat_scmi_clock_count>
2fff035c:	4601      	mov	r1, r0
2fff035e:	4630      	mov	r0, r6
2fff0360:	f7ff fe58 	bl	2fff0014 <confine_array_index>
2fff0364:	686a      	ldr	r2, [r5, #4]
2fff0366:	4601      	mov	r1, r0
2fff0368:	6820      	ldr	r0, [r4, #0]
2fff036a:	f002 0201 	and.w	r2, r2, #1
2fff036e:	f000 fab8 	bl	2fff08e2 <plat_scmi_clock_set_state>
2fff0372:	4601      	mov	r1, r0
2fff0374:	e7ec      	b.n	2fff0350 <scmi_clock_config_set+0x28>
	...

2fff0378 <scmi_msg_get_clock_handler>:
2fff0378:	6880      	ldr	r0, [r0, #8]
2fff037a:	b508      	push	{r3, lr}
2fff037c:	2807      	cmp	r0, #7
2fff037e:	d806      	bhi.n	2fff038e <scmi_msg_get_clock_handler+0x16>
2fff0380:	2108      	movs	r1, #8
2fff0382:	f7ff fe47 	bl	2fff0014 <confine_array_index>
2fff0386:	4b03      	ldr	r3, [pc, #12]	; (2fff0394 <scmi_msg_get_clock_handler+0x1c>)
2fff0388:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
2fff038c:	bd08      	pop	{r3, pc}
2fff038e:	2000      	movs	r0, #0
2fff0390:	e7fc      	b.n	2fff038c <scmi_msg_get_clock_handler+0x14>
2fff0392:	bf00      	nop
2fff0394:	2fff8fe4 	.word	0x2fff8fe4

2fff0398 <scmi_status_response>:
2fff0398:	b513      	push	{r0, r1, r4, lr}
2fff039a:	4604      	mov	r4, r0
2fff039c:	6940      	ldr	r0, [r0, #20]
2fff039e:	9101      	str	r1, [sp, #4]
2fff03a0:	b110      	cbz	r0, 2fff03a8 <scmi_status_response+0x10>
2fff03a2:	69a3      	ldr	r3, [r4, #24]
2fff03a4:	2b03      	cmp	r3, #3
2fff03a6:	d803      	bhi.n	2fff03b0 <scmi_status_response+0x18>
2fff03a8:	4806      	ldr	r0, [pc, #24]	; (2fff03c4 <scmi_status_response+0x2c>)
2fff03aa:	2110      	movs	r1, #16
2fff03ac:	f007 fcfc 	bl	2fff7da8 <__assert>
2fff03b0:	2204      	movs	r2, #4
2fff03b2:	eb0d 0102 	add.w	r1, sp, r2
2fff03b6:	f007 fd1f 	bl	2fff7df8 <memcpy>
2fff03ba:	2304      	movs	r3, #4
2fff03bc:	61e3      	str	r3, [r4, #28]
2fff03be:	b002      	add	sp, #8
2fff03c0:	bd10      	pop	{r4, pc}
2fff03c2:	bf00      	nop
2fff03c4:	2fff9054 	.word	0x2fff9054

2fff03c8 <scmi_write_response>:
2fff03c8:	b538      	push	{r3, r4, r5, lr}
2fff03ca:	4604      	mov	r4, r0
2fff03cc:	4615      	mov	r5, r2
2fff03ce:	b131      	cbz	r1, 2fff03de <scmi_write_response+0x16>
2fff03d0:	2a03      	cmp	r2, #3
2fff03d2:	d904      	bls.n	2fff03de <scmi_write_response+0x16>
2fff03d4:	6983      	ldr	r3, [r0, #24]
2fff03d6:	4293      	cmp	r3, r2
2fff03d8:	d301      	bcc.n	2fff03de <scmi_write_response+0x16>
2fff03da:	6940      	ldr	r0, [r0, #20]
2fff03dc:	b918      	cbnz	r0, 2fff03e6 <scmi_write_response+0x1e>
2fff03de:	4804      	ldr	r0, [pc, #16]	; (2fff03f0 <scmi_write_response+0x28>)
2fff03e0:	211e      	movs	r1, #30
2fff03e2:	f007 fce1 	bl	2fff7da8 <__assert>
2fff03e6:	f007 fd07 	bl	2fff7df8 <memcpy>
2fff03ea:	61e5      	str	r5, [r4, #28]
2fff03ec:	bd38      	pop	{r3, r4, r5, pc}
2fff03ee:	bf00      	nop
2fff03f0:	2fff9054 	.word	0x2fff9054

2fff03f4 <scmi_process_message>:
2fff03f4:	6843      	ldr	r3, [r0, #4]
2fff03f6:	b510      	push	{r4, lr}
2fff03f8:	2b14      	cmp	r3, #20
2fff03fa:	4604      	mov	r4, r0
2fff03fc:	d00b      	beq.n	2fff0416 <scmi_process_message+0x22>
2fff03fe:	2b16      	cmp	r3, #22
2fff0400:	d00c      	beq.n	2fff041c <scmi_process_message+0x28>
2fff0402:	2b10      	cmp	r3, #16
2fff0404:	d10d      	bne.n	2fff0422 <scmi_process_message+0x2e>
2fff0406:	f7ff fdf3 	bl	2ffefff0 <scmi_msg_get_base_handler>
2fff040a:	4603      	mov	r3, r0
2fff040c:	b148      	cbz	r0, 2fff0422 <scmi_process_message+0x2e>
2fff040e:	4620      	mov	r0, r4
2fff0410:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff0414:	4718      	bx	r3
2fff0416:	f7ff ffaf 	bl	2fff0378 <scmi_msg_get_clock_handler>
2fff041a:	e7f6      	b.n	2fff040a <scmi_process_message+0x16>
2fff041c:	f000 f8e4 	bl	2fff05e8 <scmi_msg_get_rd_handler>
2fff0420:	e7f3      	b.n	2fff040a <scmi_process_message+0x16>
2fff0422:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
2fff0426:	4805      	ldr	r0, [pc, #20]	; (2fff043c <scmi_process_message+0x48>)
2fff0428:	f000 fbaa 	bl	2fff0b80 <tf_log>
2fff042c:	4620      	mov	r0, r4
2fff042e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2fff0432:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff0436:	f7ff bfaf 	b.w	2fff0398 <scmi_status_response>
2fff043a:	bf00      	nop
2fff043c:	2fff9020 	.word	0x2fff9020

2fff0440 <report_message_attributes>:
2fff0440:	b507      	push	{r0, r1, r2, lr}
2fff0442:	2200      	movs	r2, #0
2fff0444:	e9cd 2200 	strd	r2, r2, [sp]
2fff0448:	6902      	ldr	r2, [r0, #16]
2fff044a:	4603      	mov	r3, r0
2fff044c:	68c1      	ldr	r1, [r0, #12]
2fff044e:	2a04      	cmp	r2, #4
2fff0450:	d004      	beq.n	2fff045c <report_message_attributes+0x1c>
2fff0452:	f06f 0109 	mvn.w	r1, #9
2fff0456:	f7ff ff9f 	bl	2fff0398 <scmi_status_response>
2fff045a:	e00a      	b.n	2fff0472 <report_message_attributes+0x32>
2fff045c:	680a      	ldr	r2, [r1, #0]
2fff045e:	2a04      	cmp	r2, #4
2fff0460:	d80a      	bhi.n	2fff0478 <report_message_attributes+0x38>
2fff0462:	4907      	ldr	r1, [pc, #28]	; (2fff0480 <report_message_attributes+0x40>)
2fff0464:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
2fff0468:	b132      	cbz	r2, 2fff0478 <report_message_attributes+0x38>
2fff046a:	2208      	movs	r2, #8
2fff046c:	4669      	mov	r1, sp
2fff046e:	f7ff ffab 	bl	2fff03c8 <scmi_write_response>
2fff0472:	b003      	add	sp, #12
2fff0474:	f85d fb04 	ldr.w	pc, [sp], #4
2fff0478:	f06f 0103 	mvn.w	r1, #3
2fff047c:	4618      	mov	r0, r3
2fff047e:	e7ea      	b.n	2fff0456 <report_message_attributes+0x16>
2fff0480:	2fff9094 	.word	0x2fff9094

2fff0484 <report_version>:
2fff0484:	b507      	push	{r0, r1, r2, lr}
2fff0486:	f44f 3380 	mov.w	r3, #65536	; 0x10000
2fff048a:	2200      	movs	r2, #0
2fff048c:	e9cd 2300 	strd	r2, r3, [sp]
2fff0490:	6903      	ldr	r3, [r0, #16]
2fff0492:	b133      	cbz	r3, 2fff04a2 <report_version+0x1e>
2fff0494:	f06f 0109 	mvn.w	r1, #9
2fff0498:	f7ff ff7e 	bl	2fff0398 <scmi_status_response>
2fff049c:	b003      	add	sp, #12
2fff049e:	f85d fb04 	ldr.w	pc, [sp], #4
2fff04a2:	2208      	movs	r2, #8
2fff04a4:	4669      	mov	r1, sp
2fff04a6:	f7ff ff8f 	bl	2fff03c8 <scmi_write_response>
2fff04aa:	e7f7      	b.n	2fff049c <report_version+0x18>

2fff04ac <report_attributes>:
2fff04ac:	b513      	push	{r0, r1, r4, lr}
2fff04ae:	4604      	mov	r4, r0
2fff04b0:	6800      	ldr	r0, [r0, #0]
2fff04b2:	2300      	movs	r3, #0
2fff04b4:	9300      	str	r3, [sp, #0]
2fff04b6:	f000 fa3d 	bl	2fff0934 <plat_scmi_rd_count>
2fff04ba:	6923      	ldr	r3, [r4, #16]
2fff04bc:	9001      	str	r0, [sp, #4]
2fff04be:	b133      	cbz	r3, 2fff04ce <report_attributes+0x22>
2fff04c0:	f06f 0109 	mvn.w	r1, #9
2fff04c4:	4620      	mov	r0, r4
2fff04c6:	f7ff ff67 	bl	2fff0398 <scmi_status_response>
2fff04ca:	b002      	add	sp, #8
2fff04cc:	bd10      	pop	{r4, pc}
2fff04ce:	2208      	movs	r2, #8
2fff04d0:	4669      	mov	r1, sp
2fff04d2:	4620      	mov	r0, r4
2fff04d4:	f7ff ff78 	bl	2fff03c8 <scmi_write_response>
2fff04d8:	e7f7      	b.n	2fff04ca <report_attributes+0x1e>
	...

2fff04dc <reset_domain_attributes>:
2fff04dc:	6903      	ldr	r3, [r0, #16]
2fff04de:	b570      	push	{r4, r5, r6, lr}
2fff04e0:	2b04      	cmp	r3, #4
2fff04e2:	b088      	sub	sp, #32
2fff04e4:	4604      	mov	r4, r0
2fff04e6:	d005      	beq.n	2fff04f4 <reset_domain_attributes+0x18>
2fff04e8:	f06f 0109 	mvn.w	r1, #9
2fff04ec:	f7ff ff54 	bl	2fff0398 <scmi_status_response>
2fff04f0:	b008      	add	sp, #32
2fff04f2:	bd70      	pop	{r4, r5, r6, pc}
2fff04f4:	68c5      	ldr	r5, [r0, #12]
2fff04f6:	6800      	ldr	r0, [r0, #0]
2fff04f8:	682e      	ldr	r6, [r5, #0]
2fff04fa:	f000 fa1b 	bl	2fff0934 <plat_scmi_rd_count>
2fff04fe:	4286      	cmp	r6, r0
2fff0500:	d303      	bcc.n	2fff050a <reset_domain_attributes+0x2e>
2fff0502:	f06f 0101 	mvn.w	r1, #1
2fff0506:	4620      	mov	r0, r4
2fff0508:	e7f0      	b.n	2fff04ec <reset_domain_attributes+0x10>
2fff050a:	682d      	ldr	r5, [r5, #0]
2fff050c:	6820      	ldr	r0, [r4, #0]
2fff050e:	f000 fa11 	bl	2fff0934 <plat_scmi_rd_count>
2fff0512:	4629      	mov	r1, r5
2fff0514:	4281      	cmp	r1, r0
2fff0516:	bf28      	it	cs
2fff0518:	2100      	movcs	r1, #0
2fff051a:	f3af 8014 	nop.w	{20}
2fff051e:	6820      	ldr	r0, [r4, #0]
2fff0520:	f000 fa01 	bl	2fff0926 <plat_scmi_rd_get_name>
2fff0524:	4605      	mov	r5, r0
2fff0526:	b910      	cbnz	r0, 2fff052e <reset_domain_attributes+0x52>
2fff0528:	f06f 0103 	mvn.w	r1, #3
2fff052c:	e7eb      	b.n	2fff0506 <reset_domain_attributes+0x2a>
2fff052e:	211c      	movs	r1, #28
2fff0530:	a801      	add	r0, sp, #4
2fff0532:	f006 ed54 	blx	2fff6fdc <zero_normalmem>
2fff0536:	2300      	movs	r3, #0
2fff0538:	4628      	mov	r0, r5
2fff053a:	9301      	str	r3, [sp, #4]
2fff053c:	9302      	str	r3, [sp, #8]
2fff053e:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
2fff0542:	9303      	str	r3, [sp, #12]
2fff0544:	f007 fdda 	bl	2fff80fc <strlen>
2fff0548:	280f      	cmp	r0, #15
2fff054a:	d903      	bls.n	2fff0554 <reset_domain_attributes+0x78>
2fff054c:	4807      	ldr	r0, [pc, #28]	; (2fff056c <reset_domain_attributes+0x90>)
2fff054e:	2182      	movs	r1, #130	; 0x82
2fff0550:	f007 fc2a 	bl	2fff7da8 <__assert>
2fff0554:	2210      	movs	r2, #16
2fff0556:	4629      	mov	r1, r5
2fff0558:	eb0d 0002 	add.w	r0, sp, r2
2fff055c:	f007 fdb3 	bl	2fff80c6 <strlcpy>
2fff0560:	221c      	movs	r2, #28
2fff0562:	a901      	add	r1, sp, #4
2fff0564:	4620      	mov	r0, r4
2fff0566:	f7ff ff2f 	bl	2fff03c8 <scmi_write_response>
2fff056a:	e7c1      	b.n	2fff04f0 <reset_domain_attributes+0x14>
2fff056c:	2fff9070 	.word	0x2fff9070

2fff0570 <reset_request>:
2fff0570:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2fff0572:	2300      	movs	r3, #0
2fff0574:	68c6      	ldr	r6, [r0, #12]
2fff0576:	4604      	mov	r4, r0
2fff0578:	6800      	ldr	r0, [r0, #0]
2fff057a:	9301      	str	r3, [sp, #4]
2fff057c:	6835      	ldr	r5, [r6, #0]
2fff057e:	f000 f9d9 	bl	2fff0934 <plat_scmi_rd_count>
2fff0582:	4285      	cmp	r5, r0
2fff0584:	bf28      	it	cs
2fff0586:	2500      	movcs	r5, #0
2fff0588:	f3af 8014 	nop.w	{20}
2fff058c:	6923      	ldr	r3, [r4, #16]
2fff058e:	2b0c      	cmp	r3, #12
2fff0590:	d006      	beq.n	2fff05a0 <reset_request+0x30>
2fff0592:	f06f 0109 	mvn.w	r1, #9
2fff0596:	4620      	mov	r0, r4
2fff0598:	f7ff fefe 	bl	2fff0398 <scmi_status_response>
2fff059c:	b003      	add	sp, #12
2fff059e:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff05a0:	6837      	ldr	r7, [r6, #0]
2fff05a2:	6820      	ldr	r0, [r4, #0]
2fff05a4:	f000 f9c6 	bl	2fff0934 <plat_scmi_rd_count>
2fff05a8:	4287      	cmp	r7, r0
2fff05aa:	d302      	bcc.n	2fff05b2 <reset_request+0x42>
2fff05ac:	f06f 0103 	mvn.w	r1, #3
2fff05b0:	e7f1      	b.n	2fff0596 <reset_request+0x26>
2fff05b2:	6872      	ldr	r2, [r6, #4]
2fff05b4:	6820      	ldr	r0, [r4, #0]
2fff05b6:	07d3      	lsls	r3, r2, #31
2fff05b8:	d50e      	bpl.n	2fff05d8 <reset_request+0x68>
2fff05ba:	68b2      	ldr	r2, [r6, #8]
2fff05bc:	4629      	mov	r1, r5
2fff05be:	f000 f9c5 	bl	2fff094c <plat_scmi_rd_autonomous>
2fff05c2:	9001      	str	r0, [sp, #4]
2fff05c4:	9901      	ldr	r1, [sp, #4]
2fff05c6:	2900      	cmp	r1, #0
2fff05c8:	d1e5      	bne.n	2fff0596 <reset_request+0x26>
2fff05ca:	2204      	movs	r2, #4
2fff05cc:	4620      	mov	r0, r4
2fff05ce:	eb0d 0102 	add.w	r1, sp, r2
2fff05d2:	f7ff fef9 	bl	2fff03c8 <scmi_write_response>
2fff05d6:	e7e1      	b.n	2fff059c <reset_request+0x2c>
2fff05d8:	f012 0202 	ands.w	r2, r2, #2
2fff05dc:	4629      	mov	r1, r5
2fff05de:	bf18      	it	ne
2fff05e0:	2201      	movne	r2, #1
2fff05e2:	f000 f9dc 	bl	2fff099e <plat_scmi_rd_set_state>
2fff05e6:	e7ec      	b.n	2fff05c2 <reset_request+0x52>

2fff05e8 <scmi_msg_get_rd_handler>:
2fff05e8:	6883      	ldr	r3, [r0, #8]
2fff05ea:	2b04      	cmp	r3, #4
2fff05ec:	d809      	bhi.n	2fff0602 <scmi_msg_get_rd_handler+0x1a>
2fff05ee:	2205      	movs	r2, #5
2fff05f0:	4293      	cmp	r3, r2
2fff05f2:	bf28      	it	cs
2fff05f4:	2300      	movcs	r3, #0
2fff05f6:	f3af 8014 	nop.w	{20}
2fff05fa:	4a03      	ldr	r2, [pc, #12]	; (2fff0608 <scmi_msg_get_rd_handler+0x20>)
2fff05fc:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
2fff0600:	4770      	bx	lr
2fff0602:	2000      	movs	r0, #0
2fff0604:	4770      	bx	lr
2fff0606:	bf00      	nop
2fff0608:	2fff9094 	.word	0x2fff9094

2fff060c <scmi_proccess_smt>:
2fff060c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2fff0610:	b088      	sub	sp, #32
2fff0612:	4680      	mov	r8, r0
2fff0614:	4689      	mov	r9, r1
2fff0616:	f000 f8af 	bl	2fff0778 <plat_scmi_get_channel>
2fff061a:	4605      	mov	r5, r0
2fff061c:	2800      	cmp	r0, #0
2fff061e:	d041      	beq.n	2fff06a4 <scmi_proccess_smt+0x98>
2fff0620:	6804      	ldr	r4, [r0, #0]
2fff0622:	b91c      	cbnz	r4, 2fff062c <scmi_proccess_smt+0x20>
2fff0624:	217b      	movs	r1, #123	; 0x7b
2fff0626:	4823      	ldr	r0, [pc, #140]	; (2fff06b4 <scmi_proccess_smt+0xa8>)
2fff0628:	f007 fbbe 	bl	2fff7da8 <__assert>
2fff062c:	4822      	ldr	r0, [pc, #136]	; (2fff06b8 <scmi_proccess_smt+0xac>)
2fff062e:	f8d4 a004 	ldr.w	sl, [r4, #4]
2fff0632:	f006 eaf8 	blx	2fff6c24 <spin_lock>
2fff0636:	7a2f      	ldrb	r7, [r5, #8]
2fff0638:	b90f      	cbnz	r7, 2fff063e <scmi_proccess_smt+0x32>
2fff063a:	2301      	movs	r3, #1
2fff063c:	722b      	strb	r3, [r5, #8]
2fff063e:	481e      	ldr	r0, [pc, #120]	; (2fff06b8 <scmi_proccess_smt+0xac>)
2fff0640:	f006 eb02 	blx	2fff6c48 <spin_unlock>
2fff0644:	bb8f      	cbnz	r7, 2fff06aa <scmi_proccess_smt+0x9e>
2fff0646:	6966      	ldr	r6, [r4, #20]
2fff0648:	3e04      	subs	r6, #4
2fff064a:	2e5c      	cmp	r6, #92	; 0x5c
2fff064c:	d82d      	bhi.n	2fff06aa <scmi_proccess_smt+0x9e>
2fff064e:	f01a 0f03 	tst.w	sl, #3
2fff0652:	d12a      	bne.n	2fff06aa <scmi_proccess_smt+0x9e>
2fff0654:	2120      	movs	r1, #32
2fff0656:	4668      	mov	r0, sp
2fff0658:	f006 ecc0 	blx	2fff6fdc <zero_normalmem>
2fff065c:	686b      	ldr	r3, [r5, #4]
2fff065e:	f104 011c 	add.w	r1, r4, #28
2fff0662:	f8cd 900c 	str.w	r9, [sp, #12]
2fff0666:	9604      	str	r6, [sp, #16]
2fff0668:	3b20      	subs	r3, #32
2fff066a:	9105      	str	r1, [sp, #20]
2fff066c:	2b03      	cmp	r3, #3
2fff066e:	9306      	str	r3, [sp, #24]
2fff0670:	d801      	bhi.n	2fff0676 <scmi_proccess_smt+0x6a>
2fff0672:	2199      	movs	r1, #153	; 0x99
2fff0674:	e7d7      	b.n	2fff0626 <scmi_proccess_smt+0x1a>
2fff0676:	4632      	mov	r2, r6
2fff0678:	4648      	mov	r0, r9
2fff067a:	f007 fbbd 	bl	2fff7df8 <memcpy>
2fff067e:	69a3      	ldr	r3, [r4, #24]
2fff0680:	4668      	mov	r0, sp
2fff0682:	f8cd 8000 	str.w	r8, [sp]
2fff0686:	f3c3 2287 	ubfx	r2, r3, #10, #8
2fff068a:	b2db      	uxtb	r3, r3
2fff068c:	9302      	str	r3, [sp, #8]
2fff068e:	9201      	str	r2, [sp, #4]
2fff0690:	f7ff feb0 	bl	2fff03f4 <scmi_process_message>
2fff0694:	9b07      	ldr	r3, [sp, #28]
2fff0696:	3304      	adds	r3, #4
2fff0698:	6163      	str	r3, [r4, #20]
2fff069a:	6863      	ldr	r3, [r4, #4]
2fff069c:	722f      	strb	r7, [r5, #8]
2fff069e:	f043 0301 	orr.w	r3, r3, #1
2fff06a2:	6063      	str	r3, [r4, #4]
2fff06a4:	b008      	add	sp, #32
2fff06a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff06aa:	6863      	ldr	r3, [r4, #4]
2fff06ac:	f043 0303 	orr.w	r3, r3, #3
2fff06b0:	e7f7      	b.n	2fff06a2 <scmi_proccess_smt+0x96>
2fff06b2:	bf00      	nop
2fff06b4:	2fff90a8 	.word	0x2fff90a8
2fff06b8:	2fffccc0 	.word	0x2fffccc0

2fff06bc <scmi_smt_fastcall_smc_entry>:
2fff06bc:	b510      	push	{r4, lr}
2fff06be:	4604      	mov	r4, r0
2fff06c0:	f006 eebe 	blx	2fff7440 <plat_my_core_pos>
2fff06c4:	4b04      	ldr	r3, [pc, #16]	; (2fff06d8 <scmi_smt_fastcall_smc_entry+0x1c>)
2fff06c6:	215c      	movs	r1, #92	; 0x5c
2fff06c8:	fb01 3100 	mla	r1, r1, r0, r3
2fff06cc:	4620      	mov	r0, r4
2fff06ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff06d2:	f7ff bf9b 	b.w	2fff060c <scmi_proccess_smt>
2fff06d6:	bf00      	nop
2fff06d8:	2fffcc08 	.word	0x2fffcc08

2fff06dc <scmi_smt_init_agent_channel>:
2fff06dc:	b510      	push	{r4, lr}
2fff06de:	b148      	cbz	r0, 2fff06f4 <scmi_smt_init_agent_channel+0x18>
2fff06e0:	6804      	ldr	r4, [r0, #0]
2fff06e2:	b13c      	cbz	r4, 2fff06f4 <scmi_smt_init_agent_channel+0x18>
2fff06e4:	2220      	movs	r2, #32
2fff06e6:	2100      	movs	r1, #0
2fff06e8:	4620      	mov	r0, r4
2fff06ea:	f007 fba6 	bl	2fff7e3a <memset>
2fff06ee:	2301      	movs	r3, #1
2fff06f0:	6063      	str	r3, [r4, #4]
2fff06f2:	bd10      	pop	{r4, pc}
2fff06f4:	f000 fae6 	bl	2fff0cc4 <console_flush>
2fff06f8:	f006 eb1a 	blx	2fff6d30 <do_panic>

2fff06fc <plat_scmi_protocol_count_paranoid>:
2fff06fc:	2002      	movs	r0, #2
2fff06fe:	4770      	bx	lr

2fff0700 <find_resource.part.0>:
2fff0700:	b508      	push	{r3, lr}
2fff0702:	219c      	movs	r1, #156	; 0x9c
2fff0704:	4801      	ldr	r0, [pc, #4]	; (2fff070c <find_resource.part.0+0xc>)
2fff0706:	f007 fb4f 	bl	2fff7da8 <__assert>
2fff070a:	bf00      	nop
2fff070c:	2fff90e4 	.word	0x2fff90e4

2fff0710 <find_clock>:
2fff0710:	2801      	cmp	r0, #1
2fff0712:	b510      	push	{r4, lr}
2fff0714:	d808      	bhi.n	2fff0728 <find_clock+0x18>
2fff0716:	4a0a      	ldr	r2, [pc, #40]	; (2fff0740 <find_clock+0x30>)
2fff0718:	0100      	lsls	r0, r0, #4
2fff071a:	1813      	adds	r3, r2, r0
2fff071c:	685c      	ldr	r4, [r3, #4]
2fff071e:	2300      	movs	r3, #0
2fff0720:	42a3      	cmp	r3, r4
2fff0722:	d103      	bne.n	2fff072c <find_clock+0x1c>
2fff0724:	2000      	movs	r0, #0
2fff0726:	e007      	b.n	2fff0738 <find_clock+0x28>
2fff0728:	f7ff ffea 	bl	2fff0700 <find_resource.part.0>
2fff072c:	4299      	cmp	r1, r3
2fff072e:	d104      	bne.n	2fff073a <find_clock+0x2a>
2fff0730:	5810      	ldr	r0, [r2, r0]
2fff0732:	230c      	movs	r3, #12
2fff0734:	fb03 0001 	mla	r0, r3, r1, r0
2fff0738:	bd10      	pop	{r4, pc}
2fff073a:	3301      	adds	r3, #1
2fff073c:	e7f0      	b.n	2fff0720 <find_clock+0x10>
2fff073e:	bf00      	nop
2fff0740:	2fff90c4 	.word	0x2fff90c4

2fff0744 <find_rd>:
2fff0744:	2801      	cmp	r0, #1
2fff0746:	b510      	push	{r4, lr}
2fff0748:	d808      	bhi.n	2fff075c <find_rd+0x18>
2fff074a:	4b0a      	ldr	r3, [pc, #40]	; (2fff0774 <find_rd+0x30>)
2fff074c:	0100      	lsls	r0, r0, #4
2fff074e:	181a      	adds	r2, r3, r0
2fff0750:	68d4      	ldr	r4, [r2, #12]
2fff0752:	2200      	movs	r2, #0
2fff0754:	42a2      	cmp	r2, r4
2fff0756:	d103      	bne.n	2fff0760 <find_rd+0x1c>
2fff0758:	2000      	movs	r0, #0
2fff075a:	e007      	b.n	2fff076c <find_rd+0x28>
2fff075c:	f7ff ffd0 	bl	2fff0700 <find_resource.part.0>
2fff0760:	4291      	cmp	r1, r2
2fff0762:	d104      	bne.n	2fff076e <find_rd+0x2a>
2fff0764:	4403      	add	r3, r0
2fff0766:	6898      	ldr	r0, [r3, #8]
2fff0768:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
2fff076c:	bd10      	pop	{r4, pc}
2fff076e:	3201      	adds	r2, #1
2fff0770:	e7f0      	b.n	2fff0754 <find_rd+0x10>
2fff0772:	bf00      	nop
2fff0774:	2fff90c4 	.word	0x2fff90c4

2fff0778 <plat_scmi_get_channel>:
2fff0778:	2801      	cmp	r0, #1
2fff077a:	b508      	push	{r3, lr}
2fff077c:	d903      	bls.n	2fff0786 <plat_scmi_get_channel+0xe>
2fff077e:	4804      	ldr	r0, [pc, #16]	; (2fff0790 <plat_scmi_get_channel+0x18>)
2fff0780:	2147      	movs	r1, #71	; 0x47
2fff0782:	f007 fb11 	bl	2fff7da8 <__assert>
2fff0786:	4b03      	ldr	r3, [pc, #12]	; (2fff0794 <plat_scmi_get_channel+0x1c>)
2fff0788:	eb03 1000 	add.w	r0, r3, r0, lsl #4
2fff078c:	bd08      	pop	{r3, pc}
2fff078e:	bf00      	nop
2fff0790:	2fff90e4 	.word	0x2fff90e4
2fff0794:	2fffb20c 	.word	0x2fffb20c

2fff0798 <plat_scmi_vendor_name>:
2fff0798:	4800      	ldr	r0, [pc, #0]	; (2fff079c <plat_scmi_vendor_name+0x4>)
2fff079a:	4770      	bx	lr
2fff079c:	2fff9217 	.word	0x2fff9217

2fff07a0 <plat_scmi_sub_vendor_name>:
2fff07a0:	4800      	ldr	r0, [pc, #0]	; (2fff07a4 <plat_scmi_sub_vendor_name+0x4>)
2fff07a2:	4770      	bx	lr
2fff07a4:	2fff9216 	.word	0x2fff9216

2fff07a8 <plat_scmi_protocol_count>:
2fff07a8:	b508      	push	{r3, lr}
2fff07aa:	f7ff ffa7 	bl	2fff06fc <plat_scmi_protocol_count_paranoid>
2fff07ae:	2802      	cmp	r0, #2
2fff07b0:	d003      	beq.n	2fff07ba <plat_scmi_protocol_count+0x12>
2fff07b2:	4802      	ldr	r0, [pc, #8]	; (2fff07bc <plat_scmi_protocol_count+0x14>)
2fff07b4:	21d1      	movs	r1, #209	; 0xd1
2fff07b6:	f007 faf7 	bl	2fff7da8 <__assert>
2fff07ba:	bd08      	pop	{r3, pc}
2fff07bc:	2fff90e4 	.word	0x2fff90e4

2fff07c0 <plat_scmi_protocol_list>:
2fff07c0:	b508      	push	{r3, lr}
2fff07c2:	f7ff ff9b 	bl	2fff06fc <plat_scmi_protocol_count_paranoid>
2fff07c6:	2802      	cmp	r0, #2
2fff07c8:	d003      	beq.n	2fff07d2 <plat_scmi_protocol_list+0x12>
2fff07ca:	4803      	ldr	r0, [pc, #12]	; (2fff07d8 <plat_scmi_protocol_list+0x18>)
2fff07cc:	21d9      	movs	r1, #217	; 0xd9
2fff07ce:	f007 faeb 	bl	2fff7da8 <__assert>
2fff07d2:	4802      	ldr	r0, [pc, #8]	; (2fff07dc <plat_scmi_protocol_list+0x1c>)
2fff07d4:	bd08      	pop	{r3, pc}
2fff07d6:	bf00      	nop
2fff07d8:	2fff90e4 	.word	0x2fff90e4
2fff07dc:	2fff9105 	.word	0x2fff9105

2fff07e0 <plat_scmi_clock_count>:
2fff07e0:	2801      	cmp	r0, #1
2fff07e2:	b508      	push	{r3, lr}
2fff07e4:	d901      	bls.n	2fff07ea <plat_scmi_clock_count+0xa>
2fff07e6:	f7ff ff8b 	bl	2fff0700 <find_resource.part.0>
2fff07ea:	4b02      	ldr	r3, [pc, #8]	; (2fff07f4 <plat_scmi_clock_count+0x14>)
2fff07ec:	eb03 1000 	add.w	r0, r3, r0, lsl #4
2fff07f0:	6840      	ldr	r0, [r0, #4]
2fff07f2:	bd08      	pop	{r3, pc}
2fff07f4:	2fff90c4 	.word	0x2fff90c4

2fff07f8 <plat_scmi_clock_get_name>:
2fff07f8:	b510      	push	{r4, lr}
2fff07fa:	f7ff ff89 	bl	2fff0710 <find_clock>
2fff07fe:	4604      	mov	r4, r0
2fff0800:	b908      	cbnz	r0, 2fff0806 <plat_scmi_clock_get_name+0xe>
2fff0802:	2000      	movs	r0, #0
2fff0804:	bd10      	pop	{r4, pc}
2fff0806:	6800      	ldr	r0, [r0, #0]
2fff0808:	f7fe fa9a 	bl	2ffeed40 <stm32mp_nsec_can_access_clock>
2fff080c:	2800      	cmp	r0, #0
2fff080e:	d0f8      	beq.n	2fff0802 <plat_scmi_clock_get_name+0xa>
2fff0810:	6860      	ldr	r0, [r4, #4]
2fff0812:	e7f7      	b.n	2fff0804 <plat_scmi_clock_get_name+0xc>

2fff0814 <plat_scmi_clock_rates_array>:
2fff0814:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff0818:	4770      	bx	lr

2fff081a <plat_scmi_clock_rates_by_step>:
2fff081a:	b570      	push	{r4, r5, r6, lr}
2fff081c:	460e      	mov	r6, r1
2fff081e:	4614      	mov	r4, r2
2fff0820:	f7ff ff76 	bl	2fff0710 <find_clock>
2fff0824:	4605      	mov	r5, r0
2fff0826:	b1a0      	cbz	r0, 2fff0852 <plat_scmi_clock_rates_by_step+0x38>
2fff0828:	6800      	ldr	r0, [r0, #0]
2fff082a:	f7fe fa89 	bl	2ffeed40 <stm32mp_nsec_can_access_clock>
2fff082e:	b198      	cbz	r0, 2fff0858 <plat_scmi_clock_rates_by_step+0x3e>
2fff0830:	2e07      	cmp	r6, #7
2fff0832:	d106      	bne.n	2fff0842 <plat_scmi_clock_rates_by_step+0x28>
2fff0834:	2000      	movs	r0, #0
2fff0836:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
2fff083a:	2301      	movs	r3, #1
2fff083c:	e884 000d 	stmia.w	r4, {r0, r2, r3}
2fff0840:	bd70      	pop	{r4, r5, r6, pc}
2fff0842:	6828      	ldr	r0, [r5, #0]
2fff0844:	f002 febc 	bl	2fff35c0 <stm32mp_clk_get_rate>
2fff0848:	6020      	str	r0, [r4, #0]
2fff084a:	6060      	str	r0, [r4, #4]
2fff084c:	2000      	movs	r0, #0
2fff084e:	60a0      	str	r0, [r4, #8]
2fff0850:	e7f6      	b.n	2fff0840 <plat_scmi_clock_rates_by_step+0x26>
2fff0852:	f06f 0003 	mvn.w	r0, #3
2fff0856:	e7f3      	b.n	2fff0840 <plat_scmi_clock_rates_by_step+0x26>
2fff0858:	f06f 0002 	mvn.w	r0, #2
2fff085c:	e7f0      	b.n	2fff0840 <plat_scmi_clock_rates_by_step+0x26>

2fff085e <plat_scmi_clock_set_rate>:
2fff085e:	b570      	push	{r4, r5, r6, lr}
2fff0860:	460e      	mov	r6, r1
2fff0862:	4615      	mov	r5, r2
2fff0864:	f7ff ff54 	bl	2fff0710 <find_clock>
2fff0868:	4604      	mov	r4, r0
2fff086a:	b1b0      	cbz	r0, 2fff089a <plat_scmi_clock_set_rate+0x3c>
2fff086c:	6800      	ldr	r0, [r0, #0]
2fff086e:	f7fe fa67 	bl	2ffeed40 <stm32mp_nsec_can_access_clock>
2fff0872:	b1a8      	cbz	r0, 2fff08a0 <plat_scmi_clock_set_rate+0x42>
2fff0874:	2e07      	cmp	r6, #7
2fff0876:	d109      	bne.n	2fff088c <plat_scmi_clock_set_rate+0x2e>
2fff0878:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
2fff087c:	fbb5 f0f0 	udiv	r0, r5, r0
2fff0880:	f003 f840 	bl	2fff3904 <stm32mp1_set_opp_khz>
2fff0884:	b138      	cbz	r0, 2fff0896 <plat_scmi_clock_set_rate+0x38>
2fff0886:	f06f 0001 	mvn.w	r0, #1
2fff088a:	bd70      	pop	{r4, r5, r6, pc}
2fff088c:	6820      	ldr	r0, [r4, #0]
2fff088e:	f002 fe97 	bl	2fff35c0 <stm32mp_clk_get_rate>
2fff0892:	42a8      	cmp	r0, r5
2fff0894:	d1f7      	bne.n	2fff0886 <plat_scmi_clock_set_rate+0x28>
2fff0896:	2000      	movs	r0, #0
2fff0898:	e7f7      	b.n	2fff088a <plat_scmi_clock_set_rate+0x2c>
2fff089a:	f06f 0003 	mvn.w	r0, #3
2fff089e:	e7f4      	b.n	2fff088a <plat_scmi_clock_set_rate+0x2c>
2fff08a0:	f06f 0002 	mvn.w	r0, #2
2fff08a4:	e7f1      	b.n	2fff088a <plat_scmi_clock_set_rate+0x2c>

2fff08a6 <plat_scmi_clock_get_rate>:
2fff08a6:	b510      	push	{r4, lr}
2fff08a8:	f7ff ff32 	bl	2fff0710 <find_clock>
2fff08ac:	4604      	mov	r4, r0
2fff08ae:	b140      	cbz	r0, 2fff08c2 <plat_scmi_clock_get_rate+0x1c>
2fff08b0:	6800      	ldr	r0, [r0, #0]
2fff08b2:	f7fe fa45 	bl	2ffeed40 <stm32mp_nsec_can_access_clock>
2fff08b6:	b120      	cbz	r0, 2fff08c2 <plat_scmi_clock_get_rate+0x1c>
2fff08b8:	6820      	ldr	r0, [r4, #0]
2fff08ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff08be:	f002 be7f 	b.w	2fff35c0 <stm32mp_clk_get_rate>
2fff08c2:	2000      	movs	r0, #0
2fff08c4:	bd10      	pop	{r4, pc}

2fff08c6 <plat_scmi_clock_get_state>:
2fff08c6:	b510      	push	{r4, lr}
2fff08c8:	f7ff ff22 	bl	2fff0710 <find_clock>
2fff08cc:	4604      	mov	r4, r0
2fff08ce:	b908      	cbnz	r0, 2fff08d4 <plat_scmi_clock_get_state+0xe>
2fff08d0:	2000      	movs	r0, #0
2fff08d2:	bd10      	pop	{r4, pc}
2fff08d4:	6800      	ldr	r0, [r0, #0]
2fff08d6:	f7fe fa33 	bl	2ffeed40 <stm32mp_nsec_can_access_clock>
2fff08da:	2800      	cmp	r0, #0
2fff08dc:	d0f8      	beq.n	2fff08d0 <plat_scmi_clock_get_state+0xa>
2fff08de:	7a20      	ldrb	r0, [r4, #8]
2fff08e0:	e7f7      	b.n	2fff08d2 <plat_scmi_clock_get_state+0xc>

2fff08e2 <plat_scmi_clock_set_state>:
2fff08e2:	b570      	push	{r4, r5, r6, lr}
2fff08e4:	4616      	mov	r6, r2
2fff08e6:	f7ff ff13 	bl	2fff0710 <find_clock>
2fff08ea:	4605      	mov	r5, r0
2fff08ec:	b1a8      	cbz	r0, 2fff091a <plat_scmi_clock_set_state+0x38>
2fff08ee:	6800      	ldr	r0, [r0, #0]
2fff08f0:	f7fe fa26 	bl	2ffeed40 <stm32mp_nsec_can_access_clock>
2fff08f4:	b1a0      	cbz	r0, 2fff0920 <plat_scmi_clock_set_state+0x3e>
2fff08f6:	7a2c      	ldrb	r4, [r5, #8]
2fff08f8:	b13e      	cbz	r6, 2fff090a <plat_scmi_clock_set_state+0x28>
2fff08fa:	b964      	cbnz	r4, 2fff0916 <plat_scmi_clock_set_state+0x34>
2fff08fc:	6828      	ldr	r0, [r5, #0]
2fff08fe:	f002 fe33 	bl	2fff3568 <stm32mp_clk_enable>
2fff0902:	2301      	movs	r3, #1
2fff0904:	722b      	strb	r3, [r5, #8]
2fff0906:	4620      	mov	r0, r4
2fff0908:	e009      	b.n	2fff091e <plat_scmi_clock_set_state+0x3c>
2fff090a:	2c00      	cmp	r4, #0
2fff090c:	d0fb      	beq.n	2fff0906 <plat_scmi_clock_set_state+0x24>
2fff090e:	6828      	ldr	r0, [r5, #0]
2fff0910:	f002 fe2d 	bl	2fff356e <stm32mp_clk_disable>
2fff0914:	722e      	strb	r6, [r5, #8]
2fff0916:	2000      	movs	r0, #0
2fff0918:	e001      	b.n	2fff091e <plat_scmi_clock_set_state+0x3c>
2fff091a:	f06f 0003 	mvn.w	r0, #3
2fff091e:	bd70      	pop	{r4, r5, r6, pc}
2fff0920:	f06f 0002 	mvn.w	r0, #2
2fff0924:	e7fb      	b.n	2fff091e <plat_scmi_clock_set_state+0x3c>

2fff0926 <plat_scmi_rd_get_name>:
2fff0926:	b508      	push	{r3, lr}
2fff0928:	f7ff ff0c 	bl	2fff0744 <find_rd>
2fff092c:	b100      	cbz	r0, 2fff0930 <plat_scmi_rd_get_name+0xa>
2fff092e:	6840      	ldr	r0, [r0, #4]
2fff0930:	bd08      	pop	{r3, pc}
	...

2fff0934 <plat_scmi_rd_count>:
2fff0934:	2801      	cmp	r0, #1
2fff0936:	b508      	push	{r3, lr}
2fff0938:	d901      	bls.n	2fff093e <plat_scmi_rd_count+0xa>
2fff093a:	f7ff fee1 	bl	2fff0700 <find_resource.part.0>
2fff093e:	4b02      	ldr	r3, [pc, #8]	; (2fff0948 <plat_scmi_rd_count+0x14>)
2fff0940:	eb03 1000 	add.w	r0, r3, r0, lsl #4
2fff0944:	68c0      	ldr	r0, [r0, #12]
2fff0946:	bd08      	pop	{r3, pc}
2fff0948:	2fff90c4 	.word	0x2fff90c4

2fff094c <plat_scmi_rd_autonomous>:
2fff094c:	b538      	push	{r3, r4, r5, lr}
2fff094e:	4615      	mov	r5, r2
2fff0950:	f7ff fef8 	bl	2fff0744 <find_rd>
2fff0954:	4604      	mov	r4, r0
2fff0956:	b1e0      	cbz	r0, 2fff0992 <plat_scmi_rd_autonomous+0x46>
2fff0958:	6800      	ldr	r0, [r0, #0]
2fff095a:	f5b0 6f06 	cmp.w	r0, #2144	; 0x860
2fff095e:	d102      	bne.n	2fff0966 <plat_scmi_rd_autonomous+0x1a>
2fff0960:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff0964:	bd38      	pop	{r3, r4, r5, pc}
2fff0966:	f7fe fa51 	bl	2ffeee0c <stm32mp_nsec_can_access_reset>
2fff096a:	b1a8      	cbz	r0, 2fff0998 <plat_scmi_rd_autonomous+0x4c>
2fff096c:	2d00      	cmp	r5, #0
2fff096e:	d1f7      	bne.n	2fff0960 <plat_scmi_rd_autonomous+0x14>
2fff0970:	6820      	ldr	r0, [r4, #0]
2fff0972:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2fff0976:	f005 fb59 	bl	2fff602c <stm32mp_reset_assert_to>
2fff097a:	b110      	cbz	r0, 2fff0982 <plat_scmi_rd_autonomous+0x36>
2fff097c:	f06f 0008 	mvn.w	r0, #8
2fff0980:	e7f0      	b.n	2fff0964 <plat_scmi_rd_autonomous+0x18>
2fff0982:	6820      	ldr	r0, [r4, #0]
2fff0984:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2fff0988:	f005 fb88 	bl	2fff609c <stm32mp_reset_deassert_to>
2fff098c:	2800      	cmp	r0, #0
2fff098e:	d0e9      	beq.n	2fff0964 <plat_scmi_rd_autonomous+0x18>
2fff0990:	e7f4      	b.n	2fff097c <plat_scmi_rd_autonomous+0x30>
2fff0992:	f06f 0003 	mvn.w	r0, #3
2fff0996:	e7e5      	b.n	2fff0964 <plat_scmi_rd_autonomous+0x18>
2fff0998:	f06f 0002 	mvn.w	r0, #2
2fff099c:	e7e2      	b.n	2fff0964 <plat_scmi_rd_autonomous+0x18>

2fff099e <plat_scmi_rd_set_state>:
2fff099e:	b538      	push	{r3, r4, r5, lr}
2fff09a0:	4614      	mov	r4, r2
2fff09a2:	f7ff fecf 	bl	2fff0744 <find_rd>
2fff09a6:	4605      	mov	r5, r0
2fff09a8:	b1a8      	cbz	r0, 2fff09d6 <plat_scmi_rd_set_state+0x38>
2fff09aa:	6800      	ldr	r0, [r0, #0]
2fff09ac:	f7fe fa2e 	bl	2ffeee0c <stm32mp_nsec_can_access_reset>
2fff09b0:	b1a0      	cbz	r0, 2fff09dc <plat_scmi_rd_set_state+0x3e>
2fff09b2:	6828      	ldr	r0, [r5, #0]
2fff09b4:	f5b0 6f06 	cmp.w	r0, #2144	; 0x860
2fff09b8:	d104      	bne.n	2fff09c4 <plat_scmi_rd_set_state+0x26>
2fff09ba:	4620      	mov	r0, r4
2fff09bc:	f005 fba8 	bl	2fff6110 <stm32mp_reset_assert_deassert_to_mcu>
2fff09c0:	2000      	movs	r0, #0
2fff09c2:	bd38      	pop	{r3, r4, r5, pc}
2fff09c4:	b11c      	cbz	r4, 2fff09ce <plat_scmi_rd_set_state+0x30>
2fff09c6:	2100      	movs	r1, #0
2fff09c8:	f005 fb30 	bl	2fff602c <stm32mp_reset_assert_to>
2fff09cc:	e7f8      	b.n	2fff09c0 <plat_scmi_rd_set_state+0x22>
2fff09ce:	4621      	mov	r1, r4
2fff09d0:	f005 fb64 	bl	2fff609c <stm32mp_reset_deassert_to>
2fff09d4:	e7f4      	b.n	2fff09c0 <plat_scmi_rd_set_state+0x22>
2fff09d6:	f06f 0003 	mvn.w	r0, #3
2fff09da:	e7f2      	b.n	2fff09c2 <plat_scmi_rd_set_state+0x24>
2fff09dc:	f06f 0002 	mvn.w	r0, #2
2fff09e0:	e7ef      	b.n	2fff09c2 <plat_scmi_rd_set_state+0x24>
	...

2fff09e4 <stm32mp1_init_scmi_server>:
2fff09e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2fff09e8:	f04f 080c 	mov.w	r8, #12
2fff09ec:	4c22      	ldr	r4, [pc, #136]	; (2fff0a78 <stm32mp1_init_scmi_server+0x94>)
2fff09ee:	4823      	ldr	r0, [pc, #140]	; (2fff0a7c <stm32mp1_init_scmi_server+0x98>)
2fff09f0:	f104 0720 	add.w	r7, r4, #32
2fff09f4:	f7ff fe72 	bl	2fff06dc <scmi_smt_init_agent_channel>
2fff09f8:	4821      	ldr	r0, [pc, #132]	; (2fff0a80 <stm32mp1_init_scmi_server+0x9c>)
2fff09fa:	f7ff fe6f 	bl	2fff06dc <scmi_smt_init_agent_channel>
2fff09fe:	2500      	movs	r5, #0
2fff0a00:	e020      	b.n	2fff0a44 <stm32mp1_init_scmi_server+0x60>
2fff0a02:	fb08 f605 	mul.w	r6, r8, r5
2fff0a06:	f8d4 9000 	ldr.w	r9, [r4]
2fff0a0a:	eb09 0a06 	add.w	sl, r9, r6
2fff0a0e:	f8da 0004 	ldr.w	r0, [sl, #4]
2fff0a12:	b930      	cbnz	r0, 2fff0a22 <stm32mp1_init_scmi_server+0x3e>
2fff0a14:	481b      	ldr	r0, [pc, #108]	; (2fff0a84 <stm32mp1_init_scmi_server+0xa0>)
2fff0a16:	f000 f8b3 	bl	2fff0b80 <tf_log>
2fff0a1a:	f000 f953 	bl	2fff0cc4 <console_flush>
2fff0a1e:	f006 e988 	blx	2fff6d30 <do_panic>
2fff0a22:	f007 fb6b 	bl	2fff80fc <strlen>
2fff0a26:	280f      	cmp	r0, #15
2fff0a28:	d8f4      	bhi.n	2fff0a14 <stm32mp1_init_scmi_server+0x30>
2fff0a2a:	f89a 3008 	ldrb.w	r3, [sl, #8]
2fff0a2e:	b143      	cbz	r3, 2fff0a42 <stm32mp1_init_scmi_server+0x5e>
2fff0a30:	f859 0006 	ldr.w	r0, [r9, r6]
2fff0a34:	f7fe f984 	bl	2ffeed40 <stm32mp_nsec_can_access_clock>
2fff0a38:	b118      	cbz	r0, 2fff0a42 <stm32mp1_init_scmi_server+0x5e>
2fff0a3a:	f859 0006 	ldr.w	r0, [r9, r6]
2fff0a3e:	f002 fd93 	bl	2fff3568 <stm32mp_clk_enable>
2fff0a42:	3501      	adds	r5, #1
2fff0a44:	6863      	ldr	r3, [r4, #4]
2fff0a46:	42ab      	cmp	r3, r5
2fff0a48:	d8db      	bhi.n	2fff0a02 <stm32mp1_init_scmi_server+0x1e>
2fff0a4a:	2500      	movs	r5, #0
2fff0a4c:	68e3      	ldr	r3, [r4, #12]
2fff0a4e:	42ab      	cmp	r3, r5
2fff0a50:	d804      	bhi.n	2fff0a5c <stm32mp1_init_scmi_server+0x78>
2fff0a52:	3410      	adds	r4, #16
2fff0a54:	42bc      	cmp	r4, r7
2fff0a56:	d1d2      	bne.n	2fff09fe <stm32mp1_init_scmi_server+0x1a>
2fff0a58:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff0a5c:	68a3      	ldr	r3, [r4, #8]
2fff0a5e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
2fff0a62:	6858      	ldr	r0, [r3, #4]
2fff0a64:	b908      	cbnz	r0, 2fff0a6a <stm32mp1_init_scmi_server+0x86>
2fff0a66:	4808      	ldr	r0, [pc, #32]	; (2fff0a88 <stm32mp1_init_scmi_server+0xa4>)
2fff0a68:	e7d5      	b.n	2fff0a16 <stm32mp1_init_scmi_server+0x32>
2fff0a6a:	f007 fb47 	bl	2fff80fc <strlen>
2fff0a6e:	280f      	cmp	r0, #15
2fff0a70:	d8f9      	bhi.n	2fff0a66 <stm32mp1_init_scmi_server+0x82>
2fff0a72:	3501      	adds	r5, #1
2fff0a74:	e7ea      	b.n	2fff0a4c <stm32mp1_init_scmi_server+0x68>
2fff0a76:	bf00      	nop
2fff0a78:	2fff90c4 	.word	0x2fff90c4
2fff0a7c:	2fffb20c 	.word	0x2fffb20c
2fff0a80:	2fffb21c 	.word	0x2fffb21c
2fff0a84:	2fff9108 	.word	0x2fff9108
2fff0a88:	2fff9122 	.word	0x2fff9122

2fff0a8c <stm32mp1_pm_save_scmi_state>:
2fff0a8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff0a8e:	4604      	mov	r4, r0
2fff0a90:	4f1a      	ldr	r7, [pc, #104]	; (2fff0afc <stm32mp1_pm_save_scmi_state+0x70>)
2fff0a92:	460d      	mov	r5, r1
2fff0a94:	2601      	movs	r6, #1
2fff0a96:	f006 eaa2 	blx	2fff6fdc <zero_normalmem>
2fff0a9a:	2300      	movs	r3, #0
2fff0a9c:	f04f 0c0c 	mov.w	ip, #12
2fff0aa0:	08d9      	lsrs	r1, r3, #3
2fff0aa2:	428d      	cmp	r5, r1
2fff0aa4:	d325      	bcc.n	2fff0af2 <stm32mp1_pm_save_scmi_state+0x66>
2fff0aa6:	fb0c 7203 	mla	r2, ip, r3, r7
2fff0aaa:	7a12      	ldrb	r2, [r2, #8]
2fff0aac:	b9ca      	cbnz	r2, 2fff0ae2 <stm32mp1_pm_save_scmi_state+0x56>
2fff0aae:	3301      	adds	r3, #1
2fff0ab0:	2b15      	cmp	r3, #21
2fff0ab2:	d1f5      	bne.n	2fff0aa0 <stm32mp1_pm_save_scmi_state+0x14>
2fff0ab4:	2d01      	cmp	r5, #1
2fff0ab6:	d91c      	bls.n	2fff0af2 <stm32mp1_pm_save_scmi_state+0x66>
2fff0ab8:	4b11      	ldr	r3, [pc, #68]	; (2fff0b00 <stm32mp1_pm_save_scmi_state+0x74>)
2fff0aba:	7a1a      	ldrb	r2, [r3, #8]
2fff0abc:	b11a      	cbz	r2, 2fff0ac6 <stm32mp1_pm_save_scmi_state+0x3a>
2fff0abe:	78a2      	ldrb	r2, [r4, #2]
2fff0ac0:	f042 0220 	orr.w	r2, r2, #32
2fff0ac4:	70a2      	strb	r2, [r4, #2]
2fff0ac6:	7d1a      	ldrb	r2, [r3, #20]
2fff0ac8:	b11a      	cbz	r2, 2fff0ad2 <stm32mp1_pm_save_scmi_state+0x46>
2fff0aca:	78a2      	ldrb	r2, [r4, #2]
2fff0acc:	f042 0240 	orr.w	r2, r2, #64	; 0x40
2fff0ad0:	70a2      	strb	r2, [r4, #2]
2fff0ad2:	f893 3020 	ldrb.w	r3, [r3, #32]
2fff0ad6:	b11b      	cbz	r3, 2fff0ae0 <stm32mp1_pm_save_scmi_state+0x54>
2fff0ad8:	78a3      	ldrb	r3, [r4, #2]
2fff0ada:	f063 037f 	orn	r3, r3, #127	; 0x7f
2fff0ade:	70a3      	strb	r3, [r4, #2]
2fff0ae0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff0ae2:	5c60      	ldrb	r0, [r4, r1]
2fff0ae4:	f003 0207 	and.w	r2, r3, #7
2fff0ae8:	fa06 f202 	lsl.w	r2, r6, r2
2fff0aec:	4302      	orrs	r2, r0
2fff0aee:	5462      	strb	r2, [r4, r1]
2fff0af0:	e7dd      	b.n	2fff0aae <stm32mp1_pm_save_scmi_state+0x22>
2fff0af2:	f000 f8e7 	bl	2fff0cc4 <console_flush>
2fff0af6:	f006 e91c 	blx	2fff6d30 <do_panic>
2fff0afa:	bf00      	nop
2fff0afc:	2fffb22c 	.word	0x2fffb22c
2fff0b00:	2fffb388 	.word	0x2fffb388

2fff0b04 <stm32mp1_pm_restore_scmi_state>:
2fff0b04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff0b06:	f04f 0c01 	mov.w	ip, #1
2fff0b0a:	4c1a      	ldr	r4, [pc, #104]	; (2fff0b74 <stm32mp1_pm_restore_scmi_state+0x70>)
2fff0b0c:	2300      	movs	r3, #0
2fff0b0e:	250c      	movs	r5, #12
2fff0b10:	08de      	lsrs	r6, r3, #3
2fff0b12:	f003 0707 	and.w	r7, r3, #7
2fff0b16:	5d82      	ldrb	r2, [r0, r6]
2fff0b18:	40fa      	lsrs	r2, r7
2fff0b1a:	f012 0201 	ands.w	r2, r2, #1
2fff0b1e:	d01c      	beq.n	2fff0b5a <stm32mp1_pm_restore_scmi_state+0x56>
2fff0b20:	fb05 4203 	mla	r2, r5, r3, r4
2fff0b24:	f882 c008 	strb.w	ip, [r2, #8]
2fff0b28:	42b1      	cmp	r1, r6
2fff0b2a:	d31e      	bcc.n	2fff0b6a <stm32mp1_pm_restore_scmi_state+0x66>
2fff0b2c:	3301      	adds	r3, #1
2fff0b2e:	2b15      	cmp	r3, #21
2fff0b30:	d1ee      	bne.n	2fff0b10 <stm32mp1_pm_restore_scmi_state+0xc>
2fff0b32:	7882      	ldrb	r2, [r0, #2]
2fff0b34:	4b10      	ldr	r3, [pc, #64]	; (2fff0b78 <stm32mp1_pm_restore_scmi_state+0x74>)
2fff0b36:	f3c2 1240 	ubfx	r2, r2, #5, #1
2fff0b3a:	b992      	cbnz	r2, 2fff0b62 <stm32mp1_pm_restore_scmi_state+0x5e>
2fff0b3c:	721a      	strb	r2, [r3, #8]
2fff0b3e:	2901      	cmp	r1, #1
2fff0b40:	d913      	bls.n	2fff0b6a <stm32mp1_pm_restore_scmi_state+0x66>
2fff0b42:	7882      	ldrb	r2, [r0, #2]
2fff0b44:	f3c2 1280 	ubfx	r2, r2, #6, #1
2fff0b48:	b96a      	cbnz	r2, 2fff0b66 <stm32mp1_pm_restore_scmi_state+0x62>
2fff0b4a:	751a      	strb	r2, [r3, #20]
2fff0b4c:	7882      	ldrb	r2, [r0, #2]
2fff0b4e:	09d2      	lsrs	r2, r2, #7
2fff0b50:	bf18      	it	ne
2fff0b52:	2201      	movne	r2, #1
2fff0b54:	f883 2020 	strb.w	r2, [r3, #32]
2fff0b58:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff0b5a:	fb05 4703 	mla	r7, r5, r3, r4
2fff0b5e:	723a      	strb	r2, [r7, #8]
2fff0b60:	e7e2      	b.n	2fff0b28 <stm32mp1_pm_restore_scmi_state+0x24>
2fff0b62:	2201      	movs	r2, #1
2fff0b64:	e7ea      	b.n	2fff0b3c <stm32mp1_pm_restore_scmi_state+0x38>
2fff0b66:	2201      	movs	r2, #1
2fff0b68:	e7ef      	b.n	2fff0b4a <stm32mp1_pm_restore_scmi_state+0x46>
2fff0b6a:	4804      	ldr	r0, [pc, #16]	; (2fff0b7c <stm32mp1_pm_restore_scmi_state+0x78>)
2fff0b6c:	f240 214e 	movw	r1, #590	; 0x24e
2fff0b70:	f007 f91a 	bl	2fff7da8 <__assert>
2fff0b74:	2fffb22c 	.word	0x2fffb22c
2fff0b78:	2fffb388 	.word	0x2fffb388
2fff0b7c:	2fff90e4 	.word	0x2fff90e4

2fff0b80 <tf_log>:
2fff0b80:	b40f      	push	{r0, r1, r2, r3}
2fff0b82:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff0b84:	9c06      	ldr	r4, [sp, #24]
2fff0b86:	7820      	ldrb	r0, [r4, #0]
2fff0b88:	1e43      	subs	r3, r0, #1
2fff0b8a:	2b31      	cmp	r3, #49	; 0x31
2fff0b8c:	d903      	bls.n	2fff0b96 <tf_log+0x16>
2fff0b8e:	2122      	movs	r1, #34	; 0x22
2fff0b90:	4810      	ldr	r0, [pc, #64]	; (2fff0bd4 <tf_log+0x54>)
2fff0b92:	f007 f909 	bl	2fff7da8 <__assert>
2fff0b96:	220a      	movs	r2, #10
2fff0b98:	fbb0 f3f2 	udiv	r3, r0, r2
2fff0b9c:	fb02 0313 	mls	r3, r2, r3, r0
2fff0ba0:	b10b      	cbz	r3, 2fff0ba6 <tf_log+0x26>
2fff0ba2:	2123      	movs	r1, #35	; 0x23
2fff0ba4:	e7f4      	b.n	2fff0b90 <tf_log+0x10>
2fff0ba6:	4b0c      	ldr	r3, [pc, #48]	; (2fff0bd8 <tf_log+0x58>)
2fff0ba8:	681b      	ldr	r3, [r3, #0]
2fff0baa:	4283      	cmp	r3, r0
2fff0bac:	d30a      	bcc.n	2fff0bc4 <tf_log+0x44>
2fff0bae:	f000 f8a9 	bl	2fff0d04 <plat_log_get_prefix>
2fff0bb2:	1e45      	subs	r5, r0, #1
2fff0bb4:	f815 0f01 	ldrb.w	r0, [r5, #1]!
2fff0bb8:	b948      	cbnz	r0, 2fff0bce <tf_log+0x4e>
2fff0bba:	a907      	add	r1, sp, #28
2fff0bbc:	1c60      	adds	r0, r4, #1
2fff0bbe:	9101      	str	r1, [sp, #4]
2fff0bc0:	f007 f97a 	bl	2fff7eb8 <vprintf>
2fff0bc4:	b003      	add	sp, #12
2fff0bc6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
2fff0bca:	b004      	add	sp, #16
2fff0bcc:	4770      	bx	lr
2fff0bce:	f007 fa58 	bl	2fff8082 <putchar>
2fff0bd2:	e7ef      	b.n	2fff0bb4 <tf_log+0x34>
2fff0bd4:	2fff921a 	.word	0x2fff921a
2fff0bd8:	2fffb3ac 	.word	0x2fffb3ac

2fff0bdc <console_is_registered>:
2fff0bdc:	b508      	push	{r3, lr}
2fff0bde:	b918      	cbnz	r0, 2fff0be8 <console_is_registered+0xc>
2fff0be0:	4806      	ldr	r0, [pc, #24]	; (2fff0bfc <console_is_registered+0x20>)
2fff0be2:	2134      	movs	r1, #52	; 0x34
2fff0be4:	f007 f8e0 	bl	2fff7da8 <__assert>
2fff0be8:	4b05      	ldr	r3, [pc, #20]	; (2fff0c00 <console_is_registered+0x24>)
2fff0bea:	681b      	ldr	r3, [r3, #0]
2fff0bec:	b90b      	cbnz	r3, 2fff0bf2 <console_is_registered+0x16>
2fff0bee:	4618      	mov	r0, r3
2fff0bf0:	bd08      	pop	{r3, pc}
2fff0bf2:	4283      	cmp	r3, r0
2fff0bf4:	d1f9      	bne.n	2fff0bea <console_is_registered+0xe>
2fff0bf6:	2001      	movs	r0, #1
2fff0bf8:	e7fa      	b.n	2fff0bf0 <console_is_registered+0x14>
2fff0bfa:	bf00      	nop
2fff0bfc:	2fff922a 	.word	0x2fff922a
2fff0c00:	2fffd104 	.word	0x2fffd104

2fff0c04 <console_register>:
2fff0c04:	4b0b      	ldr	r3, [pc, #44]	; (2fff0c34 <console_register+0x30>)
2fff0c06:	b510      	push	{r4, lr}
2fff0c08:	4604      	mov	r4, r0
2fff0c0a:	4298      	cmp	r0, r3
2fff0c0c:	d306      	bcc.n	2fff0c1c <console_register+0x18>
2fff0c0e:	4b0a      	ldr	r3, [pc, #40]	; (2fff0c38 <console_register+0x34>)
2fff0c10:	4298      	cmp	r0, r3
2fff0c12:	d203      	bcs.n	2fff0c1c <console_register+0x18>
2fff0c14:	4809      	ldr	r0, [pc, #36]	; (2fff0c3c <console_register+0x38>)
2fff0c16:	2114      	movs	r1, #20
2fff0c18:	f007 f8c6 	bl	2fff7da8 <__assert>
2fff0c1c:	4620      	mov	r0, r4
2fff0c1e:	f7ff ffdd 	bl	2fff0bdc <console_is_registered>
2fff0c22:	2801      	cmp	r0, #1
2fff0c24:	f04f 0001 	mov.w	r0, #1
2fff0c28:	bf1f      	itttt	ne
2fff0c2a:	4b05      	ldrne	r3, [pc, #20]	; (2fff0c40 <console_register+0x3c>)
2fff0c2c:	681a      	ldrne	r2, [r3, #0]
2fff0c2e:	6022      	strne	r2, [r4, #0]
2fff0c30:	601c      	strne	r4, [r3, #0]
2fff0c32:	bd10      	pop	{r4, pc}
2fff0c34:	2fffb580 	.word	0x2fffb580
2fff0c38:	2fffc180 	.word	0x2fffc180
2fff0c3c:	2fff922a 	.word	0x2fff922a
2fff0c40:	2fffd104 	.word	0x2fffd104

2fff0c44 <console_switch_state>:
2fff0c44:	4b01      	ldr	r3, [pc, #4]	; (2fff0c4c <console_switch_state+0x8>)
2fff0c46:	7018      	strb	r0, [r3, #0]
2fff0c48:	4770      	bx	lr
2fff0c4a:	bf00      	nop
2fff0c4c:	2fffb3b0 	.word	0x2fffb3b0

2fff0c50 <console_set_scope>:
2fff0c50:	b508      	push	{r3, lr}
2fff0c52:	b918      	cbnz	r0, 2fff0c5c <console_set_scope+0xc>
2fff0c54:	4804      	ldr	r0, [pc, #16]	; (2fff0c68 <console_set_scope+0x18>)
2fff0c56:	2144      	movs	r1, #68	; 0x44
2fff0c58:	f007 f8a6 	bl	2fff7da8 <__assert>
2fff0c5c:	6843      	ldr	r3, [r0, #4]
2fff0c5e:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
2fff0c62:	4319      	orrs	r1, r3
2fff0c64:	6041      	str	r1, [r0, #4]
2fff0c66:	bd08      	pop	{r3, pc}
2fff0c68:	2fff922a 	.word	0x2fff922a

2fff0c6c <console_putc>:
2fff0c6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff0c6e:	4606      	mov	r6, r0
2fff0c70:	4b12      	ldr	r3, [pc, #72]	; (2fff0cbc <console_putc+0x50>)
2fff0c72:	f06f 057f 	mvn.w	r5, #127	; 0x7f
2fff0c76:	4f12      	ldr	r7, [pc, #72]	; (2fff0cc0 <console_putc+0x54>)
2fff0c78:	681c      	ldr	r4, [r3, #0]
2fff0c7a:	b90c      	cbnz	r4, 2fff0c80 <console_putc+0x14>
2fff0c7c:	4628      	mov	r0, r5
2fff0c7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff0c80:	6862      	ldr	r2, [r4, #4]
2fff0c82:	783b      	ldrb	r3, [r7, #0]
2fff0c84:	4213      	tst	r3, r2
2fff0c86:	d00d      	beq.n	2fff0ca4 <console_putc+0x38>
2fff0c88:	68a3      	ldr	r3, [r4, #8]
2fff0c8a:	b15b      	cbz	r3, 2fff0ca4 <console_putc+0x38>
2fff0c8c:	2e0a      	cmp	r6, #10
2fff0c8e:	d00b      	beq.n	2fff0ca8 <console_putc+0x3c>
2fff0c90:	68a3      	ldr	r3, [r4, #8]
2fff0c92:	4621      	mov	r1, r4
2fff0c94:	4630      	mov	r0, r6
2fff0c96:	4798      	blx	r3
2fff0c98:	f115 0f80 	cmn.w	r5, #128	; 0x80
2fff0c9c:	d00c      	beq.n	2fff0cb8 <console_putc+0x4c>
2fff0c9e:	4285      	cmp	r5, r0
2fff0ca0:	bfa8      	it	ge
2fff0ca2:	4605      	movge	r5, r0
2fff0ca4:	6824      	ldr	r4, [r4, #0]
2fff0ca6:	e7e8      	b.n	2fff0c7a <console_putc+0xe>
2fff0ca8:	05d2      	lsls	r2, r2, #23
2fff0caa:	d5f1      	bpl.n	2fff0c90 <console_putc+0x24>
2fff0cac:	4621      	mov	r1, r4
2fff0cae:	200d      	movs	r0, #13
2fff0cb0:	4798      	blx	r3
2fff0cb2:	2800      	cmp	r0, #0
2fff0cb4:	daec      	bge.n	2fff0c90 <console_putc+0x24>
2fff0cb6:	e7ef      	b.n	2fff0c98 <console_putc+0x2c>
2fff0cb8:	4605      	mov	r5, r0
2fff0cba:	e7f3      	b.n	2fff0ca4 <console_putc+0x38>
2fff0cbc:	2fffd104 	.word	0x2fffd104
2fff0cc0:	2fffb3b0 	.word	0x2fffb3b0

2fff0cc4 <console_flush>:
2fff0cc4:	4b0d      	ldr	r3, [pc, #52]	; (2fff0cfc <console_flush+0x38>)
2fff0cc6:	b570      	push	{r4, r5, r6, lr}
2fff0cc8:	f06f 057f 	mvn.w	r5, #127	; 0x7f
2fff0ccc:	681c      	ldr	r4, [r3, #0]
2fff0cce:	4e0c      	ldr	r6, [pc, #48]	; (2fff0d00 <console_flush+0x3c>)
2fff0cd0:	b90c      	cbnz	r4, 2fff0cd6 <console_flush+0x12>
2fff0cd2:	4628      	mov	r0, r5
2fff0cd4:	bd70      	pop	{r4, r5, r6, pc}
2fff0cd6:	7832      	ldrb	r2, [r6, #0]
2fff0cd8:	6863      	ldr	r3, [r4, #4]
2fff0cda:	421a      	tst	r2, r3
2fff0cdc:	d009      	beq.n	2fff0cf2 <console_flush+0x2e>
2fff0cde:	6923      	ldr	r3, [r4, #16]
2fff0ce0:	b13b      	cbz	r3, 2fff0cf2 <console_flush+0x2e>
2fff0ce2:	4620      	mov	r0, r4
2fff0ce4:	4798      	blx	r3
2fff0ce6:	f115 0f80 	cmn.w	r5, #128	; 0x80
2fff0cea:	d004      	beq.n	2fff0cf6 <console_flush+0x32>
2fff0cec:	4285      	cmp	r5, r0
2fff0cee:	bfa8      	it	ge
2fff0cf0:	4605      	movge	r5, r0
2fff0cf2:	6824      	ldr	r4, [r4, #0]
2fff0cf4:	e7ec      	b.n	2fff0cd0 <console_flush+0xc>
2fff0cf6:	4605      	mov	r5, r0
2fff0cf8:	e7fb      	b.n	2fff0cf2 <console_flush+0x2e>
2fff0cfa:	bf00      	nop
2fff0cfc:	2fffd104 	.word	0x2fffd104
2fff0d00:	2fffb3b0 	.word	0x2fffb3b0

2fff0d04 <plat_log_get_prefix>:
2fff0d04:	2832      	cmp	r0, #50	; 0x32
2fff0d06:	f04f 030a 	mov.w	r3, #10
2fff0d0a:	bf28      	it	cs
2fff0d0c:	2032      	movcs	r0, #50	; 0x32
2fff0d0e:	280a      	cmp	r0, #10
2fff0d10:	bf38      	it	cc
2fff0d12:	200a      	movcc	r0, #10
2fff0d14:	fbb0 f0f3 	udiv	r0, r0, r3
2fff0d18:	4b02      	ldr	r3, [pc, #8]	; (2fff0d24 <plat_log_get_prefix+0x20>)
2fff0d1a:	3801      	subs	r0, #1
2fff0d1c:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
2fff0d20:	4770      	bx	lr
2fff0d22:	bf00      	nop
2fff0d24:	2fff924c 	.word	0x2fff924c

2fff0d28 <bl32_plat_enable_mmu>:
2fff0d28:	f000 bc14 	b.w	2fff1554 <enable_mmu_svc_mon>

2fff0d2c <__ctzdi2>:
2fff0d2c:	fab0 f380 	clz	r3, r0
2fff0d30:	095b      	lsrs	r3, r3, #5
2fff0d32:	425a      	negs	r2, r3
2fff0d34:	3b01      	subs	r3, #1
2fff0d36:	4003      	ands	r3, r0
2fff0d38:	4011      	ands	r1, r2
2fff0d3a:	430b      	orrs	r3, r1
2fff0d3c:	f002 0020 	and.w	r0, r2, #32
2fff0d40:	fa93 f3a3 	rbit	r3, r3
2fff0d44:	fab3 f383 	clz	r3, r3
2fff0d48:	4418      	add	r0, r3
2fff0d4a:	4770      	bx	lr

2fff0d4c <__udivmoddi4>:
2fff0d4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2fff0d50:	4694      	mov	ip, r2
2fff0d52:	9a08      	ldr	r2, [sp, #32]
2fff0d54:	b981      	cbnz	r1, 2fff0d78 <__udivmoddi4+0x2c>
2fff0d56:	b953      	cbnz	r3, 2fff0d6e <__udivmoddi4+0x22>
2fff0d58:	fbb0 f4fc 	udiv	r4, r0, ip
2fff0d5c:	b11a      	cbz	r2, 2fff0d66 <__udivmoddi4+0x1a>
2fff0d5e:	fb04 001c 	mls	r0, r4, ip, r0
2fff0d62:	e9c2 0300 	strd	r0, r3, [r2]
2fff0d66:	4620      	mov	r0, r4
2fff0d68:	2100      	movs	r1, #0
2fff0d6a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff0d6e:	b10a      	cbz	r2, 2fff0d74 <__udivmoddi4+0x28>
2fff0d70:	e9c2 0100 	strd	r0, r1, [r2]
2fff0d74:	4608      	mov	r0, r1
2fff0d76:	e7f8      	b.n	2fff0d6a <__udivmoddi4+0x1e>
2fff0d78:	f1bc 0f00 	cmp.w	ip, #0
2fff0d7c:	d134      	bne.n	2fff0de8 <__udivmoddi4+0x9c>
2fff0d7e:	b903      	cbnz	r3, 2fff0d82 <__udivmoddi4+0x36>
2fff0d80:	deff      	udf	#255	; 0xff
2fff0d82:	b940      	cbnz	r0, 2fff0d96 <__udivmoddi4+0x4a>
2fff0d84:	fbb1 f4f3 	udiv	r4, r1, r3
2fff0d88:	2a00      	cmp	r2, #0
2fff0d8a:	d0ec      	beq.n	2fff0d66 <__udivmoddi4+0x1a>
2fff0d8c:	fb04 1113 	mls	r1, r4, r3, r1
2fff0d90:	e9c2 0100 	strd	r0, r1, [r2]
2fff0d94:	e7e7      	b.n	2fff0d66 <__udivmoddi4+0x1a>
2fff0d96:	1e5c      	subs	r4, r3, #1
2fff0d98:	421c      	tst	r4, r3
2fff0d9a:	d10a      	bne.n	2fff0db2 <__udivmoddi4+0x66>
2fff0d9c:	b112      	cbz	r2, 2fff0da4 <__udivmoddi4+0x58>
2fff0d9e:	400c      	ands	r4, r1
2fff0da0:	e9c2 0400 	strd	r0, r4, [r2]
2fff0da4:	fa93 f0a3 	rbit	r0, r3
2fff0da8:	fab0 f080 	clz	r0, r0
2fff0dac:	fa21 f000 	lsr.w	r0, r1, r0
2fff0db0:	e7da      	b.n	2fff0d68 <__udivmoddi4+0x1c>
2fff0db2:	fab3 f583 	clz	r5, r3
2fff0db6:	fab1 f481 	clz	r4, r1
2fff0dba:	1b2d      	subs	r5, r5, r4
2fff0dbc:	2d1e      	cmp	r5, #30
2fff0dbe:	d907      	bls.n	2fff0dd0 <__udivmoddi4+0x84>
2fff0dc0:	2a00      	cmp	r2, #0
2fff0dc2:	f000 8089 	beq.w	2fff0ed8 <__udivmoddi4+0x18c>
2fff0dc6:	e9c2 0100 	strd	r0, r1, [r2]
2fff0dca:	2000      	movs	r0, #0
2fff0dcc:	4601      	mov	r1, r0
2fff0dce:	e7cc      	b.n	2fff0d6a <__udivmoddi4+0x1e>
2fff0dd0:	3501      	adds	r5, #1
2fff0dd2:	4667      	mov	r7, ip
2fff0dd4:	fa21 f905 	lsr.w	r9, r1, r5
2fff0dd8:	f1c5 0420 	rsb	r4, r5, #32
2fff0ddc:	fa00 f604 	lsl.w	r6, r0, r4
2fff0de0:	40a1      	lsls	r1, r4
2fff0de2:	40e8      	lsrs	r0, r5
2fff0de4:	4301      	orrs	r1, r0
2fff0de6:	e027      	b.n	2fff0e38 <__udivmoddi4+0xec>
2fff0de8:	2b00      	cmp	r3, #0
2fff0dea:	d166      	bne.n	2fff0eba <__udivmoddi4+0x16e>
2fff0dec:	f10c 34ff 	add.w	r4, ip, #4294967295	; 0xffffffff
2fff0df0:	ea14 050c 	ands.w	r5, r4, ip
2fff0df4:	d114      	bne.n	2fff0e20 <__udivmoddi4+0xd4>
2fff0df6:	b112      	cbz	r2, 2fff0dfe <__udivmoddi4+0xb2>
2fff0df8:	4004      	ands	r4, r0
2fff0dfa:	e9c2 4500 	strd	r4, r5, [r2]
2fff0dfe:	f1bc 0f01 	cmp.w	ip, #1
2fff0e02:	d0b2      	beq.n	2fff0d6a <__udivmoddi4+0x1e>
2fff0e04:	fa9c fcac 	rbit	ip, ip
2fff0e08:	fabc fc8c 	clz	ip, ip
2fff0e0c:	f1cc 0320 	rsb	r3, ip, #32
2fff0e10:	fa21 f60c 	lsr.w	r6, r1, ip
2fff0e14:	fa20 f00c 	lsr.w	r0, r0, ip
2fff0e18:	4099      	lsls	r1, r3
2fff0e1a:	4308      	orrs	r0, r1
2fff0e1c:	4631      	mov	r1, r6
2fff0e1e:	e7a4      	b.n	2fff0d6a <__udivmoddi4+0x1e>
2fff0e20:	fab1 f581 	clz	r5, r1
2fff0e24:	fabc f48c 	clz	r4, ip
2fff0e28:	1b64      	subs	r4, r4, r5
2fff0e2a:	f104 0521 	add.w	r5, r4, #33	; 0x21
2fff0e2e:	2d20      	cmp	r5, #32
2fff0e30:	d133      	bne.n	2fff0e9a <__udivmoddi4+0x14e>
2fff0e32:	461f      	mov	r7, r3
2fff0e34:	4606      	mov	r6, r0
2fff0e36:	4699      	mov	r9, r3
2fff0e38:	2400      	movs	r4, #0
2fff0e3a:	ea4f 7ed7 	mov.w	lr, r7, lsr #31
2fff0e3e:	ea4f 7ad6 	mov.w	sl, r6, lsr #31
2fff0e42:	0fc8      	lsrs	r0, r1, #31
2fff0e44:	ea4e 0646 	orr.w	r6, lr, r6, lsl #1
2fff0e48:	ea4a 0e41 	orr.w	lr, sl, r1, lsl #1
2fff0e4c:	ea40 0849 	orr.w	r8, r0, r9, lsl #1
2fff0e50:	ea6f 010e 	mvn.w	r1, lr
2fff0e54:	eb11 010c 	adds.w	r1, r1, ip
2fff0e58:	ea6f 0908 	mvn.w	r9, r8
2fff0e5c:	eb49 0903 	adc.w	r9, r9, r3
2fff0e60:	ea44 0747 	orr.w	r7, r4, r7, lsl #1
2fff0e64:	ea4f 79e9 	mov.w	r9, r9, asr #31
2fff0e68:	ea09 010c 	and.w	r1, r9, ip
2fff0e6c:	f009 0401 	and.w	r4, r9, #1
2fff0e70:	ebbe 0e01 	subs.w	lr, lr, r1
2fff0e74:	ea09 0903 	and.w	r9, r9, r3
2fff0e78:	4671      	mov	r1, lr
2fff0e7a:	eb68 0809 	sbc.w	r8, r8, r9
2fff0e7e:	3d01      	subs	r5, #1
2fff0e80:	46c1      	mov	r9, r8
2fff0e82:	d1da      	bne.n	2fff0e3a <__udivmoddi4+0xee>
2fff0e84:	19ff      	adds	r7, r7, r7
2fff0e86:	eb46 0106 	adc.w	r1, r6, r6
2fff0e8a:	ea47 0004 	orr.w	r0, r7, r4
2fff0e8e:	2a00      	cmp	r2, #0
2fff0e90:	f43f af6b 	beq.w	2fff0d6a <__udivmoddi4+0x1e>
2fff0e94:	e9c2 e800 	strd	lr, r8, [r2]
2fff0e98:	e767      	b.n	2fff0d6a <__udivmoddi4+0x1e>
2fff0e9a:	2d1f      	cmp	r5, #31
2fff0e9c:	d801      	bhi.n	2fff0ea2 <__udivmoddi4+0x156>
2fff0e9e:	461f      	mov	r7, r3
2fff0ea0:	e798      	b.n	2fff0dd4 <__udivmoddi4+0x88>
2fff0ea2:	f1c5 0e40 	rsb	lr, r5, #64	; 0x40
2fff0ea6:	3401      	adds	r4, #1
2fff0ea8:	4699      	mov	r9, r3
2fff0eaa:	fa01 f60e 	lsl.w	r6, r1, lr
2fff0eae:	fa00 f70e 	lsl.w	r7, r0, lr
2fff0eb2:	40e0      	lsrs	r0, r4
2fff0eb4:	4306      	orrs	r6, r0
2fff0eb6:	40e1      	lsrs	r1, r4
2fff0eb8:	e7be      	b.n	2fff0e38 <__udivmoddi4+0xec>
2fff0eba:	fab3 f583 	clz	r5, r3
2fff0ebe:	fab1 f481 	clz	r4, r1
2fff0ec2:	1b2d      	subs	r5, r5, r4
2fff0ec4:	2d1f      	cmp	r5, #31
2fff0ec6:	f63f af7b 	bhi.w	2fff0dc0 <__udivmoddi4+0x74>
2fff0eca:	3501      	adds	r5, #1
2fff0ecc:	2700      	movs	r7, #0
2fff0ece:	2d20      	cmp	r5, #32
2fff0ed0:	d180      	bne.n	2fff0dd4 <__udivmoddi4+0x88>
2fff0ed2:	4606      	mov	r6, r0
2fff0ed4:	46b9      	mov	r9, r7
2fff0ed6:	e7af      	b.n	2fff0e38 <__udivmoddi4+0xec>
2fff0ed8:	4610      	mov	r0, r2
2fff0eda:	e777      	b.n	2fff0dcc <__udivmoddi4+0x80>

2fff0edc <plat_get_syscnt_freq2>:
2fff0edc:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff0ee0:	4770      	bx	lr
	...

2fff0ee4 <stm32mp_ddrctrl_base>:
2fff0ee4:	4800      	ldr	r0, [pc, #0]	; (2fff0ee8 <stm32mp_ddrctrl_base+0x4>)
2fff0ee6:	4770      	bx	lr
2fff0ee8:	5a003000 	.word	0x5a003000

2fff0eec <stm32mp_ddrphyc_base>:
2fff0eec:	4800      	ldr	r0, [pc, #0]	; (2fff0ef0 <stm32mp_ddrphyc_base+0x4>)
2fff0eee:	4770      	bx	lr
2fff0ef0:	5a004000 	.word	0x5a004000

2fff0ef4 <stm32mp_pwr_base>:
2fff0ef4:	4800      	ldr	r0, [pc, #0]	; (2fff0ef8 <stm32mp_pwr_base+0x4>)
2fff0ef6:	4770      	bx	lr
2fff0ef8:	50001000 	.word	0x50001000

2fff0efc <stm32mp_rcc_base>:
2fff0efc:	f04f 40a0 	mov.w	r0, #1342177280	; 0x50000000
2fff0f00:	4770      	bx	lr

2fff0f02 <stm32mp_lock_available>:
2fff0f02:	ee11 0f10 	mrc	15, 0, r0, cr1, cr0, {0}
2fff0f06:	f000 0005 	and.w	r0, r0, #5
2fff0f0a:	1f43      	subs	r3, r0, #5
2fff0f0c:	4258      	negs	r0, r3
2fff0f0e:	4158      	adcs	r0, r3
2fff0f10:	4770      	bx	lr
	...

2fff0f14 <stm32mp_pwr_regs_lock>:
2fff0f14:	b508      	push	{r3, lr}
2fff0f16:	f7ff fff4 	bl	2fff0f02 <stm32mp_lock_available>
2fff0f1a:	b120      	cbz	r0, 2fff0f26 <stm32mp_pwr_regs_lock+0x12>
2fff0f1c:	4802      	ldr	r0, [pc, #8]	; (2fff0f28 <stm32mp_pwr_regs_lock+0x14>)
2fff0f1e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff0f22:	f009 be09 	b.w	2fffab38 <__spin_lock_from_thumb>
2fff0f26:	bd08      	pop	{r3, pc}
2fff0f28:	2fffccc4 	.word	0x2fffccc4

2fff0f2c <stm32mp_pwr_regs_unlock>:
2fff0f2c:	b508      	push	{r3, lr}
2fff0f2e:	f7ff ffe8 	bl	2fff0f02 <stm32mp_lock_available>
2fff0f32:	b120      	cbz	r0, 2fff0f3e <stm32mp_pwr_regs_unlock+0x12>
2fff0f34:	4802      	ldr	r0, [pc, #8]	; (2fff0f40 <stm32mp_pwr_regs_unlock+0x14>)
2fff0f36:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff0f3a:	f009 bdf5 	b.w	2fffab28 <__spin_unlock_from_thumb>
2fff0f3e:	bd08      	pop	{r3, pc}
2fff0f40:	2fffccc4 	.word	0x2fffccc4

2fff0f44 <stm32_get_gpio_bank_base>:
2fff0f44:	2819      	cmp	r0, #25
2fff0f46:	b508      	push	{r3, lr}
2fff0f48:	d00a      	beq.n	2fff0f60 <stm32_get_gpio_bank_base+0x1c>
2fff0f4a:	280a      	cmp	r0, #10
2fff0f4c:	d903      	bls.n	2fff0f56 <stm32_get_gpio_bank_base+0x12>
2fff0f4e:	4805      	ldr	r0, [pc, #20]	; (2fff0f64 <stm32_get_gpio_bank_base+0x20>)
2fff0f50:	2164      	movs	r1, #100	; 0x64
2fff0f52:	f006 ff29 	bl	2fff7da8 <__assert>
2fff0f56:	f500 20a0 	add.w	r0, r0, #327680	; 0x50000
2fff0f5a:	3002      	adds	r0, #2
2fff0f5c:	0300      	lsls	r0, r0, #12
2fff0f5e:	bd08      	pop	{r3, pc}
2fff0f60:	4801      	ldr	r0, [pc, #4]	; (2fff0f68 <stm32_get_gpio_bank_base+0x24>)
2fff0f62:	e7fc      	b.n	2fff0f5e <stm32_get_gpio_bank_base+0x1a>
2fff0f64:	2fff9292 	.word	0x2fff9292
2fff0f68:	54004000 	.word	0x54004000

2fff0f6c <stm32_get_gpio_bank_offset>:
2fff0f6c:	2819      	cmp	r0, #25
2fff0f6e:	b508      	push	{r3, lr}
2fff0f70:	d007      	beq.n	2fff0f82 <stm32_get_gpio_bank_offset+0x16>
2fff0f72:	280a      	cmp	r0, #10
2fff0f74:	d903      	bls.n	2fff0f7e <stm32_get_gpio_bank_offset+0x12>
2fff0f76:	4804      	ldr	r0, [pc, #16]	; (2fff0f88 <stm32_get_gpio_bank_offset+0x1c>)
2fff0f78:	216f      	movs	r1, #111	; 0x6f
2fff0f7a:	f006 ff15 	bl	2fff7da8 <__assert>
2fff0f7e:	0300      	lsls	r0, r0, #12
2fff0f80:	bd08      	pop	{r3, pc}
2fff0f82:	2000      	movs	r0, #0
2fff0f84:	e7fc      	b.n	2fff0f80 <stm32_get_gpio_bank_offset+0x14>
2fff0f86:	bf00      	nop
2fff0f88:	2fff9292 	.word	0x2fff9292

2fff0f8c <stm32mp_get_cpu_supply_name>:
2fff0f8c:	b513      	push	{r0, r1, r4, lr}
2fff0f8e:	2300      	movs	r3, #0
2fff0f90:	9301      	str	r3, [sp, #4]
2fff0f92:	f005 fb11 	bl	2fff65b8 <dt_get_cpu_regulator_name>
2fff0f96:	4604      	mov	r4, r0
2fff0f98:	b910      	cbnz	r0, 2fff0fa0 <stm32mp_get_cpu_supply_name+0x14>
2fff0f9a:	2000      	movs	r0, #0
2fff0f9c:	b002      	add	sp, #8
2fff0f9e:	bd10      	pop	{r4, pc}
2fff0fa0:	f004 fdb0 	bl	2fff5b04 <dt_pmic_status>
2fff0fa4:	2800      	cmp	r0, #0
2fff0fa6:	dc01      	bgt.n	2fff0fac <stm32mp_get_cpu_supply_name+0x20>
2fff0fa8:	9801      	ldr	r0, [sp, #4]
2fff0faa:	e7f7      	b.n	2fff0f9c <stm32mp_get_cpu_supply_name+0x10>
2fff0fac:	4621      	mov	r1, r4
2fff0fae:	a801      	add	r0, sp, #4
2fff0fb0:	f004 fdc6 	bl	2fff5b40 <dt_pmic_find_supply>
2fff0fb4:	2800      	cmp	r0, #0
2fff0fb6:	d0f7      	beq.n	2fff0fa8 <stm32mp_get_cpu_supply_name+0x1c>
2fff0fb8:	e7ef      	b.n	2fff0f9a <stm32mp_get_cpu_supply_name+0xe>
	...

2fff0fbc <configure_mmu>:
2fff0fbc:	b508      	push	{r3, lr}
2fff0fbe:	4805      	ldr	r0, [pc, #20]	; (2fff0fd4 <configure_mmu+0x18>)
2fff0fc0:	f000 fa88 	bl	2fff14d4 <mmap_add>
2fff0fc4:	f000 faa8 	bl	2fff1518 <init_xlat_tables>
2fff0fc8:	2000      	movs	r0, #0
2fff0fca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff0fce:	f000 bac1 	b.w	2fff1554 <enable_mmu_svc_mon>
2fff0fd2:	bf00      	nop
2fff0fd4:	2fff9348 	.word	0x2fff9348

2fff0fd8 <stm32mp_mask_timer>:
2fff0fd8:	ee1e 3f32 	mrc	15, 0, r3, cr14, cr2, {1}
2fff0fdc:	f043 0302 	orr.w	r3, r3, #2
2fff0fe0:	ee0e 3f32 	mcr	15, 0, r3, cr14, cr2, {1}
2fff0fe4:	ee1e 3f33 	mrc	15, 0, r3, cr14, cr3, {1}
2fff0fe8:	f043 0302 	orr.w	r3, r3, #2
2fff0fec:	ee0e 3f33 	mcr	15, 0, r3, cr14, cr3, {1}
2fff0ff0:	4770      	bx	lr

2fff0ff2 <stm32mp_wait_cpu_reset>:
2fff0ff2:	b508      	push	{r3, lr}
2fff0ff4:	2001      	movs	r0, #1
2fff0ff6:	f005 efe0 	blx	2fff6fb8 <dcsw_op_all>
2fff0ffa:	ee11 3f10 	mrc	15, 0, r3, cr1, cr0, {0}
2fff0ffe:	f023 0304 	bic.w	r3, r3, #4
2fff1002:	ee01 3f10 	mcr	15, 0, r3, cr1, cr0, {0}
2fff1006:	2001      	movs	r0, #1
2fff1008:	f005 efd6 	blx	2fff6fb8 <dcsw_op_all>
2fff100c:	f3bf 8f2f 	clrex
2fff1010:	f3bf 8f4f 	dsb	sy
2fff1014:	f3bf 8f6f 	isb	sy
2fff1018:	f7fe fbd0 	bl	2ffef7bc <plat_ic_get_pending_interrupt_id>
2fff101c:	f5b0 7f7f 	cmp.w	r0, #1020	; 0x3fc
2fff1020:	4604      	mov	r4, r0
2fff1022:	d205      	bcs.n	2fff1030 <stm32mp_wait_cpu_reset+0x3e>
2fff1024:	f7fe fa5c 	bl	2ffef4e0 <gicv2_end_of_interrupt>
2fff1028:	4620      	mov	r0, r4
2fff102a:	f7fe fbd5 	bl	2ffef7d8 <plat_ic_disable_interrupt>
2fff102e:	e7f3      	b.n	2fff1018 <stm32mp_wait_cpu_reset+0x26>
2fff1030:	bf30      	wfi
2fff1032:	e7f1      	b.n	2fff1018 <stm32mp_wait_cpu_reset+0x26>

2fff1034 <stm32_get_gpio_bank_clock>:
2fff1034:	2819      	cmp	r0, #25
2fff1036:	b508      	push	{r3, lr}
2fff1038:	d008      	beq.n	2fff104c <stm32_get_gpio_bank_clock+0x18>
2fff103a:	280a      	cmp	r0, #10
2fff103c:	d904      	bls.n	2fff1048 <stm32_get_gpio_bank_clock+0x14>
2fff103e:	4804      	ldr	r0, [pc, #16]	; (2fff1050 <stm32_get_gpio_bank_clock+0x1c>)
2fff1040:	f240 112b 	movw	r1, #299	; 0x12b
2fff1044:	f006 feb0 	bl	2fff7da8 <__assert>
2fff1048:	3054      	adds	r0, #84	; 0x54
2fff104a:	bd08      	pop	{r3, pc}
2fff104c:	205f      	movs	r0, #95	; 0x5f
2fff104e:	e7fc      	b.n	2fff104a <stm32_get_gpio_bank_clock+0x16>
2fff1050:	2fff92e8 	.word	0x2fff92e8

2fff1054 <stm32_get_otp_index>:
2fff1054:	b508      	push	{r3, lr}
2fff1056:	b920      	cbnz	r0, 2fff1062 <stm32_get_otp_index+0xe>
2fff1058:	f240 1133 	movw	r1, #307	; 0x133
2fff105c:	4806      	ldr	r0, [pc, #24]	; (2fff1078 <stm32_get_otp_index+0x24>)
2fff105e:	f006 fea3 	bl	2fff7da8 <__assert>
2fff1062:	b911      	cbnz	r1, 2fff106a <stm32_get_otp_index+0x16>
2fff1064:	f44f 719a 	mov.w	r1, #308	; 0x134
2fff1068:	e7f8      	b.n	2fff105c <stm32_get_otp_index+0x8>
2fff106a:	f001 f9e1 	bl	2fff2430 <bsec_find_otp_name_in_dt>
2fff106e:	3000      	adds	r0, #0
2fff1070:	bf18      	it	ne
2fff1072:	2001      	movne	r0, #1
2fff1074:	4240      	negs	r0, r0
2fff1076:	bd08      	pop	{r3, pc}
2fff1078:	2fff92e8 	.word	0x2fff92e8

2fff107c <stm32_get_otp_value_from_idx>:
2fff107c:	b510      	push	{r4, lr}
2fff107e:	4604      	mov	r4, r0
2fff1080:	4608      	mov	r0, r1
2fff1082:	b921      	cbnz	r1, 2fff108e <stm32_get_otp_value_from_idx+0x12>
2fff1084:	4807      	ldr	r0, [pc, #28]	; (2fff10a4 <stm32_get_otp_value_from_idx+0x28>)
2fff1086:	f44f 71aa 	mov.w	r1, #340	; 0x154
2fff108a:	f006 fe8d 	bl	2fff7da8 <__assert>
2fff108e:	4621      	mov	r1, r4
2fff1090:	f001 fa36 	bl	2fff2500 <bsec_read_otp>
2fff1094:	b128      	cbz	r0, 2fff10a2 <stm32_get_otp_value_from_idx+0x26>
2fff1096:	4804      	ldr	r0, [pc, #16]	; (2fff10a8 <stm32_get_otp_value_from_idx+0x2c>)
2fff1098:	4621      	mov	r1, r4
2fff109a:	f7ff fd71 	bl	2fff0b80 <tf_log>
2fff109e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff10a2:	bd10      	pop	{r4, pc}
2fff10a4:	2fff92e8 	.word	0x2fff92e8
2fff10a8:	2fff9322 	.word	0x2fff9322

2fff10ac <stm32_get_otp_value>:
2fff10ac:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff10ae:	460c      	mov	r4, r1
2fff10b0:	4605      	mov	r5, r0
2fff10b2:	b920      	cbnz	r0, 2fff10be <stm32_get_otp_value+0x12>
2fff10b4:	f240 1141 	movw	r1, #321	; 0x141
2fff10b8:	480c      	ldr	r0, [pc, #48]	; (2fff10ec <stm32_get_otp_value+0x40>)
2fff10ba:	f006 fe75 	bl	2fff7da8 <__assert>
2fff10be:	b911      	cbnz	r1, 2fff10c6 <stm32_get_otp_value+0x1a>
2fff10c0:	f44f 71a1 	mov.w	r1, #322	; 0x142
2fff10c4:	e7f8      	b.n	2fff10b8 <stm32_get_otp_value+0xc>
2fff10c6:	2200      	movs	r2, #0
2fff10c8:	a901      	add	r1, sp, #4
2fff10ca:	f7ff ffc3 	bl	2fff1054 <stm32_get_otp_index>
2fff10ce:	b940      	cbnz	r0, 2fff10e2 <stm32_get_otp_value+0x36>
2fff10d0:	9801      	ldr	r0, [sp, #4]
2fff10d2:	4621      	mov	r1, r4
2fff10d4:	f7ff ffd2 	bl	2fff107c <stm32_get_otp_value_from_idx>
2fff10d8:	b128      	cbz	r0, 2fff10e6 <stm32_get_otp_value+0x3a>
2fff10da:	4805      	ldr	r0, [pc, #20]	; (2fff10f0 <stm32_get_otp_value+0x44>)
2fff10dc:	4629      	mov	r1, r5
2fff10de:	f7ff fd4f 	bl	2fff0b80 <tf_log>
2fff10e2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff10e6:	b003      	add	sp, #12
2fff10e8:	bd30      	pop	{r4, r5, pc}
2fff10ea:	bf00      	nop
2fff10ec:	2fff92e8 	.word	0x2fff92e8
2fff10f0:	2fff930c 	.word	0x2fff930c

2fff10f4 <get_part_number>:
2fff10f4:	b513      	push	{r0, r1, r4, lr}
2fff10f6:	4c0f      	ldr	r4, [pc, #60]	; (2fff1134 <get_part_number+0x40>)
2fff10f8:	6820      	ldr	r0, [r4, #0]
2fff10fa:	b9c0      	cbnz	r0, 2fff112e <get_part_number+0x3a>
2fff10fc:	a801      	add	r0, sp, #4
2fff10fe:	f005 fc53 	bl	2fff69a8 <stm32mp1_dbgmcu_get_chip_dev_id>
2fff1102:	2800      	cmp	r0, #0
2fff1104:	da05      	bge.n	2fff1112 <get_part_number+0x1e>
2fff1106:	480c      	ldr	r0, [pc, #48]	; (2fff1138 <get_part_number+0x44>)
2fff1108:	f7ff fd3a 	bl	2fff0b80 <tf_log>
2fff110c:	f44f 63a0 	mov.w	r3, #1280	; 0x500
2fff1110:	9301      	str	r3, [sp, #4]
2fff1112:	4908      	ldr	r1, [pc, #32]	; (2fff1134 <get_part_number+0x40>)
2fff1114:	4809      	ldr	r0, [pc, #36]	; (2fff113c <get_part_number+0x48>)
2fff1116:	f7ff ffc9 	bl	2fff10ac <stm32_get_otp_value>
2fff111a:	b118      	cbz	r0, 2fff1124 <get_part_number+0x30>
2fff111c:	f7ff fdd2 	bl	2fff0cc4 <console_flush>
2fff1120:	f005 ee06 	blx	2fff6d30 <do_panic>
2fff1124:	7820      	ldrb	r0, [r4, #0]
2fff1126:	9b01      	ldr	r3, [sp, #4]
2fff1128:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
2fff112c:	6020      	str	r0, [r4, #0]
2fff112e:	b002      	add	sp, #8
2fff1130:	bd10      	pop	{r4, pc}
2fff1132:	bf00      	nop
2fff1134:	2fffccc8 	.word	0x2fffccc8
2fff1138:	2fff92b2 	.word	0x2fff92b2
2fff113c:	2fff92d8 	.word	0x2fff92d8

2fff1140 <stm32mp_supports_cpu_opp>:
2fff1140:	1e43      	subs	r3, r0, #1
2fff1142:	2b01      	cmp	r3, #1
2fff1144:	b510      	push	{r4, lr}
2fff1146:	4604      	mov	r4, r0
2fff1148:	d814      	bhi.n	2fff1174 <stm32mp_supports_cpu_opp+0x34>
2fff114a:	f7ff ffd3 	bl	2fff10f4 <get_part_number>
2fff114e:	4b0b      	ldr	r3, [pc, #44]	; (2fff117c <stm32mp_supports_cpu_opp+0x3c>)
2fff1150:	4298      	cmp	r0, r3
2fff1152:	d80b      	bhi.n	2fff116c <stm32mp_supports_cpu_opp+0x2c>
2fff1154:	3b01      	subs	r3, #1
2fff1156:	4298      	cmp	r0, r3
2fff1158:	d20e      	bcs.n	2fff1178 <stm32mp_supports_cpu_opp+0x38>
2fff115a:	f100 407b 	add.w	r0, r0, #4211081216	; 0xfb000000
2fff115e:	3880      	subs	r0, #128	; 0x80
2fff1160:	2801      	cmp	r0, #1
2fff1162:	d909      	bls.n	2fff1178 <stm32mp_supports_cpu_opp+0x38>
2fff1164:	1e63      	subs	r3, r4, #1
2fff1166:	4258      	negs	r0, r3
2fff1168:	4158      	adcs	r0, r3
2fff116a:	bd10      	pop	{r4, pc}
2fff116c:	f100 407b 	add.w	r0, r0, #4211081216	; 0xfb000000
2fff1170:	38ae      	subs	r0, #174	; 0xae
2fff1172:	e7f5      	b.n	2fff1160 <stm32mp_supports_cpu_opp+0x20>
2fff1174:	2000      	movs	r0, #0
2fff1176:	e7f8      	b.n	2fff116a <stm32mp_supports_cpu_opp+0x2a>
2fff1178:	2001      	movs	r0, #1
2fff117a:	e7f6      	b.n	2fff116a <stm32mp_supports_cpu_opp+0x2a>
2fff117c:	050000a5 	.word	0x050000a5

2fff1180 <stm32mp_is_single_core>:
2fff1180:	b508      	push	{r3, lr}
2fff1182:	f7ff ffb7 	bl	2fff10f4 <get_part_number>
2fff1186:	4b07      	ldr	r3, [pc, #28]	; (2fff11a4 <stm32mp_is_single_core+0x24>)
2fff1188:	4298      	cmp	r0, r3
2fff118a:	d307      	bcc.n	2fff119c <stm32mp_is_single_core+0x1c>
2fff118c:	3301      	adds	r3, #1
2fff118e:	4298      	cmp	r0, r3
2fff1190:	d906      	bls.n	2fff11a0 <stm32mp_is_single_core+0x20>
2fff1192:	f100 407b 	add.w	r0, r0, #4211081216	; 0xfb000000
2fff1196:	38ae      	subs	r0, #174	; 0xae
2fff1198:	2801      	cmp	r0, #1
2fff119a:	d901      	bls.n	2fff11a0 <stm32mp_is_single_core+0x20>
2fff119c:	2000      	movs	r0, #0
2fff119e:	bd08      	pop	{r3, pc}
2fff11a0:	2001      	movs	r0, #1
2fff11a2:	e7fc      	b.n	2fff119e <stm32mp_is_single_core+0x1e>
2fff11a4:	0500002e 	.word	0x0500002e

2fff11a8 <stm32mp_plat_reset>:
2fff11a8:	4c29      	ldr	r4, [pc, #164]	; (2fff1250 <stm32mp_plat_reset+0xa8>)
2fff11aa:	f640 48c5 	movw	r8, #3269	; 0xcc5
2fff11ae:	b580      	push	{r7, lr}
2fff11b0:	f104 0784 	add.w	r7, r4, #132	; 0x84
2fff11b4:	4606      	mov	r6, r0
2fff11b6:	f7ff ff0f 	bl	2fff0fd8 <stm32mp_mask_timer>
2fff11ba:	6860      	ldr	r0, [r4, #4]
2fff11bc:	f002 f9e0 	bl	2fff3580 <stm32mp_clk_is_enabled>
2fff11c0:	b190      	cbz	r0, 2fff11e8 <stm32mp_plat_reset+0x40>
2fff11c2:	68a0      	ldr	r0, [r4, #8]
2fff11c4:	2860      	cmp	r0, #96	; 0x60
2fff11c6:	d10b      	bne.n	2fff11e0 <stm32mp_plat_reset+0x38>
2fff11c8:	6825      	ldr	r5, [r4, #0]
2fff11ca:	4545      	cmp	r5, r8
2fff11cc:	d125      	bne.n	2fff121a <stm32mp_plat_reset+0x72>
2fff11ce:	f7ff fe95 	bl	2fff0efc <stm32mp_rcc_base>
2fff11d2:	f8d0 3198 	ldr.w	r3, [r0, #408]	; 0x198
2fff11d6:	f043 0320 	orr.w	r3, r3, #32
2fff11da:	f8c0 3198 	str.w	r3, [r0, #408]	; 0x198
2fff11de:	e003      	b.n	2fff11e8 <stm32mp_plat_reset+0x40>
2fff11e0:	f7fb ffce 	bl	2ffed180 <etzpc_get_decprot>
2fff11e4:	2802      	cmp	r0, #2
2fff11e6:	d1ef      	bne.n	2fff11c8 <stm32mp_plat_reset+0x20>
2fff11e8:	340c      	adds	r4, #12
2fff11ea:	42bc      	cmp	r4, r7
2fff11ec:	d1e5      	bne.n	2fff11ba <stm32mp_plat_reset+0x12>
2fff11ee:	f7ff ffc7 	bl	2fff1180 <stm32mp_is_single_core>
2fff11f2:	bb20      	cbnz	r0, 2fff123e <stm32mp_plat_reset+0x96>
2fff11f4:	fab6 f186 	clz	r1, r6
2fff11f8:	2009      	movs	r0, #9
2fff11fa:	2430      	movs	r4, #48	; 0x30
2fff11fc:	0949      	lsrs	r1, r1, #5
2fff11fe:	f7fe fa4b 	bl	2ffef698 <gicv2_raise_sgi>
2fff1202:	f7fe fadb 	bl	2ffef7bc <plat_ic_get_pending_interrupt_id>
2fff1206:	f5b0 7f7f 	cmp.w	r0, #1020	; 0x3fc
2fff120a:	4605      	mov	r5, r0
2fff120c:	d219      	bcs.n	2fff1242 <stm32mp_plat_reset+0x9a>
2fff120e:	f7fe f967 	bl	2ffef4e0 <gicv2_end_of_interrupt>
2fff1212:	4628      	mov	r0, r5
2fff1214:	f7fe fae0 	bl	2ffef7d8 <plat_ic_disable_interrupt>
2fff1218:	e7f3      	b.n	2fff1202 <stm32mp_plat_reset+0x5a>
2fff121a:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2fff121e:	4628      	mov	r0, r5
2fff1220:	f004 ff04 	bl	2fff602c <stm32mp_reset_assert_to>
2fff1224:	b118      	cbz	r0, 2fff122e <stm32mp_plat_reset+0x86>
2fff1226:	f7ff fd4d 	bl	2fff0cc4 <console_flush>
2fff122a:	f005 ed82 	blx	2fff6d30 <do_panic>
2fff122e:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2fff1232:	4628      	mov	r0, r5
2fff1234:	f004 ff32 	bl	2fff609c <stm32mp_reset_deassert_to>
2fff1238:	2800      	cmp	r0, #0
2fff123a:	d0d5      	beq.n	2fff11e8 <stm32mp_plat_reset+0x40>
2fff123c:	e7f3      	b.n	2fff1226 <stm32mp_plat_reset+0x7e>
2fff123e:	2410      	movs	r4, #16
2fff1240:	e7df      	b.n	2fff1202 <stm32mp_plat_reset+0x5a>
2fff1242:	f7ff fe5b 	bl	2fff0efc <stm32mp_rcc_base>
2fff1246:	f8c0 4404 	str.w	r4, [r0, #1028]	; 0x404
2fff124a:	f7ff fed2 	bl	2fff0ff2 <stm32mp_wait_cpu_reset>
2fff124e:	bf00      	nop
2fff1250:	2fff93c0 	.word	0x2fff93c0

2fff1254 <stm32_iwdg_get_instance>:
2fff1254:	b508      	push	{r3, lr}
2fff1256:	4b07      	ldr	r3, [pc, #28]	; (2fff1274 <stm32_iwdg_get_instance+0x20>)
2fff1258:	4298      	cmp	r0, r3
2fff125a:	d006      	beq.n	2fff126a <stm32_iwdg_get_instance+0x16>
2fff125c:	4b06      	ldr	r3, [pc, #24]	; (2fff1278 <stm32_iwdg_get_instance+0x24>)
2fff125e:	4298      	cmp	r0, r3
2fff1260:	d005      	beq.n	2fff126e <stm32_iwdg_get_instance+0x1a>
2fff1262:	f7ff fd2f 	bl	2fff0cc4 <console_flush>
2fff1266:	f005 ed64 	blx	2fff6d30 <do_panic>
2fff126a:	2001      	movs	r0, #1
2fff126c:	bd08      	pop	{r3, pc}
2fff126e:	2000      	movs	r0, #0
2fff1270:	e7fc      	b.n	2fff126c <stm32_iwdg_get_instance+0x18>
2fff1272:	bf00      	nop
2fff1274:	5a002000 	.word	0x5a002000
2fff1278:	5c003000 	.word	0x5c003000

2fff127c <stm32_iwdg_get_otp_config>:
2fff127c:	b513      	push	{r0, r1, r4, lr}
2fff127e:	4604      	mov	r4, r0
2fff1280:	4811      	ldr	r0, [pc, #68]	; (2fff12c8 <stm32_iwdg_get_otp_config+0x4c>)
2fff1282:	a901      	add	r1, sp, #4
2fff1284:	f7ff ff12 	bl	2fff10ac <stm32_get_otp_value>
2fff1288:	b118      	cbz	r0, 2fff1292 <stm32_iwdg_get_otp_config+0x16>
2fff128a:	f7ff fd1b 	bl	2fff0cc4 <console_flush>
2fff128e:	f005 ed50 	blx	2fff6d30 <do_panic>
2fff1292:	9a01      	ldr	r2, [sp, #4]
2fff1294:	2301      	movs	r3, #1
2fff1296:	1ce1      	adds	r1, r4, #3
2fff1298:	fa03 f101 	lsl.w	r1, r3, r1
2fff129c:	4211      	tst	r1, r2
2fff129e:	f104 0105 	add.w	r1, r4, #5
2fff12a2:	f104 0407 	add.w	r4, r4, #7
2fff12a6:	bf18      	it	ne
2fff12a8:	4618      	movne	r0, r3
2fff12aa:	fa03 f101 	lsl.w	r1, r3, r1
2fff12ae:	bf08      	it	eq
2fff12b0:	2000      	moveq	r0, #0
2fff12b2:	40a3      	lsls	r3, r4
2fff12b4:	4211      	tst	r1, r2
2fff12b6:	bf18      	it	ne
2fff12b8:	f040 0002 	orrne.w	r0, r0, #2
2fff12bc:	4213      	tst	r3, r2
2fff12be:	bf18      	it	ne
2fff12c0:	f040 0004 	orrne.w	r0, r0, #4
2fff12c4:	b002      	add	sp, #8
2fff12c6:	bd10      	pop	{r4, pc}
2fff12c8:	2fff933c 	.word	0x2fff933c

2fff12cc <stm32mp_etzpc_binding2decprot>:
2fff12cc:	b508      	push	{r3, lr}
2fff12ce:	2803      	cmp	r0, #3
2fff12d0:	d807      	bhi.n	2fff12e2 <stm32mp_etzpc_binding2decprot+0x16>
2fff12d2:	e8df f000 	tbb	[pc, r0]
2fff12d6:	020a      	.short	0x020a
2fff12d8:	040c      	.short	0x040c
2fff12da:	2001      	movs	r0, #1
2fff12dc:	bd08      	pop	{r3, pc}
2fff12de:	2003      	movs	r0, #3
2fff12e0:	e7fc      	b.n	2fff12dc <stm32mp_etzpc_binding2decprot+0x10>
2fff12e2:	f7ff fcef 	bl	2fff0cc4 <console_flush>
2fff12e6:	f005 ed24 	blx	2fff6d30 <do_panic>
2fff12ea:	2000      	movs	r0, #0
2fff12ec:	e7f6      	b.n	2fff12dc <stm32mp_etzpc_binding2decprot+0x10>
2fff12ee:	2002      	movs	r0, #2
2fff12f0:	e7f4      	b.n	2fff12dc <stm32mp_etzpc_binding2decprot+0x10>

2fff12f2 <xlat_arch_get_max_supported_pa>:
2fff12f2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff12f6:	21ff      	movs	r1, #255	; 0xff
2fff12f8:	4770      	bx	lr

2fff12fa <xlat_get_min_virt_addr_space_size>:
2fff12fa:	f04f 7000 	mov.w	r0, #33554432	; 0x2000000
2fff12fe:	4770      	bx	lr

2fff1300 <is_dcache_enabled>:
2fff1300:	f3ef 8300 	mrs	r3, CPSR
2fff1304:	f003 031f 	and.w	r3, r3, #31
2fff1308:	2b1a      	cmp	r3, #26
2fff130a:	d104      	bne.n	2fff1316 <is_dcache_enabled+0x16>
2fff130c:	ee91 0f10 	mrc	15, 4, r0, cr1, cr0, {0}
2fff1310:	f3c0 0080 	ubfx	r0, r0, #2, #1
2fff1314:	4770      	bx	lr
2fff1316:	ee11 0f10 	mrc	15, 0, r0, cr1, cr0, {0}
2fff131a:	e7f9      	b.n	2fff1310 <is_dcache_enabled+0x10>

2fff131c <xlat_arch_regime_get_xn_desc>:
2fff131c:	2801      	cmp	r0, #1
2fff131e:	b508      	push	{r3, lr}
2fff1320:	d005      	beq.n	2fff132e <xlat_arch_regime_get_xn_desc+0x12>
2fff1322:	2802      	cmp	r0, #2
2fff1324:	d007      	beq.n	2fff1336 <xlat_arch_regime_get_xn_desc+0x1a>
2fff1326:	4806      	ldr	r0, [pc, #24]	; (2fff1340 <xlat_arch_regime_get_xn_desc+0x24>)
2fff1328:	2154      	movs	r1, #84	; 0x54
2fff132a:	f006 fd3d 	bl	2fff7da8 <__assert>
2fff132e:	2000      	movs	r0, #0
2fff1330:	f44f 01c0 	mov.w	r1, #6291456	; 0x600000
2fff1334:	bd08      	pop	{r3, pc}
2fff1336:	2000      	movs	r0, #0
2fff1338:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
2fff133c:	e7fa      	b.n	2fff1334 <xlat_arch_regime_get_xn_desc+0x18>
2fff133e:	bf00      	nop
2fff1340:	2fff9444 	.word	0x2fff9444

2fff1344 <xlat_arch_tlbi_va>:
2fff1344:	b508      	push	{r3, lr}
2fff1346:	f3bf 8f4a 	dsb	ishst
2fff134a:	f420 607f 	bic.w	r0, r0, #4080	; 0xff0
2fff134e:	2901      	cmp	r1, #1
2fff1350:	f020 000f 	bic.w	r0, r0, #15
2fff1354:	d102      	bne.n	2fff135c <xlat_arch_tlbi_va+0x18>
2fff1356:	ee08 0f73 	mcr	15, 0, r0, cr8, cr3, {3}
2fff135a:	bd08      	pop	{r3, pc}
2fff135c:	2902      	cmp	r1, #2
2fff135e:	d003      	beq.n	2fff1368 <xlat_arch_tlbi_va+0x24>
2fff1360:	4803      	ldr	r0, [pc, #12]	; (2fff1370 <xlat_arch_tlbi_va+0x2c>)
2fff1362:	2164      	movs	r1, #100	; 0x64
2fff1364:	f006 fd20 	bl	2fff7da8 <__assert>
2fff1368:	ee88 0f33 	mcr	15, 4, r0, cr8, cr3, {1}
2fff136c:	e7f5      	b.n	2fff135a <xlat_arch_tlbi_va+0x16>
2fff136e:	bf00      	nop
2fff1370:	2fff9444 	.word	0x2fff9444

2fff1374 <xlat_arch_tlbi_va_sync>:
2fff1374:	2300      	movs	r3, #0
2fff1376:	ee07 3fd1 	mcr	15, 0, r3, cr7, cr1, {6}
2fff137a:	f3bf 8f4b 	dsb	ish
2fff137e:	f3bf 8f6f 	isb	sy
2fff1382:	4770      	bx	lr

2fff1384 <xlat_arch_current_el>:
2fff1384:	b508      	push	{r3, lr}
2fff1386:	f3ef 8300 	mrs	r3, CPSR
2fff138a:	f003 031f 	and.w	r3, r3, #31
2fff138e:	2b1a      	cmp	r3, #26
2fff1390:	d00f      	beq.n	2fff13b2 <xlat_arch_current_el+0x2e>
2fff1392:	f3ef 8300 	mrs	r3, CPSR
2fff1396:	f003 031f 	and.w	r3, r3, #31
2fff139a:	2b13      	cmp	r3, #19
2fff139c:	d00b      	beq.n	2fff13b6 <xlat_arch_current_el+0x32>
2fff139e:	f3ef 8300 	mrs	r3, CPSR
2fff13a2:	f003 031f 	and.w	r3, r3, #31
2fff13a6:	2b16      	cmp	r3, #22
2fff13a8:	d005      	beq.n	2fff13b6 <xlat_arch_current_el+0x32>
2fff13aa:	4804      	ldr	r0, [pc, #16]	; (2fff13bc <xlat_arch_current_el+0x38>)
2fff13ac:	2188      	movs	r1, #136	; 0x88
2fff13ae:	f006 fcfb 	bl	2fff7da8 <__assert>
2fff13b2:	2002      	movs	r0, #2
2fff13b4:	bd08      	pop	{r3, pc}
2fff13b6:	2001      	movs	r0, #1
2fff13b8:	e7fc      	b.n	2fff13b4 <xlat_arch_current_el+0x30>
2fff13ba:	bf00      	nop
2fff13bc:	2fff9444 	.word	0x2fff9444

2fff13c0 <is_mmu_enabled_ctx>:
2fff13c0:	b508      	push	{r3, lr}
2fff13c2:	6c43      	ldr	r3, [r0, #68]	; 0x44
2fff13c4:	2b01      	cmp	r3, #1
2fff13c6:	d10c      	bne.n	2fff13e2 <is_mmu_enabled_ctx+0x22>
2fff13c8:	f7ff ffdc 	bl	2fff1384 <xlat_arch_current_el>
2fff13cc:	2801      	cmp	r0, #1
2fff13ce:	d003      	beq.n	2fff13d8 <is_mmu_enabled_ctx+0x18>
2fff13d0:	213d      	movs	r1, #61	; 0x3d
2fff13d2:	480a      	ldr	r0, [pc, #40]	; (2fff13fc <is_mmu_enabled_ctx+0x3c>)
2fff13d4:	f006 fce8 	bl	2fff7da8 <__assert>
2fff13d8:	ee11 0f10 	mrc	15, 0, r0, cr1, cr0, {0}
2fff13dc:	f000 0001 	and.w	r0, r0, #1
2fff13e0:	bd08      	pop	{r3, pc}
2fff13e2:	2b02      	cmp	r3, #2
2fff13e4:	d001      	beq.n	2fff13ea <is_mmu_enabled_ctx+0x2a>
2fff13e6:	2140      	movs	r1, #64	; 0x40
2fff13e8:	e7f3      	b.n	2fff13d2 <is_mmu_enabled_ctx+0x12>
2fff13ea:	f7ff ffcb 	bl	2fff1384 <xlat_arch_current_el>
2fff13ee:	2802      	cmp	r0, #2
2fff13f0:	d001      	beq.n	2fff13f6 <is_mmu_enabled_ctx+0x36>
2fff13f2:	2141      	movs	r1, #65	; 0x41
2fff13f4:	e7ed      	b.n	2fff13d2 <is_mmu_enabled_ctx+0x12>
2fff13f6:	ee91 0f10 	mrc	15, 4, r0, cr1, cr0, {0}
2fff13fa:	e7ef      	b.n	2fff13dc <is_mmu_enabled_ctx+0x1c>
2fff13fc:	2fff9444 	.word	0x2fff9444

2fff1400 <setup_mmu_cfg>:
2fff1400:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff1402:	460f      	mov	r7, r1
2fff1404:	9b09      	ldr	r3, [sp, #36]	; 0x24
2fff1406:	4605      	mov	r5, r0
2fff1408:	9908      	ldr	r1, [sp, #32]
2fff140a:	4616      	mov	r6, r2
2fff140c:	2b01      	cmp	r3, #1
2fff140e:	d10f      	bne.n	2fff1430 <setup_mmu_cfg+0x30>
2fff1410:	f3ef 8300 	mrs	r3, CPSR
2fff1414:	f003 031f 	and.w	r3, r3, #31
2fff1418:	2b13      	cmp	r3, #19
2fff141a:	d015      	beq.n	2fff1448 <setup_mmu_cfg+0x48>
2fff141c:	f3ef 8300 	mrs	r3, CPSR
2fff1420:	f003 031f 	and.w	r3, r3, #31
2fff1424:	2b16      	cmp	r3, #22
2fff1426:	d00f      	beq.n	2fff1448 <setup_mmu_cfg+0x48>
2fff1428:	21b1      	movs	r1, #177	; 0xb1
2fff142a:	481c      	ldr	r0, [pc, #112]	; (2fff149c <setup_mmu_cfg+0x9c>)
2fff142c:	f006 fcbc 	bl	2fff7da8 <__assert>
2fff1430:	2b02      	cmp	r3, #2
2fff1432:	d001      	beq.n	2fff1438 <setup_mmu_cfg+0x38>
2fff1434:	21b8      	movs	r1, #184	; 0xb8
2fff1436:	e7f8      	b.n	2fff142a <setup_mmu_cfg+0x2a>
2fff1438:	f3ef 8300 	mrs	r3, CPSR
2fff143c:	f003 031f 	and.w	r3, r3, #31
2fff1440:	2b1a      	cmp	r3, #26
2fff1442:	d00a      	beq.n	2fff145a <setup_mmu_cfg+0x5a>
2fff1444:	21b9      	movs	r1, #185	; 0xb9
2fff1446:	e7f0      	b.n	2fff142a <setup_mmu_cfg+0x2a>
2fff1448:	4c15      	ldr	r4, [pc, #84]	; (2fff14a0 <setup_mmu_cfg+0xa0>)
2fff144a:	1c4a      	adds	r2, r1, #1
2fff144c:	d010      	beq.n	2fff1470 <setup_mmu_cfg+0x70>
2fff144e:	1c48      	adds	r0, r1, #1
2fff1450:	f1b0 7f00 	cmp.w	r0, #33554432	; 0x2000000
2fff1454:	d203      	bcs.n	2fff145e <setup_mmu_cfg+0x5e>
2fff1456:	21cd      	movs	r1, #205	; 0xcd
2fff1458:	e7e7      	b.n	2fff142a <setup_mmu_cfg+0x2a>
2fff145a:	4c12      	ldr	r4, [pc, #72]	; (2fff14a4 <setup_mmu_cfg+0xa4>)
2fff145c:	e7f5      	b.n	2fff144a <setup_mmu_cfg+0x4a>
2fff145e:	4001      	ands	r1, r0
2fff1460:	d001      	beq.n	2fff1466 <setup_mmu_cfg+0x66>
2fff1462:	21d0      	movs	r1, #208	; 0xd0
2fff1464:	e7e1      	b.n	2fff142a <setup_mmu_cfg+0x2a>
2fff1466:	f7ff fc61 	bl	2fff0d2c <__ctzdi2>
2fff146a:	f1c0 0020 	rsb	r0, r0, #32
2fff146e:	4304      	orrs	r4, r0
2fff1470:	07bb      	lsls	r3, r7, #30
2fff1472:	bf58      	it	pl
2fff1474:	f444 5454 	orrpl.w	r4, r4, #13568	; 0x3500
2fff1478:	ee10 3fd2 	mrc	15, 0, r3, cr0, cr2, {6}
2fff147c:	480a      	ldr	r0, [pc, #40]	; (2fff14a8 <setup_mmu_cfg+0xa8>)
2fff147e:	f413 4f70 	tst.w	r3, #61440	; 0xf000
2fff1482:	bf18      	it	ne
2fff1484:	f046 0601 	orrne.w	r6, r6, #1
2fff1488:	2300      	movs	r3, #0
2fff148a:	2100      	movs	r1, #0
2fff148c:	e9c5 0100 	strd	r0, r1, [r5]
2fff1490:	e9c5 4302 	strd	r4, r3, [r5, #8]
2fff1494:	e9c5 6304 	strd	r6, r3, [r5, #16]
2fff1498:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff149a:	bf00      	nop
2fff149c:	2fff9444 	.word	0x2fff9444
2fff14a0:	80800000 	.word	0x80800000
2fff14a4:	80803500 	.word	0x80803500
2fff14a8:	004404ff 	.word	0x004404ff

2fff14ac <mmap_add_region>:
2fff14ac:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
2fff14ae:	e9cd 2302 	strd	r2, r3, [sp, #8]
2fff14b2:	9b08      	ldr	r3, [sp, #32]
2fff14b4:	e9cd 0100 	strd	r0, r1, [sp]
2fff14b8:	9304      	str	r3, [sp, #16]
2fff14ba:	4669      	mov	r1, sp
2fff14bc:	4804      	ldr	r0, [pc, #16]	; (2fff14d0 <mmap_add_region+0x24>)
2fff14be:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
2fff14c2:	9305      	str	r3, [sp, #20]
2fff14c4:	f000 fb10 	bl	2fff1ae8 <mmap_add_region_ctx>
2fff14c8:	b007      	add	sp, #28
2fff14ca:	f85d fb04 	ldr.w	pc, [sp], #4
2fff14ce:	bf00      	nop
2fff14d0:	2fffb3b8 	.word	0x2fffb3b8

2fff14d4 <mmap_add>:
2fff14d4:	4601      	mov	r1, r0
2fff14d6:	4801      	ldr	r0, [pc, #4]	; (2fff14dc <mmap_add+0x8>)
2fff14d8:	f000 bb7e 	b.w	2fff1bd8 <mmap_add_ctx>
2fff14dc:	2fffb3b8 	.word	0x2fffb3b8

2fff14e0 <mmap_add_dynamic_region>:
2fff14e0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
2fff14e2:	e9cd 2302 	strd	r2, r3, [sp, #8]
2fff14e6:	9b08      	ldr	r3, [sp, #32]
2fff14e8:	e9cd 0100 	strd	r0, r1, [sp]
2fff14ec:	9304      	str	r3, [sp, #16]
2fff14ee:	4669      	mov	r1, sp
2fff14f0:	4804      	ldr	r0, [pc, #16]	; (2fff1504 <mmap_add_dynamic_region+0x24>)
2fff14f2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
2fff14f6:	9305      	str	r3, [sp, #20]
2fff14f8:	f000 fb7a 	bl	2fff1bf0 <mmap_add_dynamic_region_ctx>
2fff14fc:	b007      	add	sp, #28
2fff14fe:	f85d fb04 	ldr.w	pc, [sp], #4
2fff1502:	bf00      	nop
2fff1504:	2fffb3b8 	.word	0x2fffb3b8

2fff1508 <mmap_remove_dynamic_region>:
2fff1508:	460a      	mov	r2, r1
2fff150a:	4601      	mov	r1, r0
2fff150c:	4801      	ldr	r0, [pc, #4]	; (2fff1514 <mmap_remove_dynamic_region+0xc>)
2fff150e:	f000 bc29 	b.w	2fff1d64 <mmap_remove_dynamic_region_ctx>
2fff1512:	bf00      	nop
2fff1514:	2fffb3b8 	.word	0x2fffb3b8

2fff1518 <init_xlat_tables>:
2fff1518:	b510      	push	{r4, lr}
2fff151a:	4c0c      	ldr	r4, [pc, #48]	; (2fff154c <init_xlat_tables+0x34>)
2fff151c:	6c63      	ldr	r3, [r4, #68]	; 0x44
2fff151e:	3301      	adds	r3, #1
2fff1520:	d003      	beq.n	2fff152a <init_xlat_tables+0x12>
2fff1522:	2160      	movs	r1, #96	; 0x60
2fff1524:	480a      	ldr	r0, [pc, #40]	; (2fff1550 <init_xlat_tables+0x38>)
2fff1526:	f006 fc3f 	bl	2fff7da8 <__assert>
2fff152a:	f7ff ff2b 	bl	2fff1384 <xlat_arch_current_el>
2fff152e:	2801      	cmp	r0, #1
2fff1530:	d105      	bne.n	2fff153e <init_xlat_tables+0x26>
2fff1532:	6460      	str	r0, [r4, #68]	; 0x44
2fff1534:	4805      	ldr	r0, [pc, #20]	; (2fff154c <init_xlat_tables+0x34>)
2fff1536:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff153a:	f000 bc9b 	b.w	2fff1e74 <init_xlat_tables_ctx>
2fff153e:	2802      	cmp	r0, #2
2fff1540:	d0f7      	beq.n	2fff1532 <init_xlat_tables+0x1a>
2fff1542:	2803      	cmp	r0, #3
2fff1544:	d0f5      	beq.n	2fff1532 <init_xlat_tables+0x1a>
2fff1546:	2169      	movs	r1, #105	; 0x69
2fff1548:	e7ec      	b.n	2fff1524 <init_xlat_tables+0xc>
2fff154a:	bf00      	nop
2fff154c:	2fffb3b8 	.word	0x2fffb3b8
2fff1550:	2fff9472 	.word	0x2fff9472

2fff1554 <enable_mmu_svc_mon>:
2fff1554:	b51f      	push	{r0, r1, r2, r3, r4, lr}
2fff1556:	2201      	movs	r2, #1
2fff1558:	4b09      	ldr	r3, [pc, #36]	; (2fff1580 <enable_mmu_svc_mon+0x2c>)
2fff155a:	4604      	mov	r4, r0
2fff155c:	9203      	str	r2, [sp, #12]
2fff155e:	689a      	ldr	r2, [r3, #8]
2fff1560:	9202      	str	r2, [sp, #8]
2fff1562:	e9d3 0100 	ldrd	r0, r1, [r3]
2fff1566:	e9cd 0100 	strd	r0, r1, [sp]
2fff156a:	4806      	ldr	r0, [pc, #24]	; (2fff1584 <enable_mmu_svc_mon+0x30>)
2fff156c:	4621      	mov	r1, r4
2fff156e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
2fff1570:	f7ff ff46 	bl	2fff1400 <setup_mmu_cfg>
2fff1574:	4620      	mov	r0, r4
2fff1576:	b004      	add	sp, #16
2fff1578:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff157c:	f009 baec 	b.w	2fffab58 <__enable_mmu_direct_svc_mon_from_thumb>
2fff1580:	2fffb3b8 	.word	0x2fffb3b8
2fff1584:	2fffd108 	.word	0x2fffd108

2fff1588 <mmap_add_region_check>:
2fff1588:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff158c:	b089      	sub	sp, #36	; 0x24
2fff158e:	e9d1 8900 	ldrd	r8, r9, [r1]
2fff1592:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
2fff1596:	694b      	ldr	r3, [r1, #20]
2fff1598:	f118 3aff 	adds.w	sl, r8, #4294967295	; 0xffffffff
2fff159c:	f149 3bff 	adc.w	fp, r9, #4294967295	; 0xffffffff
2fff15a0:	eb1a 0605 	adds.w	r6, sl, r5
2fff15a4:	f14b 0700 	adc.w	r7, fp, #0
2fff15a8:	e9cd 6700 	strd	r6, r7, [sp]
2fff15ac:	f3c8 060b 	ubfx	r6, r8, #0, #12
2fff15b0:	2700      	movs	r7, #0
2fff15b2:	433e      	orrs	r6, r7
2fff15b4:	eb02 0405 	add.w	r4, r2, r5
2fff15b8:	f104 34ff 	add.w	r4, r4, #4294967295	; 0xffffffff
2fff15bc:	f040 8084 	bne.w	2fff16c8 <mmap_add_region_check+0x140>
2fff15c0:	f3c2 060b 	ubfx	r6, r2, #0, #12
2fff15c4:	2e00      	cmp	r6, #0
2fff15c6:	d17f      	bne.n	2fff16c8 <mmap_add_region_check+0x140>
2fff15c8:	f3c5 060b 	ubfx	r6, r5, #0, #12
2fff15cc:	2e00      	cmp	r6, #0
2fff15ce:	d17b      	bne.n	2fff16c8 <mmap_add_region_check+0x140>
2fff15d0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
2fff15d4:	d005      	beq.n	2fff15e2 <mmap_add_region_check+0x5a>
2fff15d6:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
2fff15da:	d002      	beq.n	2fff15e2 <mmap_add_region_check+0x5a>
2fff15dc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
2fff15e0:	d172      	bne.n	2fff16c8 <mmap_add_region_check+0x140>
2fff15e2:	e9dd 6700 	ldrd	r6, r7, [sp]
2fff15e6:	454f      	cmp	r7, r9
2fff15e8:	bf08      	it	eq
2fff15ea:	4546      	cmpeq	r6, r8
2fff15ec:	d36f      	bcc.n	2fff16ce <mmap_add_region_check+0x146>
2fff15ee:	42a2      	cmp	r2, r4
2fff15f0:	d86d      	bhi.n	2fff16ce <mmap_add_region_check+0x146>
2fff15f2:	6883      	ldr	r3, [r0, #8]
2fff15f4:	42a3      	cmp	r3, r4
2fff15f6:	d36a      	bcc.n	2fff16ce <mmap_add_region_check+0x146>
2fff15f8:	e9d0 6700 	ldrd	r6, r7, [r0]
2fff15fc:	e9dd ab00 	ldrd	sl, fp, [sp]
2fff1600:	455f      	cmp	r7, fp
2fff1602:	bf08      	it	eq
2fff1604:	4556      	cmpeq	r6, sl
2fff1606:	d362      	bcc.n	2fff16ce <mmap_add_region_check+0x146>
2fff1608:	68c3      	ldr	r3, [r0, #12]
2fff160a:	2618      	movs	r6, #24
2fff160c:	6900      	ldr	r0, [r0, #16]
2fff160e:	fb06 3000 	mla	r0, r6, r0, r3
2fff1612:	f850 0c0c 	ldr.w	r0, [r0, #-12]
2fff1616:	2800      	cmp	r0, #0
2fff1618:	d15c      	bne.n	2fff16d4 <mmap_add_region_check+0x14c>
2fff161a:	ebb2 0008 	subs.w	r0, r2, r8
2fff161e:	4433      	add	r3, r6
2fff1620:	9006      	str	r0, [sp, #24]
2fff1622:	eb69 0049 	sbc.w	r0, r9, r9, lsl #1
2fff1626:	9007      	str	r0, [sp, #28]
2fff1628:	f853 0c0c 	ldr.w	r0, [r3, #-12]
2fff162c:	b910      	cbnz	r0, 2fff1634 <mmap_add_region_check+0xac>
2fff162e:	b009      	add	sp, #36	; 0x24
2fff1630:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff1634:	f853 cc10 	ldr.w	ip, [r3, #-16]
2fff1638:	4594      	cmp	ip, r2
2fff163a:	eb0c 0e00 	add.w	lr, ip, r0
2fff163e:	f10e 3eff 	add.w	lr, lr, #4294967295	; 0xffffffff
2fff1642:	d822      	bhi.n	2fff168a <mmap_add_region_check+0x102>
2fff1644:	4574      	cmp	r4, lr
2fff1646:	d901      	bls.n	2fff164c <mmap_add_region_check+0xc4>
2fff1648:	4594      	cmp	ip, r2
2fff164a:	d320      	bcc.n	2fff168e <mmap_add_region_check+0x106>
2fff164c:	690e      	ldr	r6, [r1, #16]
2fff164e:	2e00      	cmp	r6, #0
2fff1650:	db18      	blt.n	2fff1684 <mmap_add_region_check+0xfc>
2fff1652:	f853 6c08 	ldr.w	r6, [r3, #-8]
2fff1656:	2e00      	cmp	r6, #0
2fff1658:	db14      	blt.n	2fff1684 <mmap_add_region_check+0xfc>
2fff165a:	e953 6706 	ldrd	r6, r7, [r3, #-24]
2fff165e:	e9dd ab06 	ldrd	sl, fp, [sp, #24]
2fff1662:	ebbc 0606 	subs.w	r6, ip, r6
2fff1666:	46e6      	mov	lr, ip
2fff1668:	9602      	str	r6, [sp, #8]
2fff166a:	eb67 0647 	sbc.w	r6, r7, r7, lsl #1
2fff166e:	9603      	str	r6, [sp, #12]
2fff1670:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
2fff1674:	455f      	cmp	r7, fp
2fff1676:	bf08      	it	eq
2fff1678:	4556      	cmpeq	r6, sl
2fff167a:	d103      	bne.n	2fff1684 <mmap_add_region_check+0xfc>
2fff167c:	4594      	cmp	ip, r2
2fff167e:	d121      	bne.n	2fff16c4 <mmap_add_region_check+0x13c>
2fff1680:	42a8      	cmp	r0, r5
2fff1682:	d11f      	bne.n	2fff16c4 <mmap_add_region_check+0x13c>
2fff1684:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff1688:	e7d1      	b.n	2fff162e <mmap_add_region_check+0xa6>
2fff168a:	4574      	cmp	r4, lr
2fff168c:	e7dd      	b.n	2fff164a <mmap_add_region_check+0xc2>
2fff168e:	e953 ab06 	ldrd	sl, fp, [r3, #-24]
2fff1692:	e9dd 6700 	ldrd	r6, r7, [sp]
2fff1696:	455f      	cmp	r7, fp
2fff1698:	bf08      	it	eq
2fff169a:	4556      	cmpeq	r6, sl
2fff169c:	d31d      	bcc.n	2fff16da <mmap_add_region_check+0x152>
2fff169e:	f11a 36ff 	adds.w	r6, sl, #4294967295	; 0xffffffff
2fff16a2:	9604      	str	r6, [sp, #16]
2fff16a4:	f14b 36ff 	adc.w	r6, fp, #4294967295	; 0xffffffff
2fff16a8:	9605      	str	r6, [sp, #20]
2fff16aa:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
2fff16ae:	1836      	adds	r6, r6, r0
2fff16b0:	f147 0700 	adc.w	r7, r7, #0
2fff16b4:	45a4      	cmp	ip, r4
2fff16b6:	d801      	bhi.n	2fff16bc <mmap_add_region_check+0x134>
2fff16b8:	4572      	cmp	r2, lr
2fff16ba:	d9e3      	bls.n	2fff1684 <mmap_add_region_check+0xfc>
2fff16bc:	454f      	cmp	r7, r9
2fff16be:	bf08      	it	eq
2fff16c0:	4546      	cmpeq	r6, r8
2fff16c2:	d2df      	bcs.n	2fff1684 <mmap_add_region_check+0xfc>
2fff16c4:	3318      	adds	r3, #24
2fff16c6:	e7af      	b.n	2fff1628 <mmap_add_region_check+0xa0>
2fff16c8:	f06f 0015 	mvn.w	r0, #21
2fff16cc:	e7af      	b.n	2fff162e <mmap_add_region_check+0xa6>
2fff16ce:	f06f 0021 	mvn.w	r0, #33	; 0x21
2fff16d2:	e7ac      	b.n	2fff162e <mmap_add_region_check+0xa6>
2fff16d4:	f06f 000b 	mvn.w	r0, #11
2fff16d8:	e7a9      	b.n	2fff162e <mmap_add_region_check+0xa6>
2fff16da:	45a4      	cmp	ip, r4
2fff16dc:	d8f2      	bhi.n	2fff16c4 <mmap_add_region_check+0x13c>
2fff16de:	4572      	cmp	r2, lr
2fff16e0:	d8f0      	bhi.n	2fff16c4 <mmap_add_region_check+0x13c>
2fff16e2:	e7cf      	b.n	2fff1684 <mmap_add_region_check+0xfc>

2fff16e4 <xlat_clean_dcache_range>:
2fff16e4:	b538      	push	{r3, r4, r5, lr}
2fff16e6:	4604      	mov	r4, r0
2fff16e8:	460d      	mov	r5, r1
2fff16ea:	f7ff fe09 	bl	2fff1300 <is_dcache_enabled>
2fff16ee:	b128      	cbz	r0, 2fff16fc <xlat_clean_dcache_range+0x18>
2fff16f0:	4629      	mov	r1, r5
2fff16f2:	4620      	mov	r0, r4
2fff16f4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff16f8:	f009 ba1a 	b.w	2fffab30 <__clean_dcache_range_from_thumb>
2fff16fc:	bd38      	pop	{r3, r4, r5, pc}
	...

2fff1700 <xlat_table_get_index>:
2fff1700:	b510      	push	{r4, lr}
2fff1702:	2300      	movs	r3, #0
2fff1704:	6984      	ldr	r4, [r0, #24]
2fff1706:	429c      	cmp	r4, r3
2fff1708:	dc03      	bgt.n	2fff1712 <xlat_table_get_index+0x12>
2fff170a:	4806      	ldr	r0, [pc, #24]	; (2fff1724 <xlat_table_get_index+0x24>)
2fff170c:	2135      	movs	r1, #53	; 0x35
2fff170e:	f006 fb4b 	bl	2fff7da8 <__assert>
2fff1712:	6942      	ldr	r2, [r0, #20]
2fff1714:	eb02 3203 	add.w	r2, r2, r3, lsl #12
2fff1718:	4291      	cmp	r1, r2
2fff171a:	d001      	beq.n	2fff1720 <xlat_table_get_index+0x20>
2fff171c:	3301      	adds	r3, #1
2fff171e:	e7f2      	b.n	2fff1706 <xlat_table_get_index+0x6>
2fff1720:	4618      	mov	r0, r3
2fff1722:	bd10      	pop	{r4, pc}
2fff1724:	2fff9515 	.word	0x2fff9515

2fff1728 <xlat_tables_unmap_region>:
2fff1728:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff172c:	b089      	sub	sp, #36	; 0x24
2fff172e:	469b      	mov	fp, r3
2fff1730:	4606      	mov	r6, r0
2fff1732:	9f13      	ldr	r7, [sp, #76]	; 0x4c
2fff1734:	468a      	mov	sl, r1
2fff1736:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
2fff1738:	42bb      	cmp	r3, r7
2fff173a:	d801      	bhi.n	2fff1740 <xlat_tables_unmap_region+0x18>
2fff173c:	2f03      	cmp	r7, #3
2fff173e:	d904      	bls.n	2fff174a <xlat_tables_unmap_region+0x22>
2fff1740:	f240 115f 	movw	r1, #351	; 0x15f
2fff1744:	484c      	ldr	r0, [pc, #304]	; (2fff1878 <xlat_tables_unmap_region+0x150>)
2fff1746:	f006 fb2f 	bl	2fff7da8 <__assert>
2fff174a:	e9d1 1302 	ldrd	r1, r3, [r1, #8]
2fff174e:	2001      	movs	r0, #1
2fff1750:	440b      	add	r3, r1
2fff1752:	4291      	cmp	r1, r2
2fff1754:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
2fff1758:	9307      	str	r3, [sp, #28]
2fff175a:	f06f 0308 	mvn.w	r3, #8
2fff175e:	fb03 f307 	mul.w	r3, r3, r7
2fff1762:	bf98      	it	ls
2fff1764:	4614      	movls	r4, r2
2fff1766:	f103 0327 	add.w	r3, r3, #39	; 0x27
2fff176a:	fa00 f003 	lsl.w	r0, r0, r3
2fff176e:	bf88      	it	hi
2fff1770:	4244      	neghi	r4, r0
2fff1772:	9006      	str	r0, [sp, #24]
2fff1774:	bf88      	it	hi
2fff1776:	400c      	andhi	r4, r1
2fff1778:	1aa2      	subs	r2, r4, r2
2fff177a:	fa22 f503 	lsr.w	r5, r2, r3
2fff177e:	eb0b 09c5 	add.w	r9, fp, r5, lsl #3
2fff1782:	9b12      	ldr	r3, [sp, #72]	; 0x48
2fff1784:	429d      	cmp	r5, r3
2fff1786:	d266      	bcs.n	2fff1856 <xlat_tables_unmap_region+0x12e>
2fff1788:	9b06      	ldr	r3, [sp, #24]
2fff178a:	f8d9 1000 	ldr.w	r1, [r9]
2fff178e:	18e3      	adds	r3, r4, r3
2fff1790:	9305      	str	r3, [sp, #20]
2fff1792:	1e58      	subs	r0, r3, #1
2fff1794:	f001 0303 	and.w	r3, r1, #3
2fff1798:	9302      	str	r3, [sp, #8]
2fff179a:	2300      	movs	r3, #0
2fff179c:	9303      	str	r3, [sp, #12]
2fff179e:	e9da 2302 	ldrd	r2, r3, [sl, #8]
2fff17a2:	4294      	cmp	r4, r2
2fff17a4:	4413      	add	r3, r2
2fff17a6:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
2fff17aa:	d317      	bcc.n	2fff17dc <xlat_tables_unmap_region+0xb4>
2fff17ac:	4283      	cmp	r3, r0
2fff17ae:	d315      	bcc.n	2fff17dc <xlat_tables_unmap_region+0xb4>
2fff17b0:	2f03      	cmp	r7, #3
2fff17b2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
2fff17b6:	d106      	bne.n	2fff17c6 <xlat_tables_unmap_region+0x9e>
2fff17b8:	2b00      	cmp	r3, #0
2fff17ba:	bf08      	it	eq
2fff17bc:	2a03      	cmpeq	r2, #3
2fff17be:	d03b      	beq.n	2fff1838 <xlat_tables_unmap_region+0x110>
2fff17c0:	f44f 7196 	mov.w	r1, #300	; 0x12c
2fff17c4:	e7be      	b.n	2fff1744 <xlat_tables_unmap_region+0x1c>
2fff17c6:	2b00      	cmp	r3, #0
2fff17c8:	bf08      	it	eq
2fff17ca:	2a03      	cmpeq	r2, #3
2fff17cc:	d018      	beq.n	2fff1800 <xlat_tables_unmap_region+0xd8>
2fff17ce:	2b00      	cmp	r3, #0
2fff17d0:	bf08      	it	eq
2fff17d2:	2a01      	cmpeq	r2, #1
2fff17d4:	d030      	beq.n	2fff1838 <xlat_tables_unmap_region+0x110>
2fff17d6:	f240 113b 	movw	r1, #315	; 0x13b
2fff17da:	e7b3      	b.n	2fff1744 <xlat_tables_unmap_region+0x1c>
2fff17dc:	4282      	cmp	r2, r0
2fff17de:	d901      	bls.n	2fff17e4 <xlat_tables_unmap_region+0xbc>
2fff17e0:	429c      	cmp	r4, r3
2fff17e2:	d831      	bhi.n	2fff1848 <xlat_tables_unmap_region+0x120>
2fff17e4:	2f03      	cmp	r7, #3
2fff17e6:	d102      	bne.n	2fff17ee <xlat_tables_unmap_region+0xc6>
2fff17e8:	f44f 71a5 	mov.w	r1, #330	; 0x14a
2fff17ec:	e7aa      	b.n	2fff1744 <xlat_tables_unmap_region+0x1c>
2fff17ee:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
2fff17f2:	2b00      	cmp	r3, #0
2fff17f4:	bf08      	it	eq
2fff17f6:	2a03      	cmpeq	r2, #3
2fff17f8:	d002      	beq.n	2fff1800 <xlat_tables_unmap_region+0xd8>
2fff17fa:	f240 114b 	movw	r1, #331	; 0x14b
2fff17fe:	e7a1      	b.n	2fff1744 <xlat_tables_unmap_region+0x1c>
2fff1800:	f421 687f 	bic.w	r8, r1, #4080	; 0xff0
2fff1804:	1c7b      	adds	r3, r7, #1
2fff1806:	f028 080f 	bic.w	r8, r8, #15
2fff180a:	4622      	mov	r2, r4
2fff180c:	9301      	str	r3, [sp, #4]
2fff180e:	f44f 7300 	mov.w	r3, #512	; 0x200
2fff1812:	9300      	str	r3, [sp, #0]
2fff1814:	4651      	mov	r1, sl
2fff1816:	4643      	mov	r3, r8
2fff1818:	4630      	mov	r0, r6
2fff181a:	f7ff ff85 	bl	2fff1728 <xlat_tables_unmap_region>
2fff181e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
2fff1822:	4640      	mov	r0, r8
2fff1824:	f7ff ff5e 	bl	2fff16e4 <xlat_clean_dcache_range>
2fff1828:	4641      	mov	r1, r8
2fff182a:	4630      	mov	r0, r6
2fff182c:	f7ff ff68 	bl	2fff1700 <xlat_table_get_index>
2fff1830:	69f3      	ldr	r3, [r6, #28]
2fff1832:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
2fff1836:	b93b      	cbnz	r3, 2fff1848 <xlat_tables_unmap_region+0x120>
2fff1838:	6c71      	ldr	r1, [r6, #68]	; 0x44
2fff183a:	2200      	movs	r2, #0
2fff183c:	2300      	movs	r3, #0
2fff183e:	4620      	mov	r0, r4
2fff1840:	e9c9 2300 	strd	r2, r3, [r9]
2fff1844:	f7ff fd7e 	bl	2fff1344 <xlat_arch_tlbi_va>
2fff1848:	9c05      	ldr	r4, [sp, #20]
2fff184a:	3501      	adds	r5, #1
2fff184c:	9b07      	ldr	r3, [sp, #28]
2fff184e:	f109 0908 	add.w	r9, r9, #8
2fff1852:	429c      	cmp	r4, r3
2fff1854:	d395      	bcc.n	2fff1782 <xlat_tables_unmap_region+0x5a>
2fff1856:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
2fff1858:	42bb      	cmp	r3, r7
2fff185a:	d209      	bcs.n	2fff1870 <xlat_tables_unmap_region+0x148>
2fff185c:	4659      	mov	r1, fp
2fff185e:	4630      	mov	r0, r6
2fff1860:	f7ff ff4e 	bl	2fff1700 <xlat_table_get_index>
2fff1864:	69f2      	ldr	r2, [r6, #28]
2fff1866:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
2fff186a:	3b01      	subs	r3, #1
2fff186c:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
2fff1870:	b009      	add	sp, #36	; 0x24
2fff1872:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff1876:	bf00      	nop
2fff1878:	2fff9515 	.word	0x2fff9515

2fff187c <xlat_desc>:
2fff187c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff187e:	f06f 0508 	mvn.w	r5, #8
2fff1882:	9c06      	ldr	r4, [sp, #24]
2fff1884:	2700      	movs	r7, #0
2fff1886:	4365      	muls	r5, r4
2fff1888:	f105 0627 	add.w	r6, r5, #39	; 0x27
2fff188c:	2501      	movs	r5, #1
2fff188e:	40b5      	lsls	r5, r6
2fff1890:	3d01      	subs	r5, #1
2fff1892:	ea05 0602 	and.w	r6, r5, r2
2fff1896:	ea56 0507 	orrs.w	r5, r6, r7
2fff189a:	d003      	beq.n	2fff18a4 <xlat_desc+0x28>
2fff189c:	2172      	movs	r1, #114	; 0x72
2fff189e:	4822      	ldr	r0, [pc, #136]	; (2fff1928 <xlat_desc+0xac>)
2fff18a0:	f006 fa82 	bl	2fff7da8 <__assert>
2fff18a4:	6c40      	ldr	r0, [r0, #68]	; 0x44
2fff18a6:	2c03      	cmp	r4, #3
2fff18a8:	ea4f 0441 	mov.w	r4, r1, lsl #1
2fff18ac:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
2fff18b0:	f004 0420 	and.w	r4, r4, #32
2fff18b4:	bf08      	it	eq
2fff18b6:	2503      	moveq	r5, #3
2fff18b8:	ea44 0402 	orr.w	r4, r4, r2
2fff18bc:	bf18      	it	ne
2fff18be:	2501      	movne	r5, #1
2fff18c0:	070a      	lsls	r2, r1, #28
2fff18c2:	ea44 0405 	orr.w	r4, r4, r5
2fff18c6:	bf58      	it	pl
2fff18c8:	2680      	movpl	r6, #128	; 0x80
2fff18ca:	ea44 0406 	orr.w	r4, r4, r6
2fff18ce:	bf58      	it	pl
2fff18d0:	2700      	movpl	r7, #0
2fff18d2:	ea43 0507 	orr.w	r5, r3, r7
2fff18d6:	2801      	cmp	r0, #1
2fff18d8:	d10d      	bne.n	2fff18f6 <xlat_desc+0x7a>
2fff18da:	064b      	lsls	r3, r1, #25
2fff18dc:	d501      	bpl.n	2fff18e2 <xlat_desc+0x66>
2fff18de:	f044 0440 	orr.w	r4, r4, #64	; 0x40
2fff18e2:	f011 0607 	ands.w	r6, r1, #7
2fff18e6:	d10b      	bne.n	2fff1900 <xlat_desc+0x84>
2fff18e8:	f444 7401 	orr.w	r4, r4, #516	; 0x204
2fff18ec:	f7ff fd16 	bl	2fff131c <xlat_arch_regime_get_xn_desc>
2fff18f0:	4320      	orrs	r0, r4
2fff18f2:	4329      	orrs	r1, r5
2fff18f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff18f6:	1e83      	subs	r3, r0, #2
2fff18f8:	2b01      	cmp	r3, #1
2fff18fa:	d9f0      	bls.n	2fff18de <xlat_desc+0x62>
2fff18fc:	2195      	movs	r1, #149	; 0x95
2fff18fe:	e7ce      	b.n	2fff189e <xlat_desc+0x22>
2fff1900:	f011 0f28 	tst.w	r1, #40	; 0x28
2fff1904:	d003      	beq.n	2fff190e <xlat_desc+0x92>
2fff1906:	f7ff fd09 	bl	2fff131c <xlat_arch_regime_get_xn_desc>
2fff190a:	4304      	orrs	r4, r0
2fff190c:	430d      	orrs	r5, r1
2fff190e:	2e02      	cmp	r6, #2
2fff1910:	d103      	bne.n	2fff191a <xlat_desc+0x9e>
2fff1912:	f444 7040 	orr.w	r0, r4, #768	; 0x300
2fff1916:	4629      	mov	r1, r5
2fff1918:	e7ec      	b.n	2fff18f4 <xlat_desc+0x78>
2fff191a:	2e01      	cmp	r6, #1
2fff191c:	d001      	beq.n	2fff1922 <xlat_desc+0xa6>
2fff191e:	21d4      	movs	r1, #212	; 0xd4
2fff1920:	e7bd      	b.n	2fff189e <xlat_desc+0x22>
2fff1922:	f444 7002 	orr.w	r0, r4, #520	; 0x208
2fff1926:	e7f6      	b.n	2fff1916 <xlat_desc+0x9a>
2fff1928:	2fff9515 	.word	0x2fff9515

2fff192c <xlat_tables_map_region>:
2fff192c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff1930:	b08d      	sub	sp, #52	; 0x34
2fff1932:	460f      	mov	r7, r1
2fff1934:	4606      	mov	r6, r0
2fff1936:	f8dd 805c 	ldr.w	r8, [sp, #92]	; 0x5c
2fff193a:	461d      	mov	r5, r3
2fff193c:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
2fff193e:	4541      	cmp	r1, r8
2fff1940:	d802      	bhi.n	2fff1948 <xlat_tables_map_region+0x1c>
2fff1942:	f1b8 0f03 	cmp.w	r8, #3
2fff1946:	d904      	bls.n	2fff1952 <xlat_tables_map_region+0x26>
2fff1948:	f44f 710d 	mov.w	r1, #564	; 0x234
2fff194c:	4865      	ldr	r0, [pc, #404]	; (2fff1ae4 <xlat_tables_map_region+0x1b8>)
2fff194e:	f006 fa2b 	bl	2fff7da8 <__assert>
2fff1952:	e9d7 0302 	ldrd	r0, r3, [r7, #8]
2fff1956:	4403      	add	r3, r0
2fff1958:	4290      	cmp	r0, r2
2fff195a:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
2fff195e:	930a      	str	r3, [sp, #40]	; 0x28
2fff1960:	f06f 0308 	mvn.w	r3, #8
2fff1964:	fb03 f308 	mul.w	r3, r3, r8
2fff1968:	f103 0327 	add.w	r3, r3, #39	; 0x27
2fff196c:	9305      	str	r3, [sp, #20]
2fff196e:	f04f 0301 	mov.w	r3, #1
2fff1972:	9c05      	ldr	r4, [sp, #20]
2fff1974:	fa03 f304 	lsl.w	r3, r3, r4
2fff1978:	bf94      	ite	ls
2fff197a:	4614      	movls	r4, r2
2fff197c:	425c      	neghi	r4, r3
2fff197e:	9304      	str	r3, [sp, #16]
2fff1980:	bf88      	it	hi
2fff1982:	4004      	andhi	r4, r0
2fff1984:	1aa2      	subs	r2, r4, r2
2fff1986:	9b05      	ldr	r3, [sp, #20]
2fff1988:	4541      	cmp	r1, r8
2fff198a:	fa22 f303 	lsr.w	r3, r2, r3
2fff198e:	9303      	str	r3, [sp, #12]
2fff1990:	d209      	bcs.n	2fff19a6 <xlat_tables_map_region+0x7a>
2fff1992:	4629      	mov	r1, r5
2fff1994:	4630      	mov	r0, r6
2fff1996:	f7ff feb3 	bl	2fff1700 <xlat_table_get_index>
2fff199a:	69f2      	ldr	r2, [r6, #28]
2fff199c:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
2fff19a0:	3301      	adds	r3, #1
2fff19a2:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
2fff19a6:	9b04      	ldr	r3, [sp, #16]
2fff19a8:	3b01      	subs	r3, #1
2fff19aa:	930b      	str	r3, [sp, #44]	; 0x2c
2fff19ac:	9b03      	ldr	r3, [sp, #12]
2fff19ae:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
2fff19b2:	f108 0301 	add.w	r3, r8, #1
2fff19b6:	9309      	str	r3, [sp, #36]	; 0x24
2fff19b8:	9b16      	ldr	r3, [sp, #88]	; 0x58
2fff19ba:	9a03      	ldr	r2, [sp, #12]
2fff19bc:	429a      	cmp	r2, r3
2fff19be:	d260      	bcs.n	2fff1a82 <xlat_tables_map_region+0x156>
2fff19c0:	f8d7 c008 	ldr.w	ip, [r7, #8]
2fff19c4:	68fa      	ldr	r2, [r7, #12]
2fff19c6:	9b04      	ldr	r3, [sp, #16]
2fff19c8:	6828      	ldr	r0, [r5, #0]
2fff19ca:	45a4      	cmp	ip, r4
2fff19cc:	4423      	add	r3, r4
2fff19ce:	f000 0103 	and.w	r1, r0, #3
2fff19d2:	4462      	add	r2, ip
2fff19d4:	f103 39ff 	add.w	r9, r3, #4294967295	; 0xffffffff
2fff19d8:	9308      	str	r3, [sp, #32]
2fff19da:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
2fff19de:	d82f      	bhi.n	2fff1a40 <xlat_tables_map_region+0x114>
2fff19e0:	454a      	cmp	r2, r9
2fff19e2:	d32d      	bcc.n	2fff1a40 <xlat_tables_map_region+0x114>
2fff19e4:	e9d7 2300 	ldrd	r2, r3, [r7]
2fff19e8:	ebb2 0a0c 	subs.w	sl, r2, ip
2fff19ec:	f163 0b00 	sbc.w	fp, r3, #0
2fff19f0:	eb1a 0204 	adds.w	r2, sl, r4
2fff19f4:	f14b 0300 	adc.w	r3, fp, #0
2fff19f8:	f1b8 0f03 	cmp.w	r8, #3
2fff19fc:	d105      	bne.n	2fff1a0a <xlat_tables_map_region+0xde>
2fff19fe:	2903      	cmp	r1, #3
2fff1a00:	d037      	beq.n	2fff1a72 <xlat_tables_map_region+0x146>
2fff1a02:	b371      	cbz	r1, 2fff1a62 <xlat_tables_map_region+0x136>
2fff1a04:	f240 11cb 	movw	r1, #459	; 0x1cb
2fff1a08:	e7a0      	b.n	2fff194c <xlat_tables_map_region+0x20>
2fff1a0a:	2903      	cmp	r1, #3
2fff1a0c:	d064      	beq.n	2fff1ad8 <xlat_tables_map_region+0x1ac>
2fff1a0e:	b991      	cbnz	r1, 2fff1a36 <xlat_tables_map_region+0x10a>
2fff1a10:	980b      	ldr	r0, [sp, #44]	; 0x2c
2fff1a12:	4010      	ands	r0, r2
2fff1a14:	e9cd 0106 	strd	r0, r1, [sp, #24]
2fff1a18:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
2fff1a1c:	4301      	orrs	r1, r0
2fff1a1e:	d106      	bne.n	2fff1a2e <xlat_tables_map_region+0x102>
2fff1a20:	f1b8 0f00 	cmp.w	r8, #0
2fff1a24:	d003      	beq.n	2fff1a2e <xlat_tables_map_region+0x102>
2fff1a26:	6979      	ldr	r1, [r7, #20]
2fff1a28:	9805      	ldr	r0, [sp, #20]
2fff1a2a:	40c1      	lsrs	r1, r0
2fff1a2c:	d119      	bne.n	2fff1a62 <xlat_tables_map_region+0x136>
2fff1a2e:	69b2      	ldr	r2, [r6, #24]
2fff1a30:	f04f 0b00 	mov.w	fp, #0
2fff1a34:	e029      	b.n	2fff1a8a <xlat_tables_map_region+0x15e>
2fff1a36:	2901      	cmp	r1, #1
2fff1a38:	d01b      	beq.n	2fff1a72 <xlat_tables_map_region+0x146>
2fff1a3a:	f44f 71f9 	mov.w	r1, #498	; 0x1f2
2fff1a3e:	e785      	b.n	2fff194c <xlat_tables_map_region+0x20>
2fff1a40:	45cc      	cmp	ip, r9
2fff1a42:	d901      	bls.n	2fff1a48 <xlat_tables_map_region+0x11c>
2fff1a44:	4294      	cmp	r4, r2
2fff1a46:	d814      	bhi.n	2fff1a72 <xlat_tables_map_region+0x146>
2fff1a48:	f1b8 0f03 	cmp.w	r8, #3
2fff1a4c:	d102      	bne.n	2fff1a54 <xlat_tables_map_region+0x128>
2fff1a4e:	f240 2107 	movw	r1, #519	; 0x207
2fff1a52:	e77b      	b.n	2fff194c <xlat_tables_map_region+0x20>
2fff1a54:	2900      	cmp	r1, #0
2fff1a56:	d0ea      	beq.n	2fff1a2e <xlat_tables_map_region+0x102>
2fff1a58:	2903      	cmp	r1, #3
2fff1a5a:	d03d      	beq.n	2fff1ad8 <xlat_tables_map_region+0x1ac>
2fff1a5c:	f240 2112 	movw	r1, #530	; 0x212
2fff1a60:	e774      	b.n	2fff194c <xlat_tables_map_region+0x20>
2fff1a62:	f8cd 8000 	str.w	r8, [sp]
2fff1a66:	4630      	mov	r0, r6
2fff1a68:	6939      	ldr	r1, [r7, #16]
2fff1a6a:	f7ff ff07 	bl	2fff187c <xlat_desc>
2fff1a6e:	e9c5 0100 	strd	r0, r1, [r5]
2fff1a72:	9b03      	ldr	r3, [sp, #12]
2fff1a74:	3508      	adds	r5, #8
2fff1a76:	9c08      	ldr	r4, [sp, #32]
2fff1a78:	3301      	adds	r3, #1
2fff1a7a:	9303      	str	r3, [sp, #12]
2fff1a7c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
2fff1a7e:	42a3      	cmp	r3, r4
2fff1a80:	d89a      	bhi.n	2fff19b8 <xlat_tables_map_region+0x8c>
2fff1a82:	3c01      	subs	r4, #1
2fff1a84:	e00c      	b.n	2fff1aa0 <xlat_tables_map_region+0x174>
2fff1a86:	f10b 0b01 	add.w	fp, fp, #1
2fff1a8a:	4593      	cmp	fp, r2
2fff1a8c:	da08      	bge.n	2fff1aa0 <xlat_tables_map_region+0x174>
2fff1a8e:	69f3      	ldr	r3, [r6, #28]
2fff1a90:	f853 302b 	ldr.w	r3, [r3, fp, lsl #2]
2fff1a94:	2b00      	cmp	r3, #0
2fff1a96:	d1f6      	bne.n	2fff1a86 <xlat_tables_map_region+0x15a>
2fff1a98:	6972      	ldr	r2, [r6, #20]
2fff1a9a:	eb12 3b0b 	adds.w	fp, r2, fp, lsl #12
2fff1a9e:	d103      	bne.n	2fff1aa8 <xlat_tables_map_region+0x17c>
2fff1aa0:	4620      	mov	r0, r4
2fff1aa2:	b00d      	add	sp, #52	; 0x34
2fff1aa4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff1aa8:	f04b 0203 	orr.w	r2, fp, #3
2fff1aac:	e9c5 2300 	strd	r2, r3, [r5]
2fff1ab0:	9b09      	ldr	r3, [sp, #36]	; 0x24
2fff1ab2:	4622      	mov	r2, r4
2fff1ab4:	4639      	mov	r1, r7
2fff1ab6:	4630      	mov	r0, r6
2fff1ab8:	9301      	str	r3, [sp, #4]
2fff1aba:	f44f 7300 	mov.w	r3, #512	; 0x200
2fff1abe:	9300      	str	r3, [sp, #0]
2fff1ac0:	465b      	mov	r3, fp
2fff1ac2:	f7ff ff33 	bl	2fff192c <xlat_tables_map_region>
2fff1ac6:	4604      	mov	r4, r0
2fff1ac8:	f44f 5180 	mov.w	r1, #4096	; 0x1000
2fff1acc:	4658      	mov	r0, fp
2fff1ace:	f7ff fe09 	bl	2fff16e4 <xlat_clean_dcache_range>
2fff1ad2:	454c      	cmp	r4, r9
2fff1ad4:	d0cd      	beq.n	2fff1a72 <xlat_tables_map_region+0x146>
2fff1ad6:	e7e3      	b.n	2fff1aa0 <xlat_tables_map_region+0x174>
2fff1ad8:	f420 6b7f 	bic.w	fp, r0, #4080	; 0xff0
2fff1adc:	f02b 0b0f 	bic.w	fp, fp, #15
2fff1ae0:	e7e6      	b.n	2fff1ab0 <xlat_tables_map_region+0x184>
2fff1ae2:	bf00      	nop
2fff1ae4:	2fff9515 	.word	0x2fff9515

2fff1ae8 <mmap_add_region_ctx>:
2fff1ae8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff1aec:	4607      	mov	r7, r0
2fff1aee:	f8d1 a00c 	ldr.w	sl, [r1, #12]
2fff1af2:	460d      	mov	r5, r1
2fff1af4:	f1ba 0f00 	cmp.w	sl, #0
2fff1af8:	d058      	beq.n	2fff1bac <mmap_add_region_ctx+0xc4>
2fff1afa:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
2fff1afe:	b123      	cbz	r3, 2fff1b0a <mmap_add_region_ctx+0x22>
2fff1b00:	f240 3107 	movw	r1, #775	; 0x307
2fff1b04:	4832      	ldr	r0, [pc, #200]	; (2fff1bd0 <mmap_add_region_ctx+0xe8>)
2fff1b06:	f006 f94f 	bl	2fff7da8 <__assert>
2fff1b0a:	f7ff fd3d 	bl	2fff1588 <mmap_add_region_check>
2fff1b0e:	4601      	mov	r1, r0
2fff1b10:	b9c0      	cbnz	r0, 2fff1b44 <mmap_add_region_ctx+0x5c>
2fff1b12:	68ae      	ldr	r6, [r5, #8]
2fff1b14:	68fa      	ldr	r2, [r7, #12]
2fff1b16:	4456      	add	r6, sl
2fff1b18:	3e01      	subs	r6, #1
2fff1b1a:	4614      	mov	r4, r2
2fff1b1c:	e9d4 3102 	ldrd	r3, r1, [r4, #8]
2fff1b20:	440b      	add	r3, r1
2fff1b22:	3b01      	subs	r3, #1
2fff1b24:	42b3      	cmp	r3, r6
2fff1b26:	d216      	bcs.n	2fff1b56 <mmap_add_region_ctx+0x6e>
2fff1b28:	b991      	cbnz	r1, 2fff1b50 <mmap_add_region_ctx+0x68>
2fff1b2a:	693b      	ldr	r3, [r7, #16]
2fff1b2c:	f04f 0818 	mov.w	r8, #24
2fff1b30:	fb08 2803 	mla	r8, r8, r3, r2
2fff1b34:	68d3      	ldr	r3, [r2, #12]
2fff1b36:	2b00      	cmp	r3, #0
2fff1b38:	d03b      	beq.n	2fff1bb2 <mmap_add_region_ctx+0xca>
2fff1b3a:	4542      	cmp	r2, r8
2fff1b3c:	d316      	bcc.n	2fff1b6c <mmap_add_region_ctx+0x84>
2fff1b3e:	f240 313f 	movw	r1, #831	; 0x33f
2fff1b42:	e7df      	b.n	2fff1b04 <mmap_add_region_ctx+0x1c>
2fff1b44:	4823      	ldr	r0, [pc, #140]	; (2fff1bd4 <mmap_add_region_ctx+0xec>)
2fff1b46:	f7ff f81b 	bl	2fff0b80 <tf_log>
2fff1b4a:	f44f 7143 	mov.w	r1, #780	; 0x30c
2fff1b4e:	e7d9      	b.n	2fff1b04 <mmap_add_region_ctx+0x1c>
2fff1b50:	3418      	adds	r4, #24
2fff1b52:	e7e3      	b.n	2fff1b1c <mmap_add_region_ctx+0x34>
2fff1b54:	3418      	adds	r4, #24
2fff1b56:	e9d4 3102 	ldrd	r3, r1, [r4, #8]
2fff1b5a:	440b      	add	r3, r1
2fff1b5c:	3b01      	subs	r3, #1
2fff1b5e:	42b3      	cmp	r3, r6
2fff1b60:	d1e3      	bne.n	2fff1b2a <mmap_add_region_ctx+0x42>
2fff1b62:	2900      	cmp	r1, #0
2fff1b64:	d0e1      	beq.n	2fff1b2a <mmap_add_region_ctx+0x42>
2fff1b66:	458a      	cmp	sl, r1
2fff1b68:	d8f4      	bhi.n	2fff1b54 <mmap_add_region_ctx+0x6c>
2fff1b6a:	e7de      	b.n	2fff1b2a <mmap_add_region_ctx+0x42>
2fff1b6c:	3218      	adds	r2, #24
2fff1b6e:	e7e1      	b.n	2fff1b34 <mmap_add_region_ctx+0x4c>
2fff1b70:	f119 33ff 	adds.w	r3, r9, #4294967295	; 0xffffffff
2fff1b74:	9300      	str	r3, [sp, #0]
2fff1b76:	f14b 33ff 	adc.w	r3, fp, #4294967295	; 0xffffffff
2fff1b7a:	9301      	str	r3, [sp, #4]
2fff1b7c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
2fff1b7e:	e9dd 8900 	ldrd	r8, r9, [sp]
2fff1b82:	c40f      	stmia	r4!, {r0, r1, r2, r3}
2fff1b84:	eb18 080a 	adds.w	r8, r8, sl
2fff1b88:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
2fff1b8c:	f149 0900 	adc.w	r9, r9, #0
2fff1b90:	454b      	cmp	r3, r9
2fff1b92:	e895 0003 	ldmia.w	r5, {r0, r1}
2fff1b96:	bf08      	it	eq
2fff1b98:	4542      	cmpeq	r2, r8
2fff1b9a:	e884 0003 	stmia.w	r4, {r0, r1}
2fff1b9e:	d201      	bcs.n	2fff1ba4 <mmap_add_region_ctx+0xbc>
2fff1ba0:	e9c7 890c 	strd	r8, r9, [r7, #48]	; 0x30
2fff1ba4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
2fff1ba6:	42b3      	cmp	r3, r6
2fff1ba8:	d200      	bcs.n	2fff1bac <mmap_add_region_ctx+0xc4>
2fff1baa:	63be      	str	r6, [r7, #56]	; 0x38
2fff1bac:	b003      	add	sp, #12
2fff1bae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff1bb2:	1b12      	subs	r2, r2, r4
2fff1bb4:	4621      	mov	r1, r4
2fff1bb6:	f104 0018 	add.w	r0, r4, #24
2fff1bba:	e9d5 9b00 	ldrd	r9, fp, [r5]
2fff1bbe:	f006 f926 	bl	2fff7e0e <memmove>
2fff1bc2:	f8d8 300c 	ldr.w	r3, [r8, #12]
2fff1bc6:	2b00      	cmp	r3, #0
2fff1bc8:	d0d2      	beq.n	2fff1b70 <mmap_add_region_ctx+0x88>
2fff1bca:	f240 314b 	movw	r1, #843	; 0x34b
2fff1bce:	e799      	b.n	2fff1b04 <mmap_add_region_ctx+0x1c>
2fff1bd0:	2fff9515 	.word	0x2fff9515
2fff1bd4:	2fff94ea 	.word	0x2fff94ea

2fff1bd8 <mmap_add_ctx>:
2fff1bd8:	b538      	push	{r3, r4, r5, lr}
2fff1bda:	4605      	mov	r5, r0
2fff1bdc:	460c      	mov	r4, r1
2fff1bde:	6963      	ldr	r3, [r4, #20]
2fff1be0:	b903      	cbnz	r3, 2fff1be4 <mmap_add_ctx+0xc>
2fff1be2:	bd38      	pop	{r3, r4, r5, pc}
2fff1be4:	4621      	mov	r1, r4
2fff1be6:	4628      	mov	r0, r5
2fff1be8:	3418      	adds	r4, #24
2fff1bea:	f7ff ff7d 	bl	2fff1ae8 <mmap_add_region_ctx>
2fff1bee:	e7f6      	b.n	2fff1bde <mmap_add_ctx+0x6>

2fff1bf0 <mmap_add_dynamic_region_ctx>:
2fff1bf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff1bf4:	4604      	mov	r4, r0
2fff1bf6:	f8d1 900c 	ldr.w	r9, [r1, #12]
2fff1bfa:	b08f      	sub	sp, #60	; 0x3c
2fff1bfc:	460f      	mov	r7, r1
2fff1bfe:	f1b9 0f00 	cmp.w	r9, #0
2fff1c02:	d105      	bne.n	2fff1c10 <mmap_add_dynamic_region_ctx+0x20>
2fff1c04:	f04f 0800 	mov.w	r8, #0
2fff1c08:	4640      	mov	r0, r8
2fff1c0a:	b00f      	add	sp, #60	; 0x3c
2fff1c0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff1c10:	680b      	ldr	r3, [r1, #0]
2fff1c12:	f8d0 b00c 	ldr.w	fp, [r0, #12]
2fff1c16:	9306      	str	r3, [sp, #24]
2fff1c18:	684b      	ldr	r3, [r1, #4]
2fff1c1a:	f8d0 a010 	ldr.w	sl, [r0, #16]
2fff1c1e:	9307      	str	r3, [sp, #28]
2fff1c20:	690b      	ldr	r3, [r1, #16]
2fff1c22:	688e      	ldr	r6, [r1, #8]
2fff1c24:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
2fff1c28:	610b      	str	r3, [r1, #16]
2fff1c2a:	f7ff fcad 	bl	2fff1588 <mmap_add_region_check>
2fff1c2e:	4680      	mov	r8, r0
2fff1c30:	2800      	cmp	r0, #0
2fff1c32:	d1e9      	bne.n	2fff1c08 <mmap_add_dynamic_region_ctx+0x18>
2fff1c34:	444e      	add	r6, r9
2fff1c36:	465d      	mov	r5, fp
2fff1c38:	3e01      	subs	r6, #1
2fff1c3a:	68ea      	ldr	r2, [r5, #12]
2fff1c3c:	f105 0118 	add.w	r1, r5, #24
2fff1c40:	68ab      	ldr	r3, [r5, #8]
2fff1c42:	4413      	add	r3, r2
2fff1c44:	3b01      	subs	r3, #1
2fff1c46:	42b3      	cmp	r3, r6
2fff1c48:	d219      	bcs.n	2fff1c7e <mmap_add_dynamic_region_ctx+0x8e>
2fff1c4a:	b9aa      	cbnz	r2, 2fff1c78 <mmap_add_dynamic_region_ctx+0x88>
2fff1c4c:	2318      	movs	r3, #24
2fff1c4e:	4629      	mov	r1, r5
2fff1c50:	fb03 ba0a 	mla	sl, r3, sl, fp
2fff1c54:	18eb      	adds	r3, r5, r3
2fff1c56:	ebaa 0b05 	sub.w	fp, sl, r5
2fff1c5a:	4618      	mov	r0, r3
2fff1c5c:	9303      	str	r3, [sp, #12]
2fff1c5e:	465a      	mov	r2, fp
2fff1c60:	f006 f8d5 	bl	2fff7e0e <memmove>
2fff1c64:	f8da a00c 	ldr.w	sl, [sl, #12]
2fff1c68:	f1ba 0f00 	cmp.w	sl, #0
2fff1c6c:	d014      	beq.n	2fff1c98 <mmap_add_dynamic_region_ctx+0xa8>
2fff1c6e:	483c      	ldr	r0, [pc, #240]	; (2fff1d60 <mmap_add_dynamic_region_ctx+0x170>)
2fff1c70:	f240 31d6 	movw	r1, #982	; 0x3d6
2fff1c74:	f006 f898 	bl	2fff7da8 <__assert>
2fff1c78:	460d      	mov	r5, r1
2fff1c7a:	e7de      	b.n	2fff1c3a <mmap_add_dynamic_region_ctx+0x4a>
2fff1c7c:	460d      	mov	r5, r1
2fff1c7e:	68ea      	ldr	r2, [r5, #12]
2fff1c80:	f105 0118 	add.w	r1, r5, #24
2fff1c84:	68ab      	ldr	r3, [r5, #8]
2fff1c86:	4413      	add	r3, r2
2fff1c88:	3b01      	subs	r3, #1
2fff1c8a:	42b3      	cmp	r3, r6
2fff1c8c:	d1de      	bne.n	2fff1c4c <mmap_add_dynamic_region_ctx+0x5c>
2fff1c8e:	2a00      	cmp	r2, #0
2fff1c90:	d0dc      	beq.n	2fff1c4c <mmap_add_dynamic_region_ctx+0x5c>
2fff1c92:	4591      	cmp	r9, r2
2fff1c94:	d8f2      	bhi.n	2fff1c7c <mmap_add_dynamic_region_ctx+0x8c>
2fff1c96:	e7d9      	b.n	2fff1c4c <mmap_add_dynamic_region_ctx+0x5c>
2fff1c98:	46be      	mov	lr, r7
2fff1c9a:	46ac      	mov	ip, r5
2fff1c9c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
2fff1ca0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
2fff1ca4:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
2fff1ca8:	e89e 0003 	ldmia.w	lr, {r0, r1}
2fff1cac:	e88c 0003 	stmia.w	ip, {r0, r1}
2fff1cb0:	2b00      	cmp	r3, #0
2fff1cb2:	d039      	beq.n	2fff1d28 <mmap_add_dynamic_region_ctx+0x138>
2fff1cb4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
2fff1cb6:	4652      	mov	r2, sl
2fff1cb8:	4629      	mov	r1, r5
2fff1cba:	4620      	mov	r0, r4
2fff1cbc:	9301      	str	r3, [sp, #4]
2fff1cbe:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2fff1cc0:	9300      	str	r3, [sp, #0]
2fff1cc2:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff1cc4:	f7ff fe32 	bl	2fff192c <xlat_tables_map_region>
2fff1cc8:	6aa1      	ldr	r1, [r4, #40]	; 0x28
2fff1cca:	4606      	mov	r6, r0
2fff1ccc:	6a60      	ldr	r0, [r4, #36]	; 0x24
2fff1cce:	00c9      	lsls	r1, r1, #3
2fff1cd0:	f7ff fd08 	bl	2fff16e4 <xlat_clean_dcache_range>
2fff1cd4:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
2fff1cd8:	4413      	add	r3, r2
2fff1cda:	3b01      	subs	r3, #1
2fff1cdc:	42b3      	cmp	r3, r6
2fff1cde:	d021      	beq.n	2fff1d24 <mmap_add_dynamic_region_ctx+0x134>
2fff1ce0:	9903      	ldr	r1, [sp, #12]
2fff1ce2:	4628      	mov	r0, r5
2fff1ce4:	465a      	mov	r2, fp
2fff1ce6:	f006 f892 	bl	2fff7e0e <memmove>
2fff1cea:	68bd      	ldr	r5, [r7, #8]
2fff1cec:	42b5      	cmp	r5, r6
2fff1cee:	d216      	bcs.n	2fff1d1e <mmap_add_dynamic_region_ctx+0x12e>
2fff1cf0:	1b76      	subs	r6, r6, r5
2fff1cf2:	2218      	movs	r2, #24
2fff1cf4:	4651      	mov	r1, sl
2fff1cf6:	a808      	add	r0, sp, #32
2fff1cf8:	f006 f89f 	bl	2fff7e3a <memset>
2fff1cfc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
2fff1cfe:	a908      	add	r1, sp, #32
2fff1d00:	950a      	str	r5, [sp, #40]	; 0x28
2fff1d02:	4620      	mov	r0, r4
2fff1d04:	9301      	str	r3, [sp, #4]
2fff1d06:	4652      	mov	r2, sl
2fff1d08:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2fff1d0a:	960b      	str	r6, [sp, #44]	; 0x2c
2fff1d0c:	9300      	str	r3, [sp, #0]
2fff1d0e:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff1d10:	f7ff fd0a 	bl	2fff1728 <xlat_tables_unmap_region>
2fff1d14:	6aa1      	ldr	r1, [r4, #40]	; 0x28
2fff1d16:	6a60      	ldr	r0, [r4, #36]	; 0x24
2fff1d18:	00c9      	lsls	r1, r1, #3
2fff1d1a:	f7ff fce3 	bl	2fff16e4 <xlat_clean_dcache_range>
2fff1d1e:	f06f 080b 	mvn.w	r8, #11
2fff1d22:	e771      	b.n	2fff1c08 <mmap_add_dynamic_region_ctx+0x18>
2fff1d24:	f3bf 8f4a 	dsb	ishst
2fff1d28:	9b06      	ldr	r3, [sp, #24]
2fff1d2a:	f113 33ff 	adds.w	r3, r3, #4294967295	; 0xffffffff
2fff1d2e:	9304      	str	r3, [sp, #16]
2fff1d30:	9b07      	ldr	r3, [sp, #28]
2fff1d32:	f143 33ff 	adc.w	r3, r3, #4294967295	; 0xffffffff
2fff1d36:	9305      	str	r3, [sp, #20]
2fff1d38:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
2fff1d3c:	e9d4 230c 	ldrd	r2, r3, [r4, #48]	; 0x30
2fff1d40:	eb10 0009 	adds.w	r0, r0, r9
2fff1d44:	f141 0100 	adc.w	r1, r1, #0
2fff1d48:	428b      	cmp	r3, r1
2fff1d4a:	bf08      	it	eq
2fff1d4c:	4282      	cmpeq	r2, r0
2fff1d4e:	d201      	bcs.n	2fff1d54 <mmap_add_dynamic_region_ctx+0x164>
2fff1d50:	e9c4 010c 	strd	r0, r1, [r4, #48]	; 0x30
2fff1d54:	6ba3      	ldr	r3, [r4, #56]	; 0x38
2fff1d56:	42b3      	cmp	r3, r6
2fff1d58:	f4bf af54 	bcs.w	2fff1c04 <mmap_add_dynamic_region_ctx+0x14>
2fff1d5c:	63a6      	str	r6, [r4, #56]	; 0x38
2fff1d5e:	e753      	b.n	2fff1c08 <mmap_add_dynamic_region_ctx+0x18>
2fff1d60:	2fff9515 	.word	0x2fff9515

2fff1d64 <mmap_remove_dynamic_region_ctx>:
2fff1d64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff1d68:	2318      	movs	r3, #24
2fff1d6a:	68c5      	ldr	r5, [r0, #12]
2fff1d6c:	b087      	sub	sp, #28
2fff1d6e:	6907      	ldr	r7, [r0, #16]
2fff1d70:	4604      	mov	r4, r0
2fff1d72:	fb03 5707 	mla	r7, r3, r7, r5
2fff1d76:	68fb      	ldr	r3, [r7, #12]
2fff1d78:	b153      	cbz	r3, 2fff1d90 <mmap_remove_dynamic_region_ctx+0x2c>
2fff1d7a:	483d      	ldr	r0, [pc, #244]	; (2fff1e70 <mmap_remove_dynamic_region_ctx+0x10c>)
2fff1d7c:	f240 413a 	movw	r1, #1082	; 0x43a
2fff1d80:	f006 f812 	bl	2fff7da8 <__assert>
2fff1d84:	68a8      	ldr	r0, [r5, #8]
2fff1d86:	4288      	cmp	r0, r1
2fff1d88:	d101      	bne.n	2fff1d8e <mmap_remove_dynamic_region_ctx+0x2a>
2fff1d8a:	4293      	cmp	r3, r2
2fff1d8c:	d06a      	beq.n	2fff1e64 <mmap_remove_dynamic_region_ctx+0x100>
2fff1d8e:	3518      	adds	r5, #24
2fff1d90:	68eb      	ldr	r3, [r5, #12]
2fff1d92:	2b00      	cmp	r3, #0
2fff1d94:	d1f6      	bne.n	2fff1d84 <mmap_remove_dynamic_region_ctx+0x20>
2fff1d96:	f06f 0015 	mvn.w	r0, #21
2fff1d9a:	b007      	add	sp, #28
2fff1d9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff1da0:	4411      	add	r1, r2
2fff1da2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
2fff1da4:	1e4e      	subs	r6, r1, #1
2fff1da6:	e9d5 0100 	ldrd	r0, r1, [r5]
2fff1daa:	9305      	str	r3, [sp, #20]
2fff1dac:	eb10 0802 	adds.w	r8, r0, r2
2fff1db0:	e9d4 230c 	ldrd	r2, r3, [r4, #48]	; 0x30
2fff1db4:	f141 0900 	adc.w	r9, r1, #0
2fff1db8:	f118 3aff 	adds.w	sl, r8, #4294967295	; 0xffffffff
2fff1dbc:	f149 3bff 	adc.w	fp, r9, #4294967295	; 0xffffffff
2fff1dc0:	4699      	mov	r9, r3
2fff1dc2:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
2fff1dc6:	4690      	mov	r8, r2
2fff1dc8:	b183      	cbz	r3, 2fff1dec <mmap_remove_dynamic_region_ctx+0x88>
2fff1dca:	6be3      	ldr	r3, [r4, #60]	; 0x3c
2fff1dcc:	2200      	movs	r2, #0
2fff1dce:	4629      	mov	r1, r5
2fff1dd0:	4620      	mov	r0, r4
2fff1dd2:	9301      	str	r3, [sp, #4]
2fff1dd4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2fff1dd6:	9300      	str	r3, [sp, #0]
2fff1dd8:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff1dda:	f7ff fca5 	bl	2fff1728 <xlat_tables_unmap_region>
2fff1dde:	6aa1      	ldr	r1, [r4, #40]	; 0x28
2fff1de0:	6a60      	ldr	r0, [r4, #36]	; 0x24
2fff1de2:	00c9      	lsls	r1, r1, #3
2fff1de4:	f7ff fc7e 	bl	2fff16e4 <xlat_clean_dcache_range>
2fff1de8:	f7ff fac4 	bl	2fff1374 <xlat_arch_tlbi_va_sync>
2fff1dec:	1b7a      	subs	r2, r7, r5
2fff1dee:	f105 0118 	add.w	r1, r5, #24
2fff1df2:	4628      	mov	r0, r5
2fff1df4:	f006 f80b 	bl	2fff7e0e <memmove>
2fff1df8:	9b05      	ldr	r3, [sp, #20]
2fff1dfa:	429e      	cmp	r6, r3
2fff1dfc:	d00d      	beq.n	2fff1e1a <mmap_remove_dynamic_region_ctx+0xb6>
2fff1dfe:	45cb      	cmp	fp, r9
2fff1e00:	bf08      	it	eq
2fff1e02:	45c2      	cmpeq	sl, r8
2fff1e04:	d107      	bne.n	2fff1e16 <mmap_remove_dynamic_region_ctx+0xb2>
2fff1e06:	68e1      	ldr	r1, [r4, #12]
2fff1e08:	2200      	movs	r2, #0
2fff1e0a:	2300      	movs	r3, #0
2fff1e0c:	e9c4 230c 	strd	r2, r3, [r4, #48]	; 0x30
2fff1e10:	68ca      	ldr	r2, [r1, #12]
2fff1e12:	3118      	adds	r1, #24
2fff1e14:	b982      	cbnz	r2, 2fff1e38 <mmap_remove_dynamic_region_ctx+0xd4>
2fff1e16:	2000      	movs	r0, #0
2fff1e18:	e7bf      	b.n	2fff1d9a <mmap_remove_dynamic_region_ctx+0x36>
2fff1e1a:	68e2      	ldr	r2, [r4, #12]
2fff1e1c:	2300      	movs	r3, #0
2fff1e1e:	63a3      	str	r3, [r4, #56]	; 0x38
2fff1e20:	68d3      	ldr	r3, [r2, #12]
2fff1e22:	2b00      	cmp	r3, #0
2fff1e24:	d0eb      	beq.n	2fff1dfe <mmap_remove_dynamic_region_ctx+0x9a>
2fff1e26:	6891      	ldr	r1, [r2, #8]
2fff1e28:	3218      	adds	r2, #24
2fff1e2a:	440b      	add	r3, r1
2fff1e2c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
2fff1e2e:	3b01      	subs	r3, #1
2fff1e30:	428b      	cmp	r3, r1
2fff1e32:	bf88      	it	hi
2fff1e34:	63a3      	strhi	r3, [r4, #56]	; 0x38
2fff1e36:	e7f3      	b.n	2fff1e20 <mmap_remove_dynamic_region_ctx+0xbc>
2fff1e38:	e951 3006 	ldrd	r3, r0, [r1, #-24]
2fff1e3c:	f113 33ff 	adds.w	r3, r3, #4294967295	; 0xffffffff
2fff1e40:	9302      	str	r3, [sp, #8]
2fff1e42:	f140 33ff 	adc.w	r3, r0, #4294967295	; 0xffffffff
2fff1e46:	9303      	str	r3, [sp, #12]
2fff1e48:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
2fff1e4c:	18b6      	adds	r6, r6, r2
2fff1e4e:	e9d4 230c 	ldrd	r2, r3, [r4, #48]	; 0x30
2fff1e52:	f147 0700 	adc.w	r7, r7, #0
2fff1e56:	42bb      	cmp	r3, r7
2fff1e58:	bf08      	it	eq
2fff1e5a:	42b2      	cmpeq	r2, r6
2fff1e5c:	d2d8      	bcs.n	2fff1e10 <mmap_remove_dynamic_region_ctx+0xac>
2fff1e5e:	e9c4 670c 	strd	r6, r7, [r4, #48]	; 0x30
2fff1e62:	e7d5      	b.n	2fff1e10 <mmap_remove_dynamic_region_ctx+0xac>
2fff1e64:	692b      	ldr	r3, [r5, #16]
2fff1e66:	2b00      	cmp	r3, #0
2fff1e68:	db9a      	blt.n	2fff1da0 <mmap_remove_dynamic_region_ctx+0x3c>
2fff1e6a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff1e6e:	e794      	b.n	2fff1d9a <mmap_remove_dynamic_region_ctx+0x36>
2fff1e70:	2fff9515 	.word	0x2fff9515

2fff1e74 <init_xlat_tables_ctx>:
2fff1e74:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2fff1e76:	4604      	mov	r4, r0
2fff1e78:	b920      	cbnz	r0, 2fff1e84 <init_xlat_tables_ctx+0x10>
2fff1e7a:	f240 4199 	movw	r1, #1177	; 0x499
2fff1e7e:	484f      	ldr	r0, [pc, #316]	; (2fff1fbc <init_xlat_tables_ctx+0x148>)
2fff1e80:	f005 ff92 	bl	2fff7da8 <__assert>
2fff1e84:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
2fff1e88:	b113      	cbz	r3, 2fff1e90 <init_xlat_tables_ctx+0x1c>
2fff1e8a:	f240 419a 	movw	r1, #1178	; 0x49a
2fff1e8e:	e7f6      	b.n	2fff1e7e <init_xlat_tables_ctx+0xa>
2fff1e90:	6c43      	ldr	r3, [r0, #68]	; 0x44
2fff1e92:	3b01      	subs	r3, #1
2fff1e94:	2b02      	cmp	r3, #2
2fff1e96:	d902      	bls.n	2fff1e9e <init_xlat_tables_ctx+0x2a>
2fff1e98:	f240 419d 	movw	r1, #1181	; 0x49d
2fff1e9c:	e7ef      	b.n	2fff1e7e <init_xlat_tables_ctx+0xa>
2fff1e9e:	f7ff fa8f 	bl	2fff13c0 <is_mmu_enabled_ctx>
2fff1ea2:	b110      	cbz	r0, 2fff1eaa <init_xlat_tables_ctx+0x36>
2fff1ea4:	f240 419e 	movw	r1, #1182	; 0x49e
2fff1ea8:	e7e9      	b.n	2fff1e7e <init_xlat_tables_ctx+0xa>
2fff1eaa:	e9d4 6502 	ldrd	r6, r5, [r4, #8]
2fff1eae:	f7ff fa24 	bl	2fff12fa <xlat_get_min_virt_addr_space_size>
2fff1eb2:	3801      	subs	r0, #1
2fff1eb4:	4286      	cmp	r6, r0
2fff1eb6:	d202      	bcs.n	2fff1ebe <init_xlat_tables_ctx+0x4a>
2fff1eb8:	f240 41a3 	movw	r1, #1187	; 0x4a3
2fff1ebc:	e7df      	b.n	2fff1e7e <init_xlat_tables_ctx+0xa>
2fff1ebe:	68a6      	ldr	r6, [r4, #8]
2fff1ec0:	1c73      	adds	r3, r6, #1
2fff1ec2:	401e      	ands	r6, r3
2fff1ec4:	d002      	beq.n	2fff1ecc <init_xlat_tables_ctx+0x58>
2fff1ec6:	f240 41a5 	movw	r1, #1189	; 0x4a5
2fff1eca:	e7d8      	b.n	2fff1e7e <init_xlat_tables_ctx+0xa>
2fff1ecc:	4628      	mov	r0, r5
2fff1ece:	f000 f87b 	bl	2fff1fc8 <xlat_mmap_print>
2fff1ed2:	483b      	ldr	r0, [pc, #236]	; (2fff1fc0 <init_xlat_tables_ctx+0x14c>)
2fff1ed4:	f44f 4180 	mov.w	r1, #16384	; 0x4000
2fff1ed8:	f005 e802 	blx	2fff6ee0 <inv_dcache_range>
2fff1edc:	6aa7      	ldr	r7, [r4, #40]	; 0x28
2fff1ede:	4633      	mov	r3, r6
2fff1ee0:	2000      	movs	r0, #0
2fff1ee2:	2100      	movs	r1, #0
2fff1ee4:	429f      	cmp	r7, r3
2fff1ee6:	d113      	bne.n	2fff1f10 <init_xlat_tables_ctx+0x9c>
2fff1ee8:	2300      	movs	r3, #0
2fff1eea:	2000      	movs	r0, #0
2fff1eec:	461f      	mov	r7, r3
2fff1eee:	2100      	movs	r1, #0
2fff1ef0:	69a2      	ldr	r2, [r4, #24]
2fff1ef2:	429a      	cmp	r2, r3
2fff1ef4:	dc13      	bgt.n	2fff1f1e <init_xlat_tables_ctx+0xaa>
2fff1ef6:	68eb      	ldr	r3, [r5, #12]
2fff1ef8:	bb0b      	cbnz	r3, 2fff1f3e <init_xlat_tables_ctx+0xca>
2fff1efa:	e9d4 6700 	ldrd	r6, r7, [r4]
2fff1efe:	f7ff f9f8 	bl	2fff12f2 <xlat_arch_get_max_supported_pa>
2fff1f02:	42b9      	cmp	r1, r7
2fff1f04:	bf08      	it	eq
2fff1f06:	42b0      	cmpeq	r0, r6
2fff1f08:	d23d      	bcs.n	2fff1f86 <init_xlat_tables_ctx+0x112>
2fff1f0a:	f240 41cd 	movw	r1, #1229	; 0x4cd
2fff1f0e:	e7b6      	b.n	2fff1e7e <init_xlat_tables_ctx+0xa>
2fff1f10:	6a62      	ldr	r2, [r4, #36]	; 0x24
2fff1f12:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
2fff1f16:	3301      	adds	r3, #1
2fff1f18:	e9c2 0100 	strd	r0, r1, [r2]
2fff1f1c:	e7e2      	b.n	2fff1ee4 <init_xlat_tables_ctx+0x70>
2fff1f1e:	69e2      	ldr	r2, [r4, #28]
2fff1f20:	f842 7023 	str.w	r7, [r2, r3, lsl #2]
2fff1f24:	6962      	ldr	r2, [r4, #20]
2fff1f26:	eb02 3203 	add.w	r2, r2, r3, lsl #12
2fff1f2a:	f1a2 0608 	sub.w	r6, r2, #8
2fff1f2e:	f602 72f8 	addw	r2, r2, #4088	; 0xff8
2fff1f32:	e9e6 0102 	strd	r0, r1, [r6, #8]!
2fff1f36:	4296      	cmp	r6, r2
2fff1f38:	d1fb      	bne.n	2fff1f32 <init_xlat_tables_ctx+0xbe>
2fff1f3a:	3301      	adds	r3, #1
2fff1f3c:	e7d8      	b.n	2fff1ef0 <init_xlat_tables_ctx+0x7c>
2fff1f3e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
2fff1f40:	2200      	movs	r2, #0
2fff1f42:	4629      	mov	r1, r5
2fff1f44:	4620      	mov	r0, r4
2fff1f46:	9301      	str	r3, [sp, #4]
2fff1f48:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2fff1f4a:	9300      	str	r3, [sp, #0]
2fff1f4c:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff1f4e:	f7ff fced 	bl	2fff192c <xlat_tables_map_region>
2fff1f52:	6aa1      	ldr	r1, [r4, #40]	; 0x28
2fff1f54:	4606      	mov	r6, r0
2fff1f56:	6a60      	ldr	r0, [r4, #36]	; 0x24
2fff1f58:	00c9      	lsls	r1, r1, #3
2fff1f5a:	f7ff fbc3 	bl	2fff16e4 <xlat_clean_dcache_range>
2fff1f5e:	e9d5 1202 	ldrd	r1, r2, [r5, #8]
2fff1f62:	188b      	adds	r3, r1, r2
2fff1f64:	3b01      	subs	r3, #1
2fff1f66:	42b3      	cmp	r3, r6
2fff1f68:	d00b      	beq.n	2fff1f82 <init_xlat_tables_ctx+0x10e>
2fff1f6a:	692b      	ldr	r3, [r5, #16]
2fff1f6c:	4815      	ldr	r0, [pc, #84]	; (2fff1fc4 <init_xlat_tables_ctx+0x150>)
2fff1f6e:	e9cd 2300 	strd	r2, r3, [sp]
2fff1f72:	e9d5 2300 	ldrd	r2, r3, [r5]
2fff1f76:	f7fe fe03 	bl	2fff0b80 <tf_log>
2fff1f7a:	f7fe fea3 	bl	2fff0cc4 <console_flush>
2fff1f7e:	f004 eed8 	blx	2fff6d30 <do_panic>
2fff1f82:	3518      	adds	r5, #24
2fff1f84:	e7b7      	b.n	2fff1ef6 <init_xlat_tables_ctx+0x82>
2fff1f86:	6ba2      	ldr	r2, [r4, #56]	; 0x38
2fff1f88:	68a3      	ldr	r3, [r4, #8]
2fff1f8a:	429a      	cmp	r2, r3
2fff1f8c:	d902      	bls.n	2fff1f94 <init_xlat_tables_ctx+0x120>
2fff1f8e:	f240 41ce 	movw	r1, #1230	; 0x4ce
2fff1f92:	e774      	b.n	2fff1e7e <init_xlat_tables_ctx+0xa>
2fff1f94:	e9d4 230c 	ldrd	r2, r3, [r4, #48]	; 0x30
2fff1f98:	e9d4 0100 	ldrd	r0, r1, [r4]
2fff1f9c:	4299      	cmp	r1, r3
2fff1f9e:	bf08      	it	eq
2fff1fa0:	4290      	cmpeq	r0, r2
2fff1fa2:	d202      	bcs.n	2fff1faa <init_xlat_tables_ctx+0x136>
2fff1fa4:	f240 41cf 	movw	r1, #1231	; 0x4cf
2fff1fa8:	e769      	b.n	2fff1e7e <init_xlat_tables_ctx+0xa>
2fff1faa:	2301      	movs	r3, #1
2fff1fac:	4620      	mov	r0, r4
2fff1fae:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
2fff1fb2:	b003      	add	sp, #12
2fff1fb4:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
2fff1fb8:	f000 b807 	b.w	2fff1fca <xlat_tables_print>
2fff1fbc:	2fff9515 	.word	0x2fff9515
2fff1fc0:	2ffd0000 	.word	0x2ffd0000
2fff1fc4:	2fff949b 	.word	0x2fff949b

2fff1fc8 <xlat_mmap_print>:
2fff1fc8:	4770      	bx	lr

2fff1fca <xlat_tables_print>:
2fff1fca:	4770      	bx	lr

2fff1fcc <tzc400_set_action>:
2fff1fcc:	b508      	push	{r3, lr}
2fff1fce:	4b06      	ldr	r3, [pc, #24]	; (2fff1fe8 <tzc400_set_action+0x1c>)
2fff1fd0:	681b      	ldr	r3, [r3, #0]
2fff1fd2:	b91b      	cbnz	r3, 2fff1fdc <tzc400_set_action+0x10>
2fff1fd4:	2194      	movs	r1, #148	; 0x94
2fff1fd6:	4805      	ldr	r0, [pc, #20]	; (2fff1fec <tzc400_set_action+0x20>)
2fff1fd8:	f005 fee6 	bl	2fff7da8 <__assert>
2fff1fdc:	2803      	cmp	r0, #3
2fff1fde:	d901      	bls.n	2fff1fe4 <tzc400_set_action+0x18>
2fff1fe0:	2195      	movs	r1, #149	; 0x95
2fff1fe2:	e7f8      	b.n	2fff1fd6 <tzc400_set_action+0xa>
2fff1fe4:	6058      	str	r0, [r3, #4]
2fff1fe6:	bd08      	pop	{r3, pc}
2fff1fe8:	2fffcdb8 	.word	0x2fffcdb8
2fff1fec:	2fff9609 	.word	0x2fff9609

2fff1ff0 <tzc400_init>:
2fff1ff0:	b508      	push	{r3, lr}
2fff1ff2:	b918      	cbnz	r0, 2fff1ffc <tzc400_init+0xc>
2fff1ff4:	4812      	ldr	r0, [pc, #72]	; (2fff2040 <tzc400_init+0x50>)
2fff1ff6:	21a6      	movs	r1, #166	; 0xa6
2fff1ff8:	f005 fed6 	bl	2fff7da8 <__assert>
2fff1ffc:	f8d0 3fe0 	ldr.w	r3, [r0, #4064]	; 0xfe0
2fff2000:	f8d0 1fe4 	ldr.w	r1, [r0, #4068]	; 0xfe4
2fff2004:	4a0f      	ldr	r2, [pc, #60]	; (2fff2044 <tzc400_init+0x54>)
2fff2006:	0209      	lsls	r1, r1, #8
2fff2008:	6010      	str	r0, [r2, #0]
2fff200a:	f401 6170 	and.w	r1, r1, #3840	; 0xf00
2fff200e:	4319      	orrs	r1, r3
2fff2010:	f5b1 6f8c 	cmp.w	r1, #1120	; 0x460
2fff2014:	d006      	beq.n	2fff2024 <tzc400_init+0x34>
2fff2016:	480c      	ldr	r0, [pc, #48]	; (2fff2048 <tzc400_init+0x58>)
2fff2018:	f7fe fdb2 	bl	2fff0b80 <tf_log>
2fff201c:	f7fe fe52 	bl	2fff0cc4 <console_flush>
2fff2020:	f004 ee86 	blx	2fff6d30 <do_panic>
2fff2024:	6803      	ldr	r3, [r0, #0]
2fff2026:	f3c3 6101 	ubfx	r1, r3, #24, #2
2fff202a:	3101      	adds	r1, #1
2fff202c:	7151      	strb	r1, [r2, #5]
2fff202e:	f3c3 2105 	ubfx	r1, r3, #8, #6
2fff2032:	f003 031f 	and.w	r3, r3, #31
2fff2036:	3101      	adds	r1, #1
2fff2038:	3301      	adds	r3, #1
2fff203a:	7111      	strb	r1, [r2, #4]
2fff203c:	7193      	strb	r3, [r2, #6]
2fff203e:	bd08      	pop	{r3, pc}
2fff2040:	2fff9609 	.word	0x2fff9609
2fff2044:	2fffcdb8 	.word	0x2fffcdb8
2fff2048:	2fff956b 	.word	0x2fff956b

2fff204c <tzc400_configure_region>:
2fff204c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff2050:	4688      	mov	r8, r1
2fff2052:	4e2d      	ldr	r6, [pc, #180]	; (2fff2108 <tzc400_configure_region+0xbc>)
2fff2054:	4619      	mov	r1, r3
2fff2056:	4686      	mov	lr, r0
2fff2058:	4610      	mov	r0, r2
2fff205a:	6833      	ldr	r3, [r6, #0]
2fff205c:	e9dd 450a 	ldrd	r4, r5, [sp, #40]	; 0x28
2fff2060:	b91b      	cbnz	r3, 2fff206a <tzc400_configure_region+0x1e>
2fff2062:	21d9      	movs	r1, #217	; 0xd9
2fff2064:	4829      	ldr	r0, [pc, #164]	; (2fff210c <tzc400_configure_region+0xc0>)
2fff2066:	f005 fe9f 	bl	2fff7da8 <__assert>
2fff206a:	7972      	ldrb	r2, [r6, #5]
2fff206c:	fa3e f202 	lsrs.w	r2, lr, r2
2fff2070:	d102      	bne.n	2fff2078 <tzc400_configure_region+0x2c>
2fff2072:	79b7      	ldrb	r7, [r6, #6]
2fff2074:	4547      	cmp	r7, r8
2fff2076:	d801      	bhi.n	2fff207c <tzc400_configure_region+0x30>
2fff2078:	21dd      	movs	r1, #221	; 0xdd
2fff207a:	e7f3      	b.n	2fff2064 <tzc400_configure_region+0x18>
2fff207c:	f896 c004 	ldrb.w	ip, [r6, #4]
2fff2080:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
2fff2084:	f1cc 0c40 	rsb	ip, ip, #64	; 0x40
2fff2088:	f1cc 0b20 	rsb	fp, ip, #32
2fff208c:	f1ac 0a20 	sub.w	sl, ip, #32
2fff2090:	fa29 f60c 	lsr.w	r6, r9, ip
2fff2094:	fa09 fb0b 	lsl.w	fp, r9, fp
2fff2098:	ea46 060b 	orr.w	r6, r6, fp
2fff209c:	fa29 fa0a 	lsr.w	sl, r9, sl
2fff20a0:	fa29 f70c 	lsr.w	r7, r9, ip
2fff20a4:	ea46 060a 	orr.w	r6, r6, sl
2fff20a8:	42af      	cmp	r7, r5
2fff20aa:	bf08      	it	eq
2fff20ac:	42a6      	cmpeq	r6, r4
2fff20ae:	d303      	bcc.n	2fff20b8 <tzc400_configure_region+0x6c>
2fff20b0:	42a9      	cmp	r1, r5
2fff20b2:	bf08      	it	eq
2fff20b4:	42a0      	cmpeq	r0, r4
2fff20b6:	d301      	bcc.n	2fff20bc <tzc400_configure_region+0x70>
2fff20b8:	21e4      	movs	r1, #228	; 0xe4
2fff20ba:	e7d3      	b.n	2fff2064 <tzc400_configure_region+0x18>
2fff20bc:	f114 0c01 	adds.w	ip, r4, #1
2fff20c0:	4617      	mov	r7, r2
2fff20c2:	ea4c 0c00 	orr.w	ip, ip, r0
2fff20c6:	f3cc 060b 	ubfx	r6, ip, #0, #12
2fff20ca:	ea56 0207 	orrs.w	r2, r6, r7
2fff20ce:	d001      	beq.n	2fff20d4 <tzc400_configure_region+0x88>
2fff20d0:	21e7      	movs	r1, #231	; 0xe7
2fff20d2:	e7c7      	b.n	2fff2064 <tzc400_configure_region+0x18>
2fff20d4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
2fff20d6:	2a03      	cmp	r2, #3
2fff20d8:	d901      	bls.n	2fff20de <tzc400_configure_region+0x92>
2fff20da:	21e9      	movs	r1, #233	; 0xe9
2fff20dc:	e7c2      	b.n	2fff2064 <tzc400_configure_region+0x18>
2fff20de:	eb03 1348 	add.w	r3, r3, r8, lsl #5
2fff20e2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
2fff20e4:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
2fff20e8:	ea4e 7082 	orr.w	r0, lr, r2, lsl #30
2fff20ec:	9a0d      	ldr	r2, [sp, #52]	; 0x34
2fff20ee:	f8c3 1104 	str.w	r1, [r3, #260]	; 0x104
2fff20f2:	f8c3 4108 	str.w	r4, [r3, #264]	; 0x108
2fff20f6:	f8c3 510c 	str.w	r5, [r3, #268]	; 0x10c
2fff20fa:	f8c3 0110 	str.w	r0, [r3, #272]	; 0x110
2fff20fe:	f8c3 2114 	str.w	r2, [r3, #276]	; 0x114
2fff2102:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff2106:	bf00      	nop
2fff2108:	2fffcdb8 	.word	0x2fffcdb8
2fff210c:	2fff9609 	.word	0x2fff9609

2fff2110 <tzc400_enable_filters>:
2fff2110:	4a16      	ldr	r2, [pc, #88]	; (2fff216c <tzc400_enable_filters+0x5c>)
2fff2112:	b570      	push	{r4, r5, r6, lr}
2fff2114:	6813      	ldr	r3, [r2, #0]
2fff2116:	b12b      	cbz	r3, 2fff2124 <tzc400_enable_filters+0x14>
2fff2118:	7954      	ldrb	r4, [r2, #5]
2fff211a:	2100      	movs	r1, #0
2fff211c:	2501      	movs	r5, #1
2fff211e:	428c      	cmp	r4, r1
2fff2120:	d804      	bhi.n	2fff212c <tzc400_enable_filters+0x1c>
2fff2122:	bd70      	pop	{r4, r5, r6, pc}
2fff2124:	4812      	ldr	r0, [pc, #72]	; (2fff2170 <tzc400_enable_filters+0x60>)
2fff2126:	21f4      	movs	r1, #244	; 0xf4
2fff2128:	f005 fe3e 	bl	2fff7da8 <__assert>
2fff212c:	689a      	ldr	r2, [r3, #8]
2fff212e:	f103 0608 	add.w	r6, r3, #8
2fff2132:	f3c2 4203 	ubfx	r2, r2, #16, #4
2fff2136:	40ca      	lsrs	r2, r1
2fff2138:	07d2      	lsls	r2, r2, #31
2fff213a:	d506      	bpl.n	2fff214a <tzc400_enable_filters+0x3a>
2fff213c:	480d      	ldr	r0, [pc, #52]	; (2fff2174 <tzc400_enable_filters+0x64>)
2fff213e:	f7fe fd1f 	bl	2fff0b80 <tf_log>
2fff2142:	f7fe fdbf 	bl	2fff0cc4 <console_flush>
2fff2146:	f004 edf4 	blx	2fff6d30 <do_panic>
2fff214a:	6898      	ldr	r0, [r3, #8]
2fff214c:	fa05 f201 	lsl.w	r2, r5, r1
2fff2150:	f3c0 4003 	ubfx	r0, r0, #16, #4
2fff2154:	4302      	orrs	r2, r0
2fff2156:	f002 000f 	and.w	r0, r2, #15
2fff215a:	6098      	str	r0, [r3, #8]
2fff215c:	6830      	ldr	r0, [r6, #0]
2fff215e:	f3c0 4003 	ubfx	r0, r0, #16, #4
2fff2162:	4282      	cmp	r2, r0
2fff2164:	d1fa      	bne.n	2fff215c <tzc400_enable_filters+0x4c>
2fff2166:	3101      	adds	r1, #1
2fff2168:	e7d9      	b.n	2fff211e <tzc400_enable_filters+0xe>
2fff216a:	bf00      	nop
2fff216c:	2fffcdb8 	.word	0x2fffcdb8
2fff2170:	2fff9609 	.word	0x2fff9609
2fff2174:	2fff953b 	.word	0x2fff953b

2fff2178 <tzc400_disable_filters>:
2fff2178:	4b0f      	ldr	r3, [pc, #60]	; (2fff21b8 <tzc400_disable_filters+0x40>)
2fff217a:	b570      	push	{r4, r5, r6, lr}
2fff217c:	6819      	ldr	r1, [r3, #0]
2fff217e:	b129      	cbz	r1, 2fff218c <tzc400_disable_filters+0x14>
2fff2180:	795c      	ldrb	r4, [r3, #5]
2fff2182:	2200      	movs	r2, #0
2fff2184:	2501      	movs	r5, #1
2fff2186:	4294      	cmp	r4, r2
2fff2188:	d805      	bhi.n	2fff2196 <tzc400_disable_filters+0x1e>
2fff218a:	bd70      	pop	{r4, r5, r6, pc}
2fff218c:	480b      	ldr	r0, [pc, #44]	; (2fff21bc <tzc400_disable_filters+0x44>)
2fff218e:	f240 110f 	movw	r1, #271	; 0x10f
2fff2192:	f005 fe09 	bl	2fff7da8 <__assert>
2fff2196:	688b      	ldr	r3, [r1, #8]
2fff2198:	f101 0608 	add.w	r6, r1, #8
2fff219c:	fa05 f002 	lsl.w	r0, r5, r2
2fff21a0:	f3c3 4303 	ubfx	r3, r3, #16, #4
2fff21a4:	ea23 0300 	bic.w	r3, r3, r0
2fff21a8:	608b      	str	r3, [r1, #8]
2fff21aa:	6830      	ldr	r0, [r6, #0]
2fff21ac:	f3c0 4003 	ubfx	r0, r0, #16, #4
2fff21b0:	4283      	cmp	r3, r0
2fff21b2:	d1fa      	bne.n	2fff21aa <tzc400_disable_filters+0x32>
2fff21b4:	3201      	adds	r2, #1
2fff21b6:	e7e6      	b.n	2fff2186 <tzc400_disable_filters+0xe>
2fff21b8:	2fffcdb8 	.word	0x2fffcdb8
2fff21bc:	2fff9609 	.word	0x2fff9609

2fff21c0 <tzc400_is_pending_interrupt>:
2fff21c0:	b538      	push	{r3, r4, r5, lr}
2fff21c2:	4b0c      	ldr	r3, [pc, #48]	; (2fff21f4 <tzc400_is_pending_interrupt+0x34>)
2fff21c4:	681a      	ldr	r2, [r3, #0]
2fff21c6:	b132      	cbz	r2, 2fff21d6 <tzc400_is_pending_interrupt+0x16>
2fff21c8:	7959      	ldrb	r1, [r3, #5]
2fff21ca:	2001      	movs	r0, #1
2fff21cc:	2300      	movs	r3, #0
2fff21ce:	4299      	cmp	r1, r3
2fff21d0:	d806      	bhi.n	2fff21e0 <tzc400_is_pending_interrupt+0x20>
2fff21d2:	2000      	movs	r0, #0
2fff21d4:	bd38      	pop	{r3, r4, r5, pc}
2fff21d6:	4808      	ldr	r0, [pc, #32]	; (2fff21f8 <tzc400_is_pending_interrupt+0x38>)
2fff21d8:	f240 1127 	movw	r1, #295	; 0x127
2fff21dc:	f005 fde4 	bl	2fff7da8 <__assert>
2fff21e0:	6914      	ldr	r4, [r2, #16]
2fff21e2:	fa00 f503 	lsl.w	r5, r0, r3
2fff21e6:	4225      	tst	r5, r4
2fff21e8:	d101      	bne.n	2fff21ee <tzc400_is_pending_interrupt+0x2e>
2fff21ea:	3301      	adds	r3, #1
2fff21ec:	e7ef      	b.n	2fff21ce <tzc400_is_pending_interrupt+0xe>
2fff21ee:	2001      	movs	r0, #1
2fff21f0:	e7f0      	b.n	2fff21d4 <tzc400_is_pending_interrupt+0x14>
2fff21f2:	bf00      	nop
2fff21f4:	2fffcdb8 	.word	0x2fffcdb8
2fff21f8:	2fff9609 	.word	0x2fff9609

2fff21fc <tzc400_it_handler>:
2fff21fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff21fe:	4e24      	ldr	r6, [pc, #144]	; (2fff2290 <tzc400_it_handler+0x94>)
2fff2200:	6832      	ldr	r2, [r6, #0]
2fff2202:	7971      	ldrb	r1, [r6, #5]
2fff2204:	2a00      	cmp	r2, #0
2fff2206:	d132      	bne.n	2fff226e <tzc400_it_handler+0x72>
2fff2208:	4822      	ldr	r0, [pc, #136]	; (2fff2294 <tzc400_it_handler+0x98>)
2fff220a:	f240 1139 	movw	r1, #313	; 0x139
2fff220e:	f005 fdcb 	bl	2fff7da8 <__assert>
2fff2212:	6915      	ldr	r5, [r2, #16]
2fff2214:	fa00 f703 	lsl.w	r7, r0, r3
2fff2218:	422f      	tst	r7, r5
2fff221a:	bf18      	it	ne
2fff221c:	461c      	movne	r4, r3
2fff221e:	3301      	adds	r3, #1
2fff2220:	428b      	cmp	r3, r1
2fff2222:	d228      	bcs.n	2fff2276 <tzc400_it_handler+0x7a>
2fff2224:	428c      	cmp	r4, r1
2fff2226:	d0f4      	beq.n	2fff2212 <tzc400_it_handler+0x16>
2fff2228:	b374      	cbz	r4, 2fff2288 <tzc400_it_handler+0x8c>
2fff222a:	6b11      	ldr	r1, [r2, #48]	; 0x30
2fff222c:	481a      	ldr	r0, [pc, #104]	; (2fff2298 <tzc400_it_handler+0x9c>)
2fff222e:	f7fe fca7 	bl	2fff0b80 <tf_log>
2fff2232:	6833      	ldr	r3, [r6, #0]
2fff2234:	b354      	cbz	r4, 2fff228c <tzc400_it_handler+0x90>
2fff2236:	6b9d      	ldr	r5, [r3, #56]	; 0x38
2fff2238:	f015 0f15 	tst.w	r5, #21
2fff223c:	bf0c      	ite	eq
2fff223e:	4817      	ldreq	r0, [pc, #92]	; (2fff229c <tzc400_it_handler+0xa0>)
2fff2240:	4817      	ldrne	r0, [pc, #92]	; (2fff22a0 <tzc400_it_handler+0xa4>)
2fff2242:	f7fe fc9d 	bl	2fff0b80 <tf_log>
2fff2246:	f015 0f14 	tst.w	r5, #20
2fff224a:	bf0c      	ite	eq
2fff224c:	4815      	ldreq	r0, [pc, #84]	; (2fff22a4 <tzc400_it_handler+0xa8>)
2fff224e:	4816      	ldrne	r0, [pc, #88]	; (2fff22a8 <tzc400_it_handler+0xac>)
2fff2250:	f7fe fc96 	bl	2fff0b80 <tf_log>
2fff2254:	f015 0f18 	tst.w	r5, #24
2fff2258:	bf0c      	ite	eq
2fff225a:	4814      	ldreq	r0, [pc, #80]	; (2fff22ac <tzc400_it_handler+0xb0>)
2fff225c:	4814      	ldrne	r0, [pc, #80]	; (2fff22b0 <tzc400_it_handler+0xb4>)
2fff225e:	f7fe fc8f 	bl	2fff0b80 <tf_log>
2fff2262:	2301      	movs	r3, #1
2fff2264:	fa03 f404 	lsl.w	r4, r3, r4
2fff2268:	6833      	ldr	r3, [r6, #0]
2fff226a:	615c      	str	r4, [r3, #20]
2fff226c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff226e:	460c      	mov	r4, r1
2fff2270:	2300      	movs	r3, #0
2fff2272:	2001      	movs	r0, #1
2fff2274:	e7d4      	b.n	2fff2220 <tzc400_it_handler+0x24>
2fff2276:	428c      	cmp	r4, r1
2fff2278:	d1d6      	bne.n	2fff2228 <tzc400_it_handler+0x2c>
2fff227a:	480e      	ldr	r0, [pc, #56]	; (2fff22b4 <tzc400_it_handler+0xb8>)
2fff227c:	f7fe fc80 	bl	2fff0b80 <tf_log>
2fff2280:	f7fe fd20 	bl	2fff0cc4 <console_flush>
2fff2284:	f004 ed54 	blx	2fff6d30 <do_panic>
2fff2288:	6a11      	ldr	r1, [r2, #32]
2fff228a:	e7cf      	b.n	2fff222c <tzc400_it_handler+0x30>
2fff228c:	6a9d      	ldr	r5, [r3, #40]	; 0x28
2fff228e:	e7d3      	b.n	2fff2238 <tzc400_it_handler+0x3c>
2fff2290:	2fffcdb8 	.word	0x2fffcdb8
2fff2294:	2fff9609 	.word	0x2fff9609
2fff2298:	2fff95a5 	.word	0x2fff95a5
2fff229c:	2fff95c4 	.word	0x2fff95c4
2fff22a0:	2fff95d2 	.word	0x2fff95d2
2fff22a4:	2fff95dc 	.word	0x2fff95dc
2fff22a8:	2fff95e9 	.word	0x2fff95e9
2fff22ac:	2fff95f8 	.word	0x2fff95f8
2fff22b0:	2fff9600 	.word	0x2fff9600
2fff22b4:	2fff958f 	.word	0x2fff958f

2fff22b8 <udelay>:
2fff22b8:	b570      	push	{r4, r5, r6, lr}
2fff22ba:	4604      	mov	r4, r0
2fff22bc:	4d13      	ldr	r5, [pc, #76]	; (2fff230c <udelay+0x54>)
2fff22be:	682b      	ldr	r3, [r5, #0]
2fff22c0:	b12b      	cbz	r3, 2fff22ce <udelay+0x16>
2fff22c2:	685a      	ldr	r2, [r3, #4]
2fff22c4:	b11a      	cbz	r2, 2fff22ce <udelay+0x16>
2fff22c6:	6899      	ldr	r1, [r3, #8]
2fff22c8:	b109      	cbz	r1, 2fff22ce <udelay+0x16>
2fff22ca:	681a      	ldr	r2, [r3, #0]
2fff22cc:	b91a      	cbnz	r2, 2fff22d6 <udelay+0x1e>
2fff22ce:	211c      	movs	r1, #28
2fff22d0:	480f      	ldr	r0, [pc, #60]	; (2fff2310 <udelay+0x58>)
2fff22d2:	f005 fd69 	bl	2fff7da8 <__assert>
2fff22d6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
2fff22da:	fbb3 f3f1 	udiv	r3, r3, r1
2fff22de:	4283      	cmp	r3, r0
2fff22e0:	d801      	bhi.n	2fff22e6 <udelay+0x2e>
2fff22e2:	2120      	movs	r1, #32
2fff22e4:	e7f4      	b.n	2fff22d0 <udelay+0x18>
2fff22e6:	4790      	blx	r2
2fff22e8:	682a      	ldr	r2, [r5, #0]
2fff22ea:	4606      	mov	r6, r0
2fff22ec:	6853      	ldr	r3, [r2, #4]
2fff22ee:	6891      	ldr	r1, [r2, #8]
2fff22f0:	1e5a      	subs	r2, r3, #1
2fff22f2:	fb01 2404 	mla	r4, r1, r4, r2
2fff22f6:	fbb4 f4f3 	udiv	r4, r4, r3
2fff22fa:	3401      	adds	r4, #1
2fff22fc:	682b      	ldr	r3, [r5, #0]
2fff22fe:	681b      	ldr	r3, [r3, #0]
2fff2300:	4798      	blx	r3
2fff2302:	1a30      	subs	r0, r6, r0
2fff2304:	4284      	cmp	r4, r0
2fff2306:	d8f9      	bhi.n	2fff22fc <udelay+0x44>
2fff2308:	bd70      	pop	{r4, r5, r6, pc}
2fff230a:	bf00      	nop
2fff230c:	2fffcdc0 	.word	0x2fffcdc0
2fff2310:	2fff9622 	.word	0x2fff9622

2fff2314 <mdelay>:
2fff2314:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2fff2318:	4358      	muls	r0, r3
2fff231a:	f7ff bfcd 	b.w	2fff22b8 <udelay>
	...

2fff2320 <timer_init>:
2fff2320:	b508      	push	{r3, lr}
2fff2322:	b128      	cbz	r0, 2fff2330 <timer_init+0x10>
2fff2324:	6843      	ldr	r3, [r0, #4]
2fff2326:	b11b      	cbz	r3, 2fff2330 <timer_init+0x10>
2fff2328:	6883      	ldr	r3, [r0, #8]
2fff232a:	b10b      	cbz	r3, 2fff2330 <timer_init+0x10>
2fff232c:	6803      	ldr	r3, [r0, #0]
2fff232e:	b91b      	cbnz	r3, 2fff2338 <timer_init+0x18>
2fff2330:	4803      	ldr	r0, [pc, #12]	; (2fff2340 <timer_init+0x20>)
2fff2332:	2145      	movs	r1, #69	; 0x45
2fff2334:	f005 fd38 	bl	2fff7da8 <__assert>
2fff2338:	4b02      	ldr	r3, [pc, #8]	; (2fff2344 <timer_init+0x24>)
2fff233a:	6018      	str	r0, [r3, #0]
2fff233c:	bd08      	pop	{r3, pc}
2fff233e:	bf00      	nop
2fff2340:	2fff9622 	.word	0x2fff9622
2fff2344:	2fffcdc0 	.word	0x2fffcdc0

2fff2348 <get_timer_value>:
2fff2348:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2fff234c:	43c0      	mvns	r0, r0
2fff234e:	4770      	bx	lr

2fff2350 <generic_delay_timer_init_args>:
2fff2350:	4b03      	ldr	r3, [pc, #12]	; (2fff2360 <generic_delay_timer_init_args+0x10>)
2fff2352:	4a04      	ldr	r2, [pc, #16]	; (2fff2364 <generic_delay_timer_init_args+0x14>)
2fff2354:	6058      	str	r0, [r3, #4]
2fff2356:	4618      	mov	r0, r3
2fff2358:	601a      	str	r2, [r3, #0]
2fff235a:	6099      	str	r1, [r3, #8]
2fff235c:	f7ff bfe0 	b.w	2fff2320 <timer_init>
2fff2360:	2fffcdc4 	.word	0x2fffcdc4
2fff2364:	2fff2349 	.word	0x2fff2349

2fff2368 <generic_delay_timer_init>:
2fff2368:	b538      	push	{r3, r4, r5, lr}
2fff236a:	ee10 3f31 	mrc	15, 0, r3, cr0, cr1, {1}
2fff236e:	f413 2f70 	tst.w	r3, #983040	; 0xf0000
2fff2372:	d103      	bne.n	2fff237c <generic_delay_timer_init+0x14>
2fff2374:	480c      	ldr	r0, [pc, #48]	; (2fff23a8 <generic_delay_timer_init+0x40>)
2fff2376:	212f      	movs	r1, #47	; 0x2f
2fff2378:	f005 fd16 	bl	2fff7da8 <__assert>
2fff237c:	f7fe fdae 	bl	2fff0edc <plat_get_syscnt_freq2>
2fff2380:	4601      	mov	r1, r0
2fff2382:	2207      	movs	r2, #7
2fff2384:	4809      	ldr	r0, [pc, #36]	; (2fff23ac <generic_delay_timer_init+0x44>)
2fff2386:	230a      	movs	r3, #10
2fff2388:	3a01      	subs	r2, #1
2fff238a:	d103      	bne.n	2fff2394 <generic_delay_timer_init+0x2c>
2fff238c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff2390:	f7ff bfde 	b.w	2fff2350 <generic_delay_timer_init_args>
2fff2394:	fbb1 f4f3 	udiv	r4, r1, r3
2fff2398:	fb03 1514 	mls	r5, r3, r4, r1
2fff239c:	2d00      	cmp	r5, #0
2fff239e:	d1f5      	bne.n	2fff238c <generic_delay_timer_init+0x24>
2fff23a0:	fbb0 f0f3 	udiv	r0, r0, r3
2fff23a4:	4621      	mov	r1, r4
2fff23a6:	e7ef      	b.n	2fff2388 <generic_delay_timer_init+0x20>
2fff23a8:	2fff9644 	.word	0x2fff9644
2fff23ac:	000f4240 	.word	0x000f4240

2fff23b0 <fdt32_to_cpu>:
2fff23b0:	ba00      	rev	r0, r0
2fff23b2:	4770      	bx	lr

2fff23b4 <bsec_lock>:
2fff23b4:	b508      	push	{r3, lr}
2fff23b6:	f7fe fda4 	bl	2fff0f02 <stm32mp_lock_available>
2fff23ba:	b120      	cbz	r0, 2fff23c6 <bsec_lock+0x12>
2fff23bc:	4802      	ldr	r0, [pc, #8]	; (2fff23c8 <bsec_lock+0x14>)
2fff23be:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff23c2:	f008 bbb9 	b.w	2fffab38 <__spin_lock_from_thumb>
2fff23c6:	bd08      	pop	{r3, pc}
2fff23c8:	2fffcdd4 	.word	0x2fffcdd4

2fff23cc <bsec_unlock>:
2fff23cc:	b508      	push	{r3, lr}
2fff23ce:	f7fe fd98 	bl	2fff0f02 <stm32mp_lock_available>
2fff23d2:	b120      	cbz	r0, 2fff23de <bsec_unlock+0x12>
2fff23d4:	4802      	ldr	r0, [pc, #8]	; (2fff23e0 <bsec_unlock+0x14>)
2fff23d6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff23da:	f008 bba5 	b.w	2fffab28 <__spin_unlock_from_thumb>
2fff23de:	bd08      	pop	{r3, pc}
2fff23e0:	2fffcdd4 	.word	0x2fffcdd4

2fff23e4 <otp_bank_offset>:
2fff23e4:	285f      	cmp	r0, #95	; 0x5f
2fff23e6:	b508      	push	{r3, lr}
2fff23e8:	d903      	bls.n	2fff23f2 <otp_bank_offset+0xe>
2fff23ea:	4803      	ldr	r0, [pc, #12]	; (2fff23f8 <otp_bank_offset+0x14>)
2fff23ec:	2191      	movs	r1, #145	; 0x91
2fff23ee:	f005 fcdb 	bl	2fff7da8 <__assert>
2fff23f2:	0940      	lsrs	r0, r0, #5
2fff23f4:	0080      	lsls	r0, r0, #2
2fff23f6:	bd08      	pop	{r3, pc}
2fff23f8:	2fff9850 	.word	0x2fff9850

2fff23fc <bsec_check_error>:
2fff23fc:	b538      	push	{r3, r4, r5, lr}
2fff23fe:	f000 031f 	and.w	r3, r0, #31
2fff2402:	2401      	movs	r4, #1
2fff2404:	460d      	mov	r5, r1
2fff2406:	409c      	lsls	r4, r3
2fff2408:	f7ff ffec 	bl	2fff23e4 <otp_bank_offset>
2fff240c:	4b07      	ldr	r3, [pc, #28]	; (2fff242c <bsec_check_error+0x30>)
2fff240e:	681b      	ldr	r3, [r3, #0]
2fff2410:	4403      	add	r3, r0
2fff2412:	6b58      	ldr	r0, [r3, #52]	; 0x34
2fff2414:	4020      	ands	r0, r4
2fff2416:	d106      	bne.n	2fff2426 <bsec_check_error+0x2a>
2fff2418:	b125      	cbz	r5, 2fff2424 <bsec_check_error+0x28>
2fff241a:	69d8      	ldr	r0, [r3, #28]
2fff241c:	4020      	ands	r0, r4
2fff241e:	bf18      	it	ne
2fff2420:	f06f 0001 	mvnne.w	r0, #1
2fff2424:	bd38      	pop	{r3, r4, r5, pc}
2fff2426:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff242a:	e7fb      	b.n	2fff2424 <bsec_check_error+0x28>
2fff242c:	2fffcdd0 	.word	0x2fffcdd0

2fff2430 <bsec_find_otp_name_in_dt>:
2fff2430:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2fff2432:	460d      	mov	r5, r1
2fff2434:	4614      	mov	r4, r2
2fff2436:	4606      	mov	r6, r0
2fff2438:	2800      	cmp	r0, #0
2fff243a:	d052      	beq.n	2fff24e2 <bsec_find_otp_name_in_dt+0xb2>
2fff243c:	2900      	cmp	r1, #0
2fff243e:	d050      	beq.n	2fff24e2 <bsec_find_otp_name_in_dt+0xb2>
2fff2440:	4668      	mov	r0, sp
2fff2442:	f003 ff3d 	bl	2fff62c0 <fdt_get_address>
2fff2446:	b918      	cbnz	r0, 2fff2450 <bsec_find_otp_name_in_dt+0x20>
2fff2448:	f7fe fc3c 	bl	2fff0cc4 <console_flush>
2fff244c:	f004 ec70 	blx	2fff6d30 <do_panic>
2fff2450:	4825      	ldr	r0, [pc, #148]	; (2fff24e8 <bsec_find_otp_name_in_dt+0xb8>)
2fff2452:	f004 f841 	bl	2fff64d8 <dt_get_node_by_compatible>
2fff2456:	1e07      	subs	r7, r0, #0
2fff2458:	da04      	bge.n	2fff2464 <bsec_find_otp_name_in_dt+0x34>
2fff245a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
2fff245e:	4618      	mov	r0, r3
2fff2460:	b003      	add	sp, #12
2fff2462:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff2464:	4a21      	ldr	r2, [pc, #132]	; (2fff24ec <bsec_find_otp_name_in_dt+0xbc>)
2fff2466:	4633      	mov	r3, r6
2fff2468:	9800      	ldr	r0, [sp, #0]
2fff246a:	4639      	mov	r1, r7
2fff246c:	f005 fc35 	bl	2fff7cda <fdt_stringlist_search>
2fff2470:	1e06      	subs	r6, r0, #0
2fff2472:	dbf2      	blt.n	2fff245a <bsec_find_otp_name_in_dt+0x2a>
2fff2474:	4a1e      	ldr	r2, [pc, #120]	; (2fff24f0 <bsec_find_otp_name_in_dt+0xc0>)
2fff2476:	ab01      	add	r3, sp, #4
2fff2478:	9800      	ldr	r0, [sp, #0]
2fff247a:	4639      	mov	r1, r7
2fff247c:	f005 faf7 	bl	2fff7a6e <fdt_getprop>
2fff2480:	2800      	cmp	r0, #0
2fff2482:	d0ea      	beq.n	2fff245a <bsec_find_otp_name_in_dt+0x2a>
2fff2484:	9b01      	ldr	r3, [sp, #4]
2fff2486:	ebb3 0f86 	cmp.w	r3, r6, lsl #2
2fff248a:	dbe6      	blt.n	2fff245a <bsec_find_otp_name_in_dt+0x2a>
2fff248c:	f850 0026 	ldr.w	r0, [r0, r6, lsl #2]
2fff2490:	f7ff ff8e 	bl	2fff23b0 <fdt32_to_cpu>
2fff2494:	4601      	mov	r1, r0
2fff2496:	9800      	ldr	r0, [sp, #0]
2fff2498:	f005 fbdb 	bl	2fff7c52 <fdt_node_offset_by_phandle>
2fff249c:	1e01      	subs	r1, r0, #0
2fff249e:	da03      	bge.n	2fff24a8 <bsec_find_otp_name_in_dt+0x78>
2fff24a0:	4814      	ldr	r0, [pc, #80]	; (2fff24f4 <bsec_find_otp_name_in_dt+0xc4>)
2fff24a2:	f7fe fb6d 	bl	2fff0b80 <tf_log>
2fff24a6:	e7d8      	b.n	2fff245a <bsec_find_otp_name_in_dt+0x2a>
2fff24a8:	4a13      	ldr	r2, [pc, #76]	; (2fff24f8 <bsec_find_otp_name_in_dt+0xc8>)
2fff24aa:	ab01      	add	r3, sp, #4
2fff24ac:	9800      	ldr	r0, [sp, #0]
2fff24ae:	f005 fade 	bl	2fff7a6e <fdt_getprop>
2fff24b2:	4602      	mov	r2, r0
2fff24b4:	2800      	cmp	r0, #0
2fff24b6:	d0f3      	beq.n	2fff24a0 <bsec_find_otp_name_in_dt+0x70>
2fff24b8:	9b01      	ldr	r3, [sp, #4]
2fff24ba:	2b08      	cmp	r3, #8
2fff24bc:	d1f0      	bne.n	2fff24a0 <bsec_find_otp_name_in_dt+0x70>
2fff24be:	6800      	ldr	r0, [r0, #0]
2fff24c0:	f7ff ff76 	bl	2fff23b0 <fdt32_to_cpu>
2fff24c4:	f010 0303 	ands.w	r3, r0, #3
2fff24c8:	d001      	beq.n	2fff24ce <bsec_find_otp_name_in_dt+0x9e>
2fff24ca:	480c      	ldr	r0, [pc, #48]	; (2fff24fc <bsec_find_otp_name_in_dt+0xcc>)
2fff24cc:	e7e9      	b.n	2fff24a2 <bsec_find_otp_name_in_dt+0x72>
2fff24ce:	0880      	lsrs	r0, r0, #2
2fff24d0:	6028      	str	r0, [r5, #0]
2fff24d2:	2c00      	cmp	r4, #0
2fff24d4:	d0c3      	beq.n	2fff245e <bsec_find_otp_name_in_dt+0x2e>
2fff24d6:	6850      	ldr	r0, [r2, #4]
2fff24d8:	f7ff ff6a 	bl	2fff23b0 <fdt32_to_cpu>
2fff24dc:	00c0      	lsls	r0, r0, #3
2fff24de:	6020      	str	r0, [r4, #0]
2fff24e0:	e7bd      	b.n	2fff245e <bsec_find_otp_name_in_dt+0x2e>
2fff24e2:	f06f 0303 	mvn.w	r3, #3
2fff24e6:	e7ba      	b.n	2fff245e <bsec_find_otp_name_in_dt+0x2e>
2fff24e8:	2fff966e 	.word	0x2fff966e
2fff24ec:	2fff9684 	.word	0x2fff9684
2fff24f0:	2fff9695 	.word	0x2fff9695
2fff24f4:	2fff96a1 	.word	0x2fff96a1
2fff24f8:	2fff8b39 	.word	0x2fff8b39
2fff24fc:	2fff96c8 	.word	0x2fff96c8

2fff2500 <bsec_read_otp>:
2fff2500:	295f      	cmp	r1, #95	; 0x5f
2fff2502:	bf9f      	itttt	ls
2fff2504:	4b05      	ldrls	r3, [pc, #20]	; (2fff251c <bsec_read_otp+0x1c>)
2fff2506:	681b      	ldrls	r3, [r3, #0]
2fff2508:	f503 7300 	addls.w	r3, r3, #512	; 0x200
2fff250c:	f853 3021 	ldrls.w	r3, [r3, r1, lsl #2]
2fff2510:	bf9a      	itte	ls
2fff2512:	6003      	strls	r3, [r0, #0]
2fff2514:	2000      	movls	r0, #0
2fff2516:	f06f 0003 	mvnhi.w	r0, #3
2fff251a:	4770      	bx	lr
2fff251c:	2fffcdd0 	.word	0x2fffcdd0

2fff2520 <bsec_read_debug_conf>:
2fff2520:	4b01      	ldr	r3, [pc, #4]	; (2fff2528 <bsec_read_debug_conf+0x8>)
2fff2522:	681b      	ldr	r3, [r3, #0]
2fff2524:	6958      	ldr	r0, [r3, #20]
2fff2526:	4770      	bx	lr
2fff2528:	2fffcdd0 	.word	0x2fffcdd0

2fff252c <bsec_get_status>:
2fff252c:	4b01      	ldr	r3, [pc, #4]	; (2fff2534 <bsec_get_status+0x8>)
2fff252e:	681b      	ldr	r3, [r3, #0]
2fff2530:	68d8      	ldr	r0, [r3, #12]
2fff2532:	4770      	bx	lr
2fff2534:	2fffcdd0 	.word	0x2fffcdd0

2fff2538 <bsec_power_safmem>:
2fff2538:	b510      	push	{r4, lr}
2fff253a:	4604      	mov	r4, r0
2fff253c:	f7ff ff3a 	bl	2fff23b4 <bsec_lock>
2fff2540:	4b14      	ldr	r3, [pc, #80]	; (2fff2594 <bsec_power_safmem+0x5c>)
2fff2542:	681a      	ldr	r2, [r3, #0]
2fff2544:	6813      	ldr	r3, [r2, #0]
2fff2546:	b164      	cbz	r4, 2fff2562 <bsec_power_safmem+0x2a>
2fff2548:	f043 0301 	orr.w	r3, r3, #1
2fff254c:	6013      	str	r3, [r2, #0]
2fff254e:	b9bc      	cbnz	r4, 2fff2580 <bsec_power_safmem+0x48>
2fff2550:	f64f 74ff 	movw	r4, #65535	; 0xffff
2fff2554:	f7ff ffea 	bl	2fff252c <bsec_get_status>
2fff2558:	0683      	lsls	r3, r0, #26
2fff255a:	d514      	bpl.n	2fff2586 <bsec_power_safmem+0x4e>
2fff255c:	b15c      	cbz	r4, 2fff2576 <bsec_power_safmem+0x3e>
2fff255e:	3c01      	subs	r4, #1
2fff2560:	e7f8      	b.n	2fff2554 <bsec_power_safmem+0x1c>
2fff2562:	f023 0301 	bic.w	r3, r3, #1
2fff2566:	e7f1      	b.n	2fff254c <bsec_power_safmem+0x14>
2fff2568:	3c01      	subs	r4, #1
2fff256a:	f7ff ffdf 	bl	2fff252c <bsec_get_status>
2fff256e:	0682      	lsls	r2, r0, #26
2fff2570:	d409      	bmi.n	2fff2586 <bsec_power_safmem+0x4e>
2fff2572:	2c00      	cmp	r4, #0
2fff2574:	d1f8      	bne.n	2fff2568 <bsec_power_safmem+0x30>
2fff2576:	f7ff ff29 	bl	2fff23cc <bsec_unlock>
2fff257a:	f06f 0006 	mvn.w	r0, #6
2fff257e:	bd10      	pop	{r4, pc}
2fff2580:	f64f 74ff 	movw	r4, #65535	; 0xffff
2fff2584:	e7f1      	b.n	2fff256a <bsec_power_safmem+0x32>
2fff2586:	f7ff ff21 	bl	2fff23cc <bsec_unlock>
2fff258a:	2c00      	cmp	r4, #0
2fff258c:	d0f5      	beq.n	2fff257a <bsec_power_safmem+0x42>
2fff258e:	2000      	movs	r0, #0
2fff2590:	e7f5      	b.n	2fff257e <bsec_power_safmem+0x46>
2fff2592:	bf00      	nop
2fff2594:	2fffcdd0 	.word	0x2fffcdd0

2fff2598 <bsec_permanent_lock_otp>:
2fff2598:	285f      	cmp	r0, #95	; 0x5f
2fff259a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff259c:	4604      	mov	r4, r0
2fff259e:	d83d      	bhi.n	2fff261c <bsec_permanent_lock_otp+0x84>
2fff25a0:	f7ff ffc4 	bl	2fff252c <bsec_get_status>
2fff25a4:	0682      	lsls	r2, r0, #26
2fff25a6:	d434      	bmi.n	2fff2612 <bsec_permanent_lock_otp+0x7a>
2fff25a8:	2001      	movs	r0, #1
2fff25aa:	f7ff ffc5 	bl	2fff2538 <bsec_power_safmem>
2fff25ae:	4605      	mov	r5, r0
2fff25b0:	2800      	cmp	r0, #0
2fff25b2:	d135      	bne.n	2fff2620 <bsec_permanent_lock_otp+0x88>
2fff25b4:	2701      	movs	r7, #1
2fff25b6:	2c1f      	cmp	r4, #31
2fff25b8:	bf95      	itete	ls
2fff25ba:	0066      	lslls	r6, r4, #1
2fff25bc:	f004 030f 	andhi.w	r3, r4, #15
2fff25c0:	f006 030e 	andls.w	r3, r6, #14
2fff25c4:	2601      	movhi	r6, #1
2fff25c6:	bf8d      	iteet	hi
2fff25c8:	0925      	lsrhi	r5, r4, #4
2fff25ca:	2603      	movls	r6, #3
2fff25cc:	08e5      	lsrls	r5, r4, #3
2fff25ce:	3502      	addhi	r5, #2
2fff25d0:	409e      	lsls	r6, r3
2fff25d2:	f7ff feef 	bl	2fff23b4 <bsec_lock>
2fff25d6:	4b13      	ldr	r3, [pc, #76]	; (2fff2624 <bsec_permanent_lock_otp+0x8c>)
2fff25d8:	f445 7540 	orr.w	r5, r5, #768	; 0x300
2fff25dc:	681b      	ldr	r3, [r3, #0]
2fff25de:	609e      	str	r6, [r3, #8]
2fff25e0:	605d      	str	r5, [r3, #4]
2fff25e2:	f7ff ffa3 	bl	2fff252c <bsec_get_status>
2fff25e6:	0703      	lsls	r3, r0, #28
2fff25e8:	d4fb      	bmi.n	2fff25e2 <bsec_permanent_lock_otp+0x4a>
2fff25ea:	f7ff ff9f 	bl	2fff252c <bsec_get_status>
2fff25ee:	f010 0110 	ands.w	r1, r0, #16
2fff25f2:	d110      	bne.n	2fff2616 <bsec_permanent_lock_otp+0x7e>
2fff25f4:	4620      	mov	r0, r4
2fff25f6:	f7ff ff01 	bl	2fff23fc <bsec_check_error>
2fff25fa:	4605      	mov	r5, r0
2fff25fc:	f7ff fee6 	bl	2fff23cc <bsec_unlock>
2fff2600:	b177      	cbz	r7, 2fff2620 <bsec_permanent_lock_otp+0x88>
2fff2602:	2000      	movs	r0, #0
2fff2604:	f7ff ff98 	bl	2fff2538 <bsec_power_safmem>
2fff2608:	b150      	cbz	r0, 2fff2620 <bsec_permanent_lock_otp+0x88>
2fff260a:	f7fe fb5b 	bl	2fff0cc4 <console_flush>
2fff260e:	f004 eb90 	blx	2fff6d30 <do_panic>
2fff2612:	2700      	movs	r7, #0
2fff2614:	e7cf      	b.n	2fff25b6 <bsec_permanent_lock_otp+0x1e>
2fff2616:	f06f 0504 	mvn.w	r5, #4
2fff261a:	e7ef      	b.n	2fff25fc <bsec_permanent_lock_otp+0x64>
2fff261c:	f06f 0503 	mvn.w	r5, #3
2fff2620:	4628      	mov	r0, r5
2fff2622:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff2624:	2fffcdd0 	.word	0x2fffcdd0

2fff2628 <bsec_get_version>:
2fff2628:	4b02      	ldr	r3, [pc, #8]	; (2fff2634 <bsec_get_version+0xc>)
2fff262a:	681b      	ldr	r3, [r3, #0]
2fff262c:	f8d3 0ff4 	ldr.w	r0, [r3, #4084]	; 0xff4
2fff2630:	4770      	bx	lr
2fff2632:	bf00      	nop
2fff2634:	2fffcdd0 	.word	0x2fffcdd0

2fff2638 <bsec_get_id>:
2fff2638:	4b02      	ldr	r3, [pc, #8]	; (2fff2644 <bsec_get_id+0xc>)
2fff263a:	681b      	ldr	r3, [r3, #0]
2fff263c:	f8d3 0ff8 	ldr.w	r0, [r3, #4088]	; 0xff8
2fff2640:	4770      	bx	lr
2fff2642:	bf00      	nop
2fff2644:	2fffcdd0 	.word	0x2fffcdd0

2fff2648 <bsec_read_sr_lock>:
2fff2648:	b538      	push	{r3, r4, r5, lr}
2fff264a:	4604      	mov	r4, r0
2fff264c:	460d      	mov	r5, r1
2fff264e:	f7ff fec9 	bl	2fff23e4 <otp_bank_offset>
2fff2652:	2c5f      	cmp	r4, #95	; 0x5f
2fff2654:	d80e      	bhi.n	2fff2674 <bsec_read_sr_lock+0x2c>
2fff2656:	4b09      	ldr	r3, [pc, #36]	; (2fff267c <bsec_read_sr_lock+0x34>)
2fff2658:	f004 041f 	and.w	r4, r4, #31
2fff265c:	681b      	ldr	r3, [r3, #0]
2fff265e:	3394      	adds	r3, #148	; 0x94
2fff2660:	581a      	ldr	r2, [r3, r0]
2fff2662:	2301      	movs	r3, #1
2fff2664:	2000      	movs	r0, #0
2fff2666:	fa03 f404 	lsl.w	r4, r3, r4
2fff266a:	4214      	tst	r4, r2
2fff266c:	bf08      	it	eq
2fff266e:	2300      	moveq	r3, #0
2fff2670:	702b      	strb	r3, [r5, #0]
2fff2672:	bd38      	pop	{r3, r4, r5, pc}
2fff2674:	f06f 0003 	mvn.w	r0, #3
2fff2678:	e7fb      	b.n	2fff2672 <bsec_read_sr_lock+0x2a>
2fff267a:	bf00      	nop
2fff267c:	2fffcdd0 	.word	0x2fffcdd0

2fff2680 <bsec_shadow_register>:
2fff2680:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2fff2682:	f10d 0107 	add.w	r1, sp, #7
2fff2686:	4605      	mov	r5, r0
2fff2688:	f7ff ffde 	bl	2fff2648 <bsec_read_sr_lock>
2fff268c:	4604      	mov	r4, r0
2fff268e:	b138      	cbz	r0, 2fff26a0 <bsec_shadow_register+0x20>
2fff2690:	4602      	mov	r2, r0
2fff2692:	4629      	mov	r1, r5
2fff2694:	4817      	ldr	r0, [pc, #92]	; (2fff26f4 <bsec_shadow_register+0x74>)
2fff2696:	f7fe fa73 	bl	2fff0b80 <tf_log>
2fff269a:	4620      	mov	r0, r4
2fff269c:	b003      	add	sp, #12
2fff269e:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff26a0:	f7ff ff44 	bl	2fff252c <bsec_get_status>
2fff26a4:	0683      	lsls	r3, r0, #26
2fff26a6:	d422      	bmi.n	2fff26ee <bsec_shadow_register+0x6e>
2fff26a8:	2001      	movs	r0, #1
2fff26aa:	f7ff ff45 	bl	2fff2538 <bsec_power_safmem>
2fff26ae:	4604      	mov	r4, r0
2fff26b0:	2800      	cmp	r0, #0
2fff26b2:	d1f2      	bne.n	2fff269a <bsec_shadow_register+0x1a>
2fff26b4:	2601      	movs	r6, #1
2fff26b6:	f7ff fe7d 	bl	2fff23b4 <bsec_lock>
2fff26ba:	4b0f      	ldr	r3, [pc, #60]	; (2fff26f8 <bsec_shadow_register+0x78>)
2fff26bc:	681b      	ldr	r3, [r3, #0]
2fff26be:	605d      	str	r5, [r3, #4]
2fff26c0:	f7ff ff34 	bl	2fff252c <bsec_get_status>
2fff26c4:	f010 0708 	ands.w	r7, r0, #8
2fff26c8:	d1fa      	bne.n	2fff26c0 <bsec_shadow_register+0x40>
2fff26ca:	2101      	movs	r1, #1
2fff26cc:	4628      	mov	r0, r5
2fff26ce:	f7ff fe95 	bl	2fff23fc <bsec_check_error>
2fff26d2:	4604      	mov	r4, r0
2fff26d4:	f7ff fe7a 	bl	2fff23cc <bsec_unlock>
2fff26d8:	2e00      	cmp	r6, #0
2fff26da:	d0de      	beq.n	2fff269a <bsec_shadow_register+0x1a>
2fff26dc:	4638      	mov	r0, r7
2fff26de:	f7ff ff2b 	bl	2fff2538 <bsec_power_safmem>
2fff26e2:	2800      	cmp	r0, #0
2fff26e4:	d0d9      	beq.n	2fff269a <bsec_shadow_register+0x1a>
2fff26e6:	f7fe faed 	bl	2fff0cc4 <console_flush>
2fff26ea:	f004 eb22 	blx	2fff6d30 <do_panic>
2fff26ee:	4626      	mov	r6, r4
2fff26f0:	e7e1      	b.n	2fff26b6 <bsec_shadow_register+0x36>
2fff26f2:	bf00      	nop
2fff26f4:	2fff97fd 	.word	0x2fff97fd
2fff26f8:	2fffcdd0 	.word	0x2fffcdd0

2fff26fc <bsec_probe>:
2fff26fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2fff2700:	b086      	sub	sp, #24
2fff2702:	a801      	add	r0, sp, #4
2fff2704:	f003 fddc 	bl	2fff62c0 <fdt_get_address>
2fff2708:	b918      	cbnz	r0, 2fff2712 <bsec_probe+0x16>
2fff270a:	f7fe fadb 	bl	2fff0cc4 <console_flush>
2fff270e:	f004 eb10 	blx	2fff6d30 <do_panic>
2fff2712:	4a39      	ldr	r2, [pc, #228]	; (2fff27f8 <bsec_probe+0xfc>)
2fff2714:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2fff2718:	a802      	add	r0, sp, #8
2fff271a:	f003 febb 	bl	2fff6494 <dt_get_node>
2fff271e:	1e01      	subs	r1, r0, #0
2fff2720:	dbf3      	blt.n	2fff270a <bsec_probe+0xe>
2fff2722:	4b36      	ldr	r3, [pc, #216]	; (2fff27fc <bsec_probe+0x100>)
2fff2724:	9a02      	ldr	r2, [sp, #8]
2fff2726:	601a      	str	r2, [r3, #0]
2fff2728:	f7ff ff7e 	bl	2fff2628 <bsec_get_version>
2fff272c:	b2c0      	uxtb	r0, r0
2fff272e:	2811      	cmp	r0, #17
2fff2730:	d1eb      	bne.n	2fff270a <bsec_probe+0xe>
2fff2732:	f7ff ff81 	bl	2fff2638 <bsec_get_id>
2fff2736:	4b32      	ldr	r3, [pc, #200]	; (2fff2800 <bsec_probe+0x104>)
2fff2738:	4298      	cmp	r0, r3
2fff273a:	d1e6      	bne.n	2fff270a <bsec_probe+0xe>
2fff273c:	9f01      	ldr	r7, [sp, #4]
2fff273e:	f8df 90d0 	ldr.w	r9, [pc, #208]	; 2fff2810 <bsec_probe+0x114>
2fff2742:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 2fff2814 <bsec_probe+0x118>
2fff2746:	4638      	mov	r0, r7
2fff2748:	f005 f80f 	bl	2fff776a <fdt_first_subnode>
2fff274c:	4606      	mov	r6, r0
2fff274e:	2e00      	cmp	r6, #0
2fff2750:	da03      	bge.n	2fff275a <bsec_probe+0x5e>
2fff2752:	2000      	movs	r0, #0
2fff2754:	b006      	add	sp, #24
2fff2756:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff275a:	2300      	movs	r3, #0
2fff275c:	464a      	mov	r2, r9
2fff275e:	4631      	mov	r1, r6
2fff2760:	4638      	mov	r0, r7
2fff2762:	f005 f984 	bl	2fff7a6e <fdt_getprop>
2fff2766:	4603      	mov	r3, r0
2fff2768:	2800      	cmp	r0, #0
2fff276a:	d0ce      	beq.n	2fff270a <bsec_probe+0xe>
2fff276c:	6800      	ldr	r0, [r0, #0]
2fff276e:	f7ff fe1f 	bl	2fff23b0 <fdt32_to_cpu>
2fff2772:	4605      	mov	r5, r0
2fff2774:	6858      	ldr	r0, [r3, #4]
2fff2776:	08ac      	lsrs	r4, r5, #2
2fff2778:	f7ff fe1a 	bl	2fff23b0 <fdt32_to_cpu>
2fff277c:	2c1f      	cmp	r4, #31
2fff277e:	4682      	mov	sl, r0
2fff2780:	d813      	bhi.n	2fff27aa <bsec_probe+0xae>
2fff2782:	4405      	add	r5, r0
2fff2784:	1e6b      	subs	r3, r5, #1
2fff2786:	f043 0303 	orr.w	r3, r3, #3
2fff278a:	3301      	adds	r3, #1
2fff278c:	2b83      	cmp	r3, #131	; 0x83
2fff278e:	d805      	bhi.n	2fff279c <bsec_probe+0xa0>
2fff2790:	4631      	mov	r1, r6
2fff2792:	4638      	mov	r0, r7
2fff2794:	f004 fffd 	bl	2fff7792 <fdt_next_subnode>
2fff2798:	4606      	mov	r6, r0
2fff279a:	e7d8      	b.n	2fff274e <bsec_probe+0x52>
2fff279c:	4819      	ldr	r0, [pc, #100]	; (2fff2804 <bsec_probe+0x108>)
2fff279e:	f1a5 0a80 	sub.w	sl, r5, #128	; 0x80
2fff27a2:	2420      	movs	r4, #32
2fff27a4:	2580      	movs	r5, #128	; 0x80
2fff27a6:	f7fe f9eb 	bl	2fff0b80 <tf_log>
2fff27aa:	4a17      	ldr	r2, [pc, #92]	; (2fff2808 <bsec_probe+0x10c>)
2fff27ac:	2300      	movs	r3, #0
2fff27ae:	4631      	mov	r1, r6
2fff27b0:	4638      	mov	r0, r7
2fff27b2:	f005 f95c 	bl	2fff7a6e <fdt_getprop>
2fff27b6:	2800      	cmp	r0, #0
2fff27b8:	d0ea      	beq.n	2fff2790 <bsec_probe+0x94>
2fff27ba:	ea45 030a 	orr.w	r3, r5, sl
2fff27be:	079b      	lsls	r3, r3, #30
2fff27c0:	d003      	beq.n	2fff27ca <bsec_probe+0xce>
2fff27c2:	4812      	ldr	r0, [pc, #72]	; (2fff280c <bsec_probe+0x110>)
2fff27c4:	f7fe f9dc 	bl	2fff0b80 <tf_log>
2fff27c8:	e79f      	b.n	2fff270a <bsec_probe+0xe>
2fff27ca:	eb04 059a 	add.w	r5, r4, sl, lsr #2
2fff27ce:	f04f 0a01 	mov.w	sl, #1
2fff27d2:	42ac      	cmp	r4, r5
2fff27d4:	d2dc      	bcs.n	2fff2790 <bsec_probe+0x94>
2fff27d6:	0961      	lsrs	r1, r4, #5
2fff27d8:	f004 031f 	and.w	r3, r4, #31
2fff27dc:	4620      	mov	r0, r4
2fff27de:	f858 2021 	ldr.w	r2, [r8, r1, lsl #2]
2fff27e2:	fa0a f303 	lsl.w	r3, sl, r3
2fff27e6:	4313      	orrs	r3, r2
2fff27e8:	f848 3021 	str.w	r3, [r8, r1, lsl #2]
2fff27ec:	f7ff ff48 	bl	2fff2680 <bsec_shadow_register>
2fff27f0:	2800      	cmp	r0, #0
2fff27f2:	d18a      	bne.n	2fff270a <bsec_probe+0xe>
2fff27f4:	3401      	adds	r4, #1
2fff27f6:	e7ec      	b.n	2fff27d2 <bsec_probe+0xd6>
2fff27f8:	2fff96f3 	.word	0x2fff96f3
2fff27fc:	2fffcdd0 	.word	0x2fffcdd0
2fff2800:	00100032 	.word	0x00100032
2fff2804:	2fff9705 	.word	0x2fff9705
2fff2808:	2fff9728 	.word	0x2fff9728
2fff280c:	2fff973a 	.word	0x2fff973a
2fff2810:	2fff8b39 	.word	0x2fff8b39
2fff2814:	2fffcdd8 	.word	0x2fffcdd8

2fff2818 <bsec_read_sw_lock>:
2fff2818:	b538      	push	{r3, r4, r5, lr}
2fff281a:	4604      	mov	r4, r0
2fff281c:	460d      	mov	r5, r1
2fff281e:	f7ff fde1 	bl	2fff23e4 <otp_bank_offset>
2fff2822:	2c5f      	cmp	r4, #95	; 0x5f
2fff2824:	d80e      	bhi.n	2fff2844 <bsec_read_sw_lock+0x2c>
2fff2826:	4b09      	ldr	r3, [pc, #36]	; (2fff284c <bsec_read_sw_lock+0x34>)
2fff2828:	f004 041f 	and.w	r4, r4, #31
2fff282c:	681b      	ldr	r3, [r3, #0]
2fff282e:	337c      	adds	r3, #124	; 0x7c
2fff2830:	581a      	ldr	r2, [r3, r0]
2fff2832:	2301      	movs	r3, #1
2fff2834:	2000      	movs	r0, #0
2fff2836:	fa03 f404 	lsl.w	r4, r3, r4
2fff283a:	4214      	tst	r4, r2
2fff283c:	bf08      	it	eq
2fff283e:	2300      	moveq	r3, #0
2fff2840:	702b      	strb	r3, [r5, #0]
2fff2842:	bd38      	pop	{r3, r4, r5, pc}
2fff2844:	f06f 0003 	mvn.w	r0, #3
2fff2848:	e7fb      	b.n	2fff2842 <bsec_read_sw_lock+0x2a>
2fff284a:	bf00      	nop
2fff284c:	2fffcdd0 	.word	0x2fffcdd0

2fff2850 <bsec_write_otp>:
2fff2850:	b573      	push	{r0, r1, r4, r5, r6, lr}
2fff2852:	460d      	mov	r5, r1
2fff2854:	4606      	mov	r6, r0
2fff2856:	f10d 0107 	add.w	r1, sp, #7
2fff285a:	4628      	mov	r0, r5
2fff285c:	f7ff ffdc 	bl	2fff2818 <bsec_read_sw_lock>
2fff2860:	4604      	mov	r4, r0
2fff2862:	b138      	cbz	r0, 2fff2874 <bsec_write_otp+0x24>
2fff2864:	4602      	mov	r2, r0
2fff2866:	4629      	mov	r1, r5
2fff2868:	4808      	ldr	r0, [pc, #32]	; (2fff288c <bsec_write_otp+0x3c>)
2fff286a:	f7fe f989 	bl	2fff0b80 <tf_log>
2fff286e:	4620      	mov	r0, r4
2fff2870:	b002      	add	sp, #8
2fff2872:	bd70      	pop	{r4, r5, r6, pc}
2fff2874:	f7ff fd9e 	bl	2fff23b4 <bsec_lock>
2fff2878:	4b05      	ldr	r3, [pc, #20]	; (2fff2890 <bsec_write_otp+0x40>)
2fff287a:	681b      	ldr	r3, [r3, #0]
2fff287c:	f503 7300 	add.w	r3, r3, #512	; 0x200
2fff2880:	f843 6025 	str.w	r6, [r3, r5, lsl #2]
2fff2884:	f7ff fda2 	bl	2fff23cc <bsec_unlock>
2fff2888:	e7f1      	b.n	2fff286e <bsec_write_otp+0x1e>
2fff288a:	bf00      	nop
2fff288c:	2fff9826 	.word	0x2fff9826
2fff2890:	2fffcdd0 	.word	0x2fffcdd0

2fff2894 <bsec_read_sp_lock>:
2fff2894:	b538      	push	{r3, r4, r5, lr}
2fff2896:	4604      	mov	r4, r0
2fff2898:	460d      	mov	r5, r1
2fff289a:	f7ff fda3 	bl	2fff23e4 <otp_bank_offset>
2fff289e:	2c5f      	cmp	r4, #95	; 0x5f
2fff28a0:	d80e      	bhi.n	2fff28c0 <bsec_read_sp_lock+0x2c>
2fff28a2:	4b09      	ldr	r3, [pc, #36]	; (2fff28c8 <bsec_read_sp_lock+0x34>)
2fff28a4:	f004 041f 	and.w	r4, r4, #31
2fff28a8:	681b      	ldr	r3, [r3, #0]
2fff28aa:	3364      	adds	r3, #100	; 0x64
2fff28ac:	581a      	ldr	r2, [r3, r0]
2fff28ae:	2301      	movs	r3, #1
2fff28b0:	2000      	movs	r0, #0
2fff28b2:	fa03 f404 	lsl.w	r4, r3, r4
2fff28b6:	4214      	tst	r4, r2
2fff28b8:	bf08      	it	eq
2fff28ba:	2300      	moveq	r3, #0
2fff28bc:	702b      	strb	r3, [r5, #0]
2fff28be:	bd38      	pop	{r3, r4, r5, pc}
2fff28c0:	f06f 0003 	mvn.w	r0, #3
2fff28c4:	e7fb      	b.n	2fff28be <bsec_read_sp_lock+0x2a>
2fff28c6:	bf00      	nop
2fff28c8:	2fffcdd0 	.word	0x2fffcdd0

2fff28cc <bsec_read_permanent_lock>:
2fff28cc:	b538      	push	{r3, r4, r5, lr}
2fff28ce:	4604      	mov	r4, r0
2fff28d0:	460d      	mov	r5, r1
2fff28d2:	f7ff fd87 	bl	2fff23e4 <otp_bank_offset>
2fff28d6:	2c5f      	cmp	r4, #95	; 0x5f
2fff28d8:	d80e      	bhi.n	2fff28f8 <bsec_read_permanent_lock+0x2c>
2fff28da:	4b09      	ldr	r3, [pc, #36]	; (2fff2900 <bsec_read_permanent_lock+0x34>)
2fff28dc:	f004 041f 	and.w	r4, r4, #31
2fff28e0:	681b      	ldr	r3, [r3, #0]
2fff28e2:	334c      	adds	r3, #76	; 0x4c
2fff28e4:	581a      	ldr	r2, [r3, r0]
2fff28e6:	2301      	movs	r3, #1
2fff28e8:	2000      	movs	r0, #0
2fff28ea:	fa03 f404 	lsl.w	r4, r3, r4
2fff28ee:	4214      	tst	r4, r2
2fff28f0:	bf08      	it	eq
2fff28f2:	2300      	moveq	r3, #0
2fff28f4:	702b      	strb	r3, [r5, #0]
2fff28f6:	bd38      	pop	{r3, r4, r5, pc}
2fff28f8:	f06f 0003 	mvn.w	r0, #3
2fff28fc:	e7fb      	b.n	2fff28f6 <bsec_read_permanent_lock+0x2a>
2fff28fe:	bf00      	nop
2fff2900:	2fffcdd0 	.word	0x2fffcdd0

2fff2904 <bsec_program_otp>:
2fff2904:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2fff2908:	460d      	mov	r5, r1
2fff290a:	4680      	mov	r8, r0
2fff290c:	f10d 0106 	add.w	r1, sp, #6
2fff2910:	4628      	mov	r0, r5
2fff2912:	f7ff ffbf 	bl	2fff2894 <bsec_read_sp_lock>
2fff2916:	4604      	mov	r4, r0
2fff2918:	b140      	cbz	r0, 2fff292c <bsec_program_otp+0x28>
2fff291a:	4602      	mov	r2, r0
2fff291c:	4629      	mov	r1, r5
2fff291e:	482b      	ldr	r0, [pc, #172]	; (2fff29cc <bsec_program_otp+0xc8>)
2fff2920:	f7fe f92e 	bl	2fff0b80 <tf_log>
2fff2924:	4620      	mov	r0, r4
2fff2926:	b002      	add	sp, #8
2fff2928:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff292c:	f10d 0107 	add.w	r1, sp, #7
2fff2930:	4628      	mov	r0, r5
2fff2932:	f7ff ffcb 	bl	2fff28cc <bsec_read_permanent_lock>
2fff2936:	4604      	mov	r4, r0
2fff2938:	b118      	cbz	r0, 2fff2942 <bsec_program_otp+0x3e>
2fff293a:	4602      	mov	r2, r0
2fff293c:	4629      	mov	r1, r5
2fff293e:	4824      	ldr	r0, [pc, #144]	; (2fff29d0 <bsec_program_otp+0xcc>)
2fff2940:	e7ee      	b.n	2fff2920 <bsec_program_otp+0x1c>
2fff2942:	f89d 3006 	ldrb.w	r3, [sp, #6]
2fff2946:	b913      	cbnz	r3, 2fff294e <bsec_program_otp+0x4a>
2fff2948:	f89d 7007 	ldrb.w	r7, [sp, #7]
2fff294c:	b12f      	cbz	r7, 2fff295a <bsec_program_otp+0x56>
2fff294e:	4821      	ldr	r0, [pc, #132]	; (2fff29d4 <bsec_program_otp+0xd0>)
2fff2950:	f06f 0404 	mvn.w	r4, #4
2fff2954:	f7fe f914 	bl	2fff0b80 <tf_log>
2fff2958:	e7e4      	b.n	2fff2924 <bsec_program_otp+0x20>
2fff295a:	4e1f      	ldr	r6, [pc, #124]	; (2fff29d8 <bsec_program_otp+0xd4>)
2fff295c:	6832      	ldr	r2, [r6, #0]
2fff295e:	6912      	ldr	r2, [r2, #16]
2fff2960:	0710      	lsls	r0, r2, #28
2fff2962:	d502      	bpl.n	2fff296a <bsec_program_otp+0x66>
2fff2964:	481d      	ldr	r0, [pc, #116]	; (2fff29dc <bsec_program_otp+0xd8>)
2fff2966:	f7fe f90b 	bl	2fff0b80 <tf_log>
2fff296a:	f7ff fddf 	bl	2fff252c <bsec_get_status>
2fff296e:	0681      	lsls	r1, r0, #26
2fff2970:	d406      	bmi.n	2fff2980 <bsec_program_otp+0x7c>
2fff2972:	2001      	movs	r0, #1
2fff2974:	f7ff fde0 	bl	2fff2538 <bsec_power_safmem>
2fff2978:	4604      	mov	r4, r0
2fff297a:	2800      	cmp	r0, #0
2fff297c:	d1d2      	bne.n	2fff2924 <bsec_program_otp+0x20>
2fff297e:	2701      	movs	r7, #1
2fff2980:	f7ff fd18 	bl	2fff23b4 <bsec_lock>
2fff2984:	6833      	ldr	r3, [r6, #0]
2fff2986:	f445 7280 	orr.w	r2, r5, #256	; 0x100
2fff298a:	f8c3 8008 	str.w	r8, [r3, #8]
2fff298e:	605a      	str	r2, [r3, #4]
2fff2990:	f7ff fdcc 	bl	2fff252c <bsec_get_status>
2fff2994:	0702      	lsls	r2, r0, #28
2fff2996:	d4fb      	bmi.n	2fff2990 <bsec_program_otp+0x8c>
2fff2998:	f7ff fdc8 	bl	2fff252c <bsec_get_status>
2fff299c:	06c3      	lsls	r3, r0, #27
2fff299e:	d411      	bmi.n	2fff29c4 <bsec_program_otp+0xc0>
2fff29a0:	2101      	movs	r1, #1
2fff29a2:	4628      	mov	r0, r5
2fff29a4:	f7ff fd2a 	bl	2fff23fc <bsec_check_error>
2fff29a8:	4604      	mov	r4, r0
2fff29aa:	f7ff fd0f 	bl	2fff23cc <bsec_unlock>
2fff29ae:	2f00      	cmp	r7, #0
2fff29b0:	d0b8      	beq.n	2fff2924 <bsec_program_otp+0x20>
2fff29b2:	2000      	movs	r0, #0
2fff29b4:	f7ff fdc0 	bl	2fff2538 <bsec_power_safmem>
2fff29b8:	2800      	cmp	r0, #0
2fff29ba:	d0b3      	beq.n	2fff2924 <bsec_program_otp+0x20>
2fff29bc:	f7fe f982 	bl	2fff0cc4 <console_flush>
2fff29c0:	f004 e9b6 	blx	2fff6d30 <do_panic>
2fff29c4:	f06f 0404 	mvn.w	r4, #4
2fff29c8:	e7ef      	b.n	2fff29aa <bsec_program_otp+0xa6>
2fff29ca:	bf00      	nop
2fff29cc:	2fff9755 	.word	0x2fff9755
2fff29d0:	2fff977e 	.word	0x2fff977e
2fff29d4:	2fff97a5 	.word	0x2fff97a5
2fff29d8:	2fffcdd0 	.word	0x2fffcdd0
2fff29dc:	2fff97ce 	.word	0x2fff97ce

2fff29e0 <bsec_check_nsec_access_rights>:
2fff29e0:	285f      	cmp	r0, #95	; 0x5f
2fff29e2:	d810      	bhi.n	2fff2a06 <bsec_check_nsec_access_rights+0x26>
2fff29e4:	281f      	cmp	r0, #31
2fff29e6:	d911      	bls.n	2fff2a0c <bsec_check_nsec_access_rights+0x2c>
2fff29e8:	0942      	lsrs	r2, r0, #5
2fff29ea:	2301      	movs	r3, #1
2fff29ec:	f000 001f 	and.w	r0, r0, #31
2fff29f0:	fa03 f000 	lsl.w	r0, r3, r0
2fff29f4:	4b06      	ldr	r3, [pc, #24]	; (2fff2a10 <bsec_check_nsec_access_rights+0x30>)
2fff29f6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
2fff29fa:	4218      	tst	r0, r3
2fff29fc:	bf0c      	ite	eq
2fff29fe:	f04f 30ff 	moveq.w	r0, #4294967295	; 0xffffffff
2fff2a02:	2000      	movne	r0, #0
2fff2a04:	4770      	bx	lr
2fff2a06:	f06f 0003 	mvn.w	r0, #3
2fff2a0a:	4770      	bx	lr
2fff2a0c:	2000      	movs	r0, #0
2fff2a0e:	4770      	bx	lr
2fff2a10:	2fffcdd8 	.word	0x2fffcdd8

2fff2a14 <fdt_osc_read_freq>:
2fff2a14:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2fff2a16:	4607      	mov	r7, r0
2fff2a18:	4668      	mov	r0, sp
2fff2a1a:	460e      	mov	r6, r1
2fff2a1c:	f003 fc50 	bl	2fff62c0 <fdt_get_address>
2fff2a20:	2800      	cmp	r0, #0
2fff2a22:	d03d      	beq.n	2fff2aa0 <fdt_osc_read_freq+0x8c>
2fff2a24:	4921      	ldr	r1, [pc, #132]	; (2fff2aac <fdt_osc_read_freq+0x98>)
2fff2a26:	9800      	ldr	r0, [sp, #0]
2fff2a28:	f005 f8ae 	bl	2fff7b88 <fdt_path_offset>
2fff2a2c:	1e01      	subs	r1, r0, #0
2fff2a2e:	db3a      	blt.n	2fff2aa6 <fdt_osc_read_freq+0x92>
2fff2a30:	9800      	ldr	r0, [sp, #0]
2fff2a32:	f004 fe9a 	bl	2fff776a <fdt_first_subnode>
2fff2a36:	2800      	cmp	r0, #0
2fff2a38:	4605      	mov	r5, r0
2fff2a3a:	da02      	bge.n	2fff2a42 <fdt_osc_read_freq+0x2e>
2fff2a3c:	2400      	movs	r4, #0
2fff2a3e:	6034      	str	r4, [r6, #0]
2fff2a40:	e006      	b.n	2fff2a50 <fdt_osc_read_freq+0x3c>
2fff2a42:	9800      	ldr	r0, [sp, #0]
2fff2a44:	aa01      	add	r2, sp, #4
2fff2a46:	4629      	mov	r1, r5
2fff2a48:	f004 ff1c 	bl	2fff7884 <fdt_get_name>
2fff2a4c:	b918      	cbnz	r0, 2fff2a56 <fdt_osc_read_freq+0x42>
2fff2a4e:	9c01      	ldr	r4, [sp, #4]
2fff2a50:	4620      	mov	r0, r4
2fff2a52:	b003      	add	sp, #12
2fff2a54:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff2a56:	9a01      	ldr	r2, [sp, #4]
2fff2a58:	4639      	mov	r1, r7
2fff2a5a:	f005 fb57 	bl	2fff810c <strncmp>
2fff2a5e:	4604      	mov	r4, r0
2fff2a60:	b9c8      	cbnz	r0, 2fff2a96 <fdt_osc_read_freq+0x82>
2fff2a62:	4628      	mov	r0, r5
2fff2a64:	f003 fc38 	bl	2fff62d8 <fdt_get_status>
2fff2a68:	b1a8      	cbz	r0, 2fff2a96 <fdt_osc_read_freq+0x82>
2fff2a6a:	4a11      	ldr	r2, [pc, #68]	; (2fff2ab0 <fdt_osc_read_freq+0x9c>)
2fff2a6c:	ab01      	add	r3, sp, #4
2fff2a6e:	9800      	ldr	r0, [sp, #0]
2fff2a70:	4629      	mov	r1, r5
2fff2a72:	f004 fffc 	bl	2fff7a6e <fdt_getprop>
2fff2a76:	2800      	cmp	r0, #0
2fff2a78:	d0e9      	beq.n	2fff2a4e <fdt_osc_read_freq+0x3a>
2fff2a7a:	6802      	ldr	r2, [r0, #0]
2fff2a7c:	0e13      	lsrs	r3, r2, #24
2fff2a7e:	f3c2 2107 	ubfx	r1, r2, #8, #8
2fff2a82:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
2fff2a86:	f3c2 4207 	ubfx	r2, r2, #16, #8
2fff2a8a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
2fff2a8e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2fff2a92:	6033      	str	r3, [r6, #0]
2fff2a94:	e7dc      	b.n	2fff2a50 <fdt_osc_read_freq+0x3c>
2fff2a96:	9800      	ldr	r0, [sp, #0]
2fff2a98:	4629      	mov	r1, r5
2fff2a9a:	f004 fe7a 	bl	2fff7792 <fdt_next_subnode>
2fff2a9e:	e7ca      	b.n	2fff2a36 <fdt_osc_read_freq+0x22>
2fff2aa0:	f06f 0401 	mvn.w	r4, #1
2fff2aa4:	e7d4      	b.n	2fff2a50 <fdt_osc_read_freq+0x3c>
2fff2aa6:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff2aaa:	e7d1      	b.n	2fff2a50 <fdt_osc_read_freq+0x3c>
2fff2aac:	2fff9884 	.word	0x2fff9884
2fff2ab0:	2fff988c 	.word	0x2fff988c

2fff2ab4 <fdt_get_rcc_node>:
2fff2ab4:	4801      	ldr	r0, [pc, #4]	; (2fff2abc <fdt_get_rcc_node+0x8>)
2fff2ab6:	f003 bd0f 	b.w	2fff64d8 <dt_get_node_by_compatible>
2fff2aba:	bf00      	nop
2fff2abc:	2fff9874 	.word	0x2fff9874

2fff2ac0 <fdt_rcc_read_uint32_default>:
2fff2ac0:	b538      	push	{r3, r4, r5, lr}
2fff2ac2:	4605      	mov	r5, r0
2fff2ac4:	460c      	mov	r4, r1
2fff2ac6:	f7ff fff5 	bl	2fff2ab4 <fdt_get_rcc_node>
2fff2aca:	2800      	cmp	r0, #0
2fff2acc:	db05      	blt.n	2fff2ada <fdt_rcc_read_uint32_default+0x1a>
2fff2ace:	4622      	mov	r2, r4
2fff2ad0:	4629      	mov	r1, r5
2fff2ad2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff2ad6:	f003 bc5f 	b.w	2fff6398 <fdt_read_uint32_default>
2fff2ada:	4620      	mov	r0, r4
2fff2adc:	bd38      	pop	{r3, r4, r5, pc}

2fff2ade <fdt_rcc_read_prop>:
2fff2ade:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff2ae0:	4605      	mov	r5, r0
2fff2ae2:	a801      	add	r0, sp, #4
2fff2ae4:	460c      	mov	r4, r1
2fff2ae6:	f003 fbeb 	bl	2fff62c0 <fdt_get_address>
2fff2aea:	b910      	cbnz	r0, 2fff2af2 <fdt_rcc_read_prop+0x14>
2fff2aec:	2000      	movs	r0, #0
2fff2aee:	b003      	add	sp, #12
2fff2af0:	bd30      	pop	{r4, r5, pc}
2fff2af2:	f7ff ffdf 	bl	2fff2ab4 <fdt_get_rcc_node>
2fff2af6:	1e01      	subs	r1, r0, #0
2fff2af8:	dbf8      	blt.n	2fff2aec <fdt_rcc_read_prop+0xe>
2fff2afa:	9801      	ldr	r0, [sp, #4]
2fff2afc:	466b      	mov	r3, sp
2fff2afe:	462a      	mov	r2, r5
2fff2b00:	f004 ffb5 	bl	2fff7a6e <fdt_getprop>
2fff2b04:	2800      	cmp	r0, #0
2fff2b06:	d0f2      	beq.n	2fff2aee <fdt_rcc_read_prop+0x10>
2fff2b08:	9b00      	ldr	r3, [sp, #0]
2fff2b0a:	6023      	str	r3, [r4, #0]
2fff2b0c:	e7ef      	b.n	2fff2aee <fdt_rcc_read_prop+0x10>

2fff2b0e <fdt_rcc_enable_it>:
2fff2b0e:	b510      	push	{r4, lr}
2fff2b10:	4604      	mov	r4, r0
2fff2b12:	f7ff ffcf 	bl	2fff2ab4 <fdt_get_rcc_node>
2fff2b16:	2800      	cmp	r0, #0
2fff2b18:	db04      	blt.n	2fff2b24 <fdt_rcc_enable_it+0x16>
2fff2b1a:	4621      	mov	r1, r4
2fff2b1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff2b20:	f7fc bee6 	b.w	2ffef8f0 <stm32_gic_enable_spi>
2fff2b24:	f06f 0012 	mvn.w	r0, #18
2fff2b28:	bd10      	pop	{r4, pc}
	...

2fff2b2c <fdt_get_clock_id>:
2fff2b2c:	b513      	push	{r0, r1, r4, lr}
2fff2b2e:	4604      	mov	r4, r0
2fff2b30:	a801      	add	r0, sp, #4
2fff2b32:	f003 fbc5 	bl	2fff62c0 <fdt_get_address>
2fff2b36:	b1a0      	cbz	r0, 2fff2b62 <fdt_get_clock_id+0x36>
2fff2b38:	4a0d      	ldr	r2, [pc, #52]	; (2fff2b70 <fdt_get_clock_id+0x44>)
2fff2b3a:	2300      	movs	r3, #0
2fff2b3c:	9801      	ldr	r0, [sp, #4]
2fff2b3e:	4621      	mov	r1, r4
2fff2b40:	f004 ff95 	bl	2fff7a6e <fdt_getprop>
2fff2b44:	b180      	cbz	r0, 2fff2b68 <fdt_get_clock_id+0x3c>
2fff2b46:	6843      	ldr	r3, [r0, #4]
2fff2b48:	0e18      	lsrs	r0, r3, #24
2fff2b4a:	f3c3 2207 	ubfx	r2, r3, #8, #8
2fff2b4e:	ea40 6003 	orr.w	r0, r0, r3, lsl #24
2fff2b52:	f3c3 4307 	ubfx	r3, r3, #16, #8
2fff2b56:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
2fff2b5a:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
2fff2b5e:	b002      	add	sp, #8
2fff2b60:	bd10      	pop	{r4, pc}
2fff2b62:	f06f 0001 	mvn.w	r0, #1
2fff2b66:	e7fa      	b.n	2fff2b5e <fdt_get_clock_id+0x32>
2fff2b68:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff2b6c:	e7f7      	b.n	2fff2b5e <fdt_get_clock_id+0x32>
2fff2b6e:	bf00      	nop
2fff2b70:	2fff9885 	.word	0x2fff9885

2fff2b74 <fdt_get_clock_id_by_name>:
2fff2b74:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff2b76:	4605      	mov	r5, r0
2fff2b78:	4668      	mov	r0, sp
2fff2b7a:	460c      	mov	r4, r1
2fff2b7c:	f003 fba0 	bl	2fff62c0 <fdt_get_address>
2fff2b80:	b318      	cbz	r0, 2fff2bca <fdt_get_clock_id_by_name+0x56>
2fff2b82:	4a16      	ldr	r2, [pc, #88]	; (2fff2bdc <fdt_get_clock_id_by_name+0x68>)
2fff2b84:	4623      	mov	r3, r4
2fff2b86:	9800      	ldr	r0, [sp, #0]
2fff2b88:	4629      	mov	r1, r5
2fff2b8a:	f005 f8a6 	bl	2fff7cda <fdt_stringlist_search>
2fff2b8e:	1e04      	subs	r4, r0, #0
2fff2b90:	db18      	blt.n	2fff2bc4 <fdt_get_clock_id_by_name+0x50>
2fff2b92:	4a13      	ldr	r2, [pc, #76]	; (2fff2be0 <fdt_get_clock_id_by_name+0x6c>)
2fff2b94:	ab01      	add	r3, sp, #4
2fff2b96:	9800      	ldr	r0, [sp, #0]
2fff2b98:	4629      	mov	r1, r5
2fff2b9a:	f004 ff68 	bl	2fff7a6e <fdt_getprop>
2fff2b9e:	b1b8      	cbz	r0, 2fff2bd0 <fdt_get_clock_id_by_name+0x5c>
2fff2ba0:	9b01      	ldr	r3, [sp, #4]
2fff2ba2:	ebb3 0f84 	cmp.w	r3, r4, lsl #2
2fff2ba6:	db16      	blt.n	2fff2bd6 <fdt_get_clock_id_by_name+0x62>
2fff2ba8:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
2fff2bac:	6840      	ldr	r0, [r0, #4]
2fff2bae:	0e04      	lsrs	r4, r0, #24
2fff2bb0:	f3c0 2307 	ubfx	r3, r0, #8, #8
2fff2bb4:	ea44 6400 	orr.w	r4, r4, r0, lsl #24
2fff2bb8:	f3c0 4007 	ubfx	r0, r0, #16, #8
2fff2bbc:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
2fff2bc0:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
2fff2bc4:	4620      	mov	r0, r4
2fff2bc6:	b003      	add	sp, #12
2fff2bc8:	bd30      	pop	{r4, r5, pc}
2fff2bca:	f06f 0401 	mvn.w	r4, #1
2fff2bce:	e7f9      	b.n	2fff2bc4 <fdt_get_clock_id_by_name+0x50>
2fff2bd0:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff2bd4:	e7f6      	b.n	2fff2bc4 <fdt_get_clock_id_by_name+0x50>
2fff2bd6:	f06f 040e 	mvn.w	r4, #14
2fff2bda:	e7f3      	b.n	2fff2bc4 <fdt_get_clock_id_by_name+0x50>
2fff2bdc:	2fff9868 	.word	0x2fff9868
2fff2be0:	2fff9885 	.word	0x2fff9885

2fff2be4 <stm32mp_stgen_get_counter>:
2fff2be4:	4b02      	ldr	r3, [pc, #8]	; (2fff2bf0 <stm32mp_stgen_get_counter+0xc>)
2fff2be6:	6819      	ldr	r1, [r3, #0]
2fff2be8:	f853 0c04 	ldr.w	r0, [r3, #-4]
2fff2bec:	4770      	bx	lr
2fff2bee:	bf00      	nop
2fff2bf0:	5c00800c 	.word	0x5c00800c

2fff2bf4 <stm32mp_stgen_restore_counter>:
2fff2bf4:	b570      	push	{r4, r5, r6, lr}
2fff2bf6:	460d      	mov	r5, r1
2fff2bf8:	490d      	ldr	r1, [pc, #52]	; (2fff2c30 <stm32mp_stgen_restore_counter+0x3c>)
2fff2bfa:	4604      	mov	r4, r0
2fff2bfc:	680e      	ldr	r6, [r1, #0]
2fff2bfe:	fba6 0102 	umull	r0, r1, r6, r2
2fff2c02:	fb06 1103 	mla	r1, r6, r3, r1
2fff2c06:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
2fff2c0a:	2300      	movs	r3, #0
2fff2c0c:	f004 ea2e 	blx	2fff706c <__aeabi_uldivmod>
2fff2c10:	4b08      	ldr	r3, [pc, #32]	; (2fff2c34 <stm32mp_stgen_restore_counter+0x40>)
2fff2c12:	1900      	adds	r0, r0, r4
2fff2c14:	681a      	ldr	r2, [r3, #0]
2fff2c16:	eb45 0101 	adc.w	r1, r5, r1
2fff2c1a:	f022 0201 	bic.w	r2, r2, #1
2fff2c1e:	601a      	str	r2, [r3, #0]
2fff2c20:	4a05      	ldr	r2, [pc, #20]	; (2fff2c38 <stm32mp_stgen_restore_counter+0x44>)
2fff2c22:	6010      	str	r0, [r2, #0]
2fff2c24:	6051      	str	r1, [r2, #4]
2fff2c26:	681a      	ldr	r2, [r3, #0]
2fff2c28:	f042 0201 	orr.w	r2, r2, #1
2fff2c2c:	601a      	str	r2, [r3, #0]
2fff2c2e:	bd70      	pop	{r4, r5, r6, pc}
2fff2c30:	5c008020 	.word	0x5c008020
2fff2c34:	5c008000 	.word	0x5c008000
2fff2c38:	5c008008 	.word	0x5c008008

2fff2c3c <stm32mp1_read_pll_freq>:
2fff2c3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2fff2c40:	4607      	mov	r7, r0
2fff2c42:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 2fff2cf4 <stm32mp1_read_pll_freq+0xb8>
2fff2c46:	460c      	mov	r4, r1
2fff2c48:	f7fe f958 	bl	2fff0efc <stm32mp_rcc_base>
2fff2c4c:	eb09 1647 	add.w	r6, r9, r7, lsl #5
2fff2c50:	8933      	ldrh	r3, [r6, #8]
2fff2c52:	581d      	ldr	r5, [r3, r0]
2fff2c54:	4b25      	ldr	r3, [pc, #148]	; (2fff2cec <stm32mp1_read_pll_freq+0xb0>)
2fff2c56:	5d18      	ldrb	r0, [r3, r4]
2fff2c58:	40c5      	lsrs	r5, r0
2fff2c5a:	f7fe f94f 	bl	2fff0efc <stm32mp_rcc_base>
2fff2c5e:	88f3      	ldrh	r3, [r6, #6]
2fff2c60:	f005 057f 	and.w	r5, r5, #127	; 0x7f
2fff2c64:	581c      	ldr	r4, [r3, r0]
2fff2c66:	8973      	ldrh	r3, [r6, #10]
2fff2c68:	f853 8000 	ldr.w	r8, [r3, r0]
2fff2c6c:	f7fe f946 	bl	2fff0efc <stm32mp_rcc_base>
2fff2c70:	88b3      	ldrh	r3, [r6, #4]
2fff2c72:	5818      	ldr	r0, [r3, r0]
2fff2c74:	f000 0003 	and.w	r0, r0, #3
2fff2c78:	eb00 00c7 	add.w	r0, r0, r7, lsl #3
2fff2c7c:	3004      	adds	r0, #4
2fff2c7e:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
2fff2c82:	f3c4 0008 	ubfx	r0, r4, #0, #9
2fff2c86:	2b05      	cmp	r3, #5
2fff2c88:	bf8e      	itee	hi
2fff2c8a:	2300      	movhi	r3, #0
2fff2c8c:	4a18      	ldrls	r2, [pc, #96]	; (2fff2cf0 <stm32mp1_read_pll_freq+0xb4>)
2fff2c8e:	f852 3023 	ldrls.w	r3, [r2, r3, lsl #2]
2fff2c92:	f418 3f80 	tst.w	r8, #65536	; 0x10000
2fff2c96:	f3c4 4205 	ubfx	r2, r4, #16, #6
2fff2c9a:	d020      	beq.n	2fff2cde <stm32mp1_read_pll_freq+0xa2>
2fff2c9c:	f3c8 08cc 	ubfx	r8, r8, #3, #13
2fff2ca0:	3001      	adds	r0, #1
2fff2ca2:	bf2c      	ite	cs
2fff2ca4:	2101      	movcs	r1, #1
2fff2ca6:	2100      	movcc	r1, #0
2fff2ca8:	ea4f 3940 	mov.w	r9, r0, lsl #13
2fff2cac:	ea4f 3a41 	mov.w	sl, r1, lsl #13
2fff2cb0:	eb19 0608 	adds.w	r6, r9, r8
2fff2cb4:	ea4a 4ad0 	orr.w	sl, sl, r0, lsr #19
2fff2cb8:	f14a 0700 	adc.w	r7, sl, #0
2fff2cbc:	3201      	adds	r2, #1
2fff2cbe:	fba3 0106 	umull	r0, r1, r3, r6
2fff2cc2:	fb03 1107 	mla	r1, r3, r7, r1
2fff2cc6:	bf2c      	ite	cs
2fff2cc8:	2301      	movcs	r3, #1
2fff2cca:	2300      	movcc	r3, #0
2fff2ccc:	0352      	lsls	r2, r2, #13
2fff2cce:	035b      	lsls	r3, r3, #13
2fff2cd0:	f004 e9cc 	blx	2fff706c <__aeabi_uldivmod>
2fff2cd4:	3501      	adds	r5, #1
2fff2cd6:	fbb0 f0f5 	udiv	r0, r0, r5
2fff2cda:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff2cde:	fb00 3003 	mla	r0, r0, r3, r3
2fff2ce2:	3201      	adds	r2, #1
2fff2ce4:	fbb0 f0f2 	udiv	r0, r0, r2
2fff2ce8:	e7f4      	b.n	2fff2cd4 <stm32mp1_read_pll_freq+0x98>
2fff2cea:	bf00      	nop
2fff2cec:	2fff992f 	.word	0x2fff992f
2fff2cf0:	2fffcf30 	.word	0x2fffcf30
2fff2cf4:	2fff9b6c 	.word	0x2fff9b6c

2fff2cf8 <get_clock_rate>:
2fff2cf8:	b538      	push	{r3, r4, r5, lr}
2fff2cfa:	4605      	mov	r5, r0
2fff2cfc:	f7fe f8fe 	bl	2fff0efc <stm32mp_rcc_base>
2fff2d00:	4604      	mov	r4, r0
2fff2d02:	2d21      	cmp	r5, #33	; 0x21
2fff2d04:	f200 8090 	bhi.w	2fff2e28 <get_clock_rate+0x130>
2fff2d08:	e8df f005 	tbb	[pc, r5]
2fff2d0c:	97901f1c 	.word	0x97901f1c
2fff2d10:	1f1c8e9a 	.word	0x1f1c8e9a
2fff2d14:	9d229093 	.word	0x9d229093
2fff2d18:	a7a4a19f 	.word	0xa7a4a19f
2fff2d1c:	b0aeaca9 	.word	0xb0aeaca9
2fff2d20:	5633b5b3 	.word	0x5633b5b3
2fff2d24:	33335656 	.word	0x33335656
2fff2d28:	13853333 	.word	0x13853333
2fff2d2c:	1156      	.short	0x1156
2fff2d2e:	4853      	ldr	r0, [pc, #332]	; (2fff2e7c <get_clock_rate+0x184>)
2fff2d30:	bd38      	pop	{r3, r4, r5, pc}
2fff2d32:	6a03      	ldr	r3, [r0, #32]
2fff2d34:	f003 0307 	and.w	r3, r3, #7
2fff2d38:	2b03      	cmp	r3, #3
2fff2d3a:	d875      	bhi.n	2fff2e28 <get_clock_rate+0x130>
2fff2d3c:	e8df f003 	tbb	[pc, r3]
2fff2d40:	0e080502 	.word	0x0e080502
2fff2d44:	4b4e      	ldr	r3, [pc, #312]	; (2fff2e80 <get_clock_rate+0x188>)
2fff2d46:	6818      	ldr	r0, [r3, #0]
2fff2d48:	e7f2      	b.n	2fff2d30 <get_clock_rate+0x38>
2fff2d4a:	4b4d      	ldr	r3, [pc, #308]	; (2fff2e80 <get_clock_rate+0x188>)
2fff2d4c:	6858      	ldr	r0, [r3, #4]
2fff2d4e:	e7ef      	b.n	2fff2d30 <get_clock_rate+0x38>
2fff2d50:	2100      	movs	r1, #0
2fff2d52:	2000      	movs	r0, #0
2fff2d54:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff2d58:	f7ff bf70 	b.w	2fff2c3c <stm32mp1_read_pll_freq>
2fff2d5c:	2100      	movs	r1, #0
2fff2d5e:	4608      	mov	r0, r1
2fff2d60:	f7ff ff6c 	bl	2fff2c3c <stm32mp1_read_pll_freq>
2fff2d64:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff2d66:	4a47      	ldr	r2, [pc, #284]	; (2fff2e84 <get_clock_rate+0x18c>)
2fff2d68:	f003 0307 	and.w	r3, r3, #7
2fff2d6c:	5cd3      	ldrb	r3, [r2, r3]
2fff2d6e:	40d8      	lsrs	r0, r3
2fff2d70:	e7de      	b.n	2fff2d30 <get_clock_rate+0x38>
2fff2d72:	6a43      	ldr	r3, [r0, #36]	; 0x24
2fff2d74:	f003 0307 	and.w	r3, r3, #7
2fff2d78:	2b01      	cmp	r3, #1
2fff2d7a:	d013      	beq.n	2fff2da4 <get_clock_rate+0xac>
2fff2d7c:	d303      	bcc.n	2fff2d86 <get_clock_rate+0x8e>
2fff2d7e:	2b02      	cmp	r3, #2
2fff2d80:	d013      	beq.n	2fff2daa <get_clock_rate+0xb2>
2fff2d82:	2000      	movs	r0, #0
2fff2d84:	e001      	b.n	2fff2d8a <get_clock_rate+0x92>
2fff2d86:	4b3e      	ldr	r3, [pc, #248]	; (2fff2e80 <get_clock_rate+0x188>)
2fff2d88:	6818      	ldr	r0, [r3, #0]
2fff2d8a:	6b23      	ldr	r3, [r4, #48]	; 0x30
2fff2d8c:	2d1a      	cmp	r5, #26
2fff2d8e:	4a3e      	ldr	r2, [pc, #248]	; (2fff2e88 <get_clock_rate+0x190>)
2fff2d90:	f003 0307 	and.w	r3, r3, #7
2fff2d94:	5cd3      	ldrb	r3, [r2, r3]
2fff2d96:	fbb0 f0f3 	udiv	r0, r0, r3
2fff2d9a:	d00b      	beq.n	2fff2db4 <get_clock_rate+0xbc>
2fff2d9c:	2d1b      	cmp	r5, #27
2fff2d9e:	d1c7      	bne.n	2fff2d30 <get_clock_rate+0x38>
2fff2da0:	6c23      	ldr	r3, [r4, #64]	; 0x40
2fff2da2:	e7e0      	b.n	2fff2d66 <get_clock_rate+0x6e>
2fff2da4:	4b36      	ldr	r3, [pc, #216]	; (2fff2e80 <get_clock_rate+0x188>)
2fff2da6:	6858      	ldr	r0, [r3, #4]
2fff2da8:	e7ef      	b.n	2fff2d8a <get_clock_rate+0x92>
2fff2daa:	2100      	movs	r1, #0
2fff2dac:	2001      	movs	r0, #1
2fff2dae:	f7ff ff45 	bl	2fff2c3c <stm32mp1_read_pll_freq>
2fff2db2:	e7ea      	b.n	2fff2d8a <get_clock_rate+0x92>
2fff2db4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
2fff2db6:	e7d6      	b.n	2fff2d66 <get_clock_rate+0x6e>
2fff2db8:	6c83      	ldr	r3, [r0, #72]	; 0x48
2fff2dba:	f003 0307 	and.w	r3, r3, #7
2fff2dbe:	2b03      	cmp	r3, #3
2fff2dc0:	d821      	bhi.n	2fff2e06 <get_clock_rate+0x10e>
2fff2dc2:	e8df f003 	tbb	[pc, r3]
2fff2dc6:	1502      	.short	0x1502
2fff2dc8:	1b18      	.short	0x1b18
2fff2dca:	4b2d      	ldr	r3, [pc, #180]	; (2fff2e80 <get_clock_rate+0x188>)
2fff2dcc:	6818      	ldr	r0, [r3, #0]
2fff2dce:	f8d4 3830 	ldr.w	r3, [r4, #2096]	; 0x830
2fff2dd2:	2d18      	cmp	r5, #24
2fff2dd4:	4a2d      	ldr	r2, [pc, #180]	; (2fff2e8c <get_clock_rate+0x194>)
2fff2dd6:	f003 030f 	and.w	r3, r3, #15
2fff2dda:	5cd3      	ldrb	r3, [r2, r3]
2fff2ddc:	fa20 f003 	lsr.w	r0, r0, r3
2fff2de0:	d013      	beq.n	2fff2e0a <get_clock_rate+0x112>
2fff2de2:	2d19      	cmp	r5, #25
2fff2de4:	d014      	beq.n	2fff2e10 <get_clock_rate+0x118>
2fff2de6:	2d17      	cmp	r5, #23
2fff2de8:	d1a2      	bne.n	2fff2d30 <get_clock_rate+0x38>
2fff2dea:	f8d4 3834 	ldr.w	r3, [r4, #2100]	; 0x834
2fff2dee:	e7ba      	b.n	2fff2d66 <get_clock_rate+0x6e>
2fff2df0:	4b23      	ldr	r3, [pc, #140]	; (2fff2e80 <get_clock_rate+0x188>)
2fff2df2:	6858      	ldr	r0, [r3, #4]
2fff2df4:	e7eb      	b.n	2fff2dce <get_clock_rate+0xd6>
2fff2df6:	4b22      	ldr	r3, [pc, #136]	; (2fff2e80 <get_clock_rate+0x188>)
2fff2df8:	6898      	ldr	r0, [r3, #8]
2fff2dfa:	e7e8      	b.n	2fff2dce <get_clock_rate+0xd6>
2fff2dfc:	2100      	movs	r1, #0
2fff2dfe:	2002      	movs	r0, #2
2fff2e00:	f7ff ff1c 	bl	2fff2c3c <stm32mp1_read_pll_freq>
2fff2e04:	e7e3      	b.n	2fff2dce <get_clock_rate+0xd6>
2fff2e06:	2000      	movs	r0, #0
2fff2e08:	e7e1      	b.n	2fff2dce <get_clock_rate+0xd6>
2fff2e0a:	f8d4 3838 	ldr.w	r3, [r4, #2104]	; 0x838
2fff2e0e:	e7aa      	b.n	2fff2d66 <get_clock_rate+0x6e>
2fff2e10:	f8d4 383c 	ldr.w	r3, [r4, #2108]	; 0x83c
2fff2e14:	e7a7      	b.n	2fff2d66 <get_clock_rate+0x6e>
2fff2e16:	f8d0 30d0 	ldr.w	r3, [r0, #208]	; 0xd0
2fff2e1a:	f003 0307 	and.w	r3, r3, #7
2fff2e1e:	2b01      	cmp	r3, #1
2fff2e20:	d004      	beq.n	2fff2e2c <get_clock_rate+0x134>
2fff2e22:	d38f      	bcc.n	2fff2d44 <get_clock_rate+0x4c>
2fff2e24:	2b02      	cmp	r3, #2
2fff2e26:	d090      	beq.n	2fff2d4a <get_clock_rate+0x52>
2fff2e28:	2000      	movs	r0, #0
2fff2e2a:	e781      	b.n	2fff2d30 <get_clock_rate+0x38>
2fff2e2c:	4b14      	ldr	r3, [pc, #80]	; (2fff2e80 <get_clock_rate+0x188>)
2fff2e2e:	6898      	ldr	r0, [r3, #8]
2fff2e30:	e77e      	b.n	2fff2d30 <get_clock_rate+0x38>
2fff2e32:	4b13      	ldr	r3, [pc, #76]	; (2fff2e80 <get_clock_rate+0x188>)
2fff2e34:	6858      	ldr	r0, [r3, #4]
2fff2e36:	0840      	lsrs	r0, r0, #1
2fff2e38:	e77a      	b.n	2fff2d30 <get_clock_rate+0x38>
2fff2e3a:	4b11      	ldr	r3, [pc, #68]	; (2fff2e80 <get_clock_rate+0x188>)
2fff2e3c:	68d8      	ldr	r0, [r3, #12]
2fff2e3e:	e777      	b.n	2fff2d30 <get_clock_rate+0x38>
2fff2e40:	4b0f      	ldr	r3, [pc, #60]	; (2fff2e80 <get_clock_rate+0x188>)
2fff2e42:	6918      	ldr	r0, [r3, #16]
2fff2e44:	e774      	b.n	2fff2d30 <get_clock_rate+0x38>
2fff2e46:	2101      	movs	r1, #1
2fff2e48:	e783      	b.n	2fff2d52 <get_clock_rate+0x5a>
2fff2e4a:	2102      	movs	r1, #2
2fff2e4c:	e781      	b.n	2fff2d52 <get_clock_rate+0x5a>
2fff2e4e:	2100      	movs	r1, #0
2fff2e50:	2001      	movs	r0, #1
2fff2e52:	e77f      	b.n	2fff2d54 <get_clock_rate+0x5c>
2fff2e54:	2101      	movs	r1, #1
2fff2e56:	4608      	mov	r0, r1
2fff2e58:	e77c      	b.n	2fff2d54 <get_clock_rate+0x5c>
2fff2e5a:	2102      	movs	r1, #2
2fff2e5c:	e7f8      	b.n	2fff2e50 <get_clock_rate+0x158>
2fff2e5e:	2100      	movs	r1, #0
2fff2e60:	2002      	movs	r0, #2
2fff2e62:	e777      	b.n	2fff2d54 <get_clock_rate+0x5c>
2fff2e64:	2101      	movs	r1, #1
2fff2e66:	e7fb      	b.n	2fff2e60 <get_clock_rate+0x168>
2fff2e68:	2102      	movs	r1, #2
2fff2e6a:	e7f4      	b.n	2fff2e56 <get_clock_rate+0x15e>
2fff2e6c:	2100      	movs	r1, #0
2fff2e6e:	2003      	movs	r0, #3
2fff2e70:	e770      	b.n	2fff2d54 <get_clock_rate+0x5c>
2fff2e72:	2101      	movs	r1, #1
2fff2e74:	e7fb      	b.n	2fff2e6e <get_clock_rate+0x176>
2fff2e76:	2102      	movs	r1, #2
2fff2e78:	e7f9      	b.n	2fff2e6e <get_clock_rate+0x176>
2fff2e7a:	bf00      	nop
2fff2e7c:	02dc6c00 	.word	0x02dc6c00
2fff2e80:	2fffcf30 	.word	0x2fffcf30
2fff2e84:	2fff9d04 	.word	0x2fff9d04
2fff2e88:	2fff994e 	.word	0x2fff994e
2fff2e8c:	2fff9cf4 	.word	0x2fff9cf4

2fff2e90 <stm32mp1_pll_compute_pllxcfgr1>:
2fff2e90:	b570      	push	{r4, r5, r6, lr}
2fff2e92:	4606      	mov	r6, r0
2fff2e94:	460d      	mov	r5, r1
2fff2e96:	4614      	mov	r4, r2
2fff2e98:	f7fe f830 	bl	2fff0efc <stm32mp_rcc_base>
2fff2e9c:	88b3      	ldrh	r3, [r6, #4]
2fff2e9e:	6831      	ldr	r1, [r6, #0]
2fff2ea0:	581b      	ldr	r3, [r3, r0]
2fff2ea2:	481a      	ldr	r0, [pc, #104]	; (2fff2f0c <stm32mp1_pll_compute_pllxcfgr1+0x7c>)
2fff2ea4:	f003 0303 	and.w	r3, r3, #3
2fff2ea8:	3304      	adds	r3, #4
2fff2eaa:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
2fff2eae:	2b05      	cmp	r3, #5
2fff2eb0:	bf8e      	itee	hi
2fff2eb2:	2300      	movhi	r3, #0
2fff2eb4:	4a16      	ldrls	r2, [pc, #88]	; (2fff2f10 <stm32mp1_pll_compute_pllxcfgr1+0x80>)
2fff2eb6:	f852 3023 	ldrls.w	r3, [r2, r3, lsl #2]
2fff2eba:	682a      	ldr	r2, [r5, #0]
2fff2ebc:	3201      	adds	r2, #1
2fff2ebe:	fbb3 f3f2 	udiv	r3, r3, r2
2fff2ec2:	eb01 0241 	add.w	r2, r1, r1, lsl #1
2fff2ec6:	1886      	adds	r6, r0, r2
2fff2ec8:	5c80      	ldrb	r0, [r0, r2]
2fff2eca:	4a12      	ldr	r2, [pc, #72]	; (2fff2f14 <stm32mp1_pll_compute_pllxcfgr1+0x84>)
2fff2ecc:	4350      	muls	r0, r2
2fff2ece:	4298      	cmp	r0, r3
2fff2ed0:	d819      	bhi.n	2fff2f06 <stm32mp1_pll_compute_pllxcfgr1+0x76>
2fff2ed2:	7870      	ldrb	r0, [r6, #1]
2fff2ed4:	4342      	muls	r2, r0
2fff2ed6:	429a      	cmp	r2, r3
2fff2ed8:	d315      	bcc.n	2fff2f06 <stm32mp1_pll_compute_pllxcfgr1+0x76>
2fff2eda:	b991      	cbnz	r1, 2fff2f02 <stm32mp1_pll_compute_pllxcfgr1+0x72>
2fff2edc:	480e      	ldr	r0, [pc, #56]	; (2fff2f18 <stm32mp1_pll_compute_pllxcfgr1+0x88>)
2fff2ede:	4283      	cmp	r3, r0
2fff2ee0:	bf94      	ite	ls
2fff2ee2:	2000      	movls	r0, #0
2fff2ee4:	2001      	movhi	r0, #1
2fff2ee6:	686b      	ldr	r3, [r5, #4]
2fff2ee8:	f3c3 0208 	ubfx	r2, r3, #0, #9
2fff2eec:	6022      	str	r2, [r4, #0]
2fff2eee:	682b      	ldr	r3, [r5, #0]
2fff2ef0:	041b      	lsls	r3, r3, #16
2fff2ef2:	f403 137c 	and.w	r3, r3, #4128768	; 0x3f0000
2fff2ef6:	4313      	orrs	r3, r2
2fff2ef8:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
2fff2efc:	2000      	movs	r0, #0
2fff2efe:	6023      	str	r3, [r4, #0]
2fff2f00:	bd70      	pop	{r4, r5, r6, pc}
2fff2f02:	2000      	movs	r0, #0
2fff2f04:	e7ef      	b.n	2fff2ee6 <stm32mp1_pll_compute_pllxcfgr1+0x56>
2fff2f06:	f06f 0015 	mvn.w	r0, #21
2fff2f0a:	e7f9      	b.n	2fff2f00 <stm32mp1_pll_compute_pllxcfgr1+0x70>
2fff2f0c:	2fff9d0c 	.word	0x2fff9d0c
2fff2f10:	2fffcf30 	.word	0x2fffcf30
2fff2f14:	000f4240 	.word	0x000f4240
2fff2f18:	007a11ff 	.word	0x007a11ff

2fff2f1c <stm32mp1_pll_start>:
2fff2f1c:	b510      	push	{r4, lr}
2fff2f1e:	4604      	mov	r4, r0
2fff2f20:	f7fd ffec 	bl	2fff0efc <stm32mp_rcc_base>
2fff2f24:	4b05      	ldr	r3, [pc, #20]	; (2fff2f3c <stm32mp1_pll_start+0x20>)
2fff2f26:	eb03 1344 	add.w	r3, r3, r4, lsl #5
2fff2f2a:	899a      	ldrh	r2, [r3, #12]
2fff2f2c:	5813      	ldr	r3, [r2, r0]
2fff2f2e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
2fff2f32:	f043 0301 	orr.w	r3, r3, #1
2fff2f36:	5013      	str	r3, [r2, r0]
2fff2f38:	bd10      	pop	{r4, pc}
2fff2f3a:	bf00      	nop
2fff2f3c:	2fff9b6c 	.word	0x2fff9b6c

2fff2f40 <stm32mp1_clk_lock>:
2fff2f40:	b510      	push	{r4, lr}
2fff2f42:	4604      	mov	r4, r0
2fff2f44:	f7fd ffdd 	bl	2fff0f02 <stm32mp_lock_available>
2fff2f48:	b120      	cbz	r0, 2fff2f54 <stm32mp1_clk_lock+0x14>
2fff2f4a:	4620      	mov	r0, r4
2fff2f4c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff2f50:	f007 bdf2 	b.w	2fffab38 <__spin_lock_from_thumb>
2fff2f54:	bd10      	pop	{r4, pc}

2fff2f56 <stm32mp1_clk_unlock>:
2fff2f56:	b510      	push	{r4, lr}
2fff2f58:	4604      	mov	r4, r0
2fff2f5a:	f7fd ffd2 	bl	2fff0f02 <stm32mp_lock_available>
2fff2f5e:	b120      	cbz	r0, 2fff2f6a <stm32mp1_clk_unlock+0x14>
2fff2f60:	4620      	mov	r0, r4
2fff2f62:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff2f66:	f007 bddf 	b.w	2fffab28 <__spin_unlock_from_thumb>
2fff2f6a:	bd10      	pop	{r4, pc}

2fff2f6c <stm32mp1_pll_stop>:
2fff2f6c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff2f70:	4683      	mov	fp, r0
2fff2f72:	f7fd ffc3 	bl	2fff0efc <stm32mp_rcc_base>
2fff2f76:	4b19      	ldr	r3, [pc, #100]	; (2fff2fdc <stm32mp1_pll_stop+0x70>)
2fff2f78:	4604      	mov	r4, r0
2fff2f7a:	eb03 134b 	add.w	r3, r3, fp, lsl #5
2fff2f7e:	899d      	ldrh	r5, [r3, #12]
2fff2f80:	582b      	ldr	r3, [r5, r0]
2fff2f82:	eb05 0a00 	add.w	sl, r5, r0
2fff2f86:	f023 0370 	bic.w	r3, r3, #112	; 0x70
2fff2f8a:	502b      	str	r3, [r5, r0]
2fff2f8c:	582b      	ldr	r3, [r5, r0]
2fff2f8e:	f023 0301 	bic.w	r3, r3, #1
2fff2f92:	502b      	str	r3, [r5, r0]
2fff2f94:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff2f98:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff2f9c:	4910      	ldr	r1, [pc, #64]	; (2fff2fe0 <stm32mp1_pll_stop+0x74>)
2fff2f9e:	2300      	movs	r3, #0
2fff2fa0:	4a10      	ldr	r2, [pc, #64]	; (2fff2fe4 <stm32mp1_pll_stop+0x78>)
2fff2fa2:	fba0 0101 	umull	r0, r1, r0, r1
2fff2fa6:	f004 e862 	blx	2fff706c <__aeabi_uldivmod>
2fff2faa:	eb10 0806 	adds.w	r8, r0, r6
2fff2fae:	eb41 0907 	adc.w	r9, r1, r7
2fff2fb2:	f8da 0000 	ldr.w	r0, [sl]
2fff2fb6:	f010 0002 	ands.w	r0, r0, #2
2fff2fba:	d00d      	beq.n	2fff2fd8 <stm32mp1_pll_stop+0x6c>
2fff2fbc:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff2fc0:	4599      	cmp	r9, r3
2fff2fc2:	bf08      	it	eq
2fff2fc4:	4590      	cmpeq	r8, r2
2fff2fc6:	d2f4      	bcs.n	2fff2fb2 <stm32mp1_pll_stop+0x46>
2fff2fc8:	4807      	ldr	r0, [pc, #28]	; (2fff2fe8 <stm32mp1_pll_stop+0x7c>)
2fff2fca:	4652      	mov	r2, sl
2fff2fcc:	592b      	ldr	r3, [r5, r4]
2fff2fce:	4659      	mov	r1, fp
2fff2fd0:	f7fd fdd6 	bl	2fff0b80 <tf_log>
2fff2fd4:	f06f 003b 	mvn.w	r0, #59	; 0x3b
2fff2fd8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff2fdc:	2fff9b6c 	.word	0x2fff9b6c
2fff2fe0:	00030d40 	.word	0x00030d40
2fff2fe4:	000f4240 	.word	0x000f4240
2fff2fe8:	2fff9d35 	.word	0x2fff9d35

2fff2fec <__clk_enable>:
2fff2fec:	b538      	push	{r3, r4, r5, lr}
2fff2fee:	4604      	mov	r4, r0
2fff2ff0:	f7fd ff84 	bl	2fff0efc <stm32mp_rcc_base>
2fff2ff4:	78a2      	ldrb	r2, [r4, #2]
2fff2ff6:	2101      	movs	r1, #1
2fff2ff8:	7925      	ldrb	r5, [r4, #4]
2fff2ffa:	8823      	ldrh	r3, [r4, #0]
2fff2ffc:	4091      	lsls	r1, r2
2fff2ffe:	b10d      	cbz	r5, 2fff3004 <__clk_enable+0x18>
2fff3000:	5019      	str	r1, [r3, r0]
2fff3002:	bd38      	pop	{r3, r4, r5, pc}
2fff3004:	4418      	add	r0, r3
2fff3006:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff300a:	f003 bb97 	b.w	2fff673c <stm32mp_mmio_setbits_32_shregs>

2fff300e <__clk_disable>:
2fff300e:	b538      	push	{r3, r4, r5, lr}
2fff3010:	4604      	mov	r4, r0
2fff3012:	f7fd ff73 	bl	2fff0efc <stm32mp_rcc_base>
2fff3016:	78a2      	ldrb	r2, [r4, #2]
2fff3018:	2101      	movs	r1, #1
2fff301a:	7925      	ldrb	r5, [r4, #4]
2fff301c:	8823      	ldrh	r3, [r4, #0]
2fff301e:	4091      	lsls	r1, r2
2fff3020:	b115      	cbz	r5, 2fff3028 <__clk_disable+0x1a>
2fff3022:	3304      	adds	r3, #4
2fff3024:	5019      	str	r1, [r3, r0]
2fff3026:	bd38      	pop	{r3, r4, r5, pc}
2fff3028:	4418      	add	r0, r3
2fff302a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff302e:	f003 bb78 	b.w	2fff6722 <stm32mp_mmio_clrbits_32_shregs>

2fff3032 <clock_is_always_on>:
2fff3032:	2805      	cmp	r0, #5
2fff3034:	d909      	bls.n	2fff304a <clock_is_always_on+0x18>
2fff3036:	f1a0 03b4 	sub.w	r3, r0, #180	; 0xb4
2fff303a:	2b08      	cmp	r3, #8
2fff303c:	d905      	bls.n	2fff304a <clock_is_always_on+0x18>
2fff303e:	38c2      	subs	r0, #194	; 0xc2
2fff3040:	2802      	cmp	r0, #2
2fff3042:	bf8c      	ite	hi
2fff3044:	2000      	movhi	r0, #0
2fff3046:	2001      	movls	r0, #1
2fff3048:	4770      	bx	lr
2fff304a:	2001      	movs	r0, #1
2fff304c:	4770      	bx	lr
	...

2fff3050 <stm32mp1_clk_get_gated_id>:
2fff3050:	b508      	push	{r3, lr}
2fff3052:	4602      	mov	r2, r0
2fff3054:	4909      	ldr	r1, [pc, #36]	; (2fff307c <stm32mp1_clk_get_gated_id+0x2c>)
2fff3056:	2300      	movs	r3, #0
2fff3058:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
2fff305c:	78c0      	ldrb	r0, [r0, #3]
2fff305e:	4290      	cmp	r0, r2
2fff3060:	d101      	bne.n	2fff3066 <stm32mp1_clk_get_gated_id+0x16>
2fff3062:	4618      	mov	r0, r3
2fff3064:	bd08      	pop	{r3, pc}
2fff3066:	3301      	adds	r3, #1
2fff3068:	2b39      	cmp	r3, #57	; 0x39
2fff306a:	d1f5      	bne.n	2fff3058 <stm32mp1_clk_get_gated_id+0x8>
2fff306c:	4804      	ldr	r0, [pc, #16]	; (2fff3080 <stm32mp1_clk_get_gated_id+0x30>)
2fff306e:	4905      	ldr	r1, [pc, #20]	; (2fff3084 <stm32mp1_clk_get_gated_id+0x34>)
2fff3070:	f7fd fd86 	bl	2fff0b80 <tf_log>
2fff3074:	f06f 0015 	mvn.w	r0, #21
2fff3078:	e7f4      	b.n	2fff3064 <stm32mp1_clk_get_gated_id+0x14>
2fff307a:	bf00      	nop
2fff307c:	2fff9988 	.word	0x2fff9988
2fff3080:	2fff9b50 	.word	0x2fff9b50
2fff3084:	2fff989c 	.word	0x2fff989c

2fff3088 <stm32mp1_clk_get_parent>:
2fff3088:	b538      	push	{r3, r4, r5, lr}
2fff308a:	4605      	mov	r5, r0
2fff308c:	f7fd ff36 	bl	2fff0efc <stm32mp_rcc_base>
2fff3090:	4b19      	ldr	r3, [pc, #100]	; (2fff30f8 <stm32mp1_clk_get_parent+0x70>)
2fff3092:	4604      	mov	r4, r0
2fff3094:	2000      	movs	r0, #0
2fff3096:	5cc2      	ldrb	r2, [r0, r3]
2fff3098:	4295      	cmp	r5, r2
2fff309a:	d003      	beq.n	2fff30a4 <stm32mp1_clk_get_parent+0x1c>
2fff309c:	3001      	adds	r0, #1
2fff309e:	2822      	cmp	r0, #34	; 0x22
2fff30a0:	d1f9      	bne.n	2fff3096 <stm32mp1_clk_get_parent+0xe>
2fff30a2:	20ff      	movs	r0, #255	; 0xff
2fff30a4:	28ff      	cmp	r0, #255	; 0xff
2fff30a6:	d123      	bne.n	2fff30f0 <stm32mp1_clk_get_parent+0x68>
2fff30a8:	4628      	mov	r0, r5
2fff30aa:	f7ff ffd1 	bl	2fff3050 <stm32mp1_clk_get_gated_id>
2fff30ae:	2800      	cmp	r0, #0
2fff30b0:	da03      	bge.n	2fff30ba <stm32mp1_clk_get_parent+0x32>
2fff30b2:	f7fd fe07 	bl	2fff0cc4 <console_flush>
2fff30b6:	f003 ee3c 	blx	2fff6d30 <do_panic>
2fff30ba:	4b10      	ldr	r3, [pc, #64]	; (2fff30fc <stm32mp1_clk_get_parent+0x74>)
2fff30bc:	eb03 03c0 	add.w	r3, r3, r0, lsl #3
2fff30c0:	79d8      	ldrb	r0, [r3, #7]
2fff30c2:	2821      	cmp	r0, #33	; 0x21
2fff30c4:	d914      	bls.n	2fff30f0 <stm32mp1_clk_get_parent+0x68>
2fff30c6:	799a      	ldrb	r2, [r3, #6]
2fff30c8:	2aff      	cmp	r2, #255	; 0xff
2fff30ca:	d012      	beq.n	2fff30f2 <stm32mp1_clk_get_parent+0x6a>
2fff30cc:	2a15      	cmp	r2, #21
2fff30ce:	d8f0      	bhi.n	2fff30b2 <stm32mp1_clk_get_parent+0x2a>
2fff30d0:	490b      	ldr	r1, [pc, #44]	; (2fff3100 <stm32mp1_clk_get_parent+0x78>)
2fff30d2:	230c      	movs	r3, #12
2fff30d4:	4353      	muls	r3, r2
2fff30d6:	18ca      	adds	r2, r1, r3
2fff30d8:	5acb      	ldrh	r3, [r1, r3]
2fff30da:	7891      	ldrb	r1, [r2, #2]
2fff30dc:	5918      	ldr	r0, [r3, r4]
2fff30de:	78d3      	ldrb	r3, [r2, #3]
2fff30e0:	408b      	lsls	r3, r1
2fff30e2:	4003      	ands	r3, r0
2fff30e4:	40cb      	lsrs	r3, r1
2fff30e6:	7911      	ldrb	r1, [r2, #4]
2fff30e8:	4299      	cmp	r1, r3
2fff30ea:	d902      	bls.n	2fff30f2 <stm32mp1_clk_get_parent+0x6a>
2fff30ec:	6892      	ldr	r2, [r2, #8]
2fff30ee:	5cd0      	ldrb	r0, [r2, r3]
2fff30f0:	bd38      	pop	{r3, r4, r5, pc}
2fff30f2:	f06f 0015 	mvn.w	r0, #21
2fff30f6:	e7fb      	b.n	2fff30f0 <stm32mp1_clk_get_parent+0x68>
2fff30f8:	2fff990a 	.word	0x2fff990a
2fff30fc:	2fff9988 	.word	0x2fff9988
2fff3100:	2fff9bec 	.word	0x2fff9bec

2fff3104 <__stm32mp1_clk_enable>:
2fff3104:	b570      	push	{r4, r5, r6, lr}
2fff3106:	4604      	mov	r4, r0
2fff3108:	460d      	mov	r5, r1
2fff310a:	f7ff ff92 	bl	2fff3032 <clock_is_always_on>
2fff310e:	bb70      	cbnz	r0, 2fff316e <__stm32mp1_clk_enable+0x6a>
2fff3110:	4620      	mov	r0, r4
2fff3112:	f7ff ff9d 	bl	2fff3050 <stm32mp1_clk_get_gated_id>
2fff3116:	1e06      	subs	r6, r0, #0
2fff3118:	da07      	bge.n	2fff312a <__stm32mp1_clk_enable+0x26>
2fff311a:	4815      	ldr	r0, [pc, #84]	; (2fff3170 <__stm32mp1_clk_enable+0x6c>)
2fff311c:	4621      	mov	r1, r4
2fff311e:	f7fd fd2f 	bl	2fff0b80 <tf_log>
2fff3122:	f7fd fdcf 	bl	2fff0cc4 <console_flush>
2fff3126:	f003 ee04 	blx	2fff6d30 <do_panic>
2fff312a:	4c12      	ldr	r4, [pc, #72]	; (2fff3174 <__stm32mp1_clk_enable+0x70>)
2fff312c:	eb04 04c6 	add.w	r4, r4, r6, lsl #3
2fff3130:	b925      	cbnz	r5, 2fff313c <__stm32mp1_clk_enable+0x38>
2fff3132:	4620      	mov	r0, r4
2fff3134:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff3138:	f7ff bf58 	b.w	2fff2fec <__clk_enable>
2fff313c:	7963      	ldrb	r3, [r4, #5]
2fff313e:	2b00      	cmp	r3, #0
2fff3140:	d0f7      	beq.n	2fff3132 <__stm32mp1_clk_enable+0x2e>
2fff3142:	4d0d      	ldr	r5, [pc, #52]	; (2fff3178 <__stm32mp1_clk_enable+0x74>)
2fff3144:	480d      	ldr	r0, [pc, #52]	; (2fff317c <__stm32mp1_clk_enable+0x78>)
2fff3146:	f7ff fefb 	bl	2fff2f40 <stm32mp1_clk_lock>
2fff314a:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
2fff314e:	b913      	cbnz	r3, 2fff3156 <__stm32mp1_clk_enable+0x52>
2fff3150:	4620      	mov	r0, r4
2fff3152:	f7ff ff4b 	bl	2fff2fec <__clk_enable>
2fff3156:	f855 3026 	ldr.w	r3, [r5, r6, lsl #2]
2fff315a:	3301      	adds	r3, #1
2fff315c:	f845 3026 	str.w	r3, [r5, r6, lsl #2]
2fff3160:	3301      	adds	r3, #1
2fff3162:	d0de      	beq.n	2fff3122 <__stm32mp1_clk_enable+0x1e>
2fff3164:	4805      	ldr	r0, [pc, #20]	; (2fff317c <__stm32mp1_clk_enable+0x78>)
2fff3166:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff316a:	f7ff bef4 	b.w	2fff2f56 <stm32mp1_clk_unlock>
2fff316e:	bd70      	pop	{r4, r5, r6, pc}
2fff3170:	2fff98d3 	.word	0x2fff98d3
2fff3174:	2fff9988 	.word	0x2fff9988
2fff3178:	2fffcde8 	.word	0x2fffcde8
2fff317c:	2fffcf28 	.word	0x2fffcf28

2fff3180 <__stm32mp1_clk_disable>:
2fff3180:	b570      	push	{r4, r5, r6, lr}
2fff3182:	4604      	mov	r4, r0
2fff3184:	460e      	mov	r6, r1
2fff3186:	f7ff ff54 	bl	2fff3032 <clock_is_always_on>
2fff318a:	bb58      	cbnz	r0, 2fff31e4 <__stm32mp1_clk_disable+0x64>
2fff318c:	4620      	mov	r0, r4
2fff318e:	f7ff ff5f 	bl	2fff3050 <stm32mp1_clk_get_gated_id>
2fff3192:	1e05      	subs	r5, r0, #0
2fff3194:	da07      	bge.n	2fff31a6 <__stm32mp1_clk_disable+0x26>
2fff3196:	4814      	ldr	r0, [pc, #80]	; (2fff31e8 <__stm32mp1_clk_disable+0x68>)
2fff3198:	4621      	mov	r1, r4
2fff319a:	f7fd fcf1 	bl	2fff0b80 <tf_log>
2fff319e:	f7fd fd91 	bl	2fff0cc4 <console_flush>
2fff31a2:	f003 edc6 	blx	2fff6d30 <do_panic>
2fff31a6:	4c11      	ldr	r4, [pc, #68]	; (2fff31ec <__stm32mp1_clk_disable+0x6c>)
2fff31a8:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
2fff31ac:	b926      	cbnz	r6, 2fff31b8 <__stm32mp1_clk_disable+0x38>
2fff31ae:	4620      	mov	r0, r4
2fff31b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff31b4:	f7ff bf2b 	b.w	2fff300e <__clk_disable>
2fff31b8:	7963      	ldrb	r3, [r4, #5]
2fff31ba:	b19b      	cbz	r3, 2fff31e4 <__stm32mp1_clk_disable+0x64>
2fff31bc:	480c      	ldr	r0, [pc, #48]	; (2fff31f0 <__stm32mp1_clk_disable+0x70>)
2fff31be:	f7ff febf 	bl	2fff2f40 <stm32mp1_clk_lock>
2fff31c2:	4a0c      	ldr	r2, [pc, #48]	; (2fff31f4 <__stm32mp1_clk_disable+0x74>)
2fff31c4:	f852 3025 	ldr.w	r3, [r2, r5, lsl #2]
2fff31c8:	2b00      	cmp	r3, #0
2fff31ca:	d0e8      	beq.n	2fff319e <__stm32mp1_clk_disable+0x1e>
2fff31cc:	3b01      	subs	r3, #1
2fff31ce:	f842 3025 	str.w	r3, [r2, r5, lsl #2]
2fff31d2:	b913      	cbnz	r3, 2fff31da <__stm32mp1_clk_disable+0x5a>
2fff31d4:	4620      	mov	r0, r4
2fff31d6:	f7ff ff1a 	bl	2fff300e <__clk_disable>
2fff31da:	4805      	ldr	r0, [pc, #20]	; (2fff31f0 <__stm32mp1_clk_disable+0x70>)
2fff31dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff31e0:	f7ff beb9 	b.w	2fff2f56 <stm32mp1_clk_unlock>
2fff31e4:	bd70      	pop	{r4, r5, r6, pc}
2fff31e6:	bf00      	nop
2fff31e8:	2fff98b6 	.word	0x2fff98b6
2fff31ec:	2fff9988 	.word	0x2fff9988
2fff31f0:	2fffcf28 	.word	0x2fffcf28
2fff31f4:	2fffcde8 	.word	0x2fffcde8

2fff31f8 <stm32mp1_set_clkdiv>:
2fff31f8:	680a      	ldr	r2, [r1, #0]
2fff31fa:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2fff31fe:	f000 033f 	and.w	r3, r0, #63	; 0x3f
2fff3202:	f022 023f 	bic.w	r2, r2, #63	; 0x3f
2fff3206:	4605      	mov	r5, r0
2fff3208:	4313      	orrs	r3, r2
2fff320a:	460c      	mov	r4, r1
2fff320c:	600b      	str	r3, [r1, #0]
2fff320e:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff3212:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff3216:	4910      	ldr	r1, [pc, #64]	; (2fff3258 <stm32mp1_set_clkdiv+0x60>)
2fff3218:	2300      	movs	r3, #0
2fff321a:	4a10      	ldr	r2, [pc, #64]	; (2fff325c <stm32mp1_set_clkdiv+0x64>)
2fff321c:	fba0 0101 	umull	r0, r1, r0, r1
2fff3220:	f003 ef24 	blx	2fff706c <__aeabi_uldivmod>
2fff3224:	eb10 0806 	adds.w	r8, r0, r6
2fff3228:	eb41 0907 	adc.w	r9, r1, r7
2fff322c:	6823      	ldr	r3, [r4, #0]
2fff322e:	2b00      	cmp	r3, #0
2fff3230:	da01      	bge.n	2fff3236 <stm32mp1_set_clkdiv+0x3e>
2fff3232:	2000      	movs	r0, #0
2fff3234:	e00d      	b.n	2fff3252 <stm32mp1_set_clkdiv+0x5a>
2fff3236:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff323a:	4599      	cmp	r9, r3
2fff323c:	bf08      	it	eq
2fff323e:	4590      	cmpeq	r8, r2
2fff3240:	d2f4      	bcs.n	2fff322c <stm32mp1_set_clkdiv+0x34>
2fff3242:	4807      	ldr	r0, [pc, #28]	; (2fff3260 <stm32mp1_set_clkdiv+0x68>)
2fff3244:	4622      	mov	r2, r4
2fff3246:	6823      	ldr	r3, [r4, #0]
2fff3248:	4629      	mov	r1, r5
2fff324a:	f7fd fc99 	bl	2fff0b80 <tf_log>
2fff324e:	f06f 003b 	mvn.w	r0, #59	; 0x3b
2fff3252:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2fff3256:	bf00      	nop
2fff3258:	00030d40 	.word	0x00030d40
2fff325c:	000f4240 	.word	0x000f4240
2fff3260:	2fff9d8a 	.word	0x2fff9d8a

2fff3264 <stm32mp1_pll_output>:
2fff3264:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff3268:	4681      	mov	r9, r0
2fff326a:	9101      	str	r1, [sp, #4]
2fff326c:	f7fd fe46 	bl	2fff0efc <stm32mp_rcc_base>
2fff3270:	4b18      	ldr	r3, [pc, #96]	; (2fff32d4 <stm32mp1_pll_output+0x70>)
2fff3272:	4604      	mov	r4, r0
2fff3274:	eb03 1349 	add.w	r3, r3, r9, lsl #5
2fff3278:	899d      	ldrh	r5, [r3, #12]
2fff327a:	eb05 0800 	add.w	r8, r5, r0
2fff327e:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff3282:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff3286:	4914      	ldr	r1, [pc, #80]	; (2fff32d8 <stm32mp1_pll_output+0x74>)
2fff3288:	2300      	movs	r3, #0
2fff328a:	4a14      	ldr	r2, [pc, #80]	; (2fff32dc <stm32mp1_pll_output+0x78>)
2fff328c:	fba0 0101 	umull	r0, r1, r0, r1
2fff3290:	f003 eeec 	blx	2fff706c <__aeabi_uldivmod>
2fff3294:	eb10 0a06 	adds.w	sl, r0, r6
2fff3298:	eb41 0b07 	adc.w	fp, r1, r7
2fff329c:	f8d8 3000 	ldr.w	r3, [r8]
2fff32a0:	079b      	lsls	r3, r3, #30
2fff32a2:	d506      	bpl.n	2fff32b2 <stm32mp1_pll_output+0x4e>
2fff32a4:	592b      	ldr	r3, [r5, r4]
2fff32a6:	2000      	movs	r0, #0
2fff32a8:	9a01      	ldr	r2, [sp, #4]
2fff32aa:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
2fff32ae:	512b      	str	r3, [r5, r4]
2fff32b0:	e00d      	b.n	2fff32ce <stm32mp1_pll_output+0x6a>
2fff32b2:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff32b6:	459b      	cmp	fp, r3
2fff32b8:	bf08      	it	eq
2fff32ba:	4592      	cmpeq	sl, r2
2fff32bc:	d2ee      	bcs.n	2fff329c <stm32mp1_pll_output+0x38>
2fff32be:	4808      	ldr	r0, [pc, #32]	; (2fff32e0 <stm32mp1_pll_output+0x7c>)
2fff32c0:	4642      	mov	r2, r8
2fff32c2:	592b      	ldr	r3, [r5, r4]
2fff32c4:	4649      	mov	r1, r9
2fff32c6:	f7fd fc5b 	bl	2fff0b80 <tf_log>
2fff32ca:	f06f 003b 	mvn.w	r0, #59	; 0x3b
2fff32ce:	b003      	add	sp, #12
2fff32d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff32d4:	2fff9b6c 	.word	0x2fff9b6c
2fff32d8:	00030d40 	.word	0x00030d40
2fff32dc:	000f4240 	.word	0x000f4240
2fff32e0:	2fff9d12 	.word	0x2fff9d12

2fff32e4 <stm32mp1_set_clksrc>:
2fff32e4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff32e8:	4682      	mov	sl, r0
2fff32ea:	f7fd fe07 	bl	2fff0efc <stm32mp_rcc_base>
2fff32ee:	ea4f 151a 	mov.w	r5, sl, lsr #4
2fff32f2:	f00a 0307 	and.w	r3, sl, #7
2fff32f6:	eb05 0b00 	add.w	fp, r5, r0
2fff32fa:	4604      	mov	r4, r0
2fff32fc:	582a      	ldr	r2, [r5, r0]
2fff32fe:	f022 0207 	bic.w	r2, r2, #7
2fff3302:	4313      	orrs	r3, r2
2fff3304:	502b      	str	r3, [r5, r0]
2fff3306:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff330a:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff330e:	4910      	ldr	r1, [pc, #64]	; (2fff3350 <stm32mp1_set_clksrc+0x6c>)
2fff3310:	2300      	movs	r3, #0
2fff3312:	4a10      	ldr	r2, [pc, #64]	; (2fff3354 <stm32mp1_set_clksrc+0x70>)
2fff3314:	fba0 0101 	umull	r0, r1, r0, r1
2fff3318:	f003 eea8 	blx	2fff706c <__aeabi_uldivmod>
2fff331c:	eb10 0806 	adds.w	r8, r0, r6
2fff3320:	eb41 0907 	adc.w	r9, r1, r7
2fff3324:	f8db 3000 	ldr.w	r3, [fp]
2fff3328:	2b00      	cmp	r3, #0
2fff332a:	da01      	bge.n	2fff3330 <stm32mp1_set_clksrc+0x4c>
2fff332c:	2000      	movs	r0, #0
2fff332e:	e00d      	b.n	2fff334c <stm32mp1_set_clksrc+0x68>
2fff3330:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff3334:	4599      	cmp	r9, r3
2fff3336:	bf08      	it	eq
2fff3338:	4590      	cmpeq	r8, r2
2fff333a:	d2f3      	bcs.n	2fff3324 <stm32mp1_set_clksrc+0x40>
2fff333c:	4806      	ldr	r0, [pc, #24]	; (2fff3358 <stm32mp1_set_clksrc+0x74>)
2fff333e:	465a      	mov	r2, fp
2fff3340:	592b      	ldr	r3, [r5, r4]
2fff3342:	4651      	mov	r1, sl
2fff3344:	f7fd fc1c 	bl	2fff0b80 <tf_log>
2fff3348:	f06f 003b 	mvn.w	r0, #59	; 0x3b
2fff334c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff3350:	00030d40 	.word	0x00030d40
2fff3354:	000f4240 	.word	0x000f4240
2fff3358:	2fff9db1 	.word	0x2fff9db1

2fff335c <stm32mp1_pll_config_output>:
2fff335c:	b570      	push	{r4, r5, r6, lr}
2fff335e:	460e      	mov	r6, r1
2fff3360:	4604      	mov	r4, r0
2fff3362:	f7fd fdcb 	bl	2fff0efc <stm32mp_rcc_base>
2fff3366:	68b3      	ldr	r3, [r6, #8]
2fff3368:	6932      	ldr	r2, [r6, #16]
2fff336a:	f003 057f 	and.w	r5, r3, #127	; 0x7f
2fff336e:	68f3      	ldr	r3, [r6, #12]
2fff3370:	0412      	lsls	r2, r2, #16
2fff3372:	021b      	lsls	r3, r3, #8
2fff3374:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
2fff3378:	f403 43fe 	and.w	r3, r3, #32512	; 0x7f00
2fff337c:	4313      	orrs	r3, r2
2fff337e:	4a03      	ldr	r2, [pc, #12]	; (2fff338c <stm32mp1_pll_config_output+0x30>)
2fff3380:	432b      	orrs	r3, r5
2fff3382:	eb02 1244 	add.w	r2, r2, r4, lsl #5
2fff3386:	8912      	ldrh	r2, [r2, #8]
2fff3388:	5013      	str	r3, [r2, r0]
2fff338a:	bd70      	pop	{r4, r5, r6, pc}
2fff338c:	2fff9b6c 	.word	0x2fff9b6c

2fff3390 <stm32mp1_pll_config>:
2fff3390:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
2fff3394:	4607      	mov	r7, r0
2fff3396:	4d11      	ldr	r5, [pc, #68]	; (2fff33dc <stm32mp1_pll_config+0x4c>)
2fff3398:	4688      	mov	r8, r1
2fff339a:	4616      	mov	r6, r2
2fff339c:	f7fd fdae 	bl	2fff0efc <stm32mp_rcc_base>
2fff33a0:	eb05 1547 	add.w	r5, r5, r7, lsl #5
2fff33a4:	4604      	mov	r4, r0
2fff33a6:	aa01      	add	r2, sp, #4
2fff33a8:	4641      	mov	r1, r8
2fff33aa:	4628      	mov	r0, r5
2fff33ac:	f7ff fd70 	bl	2fff2e90 <stm32mp1_pll_compute_pllxcfgr1>
2fff33b0:	4681      	mov	r9, r0
2fff33b2:	b978      	cbnz	r0, 2fff33d4 <stm32mp1_pll_config+0x44>
2fff33b4:	9a01      	ldr	r2, [sp, #4]
2fff33b6:	4641      	mov	r1, r8
2fff33b8:	88eb      	ldrh	r3, [r5, #6]
2fff33ba:	00f6      	lsls	r6, r6, #3
2fff33bc:	511a      	str	r2, [r3, r4]
2fff33be:	896b      	ldrh	r3, [r5, #10]
2fff33c0:	5118      	str	r0, [r3, r4]
2fff33c2:	4638      	mov	r0, r7
2fff33c4:	9601      	str	r6, [sp, #4]
2fff33c6:	511e      	str	r6, [r3, r4]
2fff33c8:	591a      	ldr	r2, [r3, r4]
2fff33ca:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
2fff33ce:	511a      	str	r2, [r3, r4]
2fff33d0:	f7ff ffc4 	bl	2fff335c <stm32mp1_pll_config_output>
2fff33d4:	4648      	mov	r0, r9
2fff33d6:	b003      	add	sp, #12
2fff33d8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2fff33dc:	2fff9b6c 	.word	0x2fff9b6c

2fff33e0 <stm32mp1_pll1_config_from_opp_khz>:
2fff33e0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
2fff33e4:	4604      	mov	r4, r0
2fff33e6:	4e4e      	ldr	r6, [pc, #312]	; (2fff3520 <stm32mp1_pll1_config_from_opp_khz+0x140>)
2fff33e8:	6873      	ldr	r3, [r6, #4]
2fff33ea:	4298      	cmp	r0, r3
2fff33ec:	d020      	beq.n	2fff3430 <stm32mp1_pll1_config_from_opp_khz+0x50>
2fff33ee:	68b3      	ldr	r3, [r6, #8]
2fff33f0:	4298      	cmp	r0, r3
2fff33f2:	f040 8091 	bne.w	2fff3518 <stm32mp1_pll1_config_from_opp_khz+0x138>
2fff33f6:	2701      	movs	r7, #1
2fff33f8:	200a      	movs	r0, #10
2fff33fa:	f7ff fc7d 	bl	2fff2cf8 <get_clock_rate>
2fff33fe:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2fff3402:	fbb0 f0f3 	udiv	r0, r0, r3
2fff3406:	fbb0 f3f4 	udiv	r3, r0, r4
2fff340a:	fb04 0413 	mls	r4, r4, r3, r0
2fff340e:	bb0c      	cbnz	r4, 2fff3454 <stm32mp1_pll1_config_from_opp_khz+0x74>
2fff3410:	2b10      	cmp	r3, #16
2fff3412:	d81f      	bhi.n	2fff3454 <stm32mp1_pll1_config_from_opp_khz+0x74>
2fff3414:	4943      	ldr	r1, [pc, #268]	; (2fff3524 <stm32mp1_pll1_config_from_opp_khz+0x144>)
2fff3416:	2201      	movs	r2, #1
2fff3418:	409a      	lsls	r2, r3
2fff341a:	420a      	tst	r2, r1
2fff341c:	d01a      	beq.n	2fff3454 <stm32mp1_pll1_config_from_opp_khz+0x74>
2fff341e:	fa93 f4a3 	rbit	r4, r3
2fff3422:	fab4 f484 	clz	r4, r4
2fff3426:	b1ab      	cbz	r3, 2fff3454 <stm32mp1_pll1_config_from_opp_khz+0x74>
2fff3428:	b924      	cbnz	r4, 2fff3434 <stm32mp1_pll1_config_from_opp_khz+0x54>
2fff342a:	f240 2002 	movw	r0, #514	; 0x202
2fff342e:	e00d      	b.n	2fff344c <stm32mp1_pll1_config_from_opp_khz+0x6c>
2fff3430:	2700      	movs	r7, #0
2fff3432:	e7e1      	b.n	2fff33f8 <stm32mp1_pll1_config_from_opp_khz+0x18>
2fff3434:	f7fd fd62 	bl	2fff0efc <stm32mp_rcc_base>
2fff3438:	f100 012c 	add.w	r1, r0, #44	; 0x2c
2fff343c:	4620      	mov	r0, r4
2fff343e:	f7ff fedb 	bl	2fff31f8 <stm32mp1_set_clkdiv>
2fff3442:	4604      	mov	r4, r0
2fff3444:	2800      	cmp	r0, #0
2fff3446:	d154      	bne.n	2fff34f2 <stm32mp1_pll1_config_from_opp_khz+0x112>
2fff3448:	f240 2003 	movw	r0, #515	; 0x203
2fff344c:	f7ff ff4a 	bl	2fff32e4 <stm32mp1_set_clksrc>
2fff3450:	4604      	mov	r4, r0
2fff3452:	e04e      	b.n	2fff34f2 <stm32mp1_pll1_config_from_opp_khz+0x112>
2fff3454:	f107 0810 	add.w	r8, r7, #16
2fff3458:	2518      	movs	r5, #24
2fff345a:	fb05 6507 	mla	r5, r5, r7, r6
2fff345e:	eb06 0388 	add.w	r3, r6, r8, lsl #2
2fff3462:	3514      	adds	r5, #20
2fff3464:	f8d3 a004 	ldr.w	sl, [r3, #4]
2fff3468:	f7fd fd48 	bl	2fff0efc <stm32mp_rcc_base>
2fff346c:	4681      	mov	r9, r0
2fff346e:	aa01      	add	r2, sp, #4
2fff3470:	482d      	ldr	r0, [pc, #180]	; (2fff3528 <stm32mp1_pll1_config_from_opp_khz+0x148>)
2fff3472:	4629      	mov	r1, r5
2fff3474:	f7ff fd0c 	bl	2fff2e90 <stm32mp1_pll_compute_pllxcfgr1>
2fff3478:	4604      	mov	r4, r0
2fff347a:	2800      	cmp	r0, #0
2fff347c:	d139      	bne.n	2fff34f2 <stm32mp1_pll1_config_from_opp_khz+0x112>
2fff347e:	f8d9 2084 	ldr.w	r2, [r9, #132]	; 0x84
2fff3482:	9b01      	ldr	r3, [sp, #4]
2fff3484:	429a      	cmp	r2, r3
2fff3486:	d138      	bne.n	2fff34fa <stm32mp1_pll1_config_from_opp_khz+0x11a>
2fff3488:	68ab      	ldr	r3, [r5, #8]
2fff348a:	68ea      	ldr	r2, [r5, #12]
2fff348c:	ea4f 01ca 	mov.w	r1, sl, lsl #3
2fff3490:	f003 007f 	and.w	r0, r3, #127	; 0x7f
2fff3494:	0213      	lsls	r3, r2, #8
2fff3496:	f441 3180 	orr.w	r1, r1, #65536	; 0x10000
2fff349a:	692a      	ldr	r2, [r5, #16]
2fff349c:	f403 43fe 	and.w	r3, r3, #32512	; 0x7f00
2fff34a0:	0412      	lsls	r2, r2, #16
2fff34a2:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
2fff34a6:	4313      	orrs	r3, r2
2fff34a8:	4303      	orrs	r3, r0
2fff34aa:	9301      	str	r3, [sp, #4]
2fff34ac:	f8d9 208c 	ldr.w	r2, [r9, #140]	; 0x8c
2fff34b0:	4291      	cmp	r1, r2
2fff34b2:	d103      	bne.n	2fff34bc <stm32mp1_pll1_config_from_opp_khz+0xdc>
2fff34b4:	f8d9 2088 	ldr.w	r2, [r9, #136]	; 0x88
2fff34b8:	429a      	cmp	r2, r3
2fff34ba:	d01a      	beq.n	2fff34f2 <stm32mp1_pll1_config_from_opp_khz+0x112>
2fff34bc:	f04f 0900 	mov.w	r9, #0
2fff34c0:	eb06 0888 	add.w	r8, r6, r8, lsl #2
2fff34c4:	4629      	mov	r1, r5
2fff34c6:	2000      	movs	r0, #0
2fff34c8:	f8d8 2004 	ldr.w	r2, [r8, #4]
2fff34cc:	f7ff ff60 	bl	2fff3390 <stm32mp1_pll_config>
2fff34d0:	4604      	mov	r4, r0
2fff34d2:	b970      	cbnz	r0, 2fff34f2 <stm32mp1_pll1_config_from_opp_khz+0x112>
2fff34d4:	f1b9 0f00 	cmp.w	r9, #0
2fff34d8:	d00b      	beq.n	2fff34f2 <stm32mp1_pll1_config_from_opp_khz+0x112>
2fff34da:	f7ff fd1f 	bl	2fff2f1c <stm32mp1_pll_start>
2fff34de:	2318      	movs	r3, #24
2fff34e0:	4620      	mov	r0, r4
2fff34e2:	fb03 6607 	mla	r6, r3, r7, r6
2fff34e6:	6ab1      	ldr	r1, [r6, #40]	; 0x28
2fff34e8:	f7ff febc 	bl	2fff3264 <stm32mp1_pll_output>
2fff34ec:	4604      	mov	r4, r0
2fff34ee:	2800      	cmp	r0, #0
2fff34f0:	d09b      	beq.n	2fff342a <stm32mp1_pll1_config_from_opp_khz+0x4a>
2fff34f2:	4620      	mov	r0, r4
2fff34f4:	b002      	add	sp, #8
2fff34f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff34fa:	f44f 7000 	mov.w	r0, #512	; 0x200
2fff34fe:	f7ff fef1 	bl	2fff32e4 <stm32mp1_set_clksrc>
2fff3502:	4604      	mov	r4, r0
2fff3504:	2800      	cmp	r0, #0
2fff3506:	d1f4      	bne.n	2fff34f2 <stm32mp1_pll1_config_from_opp_khz+0x112>
2fff3508:	f7ff fd30 	bl	2fff2f6c <stm32mp1_pll_stop>
2fff350c:	4604      	mov	r4, r0
2fff350e:	2800      	cmp	r0, #0
2fff3510:	d1ef      	bne.n	2fff34f2 <stm32mp1_pll1_config_from_opp_khz+0x112>
2fff3512:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
2fff3516:	e7d3      	b.n	2fff34c0 <stm32mp1_pll1_config_from_opp_khz+0xe0>
2fff3518:	f06f 0405 	mvn.w	r4, #5
2fff351c:	e7e9      	b.n	2fff34f2 <stm32mp1_pll1_config_from_opp_khz+0x112>
2fff351e:	bf00      	nop
2fff3520:	2fffced4 	.word	0x2fffced4
2fff3524:	00010116 	.word	0x00010116
2fff3528:	2fff9b6c 	.word	0x2fff9b6c

2fff352c <stm32mp1_rcc_is_secure>:
2fff352c:	b508      	push	{r3, lr}
2fff352e:	f7fd fce5 	bl	2fff0efc <stm32mp_rcc_base>
2fff3532:	6800      	ldr	r0, [r0, #0]
2fff3534:	f000 0001 	and.w	r0, r0, #1
2fff3538:	bd08      	pop	{r3, pc}

2fff353a <stm32mp1_rcc_is_mckprot>:
2fff353a:	b508      	push	{r3, lr}
2fff353c:	f7fd fcde 	bl	2fff0efc <stm32mp_rcc_base>
2fff3540:	6800      	ldr	r0, [r0, #0]
2fff3542:	f000 0003 	and.w	r0, r0, #3
2fff3546:	1ec3      	subs	r3, r0, #3
2fff3548:	4258      	negs	r0, r3
2fff354a:	4158      	adcs	r0, r3
2fff354c:	bd08      	pop	{r3, pc}
	...

2fff3550 <stm32mp1_clk_rcc_regs_lock>:
2fff3550:	4801      	ldr	r0, [pc, #4]	; (2fff3558 <stm32mp1_clk_rcc_regs_lock+0x8>)
2fff3552:	f7ff bcf5 	b.w	2fff2f40 <stm32mp1_clk_lock>
2fff3556:	bf00      	nop
2fff3558:	2fffcf2c 	.word	0x2fffcf2c

2fff355c <stm32mp1_clk_rcc_regs_unlock>:
2fff355c:	4801      	ldr	r0, [pc, #4]	; (2fff3564 <stm32mp1_clk_rcc_regs_unlock+0x8>)
2fff355e:	f7ff bcfa 	b.w	2fff2f56 <stm32mp1_clk_unlock>
2fff3562:	bf00      	nop
2fff3564:	2fffcf2c 	.word	0x2fffcf2c

2fff3568 <stm32mp_clk_enable>:
2fff3568:	2101      	movs	r1, #1
2fff356a:	f7ff bdcb 	b.w	2fff3104 <__stm32mp1_clk_enable>

2fff356e <stm32mp_clk_disable>:
2fff356e:	2101      	movs	r1, #1
2fff3570:	f7ff be06 	b.w	2fff3180 <__stm32mp1_clk_disable>

2fff3574 <stm32mp1_clk_force_enable>:
2fff3574:	2100      	movs	r1, #0
2fff3576:	f7ff bdc5 	b.w	2fff3104 <__stm32mp1_clk_enable>

2fff357a <stm32mp1_clk_force_disable>:
2fff357a:	2100      	movs	r1, #0
2fff357c:	f7ff be00 	b.w	2fff3180 <__stm32mp1_clk_disable>

2fff3580 <stm32mp_clk_is_enabled>:
2fff3580:	b510      	push	{r4, lr}
2fff3582:	4602      	mov	r2, r0
2fff3584:	f7ff fd55 	bl	2fff3032 <clock_is_always_on>
2fff3588:	b9b8      	cbnz	r0, 2fff35ba <stm32mp_clk_is_enabled+0x3a>
2fff358a:	4610      	mov	r0, r2
2fff358c:	f7ff fd60 	bl	2fff3050 <stm32mp1_clk_get_gated_id>
2fff3590:	1e04      	subs	r4, r0, #0
2fff3592:	da03      	bge.n	2fff359c <stm32mp_clk_is_enabled+0x1c>
2fff3594:	f7fd fb96 	bl	2fff0cc4 <console_flush>
2fff3598:	f003 ebca 	blx	2fff6d30 <do_panic>
2fff359c:	f7fd fcae 	bl	2fff0efc <stm32mp_rcc_base>
2fff35a0:	4b06      	ldr	r3, [pc, #24]	; (2fff35bc <stm32mp_clk_is_enabled+0x3c>)
2fff35a2:	f833 2034 	ldrh.w	r2, [r3, r4, lsl #3]
2fff35a6:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
2fff35aa:	5812      	ldr	r2, [r2, r0]
2fff35ac:	7899      	ldrb	r1, [r3, #2]
2fff35ae:	2301      	movs	r3, #1
2fff35b0:	408b      	lsls	r3, r1
2fff35b2:	4213      	tst	r3, r2
2fff35b4:	bf14      	ite	ne
2fff35b6:	2001      	movne	r0, #1
2fff35b8:	2000      	moveq	r0, #0
2fff35ba:	bd10      	pop	{r4, pc}
2fff35bc:	2fff9988 	.word	0x2fff9988

2fff35c0 <stm32mp_clk_get_rate>:
2fff35c0:	b508      	push	{r3, lr}
2fff35c2:	f7ff fd61 	bl	2fff3088 <stm32mp1_clk_get_parent>
2fff35c6:	2800      	cmp	r0, #0
2fff35c8:	db03      	blt.n	2fff35d2 <stm32mp_clk_get_rate+0x12>
2fff35ca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff35ce:	f7ff bb93 	b.w	2fff2cf8 <get_clock_rate>
2fff35d2:	2000      	movs	r0, #0
2fff35d4:	bd08      	pop	{r3, pc}
	...

2fff35d8 <clk_get_pll1_settings.part.5>:
2fff35d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff35dc:	b099      	sub	sp, #100	; 0x64
2fff35de:	4617      	mov	r7, r2
2fff35e0:	460c      	mov	r4, r1
2fff35e2:	9312      	str	r3, [sp, #72]	; 0x48
2fff35e4:	4b8e      	ldr	r3, [pc, #568]	; (2fff3820 <clk_get_pll1_settings.part.5+0x248>)
2fff35e6:	685a      	ldr	r2, [r3, #4]
2fff35e8:	461e      	mov	r6, r3
2fff35ea:	4291      	cmp	r1, r2
2fff35ec:	f000 80fb 	beq.w	2fff37e6 <clk_get_pll1_settings.part.5+0x20e>
2fff35f0:	689a      	ldr	r2, [r3, #8]
2fff35f2:	4291      	cmp	r1, r2
2fff35f4:	f000 810e 	beq.w	2fff3814 <clk_get_pll1_settings.part.5+0x23c>
2fff35f8:	681b      	ldr	r3, [r3, #0]
2fff35fa:	2b00      	cmp	r3, #0
2fff35fc:	f040 80f0 	bne.w	2fff37e0 <clk_get_pll1_settings.part.5+0x208>
2fff3600:	f5b0 7f20 	cmp.w	r0, #640	; 0x280
2fff3604:	d008      	beq.n	2fff3618 <clk_get_pll1_settings.part.5+0x40>
2fff3606:	f240 2381 	movw	r3, #641	; 0x281
2fff360a:	4298      	cmp	r0, r3
2fff360c:	f000 80a1 	beq.w	2fff3752 <clk_get_pll1_settings.part.5+0x17a>
2fff3610:	f7fd fb58 	bl	2fff0cc4 <console_flush>
2fff3614:	f003 eb8c 	blx	2fff6d30 <do_panic>
2fff3618:	2004      	movs	r0, #4
2fff361a:	f7ff ffd1 	bl	2fff35c0 <stm32mp_clk_get_rate>
2fff361e:	9004      	str	r0, [sp, #16]
2fff3620:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2fff3624:	434c      	muls	r4, r1
2fff3626:	2300      	movs	r3, #0
2fff3628:	ea4f 3954 	mov.w	r9, r4, lsr #13
2fff362c:	4622      	mov	r2, r4
2fff362e:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
2fff3632:	2300      	movs	r3, #0
2fff3634:	2201      	movs	r2, #1
2fff3636:	60fb      	str	r3, [r7, #12]
2fff3638:	613b      	str	r3, [r7, #16]
2fff363a:	617a      	str	r2, [r7, #20]
2fff363c:	0ea3      	lsrs	r3, r4, #26
2fff363e:	4a79      	ldr	r2, [pc, #484]	; (2fff3824 <clk_get_pll1_settings.part.5+0x24c>)
2fff3640:	9309      	str	r3, [sp, #36]	; 0x24
2fff3642:	01a3      	lsls	r3, r4, #6
2fff3644:	9308      	str	r3, [sp, #32]
2fff3646:	fba4 2302 	umull	r2, r3, r4, r2
2fff364a:	04e5      	lsls	r5, r4, #19
2fff364c:	e9cd 2306 	strd	r2, r3, [sp, #24]
2fff3650:	9b07      	ldr	r3, [sp, #28]
2fff3652:	1b1b      	subs	r3, r3, r4
2fff3654:	9307      	str	r3, [sp, #28]
2fff3656:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
2fff365a:	9305      	str	r3, [sp, #20]
2fff365c:	233f      	movs	r3, #63	; 0x3f
2fff365e:	9303      	str	r3, [sp, #12]
2fff3660:	9b03      	ldr	r3, [sp, #12]
2fff3662:	4a71      	ldr	r2, [pc, #452]	; (2fff3828 <clk_get_pll1_settings.part.5+0x250>)
2fff3664:	f103 0801 	add.w	r8, r3, #1
2fff3668:	9b04      	ldr	r3, [sp, #16]
2fff366a:	fbb3 f8f8 	udiv	r8, r3, r8
2fff366e:	f5a8 03f4 	sub.w	r3, r8, #7995392	; 0x7a0000
2fff3672:	f5a3 5390 	sub.w	r3, r3, #4608	; 0x1200
2fff3676:	4293      	cmp	r3, r2
2fff3678:	f200 8096 	bhi.w	2fff37a8 <clk_get_pll1_settings.part.5+0x1d0>
2fff367c:	9b08      	ldr	r3, [sp, #32]
2fff367e:	2201      	movs	r2, #1
2fff3680:	950c      	str	r5, [sp, #48]	; 0x30
2fff3682:	930e      	str	r3, [sp, #56]	; 0x38
2fff3684:	9b09      	ldr	r3, [sp, #36]	; 0x24
2fff3686:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
2fff368a:	930f      	str	r3, [sp, #60]	; 0x3c
2fff368c:	2300      	movs	r3, #0
2fff368e:	e9cd 2300 	strd	r2, r3, [sp]
2fff3692:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
2fff3696:	9a04      	ldr	r2, [sp, #16]
2fff3698:	2300      	movs	r3, #0
2fff369a:	980e      	ldr	r0, [sp, #56]	; 0x38
2fff369c:	990f      	ldr	r1, [sp, #60]	; 0x3c
2fff369e:	f003 ece6 	blx	2fff706c <__aeabi_uldivmod>
2fff36a2:	f1a0 0319 	sub.w	r3, r0, #25
2fff36a6:	4683      	mov	fp, r0
2fff36a8:	2b4b      	cmp	r3, #75	; 0x4b
2fff36aa:	d85f      	bhi.n	2fff376c <clk_get_pll1_settings.part.5+0x194>
2fff36ac:	9a04      	ldr	r2, [sp, #16]
2fff36ae:	1e43      	subs	r3, r0, #1
2fff36b0:	9313      	str	r3, [sp, #76]	; 0x4c
2fff36b2:	2300      	movs	r3, #0
2fff36b4:	980c      	ldr	r0, [sp, #48]	; 0x30
2fff36b6:	990d      	ldr	r1, [sp, #52]	; 0x34
2fff36b8:	f003 ecd8 	blx	2fff706c <__aeabi_uldivmod>
2fff36bc:	eba0 364b 	sub.w	r6, r0, fp, lsl #13
2fff36c0:	fb08 fb0b 	mul.w	fp, r8, fp
2fff36c4:	17f3      	asrs	r3, r6, #31
2fff36c6:	f8cd b058 	str.w	fp, [sp, #88]	; 0x58
2fff36ca:	fba6 ab08 	umull	sl, fp, r6, r8
2fff36ce:	fb08 bb03 	mla	fp, r8, r3, fp
2fff36d2:	1cb3      	adds	r3, r6, #2
2fff36d4:	9314      	str	r3, [sp, #80]	; 0x50
2fff36d6:	9b00      	ldr	r3, [sp, #0]
2fff36d8:	3b01      	subs	r3, #1
2fff36da:	9315      	str	r3, [sp, #84]	; 0x54
2fff36dc:	f5b6 5f00 	cmp.w	r6, #8192	; 0x2000
2fff36e0:	dc44      	bgt.n	2fff376c <clk_get_pll1_settings.part.5+0x194>
2fff36e2:	9b16      	ldr	r3, [sp, #88]	; 0x58
2fff36e4:	ea4f 305a 	mov.w	r0, sl, lsr #13
2fff36e8:	ea40 40cb 	orr.w	r0, r0, fp, lsl #19
2fff36ec:	eb10 0c03 	adds.w	ip, r0, r3
2fff36f0:	4b4e      	ldr	r3, [pc, #312]	; (2fff382c <clk_get_pll1_settings.part.5+0x254>)
2fff36f2:	ea4f 315b 	mov.w	r1, fp, lsr #13
2fff36f6:	f141 0e00 	adc.w	lr, r1, #0
2fff36fa:	eb1c 0303 	adds.w	r3, ip, r3
2fff36fe:	9310      	str	r3, [sp, #64]	; 0x40
2fff3700:	f14e 33ff 	adc.w	r3, lr, #4294967295	; 0xffffffff
2fff3704:	9311      	str	r3, [sp, #68]	; 0x44
2fff3706:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
2fff370a:	a343      	add	r3, pc, #268	; (adr r3, 2fff3818 <clk_get_pll1_settings.part.5+0x240>)
2fff370c:	e9d3 2300 	ldrd	r2, r3, [r3]
2fff3710:	428b      	cmp	r3, r1
2fff3712:	bf08      	it	eq
2fff3714:	4282      	cmpeq	r2, r0
2fff3716:	d320      	bcc.n	2fff375a <clk_get_pll1_settings.part.5+0x182>
2fff3718:	e9dd 2300 	ldrd	r2, r3, [sp]
2fff371c:	4660      	mov	r0, ip
2fff371e:	4671      	mov	r1, lr
2fff3720:	f003 eca4 	blx	2fff706c <__aeabi_uldivmod>
2fff3724:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
2fff3728:	428b      	cmp	r3, r1
2fff372a:	bf08      	it	eq
2fff372c:	4282      	cmpeq	r2, r0
2fff372e:	9b05      	ldr	r3, [sp, #20]
2fff3730:	bf34      	ite	cc
2fff3732:	1b00      	subcc	r0, r0, r4
2fff3734:	1a20      	subcs	r0, r4, r0
2fff3736:	4298      	cmp	r0, r3
2fff3738:	d20d      	bcs.n	2fff3756 <clk_get_pll1_settings.part.5+0x17e>
2fff373a:	9b03      	ldr	r3, [sp, #12]
2fff373c:	603b      	str	r3, [r7, #0]
2fff373e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
2fff3740:	607b      	str	r3, [r7, #4]
2fff3742:	9b15      	ldr	r3, [sp, #84]	; 0x54
2fff3744:	60bb      	str	r3, [r7, #8]
2fff3746:	9b12      	ldr	r3, [sp, #72]	; 0x48
2fff3748:	601e      	str	r6, [r3, #0]
2fff374a:	b928      	cbnz	r0, 2fff3758 <clk_get_pll1_settings.part.5+0x180>
2fff374c:	b019      	add	sp, #100	; 0x64
2fff374e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff3752:	2000      	movs	r0, #0
2fff3754:	e761      	b.n	2fff361a <clk_get_pll1_settings.part.5+0x42>
2fff3756:	9805      	ldr	r0, [sp, #20]
2fff3758:	9005      	str	r0, [sp, #20]
2fff375a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
2fff375c:	3601      	adds	r6, #1
2fff375e:	eb1a 0a03 	adds.w	sl, sl, r3
2fff3762:	9b14      	ldr	r3, [sp, #80]	; 0x50
2fff3764:	f14b 0b00 	adc.w	fp, fp, #0
2fff3768:	42b3      	cmp	r3, r6
2fff376a:	d1b7      	bne.n	2fff36dc <clk_get_pll1_settings.part.5+0x104>
2fff376c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
2fff376e:	9a08      	ldr	r2, [sp, #32]
2fff3770:	189b      	adds	r3, r3, r2
2fff3772:	930e      	str	r3, [sp, #56]	; 0x38
2fff3774:	9a09      	ldr	r2, [sp, #36]	; 0x24
2fff3776:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
2fff3778:	eb42 0303 	adc.w	r3, r2, r3
2fff377c:	930f      	str	r3, [sp, #60]	; 0x3c
2fff377e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
2fff3780:	195b      	adds	r3, r3, r5
2fff3782:	930c      	str	r3, [sp, #48]	; 0x30
2fff3784:	9b0d      	ldr	r3, [sp, #52]	; 0x34
2fff3786:	eb43 0309 	adc.w	r3, r3, r9
2fff378a:	930d      	str	r3, [sp, #52]	; 0x34
2fff378c:	9b00      	ldr	r3, [sp, #0]
2fff378e:	3301      	adds	r3, #1
2fff3790:	9300      	str	r3, [sp, #0]
2fff3792:	9b01      	ldr	r3, [sp, #4]
2fff3794:	f143 0300 	adc.w	r3, r3, #0
2fff3798:	9301      	str	r3, [sp, #4]
2fff379a:	e9dd 2300 	ldrd	r2, r3, [sp]
2fff379e:	2b00      	cmp	r3, #0
2fff37a0:	bf08      	it	eq
2fff37a2:	2a81      	cmpeq	r2, #129	; 0x81
2fff37a4:	f47f af77 	bne.w	2fff3696 <clk_get_pll1_settings.part.5+0xbe>
2fff37a8:	9b03      	ldr	r3, [sp, #12]
2fff37aa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
2fff37ac:	3b01      	subs	r3, #1
2fff37ae:	9303      	str	r3, [sp, #12]
2fff37b0:	9b08      	ldr	r3, [sp, #32]
2fff37b2:	1a9b      	subs	r3, r3, r2
2fff37b4:	9308      	str	r3, [sp, #32]
2fff37b6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
2fff37b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
2fff37ba:	eb63 0302 	sbc.w	r3, r3, r2
2fff37be:	9309      	str	r3, [sp, #36]	; 0x24
2fff37c0:	9b06      	ldr	r3, [sp, #24]
2fff37c2:	18ed      	adds	r5, r5, r3
2fff37c4:	9b07      	ldr	r3, [sp, #28]
2fff37c6:	eb49 0903 	adc.w	r9, r9, r3
2fff37ca:	9b03      	ldr	r3, [sp, #12]
2fff37cc:	3301      	adds	r3, #1
2fff37ce:	f47f af47 	bne.w	2fff3660 <clk_get_pll1_settings.part.5+0x88>
2fff37d2:	9b05      	ldr	r3, [sp, #20]
2fff37d4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff37d8:	3301      	adds	r3, #1
2fff37da:	bf18      	it	ne
2fff37dc:	2000      	movne	r0, #0
2fff37de:	e7b5      	b.n	2fff374c <clk_get_pll1_settings.part.5+0x174>
2fff37e0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff37e4:	e7b2      	b.n	2fff374c <clk_get_pll1_settings.part.5+0x174>
2fff37e6:	2500      	movs	r5, #0
2fff37e8:	2218      	movs	r2, #24
2fff37ea:	fb02 f305 	mul.w	r3, r2, r5
2fff37ee:	18f1      	adds	r1, r6, r3
2fff37f0:	6a89      	ldr	r1, [r1, #40]	; 0x28
2fff37f2:	2900      	cmp	r1, #0
2fff37f4:	f43f af04 	beq.w	2fff3600 <clk_get_pll1_settings.part.5+0x28>
2fff37f8:	3510      	adds	r5, #16
2fff37fa:	f103 0114 	add.w	r1, r3, #20
2fff37fe:	4431      	add	r1, r6
2fff3800:	4638      	mov	r0, r7
2fff3802:	eb06 0685 	add.w	r6, r6, r5, lsl #2
2fff3806:	f004 faf7 	bl	2fff7df8 <memcpy>
2fff380a:	9a12      	ldr	r2, [sp, #72]	; 0x48
2fff380c:	2000      	movs	r0, #0
2fff380e:	6873      	ldr	r3, [r6, #4]
2fff3810:	6013      	str	r3, [r2, #0]
2fff3812:	e79b      	b.n	2fff374c <clk_get_pll1_settings.part.5+0x174>
2fff3814:	2501      	movs	r5, #1
2fff3816:	e7e7      	b.n	2fff37e8 <clk_get_pll1_settings.part.5+0x210>
2fff3818:	17d78400 	.word	0x17d78400
2fff381c:	00000000 	.word	0x00000000
2fff3820:	2fffced4 	.word	0x2fffced4
2fff3824:	ffffe000 	.word	0xffffe000
2fff3828:	007a1200 	.word	0x007a1200
2fff382c:	e8287c00 	.word	0xe8287c00

2fff3830 <stm32mp_clk_timer_get_rate>:
2fff3830:	b538      	push	{r3, r4, r5, lr}
2fff3832:	4605      	mov	r5, r0
2fff3834:	f7fd fb62 	bl	2fff0efc <stm32mp_rcc_base>
2fff3838:	4604      	mov	r4, r0
2fff383a:	4628      	mov	r0, r5
2fff383c:	f7ff fec0 	bl	2fff35c0 <stm32mp_clk_get_rate>
2fff3840:	2dcd      	cmp	r5, #205	; 0xcd
2fff3842:	bf97      	itett	ls
2fff3844:	f8d4 2834 	ldrls.w	r2, [r4, #2100]	; 0x834
2fff3848:	f8d4 2838 	ldrhi.w	r2, [r4, #2104]	; 0x838
2fff384c:	f8d4 3828 	ldrls.w	r3, [r4, #2088]	; 0x828
2fff3850:	f002 0207 	andls.w	r2, r2, #7
2fff3854:	bf84      	itt	hi
2fff3856:	f8d4 382c 	ldrhi.w	r3, [r4, #2092]	; 0x82c
2fff385a:	f002 0207 	andhi.w	r2, r2, #7
2fff385e:	f003 0301 	and.w	r3, r3, #1
2fff3862:	b112      	cbz	r2, 2fff386a <stm32mp_clk_timer_get_rate+0x3a>
2fff3864:	0040      	lsls	r0, r0, #1
2fff3866:	fb03 0000 	mla	r0, r3, r0, r0
2fff386a:	bd38      	pop	{r3, r4, r5, pc}

2fff386c <stm32mp1_rtc_get_read_twice>:
2fff386c:	b538      	push	{r3, r4, r5, lr}
2fff386e:	f7fd fb45 	bl	2fff0efc <stm32mp_rcc_base>
2fff3872:	4605      	mov	r5, r0
2fff3874:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
2fff3878:	f3c0 4001 	ubfx	r0, r0, #16, #2
2fff387c:	2802      	cmp	r0, #2
2fff387e:	d004      	beq.n	2fff388a <stm32mp1_rtc_get_read_twice+0x1e>
2fff3880:	2803      	cmp	r0, #3
2fff3882:	d014      	beq.n	2fff38ae <stm32mp1_rtc_get_read_twice+0x42>
2fff3884:	2801      	cmp	r0, #1
2fff3886:	d11c      	bne.n	2fff38c2 <stm32mp1_rtc_get_read_twice+0x56>
2fff3888:	2003      	movs	r0, #3
2fff388a:	f7ff fe99 	bl	2fff35c0 <stm32mp_clk_get_rate>
2fff388e:	4604      	mov	r4, r0
2fff3890:	f8d5 5834 	ldr.w	r5, [r5, #2100]	; 0x834
2fff3894:	20c4      	movs	r0, #196	; 0xc4
2fff3896:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
2fff389a:	f7ff fe91 	bl	2fff35c0 <stm32mp_clk_get_rate>
2fff389e:	f005 0507 	and.w	r5, r5, #7
2fff38a2:	40e8      	lsrs	r0, r5
2fff38a4:	4284      	cmp	r4, r0
2fff38a6:	bf94      	ite	ls
2fff38a8:	2000      	movls	r0, #0
2fff38aa:	2001      	movhi	r0, #1
2fff38ac:	bd38      	pop	{r3, r4, r5, pc}
2fff38ae:	2000      	movs	r0, #0
2fff38b0:	f7ff fe86 	bl	2fff35c0 <stm32mp_clk_get_rate>
2fff38b4:	6c6c      	ldr	r4, [r5, #68]	; 0x44
2fff38b6:	f004 043f 	and.w	r4, r4, #63	; 0x3f
2fff38ba:	3401      	adds	r4, #1
2fff38bc:	fbb0 f4f4 	udiv	r4, r0, r4
2fff38c0:	e7e6      	b.n	2fff3890 <stm32mp1_rtc_get_read_twice+0x24>
2fff38c2:	f7fd f9ff 	bl	2fff0cc4 <console_flush>
2fff38c6:	f003 ea34 	blx	2fff6d30 <do_panic>
	...

2fff38cc <stm32mp1_round_opp_khz>:
2fff38cc:	4a0a      	ldr	r2, [pc, #40]	; (2fff38f8 <stm32mp1_round_opp_khz+0x2c>)
2fff38ce:	4b0b      	ldr	r3, [pc, #44]	; (2fff38fc <stm32mp1_round_opp_khz+0x30>)
2fff38d0:	6811      	ldr	r1, [r2, #0]
2fff38d2:	4299      	cmp	r1, r3
2fff38d4:	d10d      	bne.n	2fff38f2 <stm32mp1_round_opp_khz+0x26>
2fff38d6:	6853      	ldr	r3, [r2, #4]
2fff38d8:	6801      	ldr	r1, [r0, #0]
2fff38da:	6892      	ldr	r2, [r2, #8]
2fff38dc:	428b      	cmp	r3, r1
2fff38de:	bf88      	it	hi
2fff38e0:	2300      	movhi	r3, #0
2fff38e2:	4291      	cmp	r1, r2
2fff38e4:	d302      	bcc.n	2fff38ec <stm32mp1_round_opp_khz+0x20>
2fff38e6:	4293      	cmp	r3, r2
2fff38e8:	bf38      	it	cc
2fff38ea:	4613      	movcc	r3, r2
2fff38ec:	6003      	str	r3, [r0, #0]
2fff38ee:	2000      	movs	r0, #0
2fff38f0:	4770      	bx	lr
2fff38f2:	4b03      	ldr	r3, [pc, #12]	; (2fff3900 <stm32mp1_round_opp_khz+0x34>)
2fff38f4:	681b      	ldr	r3, [r3, #0]
2fff38f6:	e7f9      	b.n	2fff38ec <stm32mp1_round_opp_khz+0x20>
2fff38f8:	2fffced4 	.word	0x2fffced4
2fff38fc:	504c4c31 	.word	0x504c4c31
2fff3900:	2fffcde4 	.word	0x2fffcde4

2fff3904 <stm32mp1_set_opp_khz>:
2fff3904:	b538      	push	{r3, r4, r5, lr}
2fff3906:	4605      	mov	r5, r0
2fff3908:	4c16      	ldr	r4, [pc, #88]	; (2fff3964 <stm32mp1_set_opp_khz+0x60>)
2fff390a:	f7fd faf7 	bl	2fff0efc <stm32mp_rcc_base>
2fff390e:	6823      	ldr	r3, [r4, #0]
2fff3910:	42ab      	cmp	r3, r5
2fff3912:	d01b      	beq.n	2fff394c <stm32mp1_set_opp_khz+0x48>
2fff3914:	4b14      	ldr	r3, [pc, #80]	; (2fff3968 <stm32mp1_set_opp_khz+0x64>)
2fff3916:	681a      	ldr	r2, [r3, #0]
2fff3918:	4b14      	ldr	r3, [pc, #80]	; (2fff396c <stm32mp1_set_opp_khz+0x68>)
2fff391a:	429a      	cmp	r2, r3
2fff391c:	d118      	bne.n	2fff3950 <stm32mp1_set_opp_khz+0x4c>
2fff391e:	6a03      	ldr	r3, [r0, #32]
2fff3920:	f003 0307 	and.w	r3, r3, #7
2fff3924:	3b02      	subs	r3, #2
2fff3926:	2b01      	cmp	r3, #1
2fff3928:	d815      	bhi.n	2fff3956 <stm32mp1_set_opp_khz+0x52>
2fff392a:	4628      	mov	r0, r5
2fff392c:	f7ff fd58 	bl	2fff33e0 <stm32mp1_pll1_config_from_opp_khz>
2fff3930:	b150      	cbz	r0, 2fff3948 <stm32mp1_set_opp_khz+0x44>
2fff3932:	6820      	ldr	r0, [r4, #0]
2fff3934:	f7ff fd54 	bl	2fff33e0 <stm32mp1_pll1_config_from_opp_khz>
2fff3938:	b180      	cbz	r0, 2fff395c <stm32mp1_set_opp_khz+0x58>
2fff393a:	480d      	ldr	r0, [pc, #52]	; (2fff3970 <stm32mp1_set_opp_khz+0x6c>)
2fff393c:	f7fd f920 	bl	2fff0b80 <tf_log>
2fff3940:	f7fd f9c0 	bl	2fff0cc4 <console_flush>
2fff3944:	f003 e9f4 	blx	2fff6d30 <do_panic>
2fff3948:	6025      	str	r5, [r4, #0]
2fff394a:	bd38      	pop	{r3, r4, r5, pc}
2fff394c:	2000      	movs	r0, #0
2fff394e:	e7fc      	b.n	2fff394a <stm32mp1_set_opp_khz+0x46>
2fff3950:	f06f 000c 	mvn.w	r0, #12
2fff3954:	e7f9      	b.n	2fff394a <stm32mp1_set_opp_khz+0x46>
2fff3956:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff395a:	e7f6      	b.n	2fff394a <stm32mp1_set_opp_khz+0x46>
2fff395c:	f06f 0004 	mvn.w	r0, #4
2fff3960:	e7f3      	b.n	2fff394a <stm32mp1_set_opp_khz+0x46>
2fff3962:	bf00      	nop
2fff3964:	2fffcde4 	.word	0x2fffcde4
2fff3968:	2fffced4 	.word	0x2fffced4
2fff396c:	504c4c31 	.word	0x504c4c31
2fff3970:	2fff9dd8 	.word	0x2fff9dd8

2fff3974 <stm32mp1_clk_compute_all_pll1_settings>:
2fff3974:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
2fff3978:	4606      	mov	r6, r0
2fff397a:	4c48      	ldr	r4, [pc, #288]	; (2fff3a9c <stm32mp1_clk_compute_all_pll1_settings+0x128>)
2fff397c:	a802      	add	r0, sp, #8
2fff397e:	2302      	movs	r3, #2
2fff3980:	f840 3d04 	str.w	r3, [r0, #-4]!
2fff3984:	f104 020c 	add.w	r2, r4, #12
2fff3988:	1d21      	adds	r1, r4, #4
2fff398a:	f002 fdcb 	bl	2fff6524 <dt_get_all_opp_freqvolt>
2fff398e:	1c43      	adds	r3, r0, #1
2fff3990:	4607      	mov	r7, r0
2fff3992:	d003      	beq.n	2fff399c <stm32mp1_clk_compute_all_pll1_settings+0x28>
2fff3994:	b120      	cbz	r0, 2fff39a0 <stm32mp1_clk_compute_all_pll1_settings+0x2c>
2fff3996:	4842      	ldr	r0, [pc, #264]	; (2fff3aa0 <stm32mp1_clk_compute_all_pll1_settings+0x12c>)
2fff3998:	f7fd f8f2 	bl	2fff0b80 <tf_log>
2fff399c:	2000      	movs	r0, #0
2fff399e:	e079      	b.n	2fff3a94 <stm32mp1_clk_compute_all_pll1_settings+0x120>
2fff39a0:	f7fd faac 	bl	2fff0efc <stm32mp_rcc_base>
2fff39a4:	4605      	mov	r5, r0
2fff39a6:	20c2      	movs	r0, #194	; 0xc2
2fff39a8:	f7ff fe0a 	bl	2fff35c0 <stm32mp_clk_get_rate>
2fff39ac:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
2fff39b0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2fff39b4:	fbb0 f0f3 	udiv	r0, r0, r3
2fff39b8:	6863      	ldr	r3, [r4, #4]
2fff39ba:	4283      	cmp	r3, r0
2fff39bc:	d044      	beq.n	2fff3a48 <stm32mp1_clk_compute_all_pll1_settings+0xd4>
2fff39be:	68a3      	ldr	r3, [r4, #8]
2fff39c0:	4283      	cmp	r3, r0
2fff39c2:	d143      	bne.n	2fff3a4c <stm32mp1_clk_compute_all_pll1_settings+0xd8>
2fff39c4:	2001      	movs	r0, #1
2fff39c6:	1c83      	adds	r3, r0, #2
2fff39c8:	eb04 0383 	add.w	r3, r4, r3, lsl #2
2fff39cc:	685b      	ldr	r3, [r3, #4]
2fff39ce:	429e      	cmp	r6, r3
2fff39d0:	d001      	beq.n	2fff39d6 <stm32mp1_clk_compute_all_pll1_settings+0x62>
2fff39d2:	2e00      	cmp	r6, #0
2fff39d4:	d13a      	bne.n	2fff3a4c <stm32mp1_clk_compute_all_pll1_settings+0xd8>
2fff39d6:	f8d5 1084 	ldr.w	r1, [r5, #132]	; 0x84
2fff39da:	2318      	movs	r3, #24
2fff39dc:	fb03 4200 	mla	r2, r3, r0, r4
2fff39e0:	f3c1 4105 	ubfx	r1, r1, #16, #6
2fff39e4:	4606      	mov	r6, r0
2fff39e6:	6151      	str	r1, [r2, #20]
2fff39e8:	f8d5 1084 	ldr.w	r1, [r5, #132]	; 0x84
2fff39ec:	fb00 3303 	mla	r3, r0, r3, r3
2fff39f0:	f3c1 0108 	ubfx	r1, r1, #0, #9
2fff39f4:	6191      	str	r1, [r2, #24]
2fff39f6:	f8d5 1088 	ldr.w	r1, [r5, #136]	; 0x88
2fff39fa:	4423      	add	r3, r4
2fff39fc:	f001 017f 	and.w	r1, r1, #127	; 0x7f
2fff3a00:	6059      	str	r1, [r3, #4]
2fff3a02:	f8d5 3088 	ldr.w	r3, [r5, #136]	; 0x88
2fff3a06:	f3c3 2306 	ubfx	r3, r3, #8, #7
2fff3a0a:	6213      	str	r3, [r2, #32]
2fff3a0c:	f8d5 3088 	ldr.w	r3, [r5, #136]	; 0x88
2fff3a10:	f3c3 4306 	ubfx	r3, r3, #16, #7
2fff3a14:	6253      	str	r3, [r2, #36]	; 0x24
2fff3a16:	f8d5 3080 	ldr.w	r3, [r5, #128]	; 0x80
2fff3a1a:	091b      	lsrs	r3, r3, #4
2fff3a1c:	6293      	str	r3, [r2, #40]	; 0x28
2fff3a1e:	f100 0310 	add.w	r3, r0, #16
2fff3a22:	f8d5 208c 	ldr.w	r2, [r5, #140]	; 0x8c
2fff3a26:	eb04 0383 	add.w	r3, r4, r3, lsl #2
2fff3a2a:	f3c2 02cc 	ubfx	r2, r2, #3, #13
2fff3a2e:	605a      	str	r2, [r3, #4]
2fff3a30:	f7fd fa64 	bl	2fff0efc <stm32mp_rcc_base>
2fff3a34:	6a83      	ldr	r3, [r0, #40]	; 0x28
2fff3a36:	f013 0303 	ands.w	r3, r3, #3
2fff3a3a:	d00a      	beq.n	2fff3a52 <stm32mp1_clk_compute_all_pll1_settings+0xde>
2fff3a3c:	2b01      	cmp	r3, #1
2fff3a3e:	d017      	beq.n	2fff3a70 <stm32mp1_clk_compute_all_pll1_settings+0xfc>
2fff3a40:	f7fd f940 	bl	2fff0cc4 <console_flush>
2fff3a44:	f003 e974 	blx	2fff6d30 <do_panic>
2fff3a48:	4638      	mov	r0, r7
2fff3a4a:	e7bc      	b.n	2fff39c6 <stm32mp1_clk_compute_all_pll1_settings+0x52>
2fff3a4c:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
2fff3a50:	e7ee      	b.n	2fff3a30 <stm32mp1_clk_compute_all_pll1_settings+0xbc>
2fff3a52:	f44f 7720 	mov.w	r7, #640	; 0x280
2fff3a56:	f8df 8050 	ldr.w	r8, [pc, #80]	; 2fff3aa8 <stm32mp1_clk_compute_all_pll1_settings+0x134>
2fff3a5a:	2500      	movs	r5, #0
2fff3a5c:	f04f 0a18 	mov.w	sl, #24
2fff3a60:	f1a8 0930 	sub.w	r9, r8, #48	; 0x30
2fff3a64:	9b01      	ldr	r3, [sp, #4]
2fff3a66:	42ab      	cmp	r3, r5
2fff3a68:	dc05      	bgt.n	2fff3a76 <stm32mp1_clk_compute_all_pll1_settings+0x102>
2fff3a6a:	4b0e      	ldr	r3, [pc, #56]	; (2fff3aa4 <stm32mp1_clk_compute_all_pll1_settings+0x130>)
2fff3a6c:	6023      	str	r3, [r4, #0]
2fff3a6e:	e795      	b.n	2fff399c <stm32mp1_clk_compute_all_pll1_settings+0x28>
2fff3a70:	f240 2781 	movw	r7, #641	; 0x281
2fff3a74:	e7ef      	b.n	2fff3a56 <stm32mp1_clk_compute_all_pll1_settings+0xe2>
2fff3a76:	42b5      	cmp	r5, r6
2fff3a78:	d101      	bne.n	2fff3a7e <stm32mp1_clk_compute_all_pll1_settings+0x10a>
2fff3a7a:	3501      	adds	r5, #1
2fff3a7c:	e7f2      	b.n	2fff3a64 <stm32mp1_clk_compute_all_pll1_settings+0xf0>
2fff3a7e:	00ab      	lsls	r3, r5, #2
2fff3a80:	4638      	mov	r0, r7
2fff3a82:	18e1      	adds	r1, r4, r3
2fff3a84:	fb0a 9205 	mla	r2, sl, r5, r9
2fff3a88:	4443      	add	r3, r8
2fff3a8a:	6849      	ldr	r1, [r1, #4]
2fff3a8c:	f7ff fda4 	bl	2fff35d8 <clk_get_pll1_settings.part.5>
2fff3a90:	2800      	cmp	r0, #0
2fff3a92:	d0f2      	beq.n	2fff3a7a <stm32mp1_clk_compute_all_pll1_settings+0x106>
2fff3a94:	b002      	add	sp, #8
2fff3a96:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff3a9a:	bf00      	nop
2fff3a9c:	2fffced4 	.word	0x2fffced4
2fff3aa0:	2fff9956 	.word	0x2fff9956
2fff3aa4:	504c4c31 	.word	0x504c4c31
2fff3aa8:	2fffcf18 	.word	0x2fffcf18

2fff3aac <stm32mp1_clk_lp_save_opp_pll1_settings>:
2fff3aac:	294c      	cmp	r1, #76	; 0x4c
2fff3aae:	460a      	mov	r2, r1
2fff3ab0:	b510      	push	{r4, lr}
2fff3ab2:	d104      	bne.n	2fff3abe <stm32mp1_clk_lp_save_opp_pll1_settings+0x12>
2fff3ab4:	4b06      	ldr	r3, [pc, #24]	; (2fff3ad0 <stm32mp1_clk_lp_save_opp_pll1_settings+0x24>)
2fff3ab6:	4907      	ldr	r1, [pc, #28]	; (2fff3ad4 <stm32mp1_clk_lp_save_opp_pll1_settings+0x28>)
2fff3ab8:	681c      	ldr	r4, [r3, #0]
2fff3aba:	428c      	cmp	r4, r1
2fff3abc:	d003      	beq.n	2fff3ac6 <stm32mp1_clk_lp_save_opp_pll1_settings+0x1a>
2fff3abe:	f7fd f901 	bl	2fff0cc4 <console_flush>
2fff3ac2:	f003 e936 	blx	2fff6d30 <do_panic>
2fff3ac6:	4619      	mov	r1, r3
2fff3ac8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff3acc:	f004 b994 	b.w	2fff7df8 <memcpy>
2fff3ad0:	2fffced4 	.word	0x2fffced4
2fff3ad4:	504c4c31 	.word	0x504c4c31

2fff3ad8 <stm32mp1_clk_lp_load_opp_pll1_settings>:
2fff3ad8:	294c      	cmp	r1, #76	; 0x4c
2fff3ada:	460a      	mov	r2, r1
2fff3adc:	b508      	push	{r3, lr}
2fff3ade:	d003      	beq.n	2fff3ae8 <stm32mp1_clk_lp_load_opp_pll1_settings+0x10>
2fff3ae0:	f7fd f8f0 	bl	2fff0cc4 <console_flush>
2fff3ae4:	f003 e924 	blx	2fff6d30 <do_panic>
2fff3ae8:	4601      	mov	r1, r0
2fff3aea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff3aee:	4801      	ldr	r0, [pc, #4]	; (2fff3af4 <stm32mp1_clk_lp_load_opp_pll1_settings+0x1c>)
2fff3af0:	f004 b982 	b.w	2fff7df8 <memcpy>
2fff3af4:	2fffced4 	.word	0x2fffced4

2fff3af8 <stm32mp1_register_clock_parents_secure>:
2fff3af8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff3afa:	4605      	mov	r5, r0
2fff3afc:	f7ff fd16 	bl	2fff352c <stm32mp1_rcc_is_secure>
2fff3b00:	2800      	cmp	r0, #0
2fff3b02:	d075      	beq.n	2fff3bf0 <stm32mp1_register_clock_parents_secure+0xf8>
2fff3b04:	f1a5 03b0 	sub.w	r3, r5, #176	; 0xb0
2fff3b08:	2b03      	cmp	r3, #3
2fff3b0a:	d80f      	bhi.n	2fff3b2c <stm32mp1_register_clock_parents_secure+0x34>
2fff3b0c:	e8df f003 	tbb	[pc, r3]
2fff3b10:	07027070 	.word	0x07027070
2fff3b14:	2013      	movs	r0, #19
2fff3b16:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
2fff3b1a:	f7fb b87d 	b.w	2ffeec18 <stm32mp_register_secure_periph>
2fff3b1e:	4839      	ldr	r0, [pc, #228]	; (2fff3c04 <stm32mp1_register_clock_parents_secure+0x10c>)
2fff3b20:	f7fd f82e 	bl	2fff0b80 <tf_log>
2fff3b24:	f7fd f8ce 	bl	2fff0cc4 <console_flush>
2fff3b28:	f003 e902 	blx	2fff6d30 <do_panic>
2fff3b2c:	4628      	mov	r0, r5
2fff3b2e:	f7ff faab 	bl	2fff3088 <stm32mp1_clk_get_parent>
2fff3b32:	1e04      	subs	r4, r0, #0
2fff3b34:	da05      	bge.n	2fff3b42 <stm32mp1_register_clock_parents_secure+0x4a>
2fff3b36:	4834      	ldr	r0, [pc, #208]	; (2fff3c08 <stm32mp1_register_clock_parents_secure+0x110>)
2fff3b38:	4629      	mov	r1, r5
2fff3b3a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
2fff3b3e:	f7fd b81f 	b.w	2fff0b80 <tf_log>
2fff3b42:	4e32      	ldr	r6, [pc, #200]	; (2fff3c0c <stm32mp1_register_clock_parents_secure+0x114>)
2fff3b44:	4d32      	ldr	r5, [pc, #200]	; (2fff3c10 <stm32mp1_register_clock_parents_secure+0x118>)
2fff3b46:	4f33      	ldr	r7, [pc, #204]	; (2fff3c14 <stm32mp1_register_clock_parents_secure+0x11c>)
2fff3b48:	2c1d      	cmp	r4, #29
2fff3b4a:	d8eb      	bhi.n	2fff3b24 <stm32mp1_register_clock_parents_secure+0x2c>
2fff3b4c:	2301      	movs	r3, #1
2fff3b4e:	40a3      	lsls	r3, r4
2fff3b50:	4233      	tst	r3, r6
2fff3b52:	d105      	bne.n	2fff3b60 <stm32mp1_register_clock_parents_secure+0x68>
2fff3b54:	f413 2fe0 	tst.w	r3, #458752	; 0x70000
2fff3b58:	d0e4      	beq.n	2fff3b24 <stm32mp1_register_clock_parents_secure+0x2c>
2fff3b5a:	2013      	movs	r0, #19
2fff3b5c:	f7fb f85c 	bl	2ffeec18 <stm32mp_register_secure_periph>
2fff3b60:	3c0a      	subs	r4, #10
2fff3b62:	2c13      	cmp	r4, #19
2fff3b64:	d844      	bhi.n	2fff3bf0 <stm32mp1_register_clock_parents_secure+0xf8>
2fff3b66:	a301      	add	r3, pc, #4	; (adr r3, 2fff3b6c <stm32mp1_register_clock_parents_secure+0x74>)
2fff3b68:	f853 f024 	ldr.w	pc, [r3, r4, lsl #2]
2fff3b6c:	2fff3bf3 	.word	0x2fff3bf3
2fff3b70:	2fff3bf3 	.word	0x2fff3bf3
2fff3b74:	2fff3bf3 	.word	0x2fff3bf3
2fff3b78:	2fff3bff 	.word	0x2fff3bff
2fff3b7c:	2fff3bff 	.word	0x2fff3bff
2fff3b80:	2fff3bff 	.word	0x2fff3bff
2fff3b84:	2fff3bbd 	.word	0x2fff3bbd
2fff3b88:	2fff3bbd 	.word	0x2fff3bbd
2fff3b8c:	2fff3bbd 	.word	0x2fff3bbd
2fff3b90:	2fff3bfb 	.word	0x2fff3bfb
2fff3b94:	2fff3bfb 	.word	0x2fff3bfb
2fff3b98:	2fff3bfb 	.word	0x2fff3bfb
2fff3b9c:	2fff3be3 	.word	0x2fff3be3
2fff3ba0:	2fff3b25 	.word	0x2fff3b25
2fff3ba4:	2fff3b25 	.word	0x2fff3b25
2fff3ba8:	2fff3bf1 	.word	0x2fff3bf1
2fff3bac:	2fff3be3 	.word	0x2fff3be3
2fff3bb0:	2fff3be3 	.word	0x2fff3be3
2fff3bb4:	2fff3b25 	.word	0x2fff3b25
2fff3bb8:	2fff3b25 	.word	0x2fff3b25
2fff3bbc:	2402      	movs	r4, #2
2fff3bbe:	f7fd f99d 	bl	2fff0efc <stm32mp_rcc_base>
2fff3bc2:	eb05 1344 	add.w	r3, r5, r4, lsl #5
2fff3bc6:	889b      	ldrh	r3, [r3, #4]
2fff3bc8:	581b      	ldr	r3, [r3, r0]
2fff3bca:	f003 0303 	and.w	r3, r3, #3
2fff3bce:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
2fff3bd2:	3304      	adds	r3, #4
2fff3bd4:	f855 4023 	ldr.w	r4, [r5, r3, lsl #2]
2fff3bd8:	2cff      	cmp	r4, #255	; 0xff
2fff3bda:	d009      	beq.n	2fff3bf0 <stm32mp1_register_clock_parents_secure+0xf8>
2fff3bdc:	2c00      	cmp	r4, #0
2fff3bde:	dab3      	bge.n	2fff3b48 <stm32mp1_register_clock_parents_secure+0x50>
2fff3be0:	e006      	b.n	2fff3bf0 <stm32mp1_register_clock_parents_secure+0xf8>
2fff3be2:	f7fd f98b 	bl	2fff0efc <stm32mp_rcc_base>
2fff3be6:	6a43      	ldr	r3, [r0, #36]	; 0x24
2fff3be8:	f003 0307 	and.w	r3, r3, #7
2fff3bec:	2b02      	cmp	r3, #2
2fff3bee:	d902      	bls.n	2fff3bf6 <stm32mp1_register_clock_parents_secure+0xfe>
2fff3bf0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff3bf2:	2400      	movs	r4, #0
2fff3bf4:	e7e3      	b.n	2fff3bbe <stm32mp1_register_clock_parents_secure+0xc6>
2fff3bf6:	5cfc      	ldrb	r4, [r7, r3]
2fff3bf8:	e7a6      	b.n	2fff3b48 <stm32mp1_register_clock_parents_secure+0x50>
2fff3bfa:	2403      	movs	r4, #3
2fff3bfc:	e7df      	b.n	2fff3bbe <stm32mp1_register_clock_parents_secure+0xc6>
2fff3bfe:	2401      	movs	r4, #1
2fff3c00:	e7dd      	b.n	2fff3bbe <stm32mp1_register_clock_parents_secure+0xc6>
2fff3c02:	bf00      	nop
2fff3c04:	2fff9d57 	.word	0x2fff9d57
2fff3c08:	2fff9d70 	.word	0x2fff9d70
2fff3c0c:	3c40ffdf 	.word	0x3c40ffdf
2fff3c10:	2fff9b6c 	.word	0x2fff9b6c
2fff3c14:	2fff98ef 	.word	0x2fff98ef

2fff3c18 <save_clock_pm_context>:
2fff3c18:	b508      	push	{r3, lr}
2fff3c1a:	2288      	movs	r2, #136	; 0x88
2fff3c1c:	490d      	ldr	r1, [pc, #52]	; (2fff3c54 <save_clock_pm_context+0x3c>)
2fff3c1e:	2000      	movs	r0, #0
2fff3c20:	f002 fda7 	bl	2fff6772 <stm32mp1_pm_save_clock_cfg>
2fff3c24:	490c      	ldr	r1, [pc, #48]	; (2fff3c58 <save_clock_pm_context+0x40>)
2fff3c26:	2204      	movs	r2, #4
2fff3c28:	2088      	movs	r0, #136	; 0x88
2fff3c2a:	f002 fda2 	bl	2fff6772 <stm32mp1_pm_save_clock_cfg>
2fff3c2e:	490b      	ldr	r1, [pc, #44]	; (2fff3c5c <save_clock_pm_context+0x44>)
2fff3c30:	2258      	movs	r2, #88	; 0x58
2fff3c32:	208c      	movs	r0, #140	; 0x8c
2fff3c34:	f002 fd9d 	bl	2fff6772 <stm32mp1_pm_save_clock_cfg>
2fff3c38:	4909      	ldr	r1, [pc, #36]	; (2fff3c60 <save_clock_pm_context+0x48>)
2fff3c3a:	2238      	movs	r2, #56	; 0x38
2fff3c3c:	20e4      	movs	r0, #228	; 0xe4
2fff3c3e:	f002 fd98 	bl	2fff6772 <stm32mp1_pm_save_clock_cfg>
2fff3c42:	4908      	ldr	r1, [pc, #32]	; (2fff3c64 <save_clock_pm_context+0x4c>)
2fff3c44:	22e4      	movs	r2, #228	; 0xe4
2fff3c46:	f44f 708e 	mov.w	r0, #284	; 0x11c
2fff3c4a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff3c4e:	f002 bd90 	b.w	2fff6772 <stm32mp1_pm_save_clock_cfg>
2fff3c52:	bf00      	nop
2fff3c54:	2fffb490 	.word	0x2fffb490
2fff3c58:	2fffb518 	.word	0x2fffb518
2fff3c5c:	2fffb438 	.word	0x2fffb438
2fff3c60:	2fffb400 	.word	0x2fffb400
2fff3c64:	2fffcde8 	.word	0x2fffcde8

2fff3c68 <restore_clock_pm_context>:
2fff3c68:	b508      	push	{r3, lr}
2fff3c6a:	2288      	movs	r2, #136	; 0x88
2fff3c6c:	490d      	ldr	r1, [pc, #52]	; (2fff3ca4 <restore_clock_pm_context+0x3c>)
2fff3c6e:	2000      	movs	r0, #0
2fff3c70:	f002 fd9b 	bl	2fff67aa <stm32mp1_pm_restore_clock_cfg>
2fff3c74:	490c      	ldr	r1, [pc, #48]	; (2fff3ca8 <restore_clock_pm_context+0x40>)
2fff3c76:	2204      	movs	r2, #4
2fff3c78:	2088      	movs	r0, #136	; 0x88
2fff3c7a:	f002 fd96 	bl	2fff67aa <stm32mp1_pm_restore_clock_cfg>
2fff3c7e:	490b      	ldr	r1, [pc, #44]	; (2fff3cac <restore_clock_pm_context+0x44>)
2fff3c80:	2258      	movs	r2, #88	; 0x58
2fff3c82:	208c      	movs	r0, #140	; 0x8c
2fff3c84:	f002 fd91 	bl	2fff67aa <stm32mp1_pm_restore_clock_cfg>
2fff3c88:	4909      	ldr	r1, [pc, #36]	; (2fff3cb0 <restore_clock_pm_context+0x48>)
2fff3c8a:	2238      	movs	r2, #56	; 0x38
2fff3c8c:	20e4      	movs	r0, #228	; 0xe4
2fff3c8e:	f002 fd8c 	bl	2fff67aa <stm32mp1_pm_restore_clock_cfg>
2fff3c92:	4908      	ldr	r1, [pc, #32]	; (2fff3cb4 <restore_clock_pm_context+0x4c>)
2fff3c94:	22e4      	movs	r2, #228	; 0xe4
2fff3c96:	f44f 708e 	mov.w	r0, #284	; 0x11c
2fff3c9a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff3c9e:	f002 bd84 	b.w	2fff67aa <stm32mp1_pm_restore_clock_cfg>
2fff3ca2:	bf00      	nop
2fff3ca4:	2fffb490 	.word	0x2fffb490
2fff3ca8:	2fffb518 	.word	0x2fffb518
2fff3cac:	2fffb438 	.word	0x2fffb438
2fff3cb0:	2fffb400 	.word	0x2fffb400
2fff3cb4:	2fffcde8 	.word	0x2fffcde8

2fff3cb8 <stm32mp1_clock_suspend>:
2fff3cb8:	b538      	push	{r3, r4, r5, lr}
2fff3cba:	f7fd f91f 	bl	2fff0efc <stm32mp_rcc_base>
2fff3cbe:	4a1d      	ldr	r2, [pc, #116]	; (2fff3d34 <stm32mp1_clock_suspend+0x7c>)
2fff3cc0:	2300      	movs	r3, #0
2fff3cc2:	5899      	ldr	r1, [r3, r2]
2fff3cc4:	5844      	ldr	r4, [r0, r1]
2fff3cc6:	18d1      	adds	r1, r2, r3
2fff3cc8:	3308      	adds	r3, #8
2fff3cca:	2b38      	cmp	r3, #56	; 0x38
2fff3ccc:	604c      	str	r4, [r1, #4]
2fff3cce:	d1f8      	bne.n	2fff3cc2 <stm32mp1_clock_suspend+0xa>
2fff3cd0:	f7fd f914 	bl	2fff0efc <stm32mp_rcc_base>
2fff3cd4:	4a18      	ldr	r2, [pc, #96]	; (2fff3d38 <stm32mp1_clock_suspend+0x80>)
2fff3cd6:	2300      	movs	r3, #0
2fff3cd8:	5899      	ldr	r1, [r3, r2]
2fff3cda:	5844      	ldr	r4, [r0, r1]
2fff3cdc:	18d1      	adds	r1, r2, r3
2fff3cde:	3308      	adds	r3, #8
2fff3ce0:	2b58      	cmp	r3, #88	; 0x58
2fff3ce2:	604c      	str	r4, [r1, #4]
2fff3ce4:	d1f8      	bne.n	2fff3cd8 <stm32mp1_clock_suspend+0x20>
2fff3ce6:	f7fd f909 	bl	2fff0efc <stm32mp_rcc_base>
2fff3cea:	4a14      	ldr	r2, [pc, #80]	; (2fff3d3c <stm32mp1_clock_suspend+0x84>)
2fff3cec:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
2fff3cf0:	f102 0488 	add.w	r4, r2, #136	; 0x88
2fff3cf4:	8811      	ldrh	r1, [r2, #0]
2fff3cf6:	3204      	adds	r2, #4
2fff3cf8:	580d      	ldr	r5, [r1, r0]
2fff3cfa:	f812 1c01 	ldrb.w	r1, [r2, #-1]
2fff3cfe:	f1c1 0120 	rsb	r1, r1, #32
2fff3d02:	fa23 f101 	lsr.w	r1, r3, r1
2fff3d06:	4029      	ands	r1, r5
2fff3d08:	f802 1c02 	strb.w	r1, [r2, #-2]
2fff3d0c:	4294      	cmp	r4, r2
2fff3d0e:	d1f1      	bne.n	2fff3cf4 <stm32mp1_clock_suspend+0x3c>
2fff3d10:	4a0b      	ldr	r2, [pc, #44]	; (2fff3d40 <stm32mp1_clock_suspend+0x88>)
2fff3d12:	8811      	ldrh	r1, [r2, #0]
2fff3d14:	5808      	ldr	r0, [r1, r0]
2fff3d16:	78d1      	ldrb	r1, [r2, #3]
2fff3d18:	f1c1 011c 	rsb	r1, r1, #28
2fff3d1c:	40cb      	lsrs	r3, r1
2fff3d1e:	f023 030f 	bic.w	r3, r3, #15
2fff3d22:	4003      	ands	r3, r0
2fff3d24:	7093      	strb	r3, [r2, #2]
2fff3d26:	f7fd f8e9 	bl	2fff0efc <stm32mp_rcc_base>
2fff3d2a:	2300      	movs	r3, #0
2fff3d2c:	f8c0 3408 	str.w	r3, [r0, #1032]	; 0x408
2fff3d30:	bd38      	pop	{r3, r4, r5, pc}
2fff3d32:	bf00      	nop
2fff3d34:	2fffb400 	.word	0x2fffb400
2fff3d38:	2fffb438 	.word	0x2fffb438
2fff3d3c:	2fffb490 	.word	0x2fffb490
2fff3d40:	2fffb518 	.word	0x2fffb518

2fff3d44 <stm32mp1_clock_resume>:
2fff3d44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff3d46:	f7fd f8d9 	bl	2fff0efc <stm32mp_rcc_base>
2fff3d4a:	492d      	ldr	r1, [pc, #180]	; (2fff3e00 <stm32mp1_clock_resume+0xbc>)
2fff3d4c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
2fff3d50:	f101 0788 	add.w	r7, r1, #136	; 0x88
2fff3d54:	880d      	ldrh	r5, [r1, #0]
2fff3d56:	3104      	adds	r1, #4
2fff3d58:	f811 2c01 	ldrb.w	r2, [r1, #-1]
2fff3d5c:	f811 4c02 	ldrb.w	r4, [r1, #-2]
2fff3d60:	582e      	ldr	r6, [r5, r0]
2fff3d62:	f1c2 0220 	rsb	r2, r2, #32
2fff3d66:	428f      	cmp	r7, r1
2fff3d68:	fa23 f202 	lsr.w	r2, r3, r2
2fff3d6c:	ea84 0406 	eor.w	r4, r4, r6
2fff3d70:	ea02 0204 	and.w	r2, r2, r4
2fff3d74:	ea82 0206 	eor.w	r2, r2, r6
2fff3d78:	502a      	str	r2, [r5, r0]
2fff3d7a:	d1eb      	bne.n	2fff3d54 <stm32mp1_clock_resume+0x10>
2fff3d7c:	4a21      	ldr	r2, [pc, #132]	; (2fff3e04 <stm32mp1_clock_resume+0xc0>)
2fff3d7e:	78d1      	ldrb	r1, [r2, #3]
2fff3d80:	8814      	ldrh	r4, [r2, #0]
2fff3d82:	7892      	ldrb	r2, [r2, #2]
2fff3d84:	f1c1 011c 	rsb	r1, r1, #28
2fff3d88:	5825      	ldr	r5, [r4, r0]
2fff3d8a:	40cb      	lsrs	r3, r1
2fff3d8c:	406a      	eors	r2, r5
2fff3d8e:	f023 030f 	bic.w	r3, r3, #15
2fff3d92:	4013      	ands	r3, r2
2fff3d94:	406b      	eors	r3, r5
2fff3d96:	5023      	str	r3, [r4, r0]
2fff3d98:	f7fd f8b0 	bl	2fff0efc <stm32mp_rcc_base>
2fff3d9c:	491a      	ldr	r1, [pc, #104]	; (2fff3e08 <stm32mp1_clock_resume+0xc4>)
2fff3d9e:	2300      	movs	r3, #0
2fff3da0:	1d05      	adds	r5, r0, #4
2fff3da2:	18ca      	adds	r2, r1, r3
2fff3da4:	585c      	ldr	r4, [r3, r1]
2fff3da6:	6856      	ldr	r6, [r2, #4]
2fff3da8:	5106      	str	r6, [r0, r4]
2fff3daa:	6852      	ldr	r2, [r2, #4]
2fff3dac:	585c      	ldr	r4, [r3, r1]
2fff3dae:	3308      	adds	r3, #8
2fff3db0:	43d2      	mvns	r2, r2
2fff3db2:	2b58      	cmp	r3, #88	; 0x58
2fff3db4:	512a      	str	r2, [r5, r4]
2fff3db6:	d1f4      	bne.n	2fff3da2 <stm32mp1_clock_resume+0x5e>
2fff3db8:	f7fd f8a0 	bl	2fff0efc <stm32mp_rcc_base>
2fff3dbc:	4a13      	ldr	r2, [pc, #76]	; (2fff3e0c <stm32mp1_clock_resume+0xc8>)
2fff3dbe:	2300      	movs	r3, #0
2fff3dc0:	18d1      	adds	r1, r2, r3
2fff3dc2:	684c      	ldr	r4, [r1, #4]
2fff3dc4:	5899      	ldr	r1, [r3, r2]
2fff3dc6:	3308      	adds	r3, #8
2fff3dc8:	2b38      	cmp	r3, #56	; 0x38
2fff3dca:	5044      	str	r4, [r0, r1]
2fff3dcc:	d1f8      	bne.n	2fff3dc0 <stm32mp1_clock_resume+0x7c>
2fff3dce:	4c10      	ldr	r4, [pc, #64]	; (2fff3e10 <stm32mp1_clock_resume+0xcc>)
2fff3dd0:	2500      	movs	r5, #0
2fff3dd2:	4e10      	ldr	r6, [pc, #64]	; (2fff3e14 <stm32mp1_clock_resume+0xd0>)
2fff3dd4:	7963      	ldrb	r3, [r4, #5]
2fff3dd6:	b12b      	cbz	r3, 2fff3de4 <stm32mp1_clock_resume+0xa0>
2fff3dd8:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
2fff3ddc:	4620      	mov	r0, r4
2fff3dde:	b15b      	cbz	r3, 2fff3df8 <stm32mp1_clock_resume+0xb4>
2fff3de0:	f7ff f904 	bl	2fff2fec <__clk_enable>
2fff3de4:	3501      	adds	r5, #1
2fff3de6:	3408      	adds	r4, #8
2fff3de8:	2d39      	cmp	r5, #57	; 0x39
2fff3dea:	d1f3      	bne.n	2fff3dd4 <stm32mp1_clock_resume+0x90>
2fff3dec:	f7fd f886 	bl	2fff0efc <stm32mp_rcc_base>
2fff3df0:	f240 2322 	movw	r3, #546	; 0x222
2fff3df4:	6103      	str	r3, [r0, #16]
2fff3df6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff3df8:	f7ff f909 	bl	2fff300e <__clk_disable>
2fff3dfc:	e7f2      	b.n	2fff3de4 <stm32mp1_clock_resume+0xa0>
2fff3dfe:	bf00      	nop
2fff3e00:	2fffb490 	.word	0x2fffb490
2fff3e04:	2fffb518 	.word	0x2fffb518
2fff3e08:	2fffb438 	.word	0x2fffb438
2fff3e0c:	2fffb400 	.word	0x2fffb400
2fff3e10:	2fff9988 	.word	0x2fff9988
2fff3e14:	2fffcde8 	.word	0x2fffcde8

2fff3e18 <stm32mp1_clock_stopmode_save>:
2fff3e18:	b508      	push	{r3, lr}
2fff3e1a:	f7fd f86f 	bl	2fff0efc <stm32mp_rcc_base>
2fff3e1e:	f8d0 2880 	ldr.w	r2, [r0, #2176]	; 0x880
2fff3e22:	4b0c      	ldr	r3, [pc, #48]	; (2fff3e54 <stm32mp1_clock_stopmode_save+0x3c>)
2fff3e24:	601a      	str	r2, [r3, #0]
2fff3e26:	f8d0 2894 	ldr.w	r2, [r0, #2196]	; 0x894
2fff3e2a:	4b0b      	ldr	r3, [pc, #44]	; (2fff3e58 <stm32mp1_clock_stopmode_save+0x40>)
2fff3e2c:	601a      	str	r2, [r3, #0]
2fff3e2e:	6c82      	ldr	r2, [r0, #72]	; 0x48
2fff3e30:	4b0a      	ldr	r3, [pc, #40]	; (2fff3e5c <stm32mp1_clock_stopmode_save+0x44>)
2fff3e32:	601a      	str	r2, [r3, #0]
2fff3e34:	f8d0 3830 	ldr.w	r3, [r0, #2096]	; 0x830
2fff3e38:	4a09      	ldr	r2, [pc, #36]	; (2fff3e60 <stm32mp1_clock_stopmode_save+0x48>)
2fff3e3a:	f003 030f 	and.w	r3, r3, #15
2fff3e3e:	6013      	str	r3, [r2, #0]
2fff3e40:	f7fd f85c 	bl	2fff0efc <stm32mp_rcc_base>
2fff3e44:	68c2      	ldr	r2, [r0, #12]
2fff3e46:	f240 2322 	movw	r3, #546	; 0x222
2fff3e4a:	ea03 0342 	and.w	r3, r3, r2, lsl #1
2fff3e4e:	60c3      	str	r3, [r0, #12]
2fff3e50:	bd08      	pop	{r3, pc}
2fff3e52:	bf00      	nop
2fff3e54:	2fffcf20 	.word	0x2fffcf20
2fff3e58:	2fffcf24 	.word	0x2fffcf24
2fff3e5c:	2fffced0 	.word	0x2fffced0
2fff3e60:	2fffcecc 	.word	0x2fffcecc

2fff3e64 <stm32mp1_clock_stopmode_resume>:
2fff3e64:	b570      	push	{r4, r5, r6, lr}
2fff3e66:	f7fd f849 	bl	2fff0efc <stm32mp_rcc_base>
2fff3e6a:	4d20      	ldr	r5, [pc, #128]	; (2fff3eec <stm32mp1_clock_stopmode_resume+0x88>)
2fff3e6c:	4606      	mov	r6, r0
2fff3e6e:	682a      	ldr	r2, [r5, #0]
2fff3e70:	07d4      	lsls	r4, r2, #31
2fff3e72:	d508      	bpl.n	2fff3e86 <stm32mp1_clock_stopmode_resume+0x22>
2fff3e74:	f7fd f842 	bl	2fff0efc <stm32mp_rcc_base>
2fff3e78:	f8d0 3894 	ldr.w	r3, [r0, #2196]	; 0x894
2fff3e7c:	07d8      	lsls	r0, r3, #31
2fff3e7e:	d402      	bmi.n	2fff3e86 <stm32mp1_clock_stopmode_resume+0x22>
2fff3e80:	2003      	movs	r0, #3
2fff3e82:	f7ff f84b 	bl	2fff2f1c <stm32mp1_pll_start>
2fff3e86:	4c1a      	ldr	r4, [pc, #104]	; (2fff3ef0 <stm32mp1_clock_stopmode_resume+0x8c>)
2fff3e88:	6822      	ldr	r2, [r4, #0]
2fff3e8a:	07d1      	lsls	r1, r2, #31
2fff3e8c:	d413      	bmi.n	2fff3eb6 <stm32mp1_clock_stopmode_resume+0x52>
2fff3e8e:	6829      	ldr	r1, [r5, #0]
2fff3e90:	07ca      	lsls	r2, r1, #31
2fff3e92:	d423      	bmi.n	2fff3edc <stm32mp1_clock_stopmode_resume+0x78>
2fff3e94:	4b17      	ldr	r3, [pc, #92]	; (2fff3ef4 <stm32mp1_clock_stopmode_resume+0x90>)
2fff3e96:	f506 6103 	add.w	r1, r6, #2096	; 0x830
2fff3e9a:	681b      	ldr	r3, [r3, #0]
2fff3e9c:	64b3      	str	r3, [r6, #72]	; 0x48
2fff3e9e:	4b16      	ldr	r3, [pc, #88]	; (2fff3ef8 <stm32mp1_clock_stopmode_resume+0x94>)
2fff3ea0:	6818      	ldr	r0, [r3, #0]
2fff3ea2:	f7ff f9a9 	bl	2fff31f8 <stm32mp1_set_clkdiv>
2fff3ea6:	4604      	mov	r4, r0
2fff3ea8:	b9b0      	cbnz	r0, 2fff3ed8 <stm32mp1_clock_stopmode_resume+0x74>
2fff3eaa:	f7fd f827 	bl	2fff0efc <stm32mp_rcc_base>
2fff3eae:	f240 2322 	movw	r3, #546	; 0x222
2fff3eb2:	6103      	str	r3, [r0, #16]
2fff3eb4:	e010      	b.n	2fff3ed8 <stm32mp1_clock_stopmode_resume+0x74>
2fff3eb6:	f7fd f821 	bl	2fff0efc <stm32mp_rcc_base>
2fff3eba:	f8d0 3880 	ldr.w	r3, [r0, #2176]	; 0x880
2fff3ebe:	07db      	lsls	r3, r3, #31
2fff3ec0:	d402      	bmi.n	2fff3ec8 <stm32mp1_clock_stopmode_resume+0x64>
2fff3ec2:	2002      	movs	r0, #2
2fff3ec4:	f7ff f82a 	bl	2fff2f1c <stm32mp1_pll_start>
2fff3ec8:	6821      	ldr	r1, [r4, #0]
2fff3eca:	2002      	movs	r0, #2
2fff3ecc:	0909      	lsrs	r1, r1, #4
2fff3ece:	f7ff f9c9 	bl	2fff3264 <stm32mp1_pll_output>
2fff3ed2:	4604      	mov	r4, r0
2fff3ed4:	2800      	cmp	r0, #0
2fff3ed6:	d0da      	beq.n	2fff3e8e <stm32mp1_clock_stopmode_resume+0x2a>
2fff3ed8:	4620      	mov	r0, r4
2fff3eda:	bd70      	pop	{r4, r5, r6, pc}
2fff3edc:	0909      	lsrs	r1, r1, #4
2fff3ede:	2003      	movs	r0, #3
2fff3ee0:	f7ff f9c0 	bl	2fff3264 <stm32mp1_pll_output>
2fff3ee4:	4604      	mov	r4, r0
2fff3ee6:	2800      	cmp	r0, #0
2fff3ee8:	d0d4      	beq.n	2fff3e94 <stm32mp1_clock_stopmode_resume+0x30>
2fff3eea:	e7f5      	b.n	2fff3ed8 <stm32mp1_clock_stopmode_resume+0x74>
2fff3eec:	2fffcf24 	.word	0x2fffcf24
2fff3ef0:	2fffcf20 	.word	0x2fffcf20
2fff3ef4:	2fffced0 	.word	0x2fffced0
2fff3ef8:	2fffcecc 	.word	0x2fffcecc

2fff3efc <stm32mp1_dump_clocks_state>:
2fff3efc:	4770      	bx	lr
	...

2fff3f00 <stm32mp1_clk_probe>:
2fff3f00:	b573      	push	{r0, r1, r4, r5, r6, lr}
2fff3f02:	2400      	movs	r4, #0
2fff3f04:	4d2a      	ldr	r5, [pc, #168]	; (2fff3fb0 <stm32mp1_clk_probe+0xb0>)
2fff3f06:	4e2b      	ldr	r6, [pc, #172]	; (2fff3fb4 <stm32mp1_clk_probe+0xb4>)
2fff3f08:	f855 0024 	ldr.w	r0, [r5, r4, lsl #2]
2fff3f0c:	a901      	add	r1, sp, #4
2fff3f0e:	f7fe fd81 	bl	2fff2a14 <fdt_osc_read_freq>
2fff3f12:	b910      	cbnz	r0, 2fff3f1a <stm32mp1_clk_probe+0x1a>
2fff3f14:	9b01      	ldr	r3, [sp, #4]
2fff3f16:	f846 3024 	str.w	r3, [r6, r4, lsl #2]
2fff3f1a:	3401      	adds	r4, #1
2fff3f1c:	2c06      	cmp	r4, #6
2fff3f1e:	d1f3      	bne.n	2fff3f08 <stm32mp1_clk_probe+0x8>
2fff3f20:	4d25      	ldr	r5, [pc, #148]	; (2fff3fb8 <stm32mp1_clk_probe+0xb8>)
2fff3f22:	2400      	movs	r4, #0
2fff3f24:	192b      	adds	r3, r5, r4
2fff3f26:	795a      	ldrb	r2, [r3, #5]
2fff3f28:	b112      	cbz	r2, 2fff3f30 <stm32mp1_clk_probe+0x30>
2fff3f2a:	78d8      	ldrb	r0, [r3, #3]
2fff3f2c:	f7ff fde4 	bl	2fff3af8 <stm32mp1_register_clock_parents_secure>
2fff3f30:	3408      	adds	r4, #8
2fff3f32:	f5b4 7fe4 	cmp.w	r4, #456	; 0x1c8
2fff3f36:	d1f5      	bne.n	2fff3f24 <stm32mp1_clk_probe+0x24>
2fff3f38:	20e4      	movs	r0, #228	; 0xe4
2fff3f3a:	f7ff fb15 	bl	2fff3568 <stm32mp_clk_enable>
2fff3f3e:	20dc      	movs	r0, #220	; 0xdc
2fff3f40:	f7ff fb12 	bl	2fff3568 <stm32mp_clk_enable>
2fff3f44:	20dd      	movs	r0, #221	; 0xdd
2fff3f46:	f7ff fb0f 	bl	2fff3568 <stm32mp_clk_enable>
2fff3f4a:	20de      	movs	r0, #222	; 0xde
2fff3f4c:	f7ff fb0c 	bl	2fff3568 <stm32mp_clk_enable>
2fff3f50:	20df      	movs	r0, #223	; 0xdf
2fff3f52:	f7ff fb09 	bl	2fff3568 <stm32mp_clk_enable>
2fff3f56:	20e2      	movs	r0, #226	; 0xe2
2fff3f58:	f7ff fb06 	bl	2fff3568 <stm32mp_clk_enable>
2fff3f5c:	20e0      	movs	r0, #224	; 0xe0
2fff3f5e:	f7ff fb03 	bl	2fff3568 <stm32mp_clk_enable>
2fff3f62:	20e1      	movs	r0, #225	; 0xe1
2fff3f64:	f7ff fb00 	bl	2fff3568 <stm32mp_clk_enable>
2fff3f68:	20e5      	movs	r0, #229	; 0xe5
2fff3f6a:	f7ff fafd 	bl	2fff3568 <stm32mp_clk_enable>
2fff3f6e:	20e6      	movs	r0, #230	; 0xe6
2fff3f70:	f7ff fafa 	bl	2fff3568 <stm32mp_clk_enable>
2fff3f74:	2043      	movs	r0, #67	; 0x43
2fff3f76:	f7ff faf7 	bl	2fff3568 <stm32mp_clk_enable>
2fff3f7a:	2042      	movs	r0, #66	; 0x42
2fff3f7c:	f7ff faf4 	bl	2fff3568 <stm32mp_clk_enable>
2fff3f80:	2071      	movs	r0, #113	; 0x71
2fff3f82:	f7ff faf1 	bl	2fff3568 <stm32mp_clk_enable>
2fff3f86:	2080      	movs	r0, #128	; 0x80
2fff3f88:	f7ff faee 	bl	2fff3568 <stm32mp_clk_enable>
2fff3f8c:	2041      	movs	r0, #65	; 0x41
2fff3f8e:	f7ff faeb 	bl	2fff3568 <stm32mp_clk_enable>
2fff3f92:	20c2      	movs	r0, #194	; 0xc2
2fff3f94:	f7ff fb14 	bl	2fff35c0 <stm32mp_clk_get_rate>
2fff3f98:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
2fff3f9c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2fff3fa0:	fbb0 f0f3 	udiv	r0, r0, r3
2fff3fa4:	4b05      	ldr	r3, [pc, #20]	; (2fff3fbc <stm32mp1_clk_probe+0xbc>)
2fff3fa6:	6018      	str	r0, [r3, #0]
2fff3fa8:	2000      	movs	r0, #0
2fff3faa:	b002      	add	sp, #8
2fff3fac:	bd70      	pop	{r4, r5, r6, pc}
2fff3fae:	bf00      	nop
2fff3fb0:	2fffb51c 	.word	0x2fffb51c
2fff3fb4:	2fffcf30 	.word	0x2fffcf30
2fff3fb8:	2fff9988 	.word	0x2fff9988
2fff3fbc:	2fffcde4 	.word	0x2fffcde4

2fff3fc0 <do_sw_handshake>:
2fff3fc0:	b508      	push	{r3, lr}
2fff3fc2:	f7fc ff8f 	bl	2fff0ee4 <stm32mp_ddrctrl_base>
2fff3fc6:	f8d0 3320 	ldr.w	r3, [r0, #800]	; 0x320
2fff3fca:	f023 0301 	bic.w	r3, r3, #1
2fff3fce:	f8c0 3320 	str.w	r3, [r0, #800]	; 0x320
2fff3fd2:	bd08      	pop	{r3, pc}

2fff3fd4 <do_sw_ack>:
2fff3fd4:	e92d 43d0 	stmdb	sp!, {r4, r6, r7, r8, r9, lr}
2fff3fd8:	f7fc ff84 	bl	2fff0ee4 <stm32mp_ddrctrl_base>
2fff3fdc:	f8d0 3320 	ldr.w	r3, [r0, #800]	; 0x320
2fff3fe0:	4604      	mov	r4, r0
2fff3fe2:	f043 0301 	orr.w	r3, r3, #1
2fff3fe6:	f8c0 3320 	str.w	r3, [r0, #800]	; 0x320
2fff3fea:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff3fee:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff3ff2:	4a0e      	ldr	r2, [pc, #56]	; (2fff402c <do_sw_ack+0x58>)
2fff3ff4:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
2fff3ff8:	2300      	movs	r3, #0
2fff3ffa:	fba0 0101 	umull	r0, r1, r0, r1
2fff3ffe:	f003 e836 	blx	2fff706c <__aeabi_uldivmod>
2fff4002:	eb10 0806 	adds.w	r8, r0, r6
2fff4006:	eb41 0907 	adc.w	r9, r1, r7
2fff400a:	f8d4 3324 	ldr.w	r3, [r4, #804]	; 0x324
2fff400e:	07db      	lsls	r3, r3, #31
2fff4010:	d501      	bpl.n	2fff4016 <do_sw_ack+0x42>
2fff4012:	e8bd 83d0 	ldmia.w	sp!, {r4, r6, r7, r8, r9, pc}
2fff4016:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff401a:	4599      	cmp	r9, r3
2fff401c:	bf08      	it	eq
2fff401e:	4590      	cmpeq	r8, r2
2fff4020:	d2f3      	bcs.n	2fff400a <do_sw_ack+0x36>
2fff4022:	f7fc fe4f 	bl	2fff0cc4 <console_flush>
2fff4026:	f002 ee84 	blx	2fff6d30 <do_panic>
2fff402a:	bf00      	nop
2fff402c:	000f4240 	.word	0x000f4240

2fff4030 <ddr_enable_clock>:
2fff4030:	b508      	push	{r3, lr}
2fff4032:	f7ff fa8d 	bl	2fff3550 <stm32mp1_clk_rcc_regs_lock>
2fff4036:	f7fc ff61 	bl	2fff0efc <stm32mp_rcc_base>
2fff403a:	f8d0 30d8 	ldr.w	r3, [r0, #216]	; 0xd8
2fff403e:	f443 7315 	orr.w	r3, r3, #596	; 0x254
2fff4042:	f043 0301 	orr.w	r3, r3, #1
2fff4046:	f8c0 30d8 	str.w	r3, [r0, #216]	; 0xd8
2fff404a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff404e:	f7ff ba85 	b.w	2fff355c <stm32mp1_clk_rcc_regs_unlock>
	...

2fff4054 <ddr_sw_self_refresh_exit>:
2fff4054:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff4058:	f7fc ff50 	bl	2fff0efc <stm32mp_rcc_base>
2fff405c:	4682      	mov	sl, r0
2fff405e:	f7fc ff49 	bl	2fff0ef4 <stm32mp_pwr_base>
2fff4062:	4683      	mov	fp, r0
2fff4064:	f7fc ff3e 	bl	2fff0ee4 <stm32mp_ddrctrl_base>
2fff4068:	4605      	mov	r5, r0
2fff406a:	f7fc ff3f 	bl	2fff0eec <stm32mp_ddrphyc_base>
2fff406e:	4604      	mov	r4, r0
2fff4070:	f7ff ffde 	bl	2fff4030 <ddr_enable_clock>
2fff4074:	f7ff ffa4 	bl	2fff3fc0 <do_sw_handshake>
2fff4078:	f8d5 31b0 	ldr.w	r3, [r5, #432]	; 0x1b0
2fff407c:	f023 0301 	bic.w	r3, r3, #1
2fff4080:	f8c5 31b0 	str.w	r3, [r5, #432]	; 0x1b0
2fff4084:	f7ff ffa6 	bl	2fff3fd4 <do_sw_ack>
2fff4088:	f7ff fa62 	bl	2fff3550 <stm32mp1_clk_rcc_regs_lock>
2fff408c:	f8da 30d8 	ldr.w	r3, [sl, #216]	; 0xd8
2fff4090:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
2fff4094:	f8ca 30d8 	str.w	r3, [sl, #216]	; 0xd8
2fff4098:	f7ff fa60 	bl	2fff355c <stm32mp1_clk_rcc_regs_unlock>
2fff409c:	6963      	ldr	r3, [r4, #20]
2fff409e:	2032      	movs	r0, #50	; 0x32
2fff40a0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
2fff40a4:	6163      	str	r3, [r4, #20]
2fff40a6:	f8d4 31cc 	ldr.w	r3, [r4, #460]	; 0x1cc
2fff40aa:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
2fff40ae:	f8c4 31cc 	str.w	r3, [r4, #460]	; 0x1cc
2fff40b2:	f8d4 320c 	ldr.w	r3, [r4, #524]	; 0x20c
2fff40b6:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
2fff40ba:	f8c4 320c 	str.w	r3, [r4, #524]	; 0x20c
2fff40be:	f8d4 324c 	ldr.w	r3, [r4, #588]	; 0x24c
2fff40c2:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
2fff40c6:	f8c4 324c 	str.w	r3, [r4, #588]	; 0x24c
2fff40ca:	f8d4 328c 	ldr.w	r3, [r4, #652]	; 0x28c
2fff40ce:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
2fff40d2:	f8c4 328c 	str.w	r3, [r4, #652]	; 0x28c
2fff40d6:	f7fe f8ef 	bl	2fff22b8 <udelay>
2fff40da:	f7ff fa39 	bl	2fff3550 <stm32mp1_clk_rcc_regs_lock>
2fff40de:	f8da 30d8 	ldr.w	r3, [sl, #216]	; 0xd8
2fff40e2:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
2fff40e6:	f8ca 30d8 	str.w	r3, [sl, #216]	; 0xd8
2fff40ea:	f7ff fa37 	bl	2fff355c <stm32mp1_clk_rcc_regs_unlock>
2fff40ee:	6963      	ldr	r3, [r4, #20]
2fff40f0:	200a      	movs	r0, #10
2fff40f2:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
2fff40f6:	6163      	str	r3, [r4, #20]
2fff40f8:	f7fe f8de 	bl	2fff22b8 <udelay>
2fff40fc:	6963      	ldr	r3, [r4, #20]
2fff40fe:	2001      	movs	r0, #1
2fff4100:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
2fff4104:	6163      	str	r3, [r4, #20]
2fff4106:	2317      	movs	r3, #23
2fff4108:	6063      	str	r3, [r4, #4]
2fff410a:	f7fe f8d5 	bl	2fff22b8 <udelay>
2fff410e:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff4112:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff4116:	4a4b      	ldr	r2, [pc, #300]	; (2fff4244 <ddr_sw_self_refresh_exit+0x1f0>)
2fff4118:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
2fff411c:	2300      	movs	r3, #0
2fff411e:	fba0 0101 	umull	r0, r1, r0, r1
2fff4122:	f002 efa4 	blx	2fff706c <__aeabi_uldivmod>
2fff4126:	eb10 0806 	adds.w	r8, r0, r6
2fff412a:	eb41 0907 	adc.w	r9, r1, r7
2fff412e:	68e3      	ldr	r3, [r4, #12]
2fff4130:	07db      	lsls	r3, r3, #31
2fff4132:	d573      	bpl.n	2fff421c <ddr_sw_self_refresh_exit+0x1c8>
2fff4134:	f7ff ff44 	bl	2fff3fc0 <do_sw_handshake>
2fff4138:	f8d5 31b0 	ldr.w	r3, [r5, #432]	; 0x1b0
2fff413c:	f043 0301 	orr.w	r3, r3, #1
2fff4140:	f8c5 31b0 	str.w	r3, [r5, #432]	; 0x1b0
2fff4144:	f7ff ff46 	bl	2fff3fd4 <do_sw_ack>
2fff4148:	f7fc fee4 	bl	2fff0f14 <stm32mp_pwr_regs_lock>
2fff414c:	f8db 300c 	ldr.w	r3, [fp, #12]
2fff4150:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
2fff4154:	f8cb 300c 	str.w	r3, [fp, #12]
2fff4158:	f7fc fee8 	bl	2fff0f2c <stm32mp_pwr_regs_unlock>
2fff415c:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
2fff4160:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
2fff4164:	f8c4 3180 	str.w	r3, [r4, #384]	; 0x180
2fff4168:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff416a:	f023 0308 	bic.w	r3, r3, #8
2fff416e:	6263      	str	r3, [r4, #36]	; 0x24
2fff4170:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff4172:	f043 0302 	orr.w	r3, r3, #2
2fff4176:	6263      	str	r3, [r4, #36]	; 0x24
2fff4178:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff417a:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
2fff417e:	6263      	str	r3, [r4, #36]	; 0x24
2fff4180:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff4182:	f423 1370 	bic.w	r3, r3, #3932160	; 0x3c0000
2fff4186:	6263      	str	r3, [r4, #36]	; 0x24
2fff4188:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2fff418a:	f023 0304 	bic.w	r3, r3, #4
2fff418e:	62a3      	str	r3, [r4, #40]	; 0x28
2fff4190:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2fff4192:	f023 0308 	bic.w	r3, r3, #8
2fff4196:	62a3      	str	r3, [r4, #40]	; 0x28
2fff4198:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff419a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
2fff419e:	62e3      	str	r3, [r4, #44]	; 0x2c
2fff41a0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff41a2:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
2fff41a6:	62e3      	str	r3, [r4, #44]	; 0x2c
2fff41a8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff41aa:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
2fff41ae:	62e3      	str	r3, [r4, #44]	; 0x2c
2fff41b0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff41b2:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
2fff41b6:	62e3      	str	r3, [r4, #44]	; 0x2c
2fff41b8:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2fff41ba:	f023 0320 	bic.w	r3, r3, #32
2fff41be:	632b      	str	r3, [r5, #48]	; 0x30
2fff41c0:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff41c4:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff41c8:	4a1e      	ldr	r2, [pc, #120]	; (2fff4244 <ddr_sw_self_refresh_exit+0x1f0>)
2fff41ca:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
2fff41ce:	2300      	movs	r3, #0
2fff41d0:	fba0 0101 	umull	r0, r1, r0, r1
2fff41d4:	f002 ef4a 	blx	2fff706c <__aeabi_uldivmod>
2fff41d8:	1983      	adds	r3, r0, r6
2fff41da:	9300      	str	r3, [sp, #0]
2fff41dc:	eb41 0307 	adc.w	r3, r1, r7
2fff41e0:	9301      	str	r3, [sp, #4]
2fff41e2:	686b      	ldr	r3, [r5, #4]
2fff41e4:	f003 0307 	and.w	r3, r3, #7
2fff41e8:	2b01      	cmp	r3, #1
2fff41ea:	d122      	bne.n	2fff4232 <ddr_sw_self_refresh_exit+0x1de>
2fff41ec:	f8d5 3490 	ldr.w	r3, [r5, #1168]	; 0x490
2fff41f0:	f043 0301 	orr.w	r3, r3, #1
2fff41f4:	f8c5 3490 	str.w	r3, [r5, #1168]	; 0x490
2fff41f8:	f8d5 3540 	ldr.w	r3, [r5, #1344]	; 0x540
2fff41fc:	f043 0301 	orr.w	r3, r3, #1
2fff4200:	f8c5 3540 	str.w	r3, [r5, #1344]	; 0x540
2fff4204:	f7ff f9a4 	bl	2fff3550 <stm32mp1_clk_rcc_regs_lock>
2fff4208:	f8da 30d8 	ldr.w	r3, [sl, #216]	; 0xd8
2fff420c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
2fff4210:	f8ca 30d8 	str.w	r3, [sl, #216]	; 0xd8
2fff4214:	f7ff f9a2 	bl	2fff355c <stm32mp1_clk_rcc_regs_unlock>
2fff4218:	2000      	movs	r0, #0
2fff421a:	e007      	b.n	2fff422c <ddr_sw_self_refresh_exit+0x1d8>
2fff421c:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff4220:	4599      	cmp	r9, r3
2fff4222:	bf08      	it	eq
2fff4224:	4590      	cmpeq	r8, r2
2fff4226:	d282      	bcs.n	2fff412e <ddr_sw_self_refresh_exit+0xda>
2fff4228:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff422c:	b003      	add	sp, #12
2fff422e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff4232:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff4236:	e9dd 0100 	ldrd	r0, r1, [sp]
2fff423a:	4299      	cmp	r1, r3
2fff423c:	bf08      	it	eq
2fff423e:	4290      	cmpeq	r0, r2
2fff4240:	d2cf      	bcs.n	2fff41e2 <ddr_sw_self_refresh_exit+0x18e>
2fff4242:	e7f1      	b.n	2fff4228 <ddr_sw_self_refresh_exit+0x1d4>
2fff4244:	000f4240 	.word	0x000f4240

2fff4248 <ddr_standby_sr_entry>:
2fff4248:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
2fff424c:	4604      	mov	r4, r0
2fff424e:	f7fc fe51 	bl	2fff0ef4 <stm32mp_pwr_base>
2fff4252:	4682      	mov	sl, r0
2fff4254:	f7fc fe4a 	bl	2fff0eec <stm32mp_ddrphyc_base>
2fff4258:	b124      	cbz	r4, 2fff4264 <ddr_standby_sr_entry+0x1c>
2fff425a:	f8d0 3180 	ldr.w	r3, [r0, #384]	; 0x180
2fff425e:	f023 4370 	bic.w	r3, r3, #4026531840	; 0xf0000000
2fff4262:	6023      	str	r3, [r4, #0]
2fff4264:	f7fc fe4a 	bl	2fff0efc <stm32mp_rcc_base>
2fff4268:	4606      	mov	r6, r0
2fff426a:	f7fc fe43 	bl	2fff0ef4 <stm32mp_pwr_base>
2fff426e:	4607      	mov	r7, r0
2fff4270:	f7fc fe38 	bl	2fff0ee4 <stm32mp_ddrctrl_base>
2fff4274:	4605      	mov	r5, r0
2fff4276:	f7fc fe39 	bl	2fff0eec <stm32mp_ddrphyc_base>
2fff427a:	4604      	mov	r4, r0
2fff427c:	f7ff f968 	bl	2fff3550 <stm32mp1_clk_rcc_regs_lock>
2fff4280:	f8d6 30d8 	ldr.w	r3, [r6, #216]	; 0xd8
2fff4284:	f423 7380 	bic.w	r3, r3, #256	; 0x100
2fff4288:	f8c6 30d8 	str.w	r3, [r6, #216]	; 0xd8
2fff428c:	f7ff f966 	bl	2fff355c <stm32mp1_clk_rcc_regs_unlock>
2fff4290:	f8d5 3490 	ldr.w	r3, [r5, #1168]	; 0x490
2fff4294:	f023 0301 	bic.w	r3, r3, #1
2fff4298:	f8c5 3490 	str.w	r3, [r5, #1168]	; 0x490
2fff429c:	f8d5 3540 	ldr.w	r3, [r5, #1344]	; 0x540
2fff42a0:	f023 0301 	bic.w	r3, r3, #1
2fff42a4:	f8c5 3540 	str.w	r3, [r5, #1344]	; 0x540
2fff42a8:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff42ac:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2fff42b0:	4a72      	ldr	r2, [pc, #456]	; (2fff447c <ddr_standby_sr_entry+0x234>)
2fff42b2:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
2fff42b6:	2300      	movs	r3, #0
2fff42b8:	fba0 0101 	umull	r0, r1, r0, r1
2fff42bc:	f002 eed6 	blx	2fff706c <__aeabi_uldivmod>
2fff42c0:	eb10 0308 	adds.w	r3, r0, r8
2fff42c4:	9300      	str	r3, [sp, #0]
2fff42c6:	eb41 0309 	adc.w	r3, r1, r9
2fff42ca:	9301      	str	r3, [sp, #4]
2fff42cc:	f8d5 33fc 	ldr.w	r3, [r5, #1020]	; 0x3fc
2fff42d0:	bb13      	cbnz	r3, 2fff4318 <ddr_standby_sr_entry+0xd0>
2fff42d2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2fff42d4:	f043 0320 	orr.w	r3, r3, #32
2fff42d8:	632b      	str	r3, [r5, #48]	; 0x30
2fff42da:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff42de:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2fff42e2:	4a66      	ldr	r2, [pc, #408]	; (2fff447c <ddr_standby_sr_entry+0x234>)
2fff42e4:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
2fff42e8:	2300      	movs	r3, #0
2fff42ea:	fba0 0101 	umull	r0, r1, r0, r1
2fff42ee:	f002 eebe 	blx	2fff706c <__aeabi_uldivmod>
2fff42f2:	eb10 0308 	adds.w	r3, r0, r8
2fff42f6:	9302      	str	r3, [sp, #8]
2fff42f8:	eb41 0309 	adc.w	r3, r1, r9
2fff42fc:	9303      	str	r3, [sp, #12]
2fff42fe:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff4302:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
2fff4306:	4299      	cmp	r1, r3
2fff4308:	bf08      	it	eq
2fff430a:	4290      	cmpeq	r0, r2
2fff430c:	d21d      	bcs.n	2fff434a <ddr_standby_sr_entry+0x102>
2fff430e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2fff4310:	f023 0320 	bic.w	r3, r3, #32
2fff4314:	632b      	str	r3, [r5, #48]	; 0x30
2fff4316:	e007      	b.n	2fff4328 <ddr_standby_sr_entry+0xe0>
2fff4318:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff431c:	e9dd 0100 	ldrd	r0, r1, [sp]
2fff4320:	4299      	cmp	r1, r3
2fff4322:	bf08      	it	eq
2fff4324:	4290      	cmpeq	r0, r2
2fff4326:	d2d1      	bcs.n	2fff42cc <ddr_standby_sr_entry+0x84>
2fff4328:	f8d5 3490 	ldr.w	r3, [r5, #1168]	; 0x490
2fff432c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff4330:	f043 0301 	orr.w	r3, r3, #1
2fff4334:	f8c5 3490 	str.w	r3, [r5, #1168]	; 0x490
2fff4338:	f8d5 3540 	ldr.w	r3, [r5, #1344]	; 0x540
2fff433c:	f043 0301 	orr.w	r3, r3, #1
2fff4340:	f8c5 3540 	str.w	r3, [r5, #1344]	; 0x540
2fff4344:	b004      	add	sp, #16
2fff4346:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff434a:	686b      	ldr	r3, [r5, #4]
2fff434c:	f003 0207 	and.w	r2, r3, #7
2fff4350:	2a03      	cmp	r2, #3
2fff4352:	d1d4      	bne.n	2fff42fe <ddr_standby_sr_entry+0xb6>
2fff4354:	f003 0330 	and.w	r3, r3, #48	; 0x30
2fff4358:	2b20      	cmp	r3, #32
2fff435a:	d1d0      	bne.n	2fff42fe <ddr_standby_sr_entry+0xb6>
2fff435c:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff435e:	200a      	movs	r0, #10
2fff4360:	f043 0308 	orr.w	r3, r3, #8
2fff4364:	6263      	str	r3, [r4, #36]	; 0x24
2fff4366:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff4368:	f043 0310 	orr.w	r3, r3, #16
2fff436c:	6263      	str	r3, [r4, #36]	; 0x24
2fff436e:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff4370:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
2fff4374:	f443 7380 	orr.w	r3, r3, #256	; 0x100
2fff4378:	6263      	str	r3, [r4, #36]	; 0x24
2fff437a:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff437c:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800
2fff4380:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
2fff4384:	6263      	str	r3, [r4, #36]	; 0x24
2fff4386:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff4388:	f423 1370 	bic.w	r3, r3, #3932160	; 0x3c0000
2fff438c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
2fff4390:	6263      	str	r3, [r4, #36]	; 0x24
2fff4392:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff4394:	f023 0302 	bic.w	r3, r3, #2
2fff4398:	6263      	str	r3, [r4, #36]	; 0x24
2fff439a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2fff439c:	f043 0304 	orr.w	r3, r3, #4
2fff43a0:	62a3      	str	r3, [r4, #40]	; 0x28
2fff43a2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2fff43a4:	f043 0308 	orr.w	r3, r3, #8
2fff43a8:	62a3      	str	r3, [r4, #40]	; 0x28
2fff43aa:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff43ac:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
2fff43b0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
2fff43b4:	62e3      	str	r3, [r4, #44]	; 0x2c
2fff43b6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff43b8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
2fff43bc:	62e3      	str	r3, [r4, #44]	; 0x2c
2fff43be:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff43c0:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
2fff43c4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
2fff43c8:	62e3      	str	r3, [r4, #44]	; 0x2c
2fff43ca:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
2fff43ce:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
2fff43d2:	f8c4 3180 	str.w	r3, [r4, #384]	; 0x180
2fff43d6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff43d8:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
2fff43dc:	62e3      	str	r3, [r4, #44]	; 0x2c
2fff43de:	f7fd ff6b 	bl	2fff22b8 <udelay>
2fff43e2:	f7fc fd97 	bl	2fff0f14 <stm32mp_pwr_regs_lock>
2fff43e6:	68fb      	ldr	r3, [r7, #12]
2fff43e8:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
2fff43ec:	60fb      	str	r3, [r7, #12]
2fff43ee:	f7fc fd9d 	bl	2fff0f2c <stm32mp_pwr_regs_unlock>
2fff43f2:	f7ff f8ad 	bl	2fff3550 <stm32mp1_clk_rcc_regs_lock>
2fff43f6:	f8d6 30d8 	ldr.w	r3, [r6, #216]	; 0xd8
2fff43fa:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
2fff43fe:	f8c6 30d8 	str.w	r3, [r6, #216]	; 0xd8
2fff4402:	f7ff f8ab 	bl	2fff355c <stm32mp1_clk_rcc_regs_unlock>
2fff4406:	6963      	ldr	r3, [r4, #20]
2fff4408:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
2fff440c:	6163      	str	r3, [r4, #20]
2fff440e:	f8d4 31cc 	ldr.w	r3, [r4, #460]	; 0x1cc
2fff4412:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
2fff4416:	f8c4 31cc 	str.w	r3, [r4, #460]	; 0x1cc
2fff441a:	f8d4 320c 	ldr.w	r3, [r4, #524]	; 0x20c
2fff441e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
2fff4422:	f8c4 320c 	str.w	r3, [r4, #524]	; 0x20c
2fff4426:	f8d4 324c 	ldr.w	r3, [r4, #588]	; 0x24c
2fff442a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
2fff442e:	f8c4 324c 	str.w	r3, [r4, #588]	; 0x24c
2fff4432:	f8d4 328c 	ldr.w	r3, [r4, #652]	; 0x28c
2fff4436:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
2fff443a:	f8c4 328c 	str.w	r3, [r4, #652]	; 0x28c
2fff443e:	f7ff f887 	bl	2fff3550 <stm32mp1_clk_rcc_regs_lock>
2fff4442:	f8d6 30d8 	ldr.w	r3, [r6, #216]	; 0xd8
2fff4446:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
2fff444a:	f8c6 30d8 	str.w	r3, [r6, #216]	; 0xd8
2fff444e:	f8d6 30d8 	ldr.w	r3, [r6, #216]	; 0xd8
2fff4452:	f423 7311 	bic.w	r3, r3, #580	; 0x244
2fff4456:	f023 0301 	bic.w	r3, r3, #1
2fff445a:	f8c6 30d8 	str.w	r3, [r6, #216]	; 0xd8
2fff445e:	f7ff f87d 	bl	2fff355c <stm32mp1_clk_rcc_regs_unlock>
2fff4462:	f7fc fd57 	bl	2fff0f14 <stm32mp_pwr_regs_lock>
2fff4466:	f8da 300c 	ldr.w	r3, [sl, #12]
2fff446a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
2fff446e:	f8ca 300c 	str.w	r3, [sl, #12]
2fff4472:	f7fc fd5b 	bl	2fff0f2c <stm32mp_pwr_regs_unlock>
2fff4476:	2000      	movs	r0, #0
2fff4478:	e764      	b.n	2fff4344 <ddr_standby_sr_entry+0xfc>
2fff447a:	bf00      	nop
2fff447c:	000f4240 	.word	0x000f4240

2fff4480 <ddr_read_sr_mode>:
2fff4480:	b508      	push	{r3, lr}
2fff4482:	f7fc fd2f 	bl	2fff0ee4 <stm32mp_ddrctrl_base>
2fff4486:	6b03      	ldr	r3, [r0, #48]	; 0x30
2fff4488:	4a02      	ldr	r2, [pc, #8]	; (2fff4494 <ddr_read_sr_mode+0x14>)
2fff448a:	f003 0309 	and.w	r3, r3, #9
2fff448e:	5cd0      	ldrb	r0, [r2, r3]
2fff4490:	bd08      	pop	{r3, pc}
2fff4492:	bf00      	nop
2fff4494:	2fff9e42 	.word	0x2fff9e42

2fff4498 <ddr_set_sr_mode>:
2fff4498:	2802      	cmp	r0, #2
2fff449a:	b538      	push	{r3, r4, r5, lr}
2fff449c:	d064      	beq.n	2fff4568 <ddr_set_sr_mode+0xd0>
2fff449e:	2803      	cmp	r0, #3
2fff44a0:	f000 809a 	beq.w	2fff45d8 <ddr_set_sr_mode+0x140>
2fff44a4:	2801      	cmp	r0, #1
2fff44a6:	f040 80d3 	bne.w	2fff4650 <ddr_set_sr_mode+0x1b8>
2fff44aa:	f7fc fd27 	bl	2fff0efc <stm32mp_rcc_base>
2fff44ae:	4604      	mov	r4, r0
2fff44b0:	f7fc fd18 	bl	2fff0ee4 <stm32mp_ddrctrl_base>
2fff44b4:	4605      	mov	r5, r0
2fff44b6:	f7ff f84b 	bl	2fff3550 <stm32mp1_clk_rcc_regs_lock>
2fff44ba:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff44be:	f043 0302 	orr.w	r3, r3, #2
2fff44c2:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff44c6:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff44ca:	f043 0308 	orr.w	r3, r3, #8
2fff44ce:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff44d2:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff44d6:	f043 0301 	orr.w	r3, r3, #1
2fff44da:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff44de:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff44e2:	f043 0304 	orr.w	r3, r3, #4
2fff44e6:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff44ea:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff44ee:	f043 0380 	orr.w	r3, r3, #128	; 0x80
2fff44f2:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff44f6:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff44fa:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
2fff44fe:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff4502:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff4506:	f043 0340 	orr.w	r3, r3, #64	; 0x40
2fff450a:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff450e:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff4512:	f443 7300 	orr.w	r3, r3, #512	; 0x200
2fff4516:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff451a:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff451e:	f043 0310 	orr.w	r3, r3, #16
2fff4522:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff4526:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff452a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
2fff452e:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff4532:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff4536:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
2fff453a:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff453e:	f7ff f80d 	bl	2fff355c <stm32mp1_clk_rcc_regs_unlock>
2fff4542:	6bab      	ldr	r3, [r5, #56]	; 0x38
2fff4544:	f023 0301 	bic.w	r3, r3, #1
2fff4548:	63ab      	str	r3, [r5, #56]	; 0x38
2fff454a:	6b6b      	ldr	r3, [r5, #52]	; 0x34
2fff454c:	f423 237f 	bic.w	r3, r3, #1044480	; 0xff000
2fff4550:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
2fff4554:	636b      	str	r3, [r5, #52]	; 0x34
2fff4556:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2fff4558:	f023 0308 	bic.w	r3, r3, #8
2fff455c:	632b      	str	r3, [r5, #48]	; 0x30
2fff455e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2fff4560:	f023 0301 	bic.w	r3, r3, #1
2fff4564:	632b      	str	r3, [r5, #48]	; 0x30
2fff4566:	bd38      	pop	{r3, r4, r5, pc}
2fff4568:	f7fc fcc8 	bl	2fff0efc <stm32mp_rcc_base>
2fff456c:	4604      	mov	r4, r0
2fff456e:	f7fc fcb9 	bl	2fff0ee4 <stm32mp_ddrctrl_base>
2fff4572:	4605      	mov	r5, r0
2fff4574:	f7fe ffec 	bl	2fff3550 <stm32mp1_clk_rcc_regs_lock>
2fff4578:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff457c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
2fff4580:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff4584:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff4588:	f023 0302 	bic.w	r3, r3, #2
2fff458c:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff4590:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff4594:	f023 0308 	bic.w	r3, r3, #8
2fff4598:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff459c:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff45a0:	f043 0320 	orr.w	r3, r3, #32
2fff45a4:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff45a8:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff45ac:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
2fff45b0:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
2fff45b4:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff45b8:	f7fe ffd0 	bl	2fff355c <stm32mp1_clk_rcc_regs_unlock>
2fff45bc:	6bab      	ldr	r3, [r5, #56]	; 0x38
2fff45be:	f043 0301 	orr.w	r3, r3, #1
2fff45c2:	63ab      	str	r3, [r5, #56]	; 0x38
2fff45c4:	6b6b      	ldr	r3, [r5, #52]	; 0x34
2fff45c6:	f423 237f 	bic.w	r3, r3, #1044480	; 0xff000
2fff45ca:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
2fff45ce:	636b      	str	r3, [r5, #52]	; 0x34
2fff45d0:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2fff45d2:	f043 0308 	orr.w	r3, r3, #8
2fff45d6:	e7c5      	b.n	2fff4564 <ddr_set_sr_mode+0xcc>
2fff45d8:	f7fc fc90 	bl	2fff0efc <stm32mp_rcc_base>
2fff45dc:	4604      	mov	r4, r0
2fff45de:	f7fc fc81 	bl	2fff0ee4 <stm32mp_ddrctrl_base>
2fff45e2:	4605      	mov	r5, r0
2fff45e4:	f7fe ffb4 	bl	2fff3550 <stm32mp1_clk_rcc_regs_lock>
2fff45e8:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff45ec:	f443 7380 	orr.w	r3, r3, #256	; 0x100
2fff45f0:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff45f4:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff45f8:	f043 0302 	orr.w	r3, r3, #2
2fff45fc:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff4600:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff4604:	f043 0308 	orr.w	r3, r3, #8
2fff4608:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff460c:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff4610:	f043 0320 	orr.w	r3, r3, #32
2fff4614:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff4618:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff461c:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
2fff4620:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
2fff4624:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff4628:	f7fe ff98 	bl	2fff355c <stm32mp1_clk_rcc_regs_unlock>
2fff462c:	6bab      	ldr	r3, [r5, #56]	; 0x38
2fff462e:	f043 0301 	orr.w	r3, r3, #1
2fff4632:	63ab      	str	r3, [r5, #56]	; 0x38
2fff4634:	6b6b      	ldr	r3, [r5, #52]	; 0x34
2fff4636:	f423 237f 	bic.w	r3, r3, #1044480	; 0xff000
2fff463a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
2fff463e:	636b      	str	r3, [r5, #52]	; 0x34
2fff4640:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2fff4642:	f043 0308 	orr.w	r3, r3, #8
2fff4646:	632b      	str	r3, [r5, #48]	; 0x30
2fff4648:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2fff464a:	f043 0301 	orr.w	r3, r3, #1
2fff464e:	e789      	b.n	2fff4564 <ddr_set_sr_mode+0xcc>
2fff4650:	4803      	ldr	r0, [pc, #12]	; (2fff4660 <ddr_set_sr_mode+0x1c8>)
2fff4652:	f7fc fa95 	bl	2fff0b80 <tf_log>
2fff4656:	f7fc fb35 	bl	2fff0cc4 <console_flush>
2fff465a:	f002 eb6a 	blx	2fff6d30 <do_panic>
2fff465e:	bf00      	nop
2fff4660:	2fff9e4c 	.word	0x2fff9e4c

2fff4664 <ddr_save_sr_mode>:
2fff4664:	b508      	push	{r3, lr}
2fff4666:	f7ff ff0b 	bl	2fff4480 <ddr_read_sr_mode>
2fff466a:	4b01      	ldr	r3, [pc, #4]	; (2fff4670 <ddr_save_sr_mode+0xc>)
2fff466c:	6018      	str	r0, [r3, #0]
2fff466e:	bd08      	pop	{r3, pc}
2fff4670:	2fffcf48 	.word	0x2fffcf48

2fff4674 <ddr_restore_sr_mode>:
2fff4674:	4b01      	ldr	r3, [pc, #4]	; (2fff467c <ddr_restore_sr_mode+0x8>)
2fff4676:	6818      	ldr	r0, [r3, #0]
2fff4678:	f7ff bf0e 	b.w	2fff4498 <ddr_set_sr_mode>
2fff467c:	2fffcf48 	.word	0x2fffcf48

2fff4680 <fdt32_to_cpu>:
2fff4680:	ba00      	rev	r0, r0
2fff4682:	4770      	bx	lr

2fff4684 <set_gpio>:
2fff4684:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff4688:	468b      	mov	fp, r1
2fff468a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
2fff468c:	4680      	mov	r8, r0
2fff468e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
2fff4690:	4691      	mov	r9, r2
2fff4692:	f89d a038 	ldrb.w	sl, [sp, #56]	; 0x38
2fff4696:	461f      	mov	r7, r3
2fff4698:	f7fc fc54 	bl	2fff0f44 <stm32_get_gpio_bank_base>
2fff469c:	4604      	mov	r4, r0
2fff469e:	4640      	mov	r0, r8
2fff46a0:	f7fc fcc8 	bl	2fff1034 <stm32_get_gpio_bank_clock>
2fff46a4:	9001      	str	r0, [sp, #4]
2fff46a6:	f1bb 0f0f 	cmp.w	fp, #15
2fff46aa:	d903      	bls.n	2fff46b4 <set_gpio+0x30>
2fff46ac:	4833      	ldr	r0, [pc, #204]	; (2fff477c <set_gpio+0xf8>)
2fff46ae:	21d1      	movs	r1, #209	; 0xd1
2fff46b0:	f003 fb7a 	bl	2fff7da8 <__assert>
2fff46b4:	f7fe ff58 	bl	2fff3568 <stm32mp_clk_enable>
2fff46b8:	ea4f 014b 	mov.w	r1, fp, lsl #1
2fff46bc:	2203      	movs	r2, #3
2fff46be:	6820      	ldr	r0, [r4, #0]
2fff46c0:	f019 0f10 	tst.w	r9, #16
2fff46c4:	fa02 f201 	lsl.w	r2, r2, r1
2fff46c8:	ea6f 0202 	mvn.w	r2, r2
2fff46cc:	fa07 f701 	lsl.w	r7, r7, r1
2fff46d0:	ea00 0002 	and.w	r0, r0, r2
2fff46d4:	6020      	str	r0, [r4, #0]
2fff46d6:	f029 0010 	bic.w	r0, r9, #16
2fff46da:	6823      	ldr	r3, [r4, #0]
2fff46dc:	fa00 f001 	lsl.w	r0, r0, r1
2fff46e0:	ea40 0003 	orr.w	r0, r0, r3
2fff46e4:	6020      	str	r0, [r4, #0]
2fff46e6:	f04f 0001 	mov.w	r0, #1
2fff46ea:	6863      	ldr	r3, [r4, #4]
2fff46ec:	fa00 f00b 	lsl.w	r0, r0, fp
2fff46f0:	bf14      	ite	ne
2fff46f2:	4318      	orrne	r0, r3
2fff46f4:	ea23 0000 	biceq.w	r0, r3, r0
2fff46f8:	f1bb 0f07 	cmp.w	fp, #7
2fff46fc:	6060      	str	r0, [r4, #4]
2fff46fe:	68a0      	ldr	r0, [r4, #8]
2fff4700:	fa06 f601 	lsl.w	r6, r6, r1
2fff4704:	ea00 0002 	and.w	r0, r0, r2
2fff4708:	60a0      	str	r0, [r4, #8]
2fff470a:	68a0      	ldr	r0, [r4, #8]
2fff470c:	ea47 0700 	orr.w	r7, r7, r0
2fff4710:	60a7      	str	r7, [r4, #8]
2fff4712:	68e0      	ldr	r0, [r4, #12]
2fff4714:	ea02 0200 	and.w	r2, r2, r0
2fff4718:	60e2      	str	r2, [r4, #12]
2fff471a:	68e2      	ldr	r2, [r4, #12]
2fff471c:	ea46 0602 	orr.w	r6, r6, r2
2fff4720:	f04f 020f 	mov.w	r2, #15
2fff4724:	60e6      	str	r6, [r4, #12]
2fff4726:	d817      	bhi.n	2fff4758 <set_gpio+0xd4>
2fff4728:	ea4f 018b 	mov.w	r1, fp, lsl #2
2fff472c:	6a20      	ldr	r0, [r4, #32]
2fff472e:	408a      	lsls	r2, r1
2fff4730:	ea20 0202 	bic.w	r2, r0, r2
2fff4734:	6222      	str	r2, [r4, #32]
2fff4736:	6a22      	ldr	r2, [r4, #32]
2fff4738:	408d      	lsls	r5, r1
2fff473a:	4315      	orrs	r5, r2
2fff473c:	6225      	str	r5, [r4, #32]
2fff473e:	9801      	ldr	r0, [sp, #4]
2fff4740:	f7fe ff15 	bl	2fff356e <stm32mp_clk_disable>
2fff4744:	f1ba 0f02 	cmp.w	sl, #2
2fff4748:	4659      	mov	r1, fp
2fff474a:	4640      	mov	r0, r8
2fff474c:	d111      	bne.n	2fff4772 <set_gpio+0xee>
2fff474e:	b003      	add	sp, #12
2fff4750:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff4754:	f7fa ba6a 	b.w	2ffeec2c <stm32mp_register_secure_gpio>
2fff4758:	6a60      	ldr	r0, [r4, #36]	; 0x24
2fff475a:	f1ab 0108 	sub.w	r1, fp, #8
2fff475e:	0089      	lsls	r1, r1, #2
2fff4760:	408a      	lsls	r2, r1
2fff4762:	ea20 0202 	bic.w	r2, r0, r2
2fff4766:	6262      	str	r2, [r4, #36]	; 0x24
2fff4768:	6a62      	ldr	r2, [r4, #36]	; 0x24
2fff476a:	408d      	lsls	r5, r1
2fff476c:	4315      	orrs	r5, r2
2fff476e:	6265      	str	r5, [r4, #36]	; 0x24
2fff4770:	e7e5      	b.n	2fff473e <set_gpio+0xba>
2fff4772:	b003      	add	sp, #12
2fff4774:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff4778:	f7fa ba6c 	b.w	2ffeec54 <stm32mp_register_non_secure_gpio>
2fff477c:	2fff9edd 	.word	0x2fff9edd

2fff4780 <dt_set_pinctrl_config>:
2fff4780:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff4784:	b091      	sub	sp, #68	; 0x44
2fff4786:	4605      	mov	r5, r0
2fff4788:	2400      	movs	r4, #0
2fff478a:	940d      	str	r4, [sp, #52]	; 0x34
2fff478c:	a80e      	add	r0, sp, #56	; 0x38
2fff478e:	f001 fd97 	bl	2fff62c0 <fdt_get_address>
2fff4792:	b920      	cbnz	r0, 2fff479e <dt_set_pinctrl_config+0x1e>
2fff4794:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff4798:	b011      	add	sp, #68	; 0x44
2fff479a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff479e:	4628      	mov	r0, r5
2fff47a0:	f001 fd9a 	bl	2fff62d8 <fdt_get_status>
2fff47a4:	9004      	str	r0, [sp, #16]
2fff47a6:	2800      	cmp	r0, #0
2fff47a8:	d0f4      	beq.n	2fff4794 <dt_set_pinctrl_config+0x14>
2fff47aa:	4a6c      	ldr	r2, [pc, #432]	; (2fff495c <dt_set_pinctrl_config+0x1dc>)
2fff47ac:	ab0d      	add	r3, sp, #52	; 0x34
2fff47ae:	980e      	ldr	r0, [sp, #56]	; 0x38
2fff47b0:	4629      	mov	r1, r5
2fff47b2:	f003 f95c 	bl	2fff7a6e <fdt_getprop>
2fff47b6:	9005      	str	r0, [sp, #20]
2fff47b8:	2800      	cmp	r0, #0
2fff47ba:	d0eb      	beq.n	2fff4794 <dt_set_pinctrl_config+0x14>
2fff47bc:	46a3      	mov	fp, r4
2fff47be:	9b0d      	ldr	r3, [sp, #52]	; 0x34
2fff47c0:	ebbb 0f93 	cmp.w	fp, r3, lsr #2
2fff47c4:	d301      	bcc.n	2fff47ca <dt_set_pinctrl_config+0x4a>
2fff47c6:	2000      	movs	r0, #0
2fff47c8:	e7e6      	b.n	2fff4798 <dt_set_pinctrl_config+0x18>
2fff47ca:	9b05      	ldr	r3, [sp, #20]
2fff47cc:	f853 002b 	ldr.w	r0, [r3, fp, lsl #2]
2fff47d0:	f7ff ff56 	bl	2fff4680 <fdt32_to_cpu>
2fff47d4:	4601      	mov	r1, r0
2fff47d6:	980e      	ldr	r0, [sp, #56]	; 0x38
2fff47d8:	f003 fa3b 	bl	2fff7c52 <fdt_node_offset_by_phandle>
2fff47dc:	1e01      	subs	r1, r0, #0
2fff47de:	dbd9      	blt.n	2fff4794 <dt_set_pinctrl_config+0x14>
2fff47e0:	980e      	ldr	r0, [sp, #56]	; 0x38
2fff47e2:	f002 ffc2 	bl	2fff776a <fdt_first_subnode>
2fff47e6:	4606      	mov	r6, r0
2fff47e8:	2e00      	cmp	r6, #0
2fff47ea:	da02      	bge.n	2fff47f2 <dt_set_pinctrl_config+0x72>
2fff47ec:	f10b 0b01 	add.w	fp, fp, #1
2fff47f0:	e7e5      	b.n	2fff47be <dt_set_pinctrl_config+0x3e>
2fff47f2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
2fff47f4:	ab0f      	add	r3, sp, #60	; 0x3c
2fff47f6:	4a5a      	ldr	r2, [pc, #360]	; (2fff4960 <dt_set_pinctrl_config+0x1e0>)
2fff47f8:	4631      	mov	r1, r6
2fff47fa:	4628      	mov	r0, r5
2fff47fc:	f003 f937 	bl	2fff7a6e <fdt_getprop>
2fff4800:	9006      	str	r0, [sp, #24]
2fff4802:	2800      	cmp	r0, #0
2fff4804:	d0c6      	beq.n	2fff4794 <dt_set_pinctrl_config+0x14>
2fff4806:	4631      	mov	r1, r6
2fff4808:	4628      	mov	r0, r5
2fff480a:	f003 fa12 	bl	2fff7c32 <fdt_parent_offset>
2fff480e:	4601      	mov	r1, r0
2fff4810:	4628      	mov	r0, r5
2fff4812:	f003 fa0e 	bl	2fff7c32 <fdt_parent_offset>
2fff4816:	1e03      	subs	r3, r0, #0
2fff4818:	9309      	str	r3, [sp, #36]	; 0x24
2fff481a:	dbbb      	blt.n	2fff4794 <dt_set_pinctrl_config+0x14>
2fff481c:	4a51      	ldr	r2, [pc, #324]	; (2fff4964 <dt_set_pinctrl_config+0x1e4>)
2fff481e:	2300      	movs	r3, #0
2fff4820:	4631      	mov	r1, r6
2fff4822:	4628      	mov	r0, r5
2fff4824:	f003 f923 	bl	2fff7a6e <fdt_getprop>
2fff4828:	b110      	cbz	r0, 2fff4830 <dt_set_pinctrl_config+0xb0>
2fff482a:	6800      	ldr	r0, [r0, #0]
2fff482c:	f7ff ff28 	bl	2fff4680 <fdt32_to_cpu>
2fff4830:	9007      	str	r0, [sp, #28]
2fff4832:	2300      	movs	r3, #0
2fff4834:	4a4c      	ldr	r2, [pc, #304]	; (2fff4968 <dt_set_pinctrl_config+0x1e8>)
2fff4836:	4631      	mov	r1, r6
2fff4838:	4628      	mov	r0, r5
2fff483a:	f003 f918 	bl	2fff7a6e <fdt_getprop>
2fff483e:	4603      	mov	r3, r0
2fff4840:	b9a0      	cbnz	r0, 2fff486c <dt_set_pinctrl_config+0xec>
2fff4842:	4a4a      	ldr	r2, [pc, #296]	; (2fff496c <dt_set_pinctrl_config+0x1ec>)
2fff4844:	4631      	mov	r1, r6
2fff4846:	4628      	mov	r0, r5
2fff4848:	f003 f911 	bl	2fff7a6e <fdt_getprop>
2fff484c:	2800      	cmp	r0, #0
2fff484e:	bf0c      	ite	eq
2fff4850:	2300      	moveq	r3, #0
2fff4852:	2302      	movne	r3, #2
2fff4854:	9308      	str	r3, [sp, #32]
2fff4856:	f04f 0800 	mov.w	r8, #0
2fff485a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
2fff485c:	ebb8 0f93 	cmp.w	r8, r3, lsr #2
2fff4860:	d306      	bcc.n	2fff4870 <dt_set_pinctrl_config+0xf0>
2fff4862:	980e      	ldr	r0, [sp, #56]	; 0x38
2fff4864:	4631      	mov	r1, r6
2fff4866:	f002 ff94 	bl	2fff7792 <fdt_next_subnode>
2fff486a:	e7bc      	b.n	2fff47e6 <dt_set_pinctrl_config+0x66>
2fff486c:	2301      	movs	r3, #1
2fff486e:	e7f1      	b.n	2fff4854 <dt_set_pinctrl_config+0xd4>
2fff4870:	9b06      	ldr	r3, [sp, #24]
2fff4872:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
2fff4876:	f7ff ff03 	bl	2fff4680 <fdt32_to_cpu>
2fff487a:	f3c0 2303 	ubfx	r3, r0, #8, #4
2fff487e:	b2c4      	uxtb	r4, r0
2fff4880:	f3c0 3a04 	ubfx	sl, r0, #12, #5
2fff4884:	2c10      	cmp	r4, #16
2fff4886:	930a      	str	r3, [sp, #40]	; 0x28
2fff4888:	d804      	bhi.n	2fff4894 <dt_set_pinctrl_config+0x114>
2fff488a:	b32c      	cbz	r4, 2fff48d8 <dt_set_pinctrl_config+0x158>
2fff488c:	f104 39ff 	add.w	r9, r4, #4294967295	; 0xffffffff
2fff4890:	2402      	movs	r4, #2
2fff4892:	e004      	b.n	2fff489e <dt_set_pinctrl_config+0x11e>
2fff4894:	2c11      	cmp	r4, #17
2fff4896:	f04f 0900 	mov.w	r9, #0
2fff489a:	d11b      	bne.n	2fff48d4 <dt_set_pinctrl_config+0x154>
2fff489c:	2403      	movs	r4, #3
2fff489e:	4a34      	ldr	r2, [pc, #208]	; (2fff4970 <dt_set_pinctrl_config+0x1f0>)
2fff48a0:	2300      	movs	r3, #0
2fff48a2:	4631      	mov	r1, r6
2fff48a4:	4628      	mov	r0, r5
2fff48a6:	f003 f8e2 	bl	2fff7a6e <fdt_getprop>
2fff48aa:	b108      	cbz	r0, 2fff48b0 <dt_set_pinctrl_config+0x130>
2fff48ac:	f044 0410 	orr.w	r4, r4, #16
2fff48b0:	4650      	mov	r0, sl
2fff48b2:	f7fc fb5b 	bl	2fff0f6c <stm32_get_gpio_bank_offset>
2fff48b6:	900b      	str	r0, [sp, #44]	; 0x2c
2fff48b8:	4628      	mov	r0, r5
2fff48ba:	9909      	ldr	r1, [sp, #36]	; 0x24
2fff48bc:	f002 ff55 	bl	2fff776a <fdt_first_subnode>
2fff48c0:	2800      	cmp	r0, #0
2fff48c2:	4607      	mov	r7, r0
2fff48c4:	da0b      	bge.n	2fff48de <dt_set_pinctrl_config+0x15e>
2fff48c6:	482b      	ldr	r0, [pc, #172]	; (2fff4974 <dt_set_pinctrl_config+0x1f4>)
2fff48c8:	f7fc f95a 	bl	2fff0b80 <tf_log>
2fff48cc:	f7fc f9fa 	bl	2fff0cc4 <console_flush>
2fff48d0:	f002 ea2e 	blx	2fff6d30 <do_panic>
2fff48d4:	2401      	movs	r4, #1
2fff48d6:	e7e2      	b.n	2fff489e <dt_set_pinctrl_config+0x11e>
2fff48d8:	f04f 0900 	mov.w	r9, #0
2fff48dc:	e7df      	b.n	2fff489e <dt_set_pinctrl_config+0x11e>
2fff48de:	4a26      	ldr	r2, [pc, #152]	; (2fff4978 <dt_set_pinctrl_config+0x1f8>)
2fff48e0:	2300      	movs	r3, #0
2fff48e2:	4639      	mov	r1, r7
2fff48e4:	4628      	mov	r0, r5
2fff48e6:	f003 f8c2 	bl	2fff7a6e <fdt_getprop>
2fff48ea:	b920      	cbnz	r0, 2fff48f6 <dt_set_pinctrl_config+0x176>
2fff48ec:	4639      	mov	r1, r7
2fff48ee:	4628      	mov	r0, r5
2fff48f0:	f002 ff4f 	bl	2fff7792 <fdt_next_subnode>
2fff48f4:	e7e4      	b.n	2fff48c0 <dt_set_pinctrl_config+0x140>
2fff48f6:	4a21      	ldr	r2, [pc, #132]	; (2fff497c <dt_set_pinctrl_config+0x1fc>)
2fff48f8:	2300      	movs	r3, #0
2fff48fa:	4639      	mov	r1, r7
2fff48fc:	4628      	mov	r0, r5
2fff48fe:	f003 f8b6 	bl	2fff7a6e <fdt_getprop>
2fff4902:	2800      	cmp	r0, #0
2fff4904:	d0f2      	beq.n	2fff48ec <dt_set_pinctrl_config+0x16c>
2fff4906:	6800      	ldr	r0, [r0, #0]
2fff4908:	f7ff feba 	bl	2fff4680 <fdt32_to_cpu>
2fff490c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
2fff490e:	4283      	cmp	r3, r0
2fff4910:	d1ec      	bne.n	2fff48ec <dt_set_pinctrl_config+0x16c>
2fff4912:	4638      	mov	r0, r7
2fff4914:	f001 fce0 	bl	2fff62d8 <fdt_get_status>
2fff4918:	2800      	cmp	r0, #0
2fff491a:	d0e7      	beq.n	2fff48ec <dt_set_pinctrl_config+0x16c>
2fff491c:	2f00      	cmp	r7, #0
2fff491e:	d0d2      	beq.n	2fff48c6 <dt_set_pinctrl_config+0x146>
2fff4920:	4638      	mov	r0, r7
2fff4922:	f7fe f903 	bl	2fff2b2c <fdt_get_clock_id>
2fff4926:	1e07      	subs	r7, r0, #0
2fff4928:	f6ff af34 	blt.w	2fff4794 <dt_set_pinctrl_config+0x14>
2fff492c:	4650      	mov	r0, sl
2fff492e:	f7fc fb81 	bl	2fff1034 <stm32_get_gpio_bank_clock>
2fff4932:	42b8      	cmp	r0, r7
2fff4934:	d003      	beq.n	2fff493e <dt_set_pinctrl_config+0x1be>
2fff4936:	4812      	ldr	r0, [pc, #72]	; (2fff4980 <dt_set_pinctrl_config+0x200>)
2fff4938:	2192      	movs	r1, #146	; 0x92
2fff493a:	f003 fa35 	bl	2fff7da8 <__assert>
2fff493e:	9b04      	ldr	r3, [sp, #16]
2fff4940:	4622      	mov	r2, r4
2fff4942:	f8cd 9004 	str.w	r9, [sp, #4]
2fff4946:	4650      	mov	r0, sl
2fff4948:	9302      	str	r3, [sp, #8]
2fff494a:	f108 0801 	add.w	r8, r8, #1
2fff494e:	9b08      	ldr	r3, [sp, #32]
2fff4950:	990a      	ldr	r1, [sp, #40]	; 0x28
2fff4952:	9300      	str	r3, [sp, #0]
2fff4954:	9b07      	ldr	r3, [sp, #28]
2fff4956:	f7ff fe95 	bl	2fff4684 <set_gpio>
2fff495a:	e77e      	b.n	2fff485a <dt_set_pinctrl_config+0xda>
2fff495c:	2fff9e68 	.word	0x2fff9e68
2fff4960:	2fff9e72 	.word	0x2fff9e72
2fff4964:	2fff9e79 	.word	0x2fff9e79
2fff4968:	2fff9e83 	.word	0x2fff9e83
2fff496c:	2fff9e90 	.word	0x2fff9e90
2fff4970:	2fff9e9f 	.word	0x2fff9e9f
2fff4974:	2fff9ec0 	.word	0x2fff9ec0
2fff4978:	2fff9eb0 	.word	0x2fff9eb0
2fff497c:	2fff8b39 	.word	0x2fff8b39
2fff4980:	2fff9edd 	.word	0x2fff9edd

2fff4984 <set_gpio_secure_cfg>:
2fff4984:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff4988:	460f      	mov	r7, r1
2fff498a:	4680      	mov	r8, r0
2fff498c:	4616      	mov	r6, r2
2fff498e:	f7fc fad9 	bl	2fff0f44 <stm32_get_gpio_bank_base>
2fff4992:	4604      	mov	r4, r0
2fff4994:	4640      	mov	r0, r8
2fff4996:	f7fc fb4d 	bl	2fff1034 <stm32_get_gpio_bank_clock>
2fff499a:	2f0f      	cmp	r7, #15
2fff499c:	4605      	mov	r5, r0
2fff499e:	d904      	bls.n	2fff49aa <set_gpio_secure_cfg+0x26>
2fff49a0:	f240 110f 	movw	r1, #271	; 0x10f
2fff49a4:	480d      	ldr	r0, [pc, #52]	; (2fff49dc <set_gpio_secure_cfg+0x58>)
2fff49a6:	f003 f9ff 	bl	2fff7da8 <__assert>
2fff49aa:	b136      	cbz	r6, 2fff49ba <set_gpio_secure_cfg+0x36>
2fff49ac:	4640      	mov	r0, r8
2fff49ae:	f7fa f9bb 	bl	2ffeed28 <stm32mp_gpio_bank_is_non_secure>
2fff49b2:	b110      	cbz	r0, 2fff49ba <set_gpio_secure_cfg+0x36>
2fff49b4:	f240 1111 	movw	r1, #273	; 0x111
2fff49b8:	e7f4      	b.n	2fff49a4 <set_gpio_secure_cfg+0x20>
2fff49ba:	4628      	mov	r0, r5
2fff49bc:	f7fe fdd4 	bl	2fff3568 <stm32mp_clk_enable>
2fff49c0:	6b23      	ldr	r3, [r4, #48]	; 0x30
2fff49c2:	2101      	movs	r1, #1
2fff49c4:	40b9      	lsls	r1, r7
2fff49c6:	b136      	cbz	r6, 2fff49d6 <set_gpio_secure_cfg+0x52>
2fff49c8:	4319      	orrs	r1, r3
2fff49ca:	6321      	str	r1, [r4, #48]	; 0x30
2fff49cc:	4628      	mov	r0, r5
2fff49ce:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
2fff49d2:	f7fe bdcc 	b.w	2fff356e <stm32mp_clk_disable>
2fff49d6:	ea23 0101 	bic.w	r1, r3, r1
2fff49da:	e7f6      	b.n	2fff49ca <set_gpio_secure_cfg+0x46>
2fff49dc:	2fff9edd 	.word	0x2fff9edd

2fff49e0 <i2c_transfer_config.isra.1>:
2fff49e0:	b530      	push	{r4, r5, lr}
2fff49e2:	9d03      	ldr	r5, [sp, #12]
2fff49e4:	f3c1 0109 	ubfx	r1, r1, #0, #10
2fff49e8:	432b      	orrs	r3, r5
2fff49ea:	0412      	lsls	r2, r2, #16
2fff49ec:	430b      	orrs	r3, r1
2fff49ee:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
2fff49f2:	4313      	orrs	r3, r2
2fff49f4:	4a04      	ldr	r2, [pc, #16]	; (2fff4a08 <i2c_transfer_config.isra.1+0x28>)
2fff49f6:	6844      	ldr	r4, [r0, #4]
2fff49f8:	ea42 5255 	orr.w	r2, r2, r5, lsr #21
2fff49fc:	ea24 0402 	bic.w	r4, r4, r2
2fff4a00:	4323      	orrs	r3, r4
2fff4a02:	6043      	str	r3, [r0, #4]
2fff4a04:	bd30      	pop	{r4, r5, pc}
2fff4a06:	bf00      	nop
2fff4a08:	03ff63ff 	.word	0x03ff63ff

2fff4a0c <i2c_wait_flag>:
2fff4a0c:	6803      	ldr	r3, [r0, #0]
2fff4a0e:	f002 0201 	and.w	r2, r2, #1
2fff4a12:	b5f0      	push	{r4, r5, r6, r7, lr}
2fff4a14:	3318      	adds	r3, #24
2fff4a16:	e9dd 4505 	ldrd	r4, r5, [sp, #20]
2fff4a1a:	681e      	ldr	r6, [r3, #0]
2fff4a1c:	4231      	tst	r1, r6
2fff4a1e:	bf14      	ite	ne
2fff4a20:	2601      	movne	r6, #1
2fff4a22:	2600      	moveq	r6, #0
2fff4a24:	4296      	cmp	r6, r2
2fff4a26:	d111      	bne.n	2fff4a4c <i2c_wait_flag+0x40>
2fff4a28:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff4a2c:	42bd      	cmp	r5, r7
2fff4a2e:	bf08      	it	eq
2fff4a30:	42b4      	cmpeq	r4, r6
2fff4a32:	d2f2      	bcs.n	2fff4a1a <i2c_wait_flag+0xe>
2fff4a34:	6983      	ldr	r3, [r0, #24]
2fff4a36:	2220      	movs	r2, #32
2fff4a38:	6102      	str	r2, [r0, #16]
2fff4a3a:	f043 0320 	orr.w	r3, r3, #32
2fff4a3e:	6183      	str	r3, [r0, #24]
2fff4a40:	2300      	movs	r3, #0
2fff4a42:	6143      	str	r3, [r0, #20]
2fff4a44:	7303      	strb	r3, [r0, #12]
2fff4a46:	f06f 0004 	mvn.w	r0, #4
2fff4a4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff4a4c:	2000      	movs	r0, #0
2fff4a4e:	e7fc      	b.n	2fff4a4a <i2c_wait_flag+0x3e>

2fff4a50 <i2c_ack_failed>:
2fff4a50:	b5f0      	push	{r4, r5, r6, r7, lr}
2fff4a52:	4614      	mov	r4, r2
2fff4a54:	6802      	ldr	r2, [r0, #0]
2fff4a56:	461d      	mov	r5, r3
2fff4a58:	6993      	ldr	r3, [r2, #24]
2fff4a5a:	f102 0118 	add.w	r1, r2, #24
2fff4a5e:	f013 0310 	ands.w	r3, r3, #16
2fff4a62:	d112      	bne.n	2fff4a8a <i2c_ack_failed+0x3a>
2fff4a64:	4618      	mov	r0, r3
2fff4a66:	e00f      	b.n	2fff4a88 <i2c_ack_failed+0x38>
2fff4a68:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff4a6c:	42bd      	cmp	r5, r7
2fff4a6e:	bf08      	it	eq
2fff4a70:	42b4      	cmpeq	r4, r6
2fff4a72:	d20a      	bcs.n	2fff4a8a <i2c_ack_failed+0x3a>
2fff4a74:	6982      	ldr	r2, [r0, #24]
2fff4a76:	6143      	str	r3, [r0, #20]
2fff4a78:	f042 0220 	orr.w	r2, r2, #32
2fff4a7c:	6182      	str	r2, [r0, #24]
2fff4a7e:	2220      	movs	r2, #32
2fff4a80:	6102      	str	r2, [r0, #16]
2fff4a82:	7303      	strb	r3, [r0, #12]
2fff4a84:	f06f 0004 	mvn.w	r0, #4
2fff4a88:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff4a8a:	680b      	ldr	r3, [r1, #0]
2fff4a8c:	f013 0320 	ands.w	r3, r3, #32
2fff4a90:	d0ea      	beq.n	2fff4a68 <i2c_ack_failed+0x18>
2fff4a92:	2310      	movs	r3, #16
2fff4a94:	61d3      	str	r3, [r2, #28]
2fff4a96:	2220      	movs	r2, #32
2fff4a98:	6803      	ldr	r3, [r0, #0]
2fff4a9a:	61da      	str	r2, [r3, #28]
2fff4a9c:	6803      	ldr	r3, [r0, #0]
2fff4a9e:	699a      	ldr	r2, [r3, #24]
2fff4aa0:	0794      	lsls	r4, r2, #30
2fff4aa2:	bf44      	itt	mi
2fff4aa4:	2200      	movmi	r2, #0
2fff4aa6:	629a      	strmi	r2, [r3, #40]	; 0x28
2fff4aa8:	6803      	ldr	r3, [r0, #0]
2fff4aaa:	699a      	ldr	r2, [r3, #24]
2fff4aac:	07d1      	lsls	r1, r2, #31
2fff4aae:	bf5e      	ittt	pl
2fff4ab0:	699a      	ldrpl	r2, [r3, #24]
2fff4ab2:	f042 0201 	orrpl.w	r2, r2, #1
2fff4ab6:	619a      	strpl	r2, [r3, #24]
2fff4ab8:	6802      	ldr	r2, [r0, #0]
2fff4aba:	6853      	ldr	r3, [r2, #4]
2fff4abc:	f023 73ff 	bic.w	r3, r3, #33423360	; 0x1fe0000
2fff4ac0:	f423 338b 	bic.w	r3, r3, #71168	; 0x11600
2fff4ac4:	f423 73ff 	bic.w	r3, r3, #510	; 0x1fe
2fff4ac8:	f023 0301 	bic.w	r3, r3, #1
2fff4acc:	6053      	str	r3, [r2, #4]
2fff4ace:	6983      	ldr	r3, [r0, #24]
2fff4ad0:	f043 0304 	orr.w	r3, r3, #4
2fff4ad4:	6183      	str	r3, [r0, #24]
2fff4ad6:	2320      	movs	r3, #32
2fff4ad8:	6103      	str	r3, [r0, #16]
2fff4ada:	2300      	movs	r3, #0
2fff4adc:	6143      	str	r3, [r0, #20]
2fff4ade:	e7d0      	b.n	2fff4a82 <i2c_ack_failed+0x32>

2fff4ae0 <i2c_wait_txis>:
2fff4ae0:	b5d0      	push	{r4, r6, r7, lr}
2fff4ae2:	4604      	mov	r4, r0
2fff4ae4:	4616      	mov	r6, r2
2fff4ae6:	461f      	mov	r7, r3
2fff4ae8:	6823      	ldr	r3, [r4, #0]
2fff4aea:	699b      	ldr	r3, [r3, #24]
2fff4aec:	079b      	lsls	r3, r3, #30
2fff4aee:	d501      	bpl.n	2fff4af4 <i2c_wait_txis+0x14>
2fff4af0:	2000      	movs	r0, #0
2fff4af2:	bdd0      	pop	{r4, r6, r7, pc}
2fff4af4:	4632      	mov	r2, r6
2fff4af6:	463b      	mov	r3, r7
2fff4af8:	4620      	mov	r0, r4
2fff4afa:	f7ff ffa9 	bl	2fff4a50 <i2c_ack_failed>
2fff4afe:	b968      	cbnz	r0, 2fff4b1c <i2c_wait_txis+0x3c>
2fff4b00:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff4b04:	429f      	cmp	r7, r3
2fff4b06:	bf08      	it	eq
2fff4b08:	4296      	cmpeq	r6, r2
2fff4b0a:	d2ed      	bcs.n	2fff4ae8 <i2c_wait_txis+0x8>
2fff4b0c:	69a3      	ldr	r3, [r4, #24]
2fff4b0e:	6160      	str	r0, [r4, #20]
2fff4b10:	7320      	strb	r0, [r4, #12]
2fff4b12:	f043 0320 	orr.w	r3, r3, #32
2fff4b16:	61a3      	str	r3, [r4, #24]
2fff4b18:	2320      	movs	r3, #32
2fff4b1a:	6123      	str	r3, [r4, #16]
2fff4b1c:	f06f 0004 	mvn.w	r0, #4
2fff4b20:	e7e7      	b.n	2fff4af2 <i2c_wait_txis+0x12>

2fff4b22 <i2c_wait_stop>:
2fff4b22:	b5d0      	push	{r4, r6, r7, lr}
2fff4b24:	4604      	mov	r4, r0
2fff4b26:	4616      	mov	r6, r2
2fff4b28:	461f      	mov	r7, r3
2fff4b2a:	6823      	ldr	r3, [r4, #0]
2fff4b2c:	699b      	ldr	r3, [r3, #24]
2fff4b2e:	069b      	lsls	r3, r3, #26
2fff4b30:	d501      	bpl.n	2fff4b36 <i2c_wait_stop+0x14>
2fff4b32:	2000      	movs	r0, #0
2fff4b34:	bdd0      	pop	{r4, r6, r7, pc}
2fff4b36:	4632      	mov	r2, r6
2fff4b38:	463b      	mov	r3, r7
2fff4b3a:	4620      	mov	r0, r4
2fff4b3c:	f7ff ff88 	bl	2fff4a50 <i2c_ack_failed>
2fff4b40:	b968      	cbnz	r0, 2fff4b5e <i2c_wait_stop+0x3c>
2fff4b42:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff4b46:	429f      	cmp	r7, r3
2fff4b48:	bf08      	it	eq
2fff4b4a:	4296      	cmpeq	r6, r2
2fff4b4c:	d2ed      	bcs.n	2fff4b2a <i2c_wait_stop+0x8>
2fff4b4e:	69a3      	ldr	r3, [r4, #24]
2fff4b50:	6160      	str	r0, [r4, #20]
2fff4b52:	7320      	strb	r0, [r4, #12]
2fff4b54:	f043 0320 	orr.w	r3, r3, #32
2fff4b58:	61a3      	str	r3, [r4, #24]
2fff4b5a:	2320      	movs	r3, #32
2fff4b5c:	6123      	str	r3, [r4, #16]
2fff4b5e:	f06f 0004 	mvn.w	r0, #4
2fff4b62:	e7e7      	b.n	2fff4b34 <i2c_wait_stop+0x12>

2fff4b64 <i2c_write>:
2fff4b64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff4b68:	b085      	sub	sp, #20
2fff4b6a:	469b      	mov	fp, r3
2fff4b6c:	4604      	mov	r4, r0
2fff4b6e:	9b11      	ldr	r3, [sp, #68]	; 0x44
2fff4b70:	460f      	mov	r7, r1
2fff4b72:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
2fff4b76:	4690      	mov	r8, r2
2fff4b78:	2b10      	cmp	r3, #16
2fff4b7a:	d002      	beq.n	2fff4b82 <i2c_write+0x1e>
2fff4b7c:	2b40      	cmp	r3, #64	; 0x40
2fff4b7e:	f040 80d4 	bne.w	2fff4d2a <i2c_write+0x1c6>
2fff4b82:	6923      	ldr	r3, [r4, #16]
2fff4b84:	2b20      	cmp	r3, #32
2fff4b86:	f040 80d3 	bne.w	2fff4d30 <i2c_write+0x1cc>
2fff4b8a:	7b23      	ldrb	r3, [r4, #12]
2fff4b8c:	2b00      	cmp	r3, #0
2fff4b8e:	f040 80cf 	bne.w	2fff4d30 <i2c_write+0x1cc>
2fff4b92:	9b0e      	ldr	r3, [sp, #56]	; 0x38
2fff4b94:	2b00      	cmp	r3, #0
2fff4b96:	f000 80ce 	beq.w	2fff4d36 <i2c_write+0x1d2>
2fff4b9a:	2d00      	cmp	r5, #0
2fff4b9c:	f000 80cb 	beq.w	2fff4d36 <i2c_write+0x1d2>
2fff4ba0:	68a0      	ldr	r0, [r4, #8]
2fff4ba2:	2601      	movs	r6, #1
2fff4ba4:	f7fe fce0 	bl	2fff3568 <stm32mp_clk_enable>
2fff4ba8:	7326      	strb	r6, [r4, #12]
2fff4baa:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff4bae:	ec5a 9f0e 	mrrc	15, 0, r9, sl, cr14
2fff4bb2:	4a6f      	ldr	r2, [pc, #444]	; (2fff4d70 <i2c_write+0x20c>)
2fff4bb4:	f246 11a8 	movw	r1, #25000	; 0x61a8
2fff4bb8:	2300      	movs	r3, #0
2fff4bba:	fba0 0101 	umull	r0, r1, r0, r1
2fff4bbe:	f002 ea56 	blx	2fff706c <__aeabi_uldivmod>
2fff4bc2:	eb10 0009 	adds.w	r0, r0, r9
2fff4bc6:	4632      	mov	r2, r6
2fff4bc8:	eb41 010a 	adc.w	r1, r1, sl
2fff4bcc:	e9cd 0100 	strd	r0, r1, [sp]
2fff4bd0:	f44f 4100 	mov.w	r1, #32768	; 0x8000
2fff4bd4:	4620      	mov	r0, r4
2fff4bd6:	f7ff ff19 	bl	2fff4a0c <i2c_wait_flag>
2fff4bda:	b150      	cbz	r0, 2fff4bf2 <i2c_write+0x8e>
2fff4bdc:	f06f 0504 	mvn.w	r5, #4
2fff4be0:	68a0      	ldr	r0, [r4, #8]
2fff4be2:	2300      	movs	r3, #0
2fff4be4:	7323      	strb	r3, [r4, #12]
2fff4be6:	f7fe fcc2 	bl	2fff356e <stm32mp_clk_disable>
2fff4bea:	4628      	mov	r0, r5
2fff4bec:	b005      	add	sp, #20
2fff4bee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff4bf2:	61a0      	str	r0, [r4, #24]
2fff4bf4:	2321      	movs	r3, #33	; 0x21
2fff4bf6:	6123      	str	r3, [r4, #16]
2fff4bf8:	462e      	mov	r6, r5
2fff4bfa:	9b11      	ldr	r3, [sp, #68]	; 0x44
2fff4bfc:	6163      	str	r3, [r4, #20]
2fff4bfe:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff4c02:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff4c06:	e9cd 2302 	strd	r2, r3, [sp, #8]
2fff4c0a:	9b10      	ldr	r3, [sp, #64]	; 0x40
2fff4c0c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2fff4c10:	4a57      	ldr	r2, [pc, #348]	; (2fff4d70 <i2c_write+0x20c>)
2fff4c12:	4359      	muls	r1, r3
2fff4c14:	2300      	movs	r3, #0
2fff4c16:	fba1 0100 	umull	r0, r1, r1, r0
2fff4c1a:	f002 ea28 	blx	2fff706c <__aeabi_uldivmod>
2fff4c1e:	9b02      	ldr	r3, [sp, #8]
2fff4c20:	eb10 0a03 	adds.w	sl, r0, r3
2fff4c24:	9b03      	ldr	r3, [sp, #12]
2fff4c26:	6820      	ldr	r0, [r4, #0]
2fff4c28:	eb41 0903 	adc.w	r9, r1, r3
2fff4c2c:	9b11      	ldr	r3, [sp, #68]	; 0x44
2fff4c2e:	2b40      	cmp	r3, #64	; 0x40
2fff4c30:	4b50      	ldr	r3, [pc, #320]	; (2fff4d74 <i2c_write+0x210>)
2fff4c32:	9300      	str	r3, [sp, #0]
2fff4c34:	d168      	bne.n	2fff4d08 <i2c_write+0x1a4>
2fff4c36:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
2fff4c3a:	465a      	mov	r2, fp
2fff4c3c:	4639      	mov	r1, r7
2fff4c3e:	f7ff fecf 	bl	2fff49e0 <i2c_transfer_config.isra.1>
2fff4c42:	4652      	mov	r2, sl
2fff4c44:	464b      	mov	r3, r9
2fff4c46:	4620      	mov	r0, r4
2fff4c48:	f7ff ff4a 	bl	2fff4ae0 <i2c_wait_txis>
2fff4c4c:	2800      	cmp	r0, #0
2fff4c4e:	d1c5      	bne.n	2fff4bdc <i2c_write+0x78>
2fff4c50:	6823      	ldr	r3, [r4, #0]
2fff4c52:	f1bb 0f01 	cmp.w	fp, #1
2fff4c56:	d119      	bne.n	2fff4c8c <i2c_write+0x128>
2fff4c58:	fa5f f888 	uxtb.w	r8, r8
2fff4c5c:	f883 8028 	strb.w	r8, [r3, #40]	; 0x28
2fff4c60:	2200      	movs	r2, #0
2fff4c62:	e9cd a900 	strd	sl, r9, [sp]
2fff4c66:	2180      	movs	r1, #128	; 0x80
2fff4c68:	4620      	mov	r0, r4
2fff4c6a:	f7ff fecf 	bl	2fff4a0c <i2c_wait_flag>
2fff4c6e:	4603      	mov	r3, r0
2fff4c70:	2800      	cmp	r0, #0
2fff4c72:	d1b3      	bne.n	2fff4bdc <i2c_write+0x78>
2fff4c74:	6820      	ldr	r0, [r4, #0]
2fff4c76:	2dff      	cmp	r5, #255	; 0xff
2fff4c78:	9300      	str	r3, [sp, #0]
2fff4c7a:	d916      	bls.n	2fff4caa <i2c_write+0x146>
2fff4c7c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
2fff4c80:	22ff      	movs	r2, #255	; 0xff
2fff4c82:	4639      	mov	r1, r7
2fff4c84:	25ff      	movs	r5, #255	; 0xff
2fff4c86:	f7ff feab 	bl	2fff49e0 <i2c_transfer_config.isra.1>
2fff4c8a:	e014      	b.n	2fff4cb6 <i2c_write+0x152>
2fff4c8c:	ea4f 2218 	mov.w	r2, r8, lsr #8
2fff4c90:	4620      	mov	r0, r4
2fff4c92:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
2fff4c96:	4652      	mov	r2, sl
2fff4c98:	464b      	mov	r3, r9
2fff4c9a:	f7ff ff21 	bl	2fff4ae0 <i2c_wait_txis>
2fff4c9e:	2800      	cmp	r0, #0
2fff4ca0:	d19c      	bne.n	2fff4bdc <i2c_write+0x78>
2fff4ca2:	6823      	ldr	r3, [r4, #0]
2fff4ca4:	fa5f f888 	uxtb.w	r8, r8
2fff4ca8:	e7d8      	b.n	2fff4c5c <i2c_write+0xf8>
2fff4caa:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
2fff4cae:	462a      	mov	r2, r5
2fff4cb0:	4639      	mov	r1, r7
2fff4cb2:	f7ff fe95 	bl	2fff49e0 <i2c_transfer_config.isra.1>
2fff4cb6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
2fff4cb8:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
2fff4cbc:	4652      	mov	r2, sl
2fff4cbe:	464b      	mov	r3, r9
2fff4cc0:	4620      	mov	r0, r4
2fff4cc2:	f7ff ff0d 	bl	2fff4ae0 <i2c_wait_txis>
2fff4cc6:	2800      	cmp	r0, #0
2fff4cc8:	d188      	bne.n	2fff4bdc <i2c_write+0x78>
2fff4cca:	f818 2f01 	ldrb.w	r2, [r8, #1]!
2fff4cce:	3e01      	subs	r6, #1
2fff4cd0:	6823      	ldr	r3, [r4, #0]
2fff4cd2:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
2fff4cd6:	d031      	beq.n	2fff4d3c <i2c_write+0x1d8>
2fff4cd8:	3d01      	subs	r5, #1
2fff4cda:	d1ef      	bne.n	2fff4cbc <i2c_write+0x158>
2fff4cdc:	e9cd a900 	strd	sl, r9, [sp]
2fff4ce0:	462a      	mov	r2, r5
2fff4ce2:	2180      	movs	r1, #128	; 0x80
2fff4ce4:	4620      	mov	r0, r4
2fff4ce6:	f7ff fe91 	bl	2fff4a0c <i2c_wait_flag>
2fff4cea:	2800      	cmp	r0, #0
2fff4cec:	f47f af76 	bne.w	2fff4bdc <i2c_write+0x78>
2fff4cf0:	6820      	ldr	r0, [r4, #0]
2fff4cf2:	2eff      	cmp	r6, #255	; 0xff
2fff4cf4:	9500      	str	r5, [sp, #0]
2fff4cf6:	d910      	bls.n	2fff4d1a <i2c_write+0x1b6>
2fff4cf8:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
2fff4cfc:	22ff      	movs	r2, #255	; 0xff
2fff4cfe:	4639      	mov	r1, r7
2fff4d00:	25ff      	movs	r5, #255	; 0xff
2fff4d02:	f7ff fe6d 	bl	2fff49e0 <i2c_transfer_config.isra.1>
2fff4d06:	e7d9      	b.n	2fff4cbc <i2c_write+0x158>
2fff4d08:	2dff      	cmp	r5, #255	; 0xff
2fff4d0a:	d8b7      	bhi.n	2fff4c7c <i2c_write+0x118>
2fff4d0c:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
2fff4d10:	462a      	mov	r2, r5
2fff4d12:	4639      	mov	r1, r7
2fff4d14:	f7ff fe64 	bl	2fff49e0 <i2c_transfer_config.isra.1>
2fff4d18:	e7cd      	b.n	2fff4cb6 <i2c_write+0x152>
2fff4d1a:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
2fff4d1e:	b2b2      	uxth	r2, r6
2fff4d20:	4639      	mov	r1, r7
2fff4d22:	4635      	mov	r5, r6
2fff4d24:	f7ff fe5c 	bl	2fff49e0 <i2c_transfer_config.isra.1>
2fff4d28:	e7c8      	b.n	2fff4cbc <i2c_write+0x158>
2fff4d2a:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
2fff4d2e:	e75c      	b.n	2fff4bea <i2c_write+0x86>
2fff4d30:	f06f 050f 	mvn.w	r5, #15
2fff4d34:	e759      	b.n	2fff4bea <i2c_write+0x86>
2fff4d36:	f06f 0515 	mvn.w	r5, #21
2fff4d3a:	e756      	b.n	2fff4bea <i2c_write+0x86>
2fff4d3c:	4652      	mov	r2, sl
2fff4d3e:	464b      	mov	r3, r9
2fff4d40:	4620      	mov	r0, r4
2fff4d42:	f7ff feee 	bl	2fff4b22 <i2c_wait_stop>
2fff4d46:	4605      	mov	r5, r0
2fff4d48:	2800      	cmp	r0, #0
2fff4d4a:	f47f af47 	bne.w	2fff4bdc <i2c_write+0x78>
2fff4d4e:	6823      	ldr	r3, [r4, #0]
2fff4d50:	2220      	movs	r2, #32
2fff4d52:	61da      	str	r2, [r3, #28]
2fff4d54:	6821      	ldr	r1, [r4, #0]
2fff4d56:	684b      	ldr	r3, [r1, #4]
2fff4d58:	f023 73ff 	bic.w	r3, r3, #33423360	; 0x1fe0000
2fff4d5c:	f423 338b 	bic.w	r3, r3, #71168	; 0x11600
2fff4d60:	f423 73ff 	bic.w	r3, r3, #510	; 0x1fe
2fff4d64:	f023 0301 	bic.w	r3, r3, #1
2fff4d68:	604b      	str	r3, [r1, #4]
2fff4d6a:	6122      	str	r2, [r4, #16]
2fff4d6c:	6166      	str	r6, [r4, #20]
2fff4d6e:	e737      	b.n	2fff4be0 <i2c_write+0x7c>
2fff4d70:	000f4240 	.word	0x000f4240
2fff4d74:	80002000 	.word	0x80002000

2fff4d78 <i2c_read.isra.2>:
2fff4d78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff4d7c:	b085      	sub	sp, #20
2fff4d7e:	469a      	mov	sl, r3
2fff4d80:	4604      	mov	r4, r0
2fff4d82:	9b10      	ldr	r3, [sp, #64]	; 0x40
2fff4d84:	4688      	mov	r8, r1
2fff4d86:	f8bd 903c 	ldrh.w	r9, [sp, #60]	; 0x3c
2fff4d8a:	4617      	mov	r7, r2
2fff4d8c:	2b10      	cmp	r3, #16
2fff4d8e:	d002      	beq.n	2fff4d96 <i2c_read.isra.2+0x1e>
2fff4d90:	2b40      	cmp	r3, #64	; 0x40
2fff4d92:	f040 80bd 	bne.w	2fff4f10 <i2c_read.isra.2+0x198>
2fff4d96:	6923      	ldr	r3, [r4, #16]
2fff4d98:	2b20      	cmp	r3, #32
2fff4d9a:	f040 80bc 	bne.w	2fff4f16 <i2c_read.isra.2+0x19e>
2fff4d9e:	7b23      	ldrb	r3, [r4, #12]
2fff4da0:	2b00      	cmp	r3, #0
2fff4da2:	f040 80b8 	bne.w	2fff4f16 <i2c_read.isra.2+0x19e>
2fff4da6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
2fff4da8:	2b00      	cmp	r3, #0
2fff4daa:	f000 80b7 	beq.w	2fff4f1c <i2c_read.isra.2+0x1a4>
2fff4dae:	f1b9 0f00 	cmp.w	r9, #0
2fff4db2:	f000 80b3 	beq.w	2fff4f1c <i2c_read.isra.2+0x1a4>
2fff4db6:	68a0      	ldr	r0, [r4, #8]
2fff4db8:	f04f 0b01 	mov.w	fp, #1
2fff4dbc:	f7fe fbd4 	bl	2fff3568 <stm32mp_clk_enable>
2fff4dc0:	f884 b00c 	strb.w	fp, [r4, #12]
2fff4dc4:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff4dc8:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff4dcc:	f246 11a8 	movw	r1, #25000	; 0x61a8
2fff4dd0:	e9cd 2302 	strd	r2, r3, [sp, #8]
2fff4dd4:	fba0 0101 	umull	r0, r1, r0, r1
2fff4dd8:	4a5f      	ldr	r2, [pc, #380]	; (2fff4f58 <i2c_read.isra.2+0x1e0>)
2fff4dda:	2300      	movs	r3, #0
2fff4ddc:	f002 e946 	blx	2fff706c <__aeabi_uldivmod>
2fff4de0:	9b02      	ldr	r3, [sp, #8]
2fff4de2:	465a      	mov	r2, fp
2fff4de4:	18c6      	adds	r6, r0, r3
2fff4de6:	4620      	mov	r0, r4
2fff4de8:	9b03      	ldr	r3, [sp, #12]
2fff4dea:	eb41 0503 	adc.w	r5, r1, r3
2fff4dee:	f44f 4100 	mov.w	r1, #32768	; 0x8000
2fff4df2:	e9cd 6500 	strd	r6, r5, [sp]
2fff4df6:	f7ff fe09 	bl	2fff4a0c <i2c_wait_flag>
2fff4dfa:	4603      	mov	r3, r0
2fff4dfc:	b150      	cbz	r0, 2fff4e14 <i2c_read.isra.2+0x9c>
2fff4dfe:	f06f 0504 	mvn.w	r5, #4
2fff4e02:	68a0      	ldr	r0, [r4, #8]
2fff4e04:	2300      	movs	r3, #0
2fff4e06:	7323      	strb	r3, [r4, #12]
2fff4e08:	f7fe fbb1 	bl	2fff356e <stm32mp_clk_disable>
2fff4e0c:	4628      	mov	r0, r5
2fff4e0e:	b005      	add	sp, #20
2fff4e10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff4e14:	61a0      	str	r0, [r4, #24]
2fff4e16:	2222      	movs	r2, #34	; 0x22
2fff4e18:	6122      	str	r2, [r4, #16]
2fff4e1a:	9a10      	ldr	r2, [sp, #64]	; 0x40
2fff4e1c:	6162      	str	r2, [r4, #20]
2fff4e1e:	2a40      	cmp	r2, #64	; 0x40
2fff4e20:	d00c      	beq.n	2fff4e3c <i2c_read.isra.2+0xc4>
2fff4e22:	6820      	ldr	r0, [r4, #0]
2fff4e24:	464f      	mov	r7, r9
2fff4e26:	4b4d      	ldr	r3, [pc, #308]	; (2fff4f5c <i2c_read.isra.2+0x1e4>)
2fff4e28:	2fff      	cmp	r7, #255	; 0xff
2fff4e2a:	d833      	bhi.n	2fff4e94 <i2c_read.isra.2+0x11c>
2fff4e2c:	9300      	str	r3, [sp, #0]
2fff4e2e:	464a      	mov	r2, r9
2fff4e30:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
2fff4e34:	4641      	mov	r1, r8
2fff4e36:	f7ff fdd3 	bl	2fff49e0 <i2c_transfer_config.isra.1>
2fff4e3a:	e034      	b.n	2fff4ea6 <i2c_read.isra.2+0x12e>
2fff4e3c:	4a48      	ldr	r2, [pc, #288]	; (2fff4f60 <i2c_read.isra.2+0x1e8>)
2fff4e3e:	4641      	mov	r1, r8
2fff4e40:	6820      	ldr	r0, [r4, #0]
2fff4e42:	9200      	str	r2, [sp, #0]
2fff4e44:	4652      	mov	r2, sl
2fff4e46:	f7ff fdcb 	bl	2fff49e0 <i2c_transfer_config.isra.1>
2fff4e4a:	4632      	mov	r2, r6
2fff4e4c:	462b      	mov	r3, r5
2fff4e4e:	4620      	mov	r0, r4
2fff4e50:	f7ff fe46 	bl	2fff4ae0 <i2c_wait_txis>
2fff4e54:	2800      	cmp	r0, #0
2fff4e56:	d1d2      	bne.n	2fff4dfe <i2c_read.isra.2+0x86>
2fff4e58:	6823      	ldr	r3, [r4, #0]
2fff4e5a:	f1ba 0f01 	cmp.w	sl, #1
2fff4e5e:	d10c      	bne.n	2fff4e7a <i2c_read.isra.2+0x102>
2fff4e60:	b2ff      	uxtb	r7, r7
2fff4e62:	f883 7028 	strb.w	r7, [r3, #40]	; 0x28
2fff4e66:	2200      	movs	r2, #0
2fff4e68:	e9cd 6500 	strd	r6, r5, [sp]
2fff4e6c:	2140      	movs	r1, #64	; 0x40
2fff4e6e:	4620      	mov	r0, r4
2fff4e70:	f7ff fdcc 	bl	2fff4a0c <i2c_wait_flag>
2fff4e74:	2800      	cmp	r0, #0
2fff4e76:	d0d4      	beq.n	2fff4e22 <i2c_read.isra.2+0xaa>
2fff4e78:	e7c1      	b.n	2fff4dfe <i2c_read.isra.2+0x86>
2fff4e7a:	0a3a      	lsrs	r2, r7, #8
2fff4e7c:	4620      	mov	r0, r4
2fff4e7e:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
2fff4e82:	4632      	mov	r2, r6
2fff4e84:	462b      	mov	r3, r5
2fff4e86:	f7ff fe2b 	bl	2fff4ae0 <i2c_wait_txis>
2fff4e8a:	2800      	cmp	r0, #0
2fff4e8c:	d1b7      	bne.n	2fff4dfe <i2c_read.isra.2+0x86>
2fff4e8e:	6823      	ldr	r3, [r4, #0]
2fff4e90:	b2ff      	uxtb	r7, r7
2fff4e92:	e7e6      	b.n	2fff4e62 <i2c_read.isra.2+0xea>
2fff4e94:	9300      	str	r3, [sp, #0]
2fff4e96:	22ff      	movs	r2, #255	; 0xff
2fff4e98:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
2fff4e9c:	4641      	mov	r1, r8
2fff4e9e:	f04f 09ff 	mov.w	r9, #255	; 0xff
2fff4ea2:	f7ff fd9d 	bl	2fff49e0 <i2c_transfer_config.isra.1>
2fff4ea6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
2fff4ea8:	f103 3aff 	add.w	sl, r3, #4294967295	; 0xffffffff
2fff4eac:	e9cd 6500 	strd	r6, r5, [sp]
2fff4eb0:	2200      	movs	r2, #0
2fff4eb2:	2104      	movs	r1, #4
2fff4eb4:	4620      	mov	r0, r4
2fff4eb6:	f7ff fda9 	bl	2fff4a0c <i2c_wait_flag>
2fff4eba:	2800      	cmp	r0, #0
2fff4ebc:	d19f      	bne.n	2fff4dfe <i2c_read.isra.2+0x86>
2fff4ebe:	6823      	ldr	r3, [r4, #0]
2fff4ec0:	3f01      	subs	r7, #1
2fff4ec2:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
2fff4ec6:	f80a 3f01 	strb.w	r3, [sl, #1]!
2fff4eca:	d02a      	beq.n	2fff4f22 <i2c_read.isra.2+0x1aa>
2fff4ecc:	f1b9 0901 	subs.w	r9, r9, #1
2fff4ed0:	d1ec      	bne.n	2fff4eac <i2c_read.isra.2+0x134>
2fff4ed2:	e9cd 6500 	strd	r6, r5, [sp]
2fff4ed6:	464a      	mov	r2, r9
2fff4ed8:	2180      	movs	r1, #128	; 0x80
2fff4eda:	4620      	mov	r0, r4
2fff4edc:	f7ff fd96 	bl	2fff4a0c <i2c_wait_flag>
2fff4ee0:	2800      	cmp	r0, #0
2fff4ee2:	d18c      	bne.n	2fff4dfe <i2c_read.isra.2+0x86>
2fff4ee4:	6820      	ldr	r0, [r4, #0]
2fff4ee6:	2fff      	cmp	r7, #255	; 0xff
2fff4ee8:	f8cd 9000 	str.w	r9, [sp]
2fff4eec:	d908      	bls.n	2fff4f00 <i2c_read.isra.2+0x188>
2fff4eee:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
2fff4ef2:	22ff      	movs	r2, #255	; 0xff
2fff4ef4:	4641      	mov	r1, r8
2fff4ef6:	f04f 09ff 	mov.w	r9, #255	; 0xff
2fff4efa:	f7ff fd71 	bl	2fff49e0 <i2c_transfer_config.isra.1>
2fff4efe:	e7d5      	b.n	2fff4eac <i2c_read.isra.2+0x134>
2fff4f00:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
2fff4f04:	b2ba      	uxth	r2, r7
2fff4f06:	4641      	mov	r1, r8
2fff4f08:	46b9      	mov	r9, r7
2fff4f0a:	f7ff fd69 	bl	2fff49e0 <i2c_transfer_config.isra.1>
2fff4f0e:	e7cd      	b.n	2fff4eac <i2c_read.isra.2+0x134>
2fff4f10:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
2fff4f14:	e77a      	b.n	2fff4e0c <i2c_read.isra.2+0x94>
2fff4f16:	f06f 050f 	mvn.w	r5, #15
2fff4f1a:	e777      	b.n	2fff4e0c <i2c_read.isra.2+0x94>
2fff4f1c:	f06f 0515 	mvn.w	r5, #21
2fff4f20:	e774      	b.n	2fff4e0c <i2c_read.isra.2+0x94>
2fff4f22:	462b      	mov	r3, r5
2fff4f24:	4632      	mov	r2, r6
2fff4f26:	4620      	mov	r0, r4
2fff4f28:	f7ff fdfb 	bl	2fff4b22 <i2c_wait_stop>
2fff4f2c:	4605      	mov	r5, r0
2fff4f2e:	2800      	cmp	r0, #0
2fff4f30:	f47f af65 	bne.w	2fff4dfe <i2c_read.isra.2+0x86>
2fff4f34:	6823      	ldr	r3, [r4, #0]
2fff4f36:	2220      	movs	r2, #32
2fff4f38:	61da      	str	r2, [r3, #28]
2fff4f3a:	6821      	ldr	r1, [r4, #0]
2fff4f3c:	684b      	ldr	r3, [r1, #4]
2fff4f3e:	f023 73ff 	bic.w	r3, r3, #33423360	; 0x1fe0000
2fff4f42:	f423 338b 	bic.w	r3, r3, #71168	; 0x11600
2fff4f46:	f423 73ff 	bic.w	r3, r3, #510	; 0x1fe
2fff4f4a:	f023 0301 	bic.w	r3, r3, #1
2fff4f4e:	604b      	str	r3, [r1, #4]
2fff4f50:	6122      	str	r2, [r4, #16]
2fff4f52:	6167      	str	r7, [r4, #20]
2fff4f54:	e755      	b.n	2fff4e02 <i2c_read.isra.2+0x8a>
2fff4f56:	bf00      	nop
2fff4f58:	000f4240 	.word	0x000f4240
2fff4f5c:	80002400 	.word	0x80002400
2fff4f60:	80002000 	.word	0x80002000

2fff4f64 <stm32_i2c_get_setup_from_fdt>:
2fff4f64:	b538      	push	{r3, r4, r5, lr}
2fff4f66:	2219      	movs	r2, #25
2fff4f68:	460d      	mov	r5, r1
2fff4f6a:	4604      	mov	r4, r0
2fff4f6c:	490f      	ldr	r1, [pc, #60]	; (2fff4fac <stm32_i2c_get_setup_from_fdt+0x48>)
2fff4f6e:	f001 fa13 	bl	2fff6398 <fdt_read_uint32_default>
2fff4f72:	61e8      	str	r0, [r5, #28]
2fff4f74:	220a      	movs	r2, #10
2fff4f76:	490e      	ldr	r1, [pc, #56]	; (2fff4fb0 <stm32_i2c_get_setup_from_fdt+0x4c>)
2fff4f78:	4620      	mov	r0, r4
2fff4f7a:	f001 fa0d 	bl	2fff6398 <fdt_read_uint32_default>
2fff4f7e:	6228      	str	r0, [r5, #32]
2fff4f80:	4620      	mov	r0, r4
2fff4f82:	4a0c      	ldr	r2, [pc, #48]	; (2fff4fb4 <stm32_i2c_get_setup_from_fdt+0x50>)
2fff4f84:	490c      	ldr	r1, [pc, #48]	; (2fff4fb8 <stm32_i2c_get_setup_from_fdt+0x54>)
2fff4f86:	f001 fa07 	bl	2fff6398 <fdt_read_uint32_default>
2fff4f8a:	4a0c      	ldr	r2, [pc, #48]	; (2fff4fbc <stm32_i2c_get_setup_from_fdt+0x58>)
2fff4f8c:	4601      	mov	r1, r0
2fff4f8e:	4290      	cmp	r0, r2
2fff4f90:	d805      	bhi.n	2fff4f9e <stm32_i2c_get_setup_from_fdt+0x3a>
2fff4f92:	6268      	str	r0, [r5, #36]	; 0x24
2fff4f94:	4620      	mov	r0, r4
2fff4f96:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff4f9a:	f7ff bbf1 	b.w	2fff4780 <dt_set_pinctrl_config>
2fff4f9e:	4808      	ldr	r0, [pc, #32]	; (2fff4fc0 <stm32_i2c_get_setup_from_fdt+0x5c>)
2fff4fa0:	f7fb fdee 	bl	2fff0b80 <tf_log>
2fff4fa4:	f06f 000e 	mvn.w	r0, #14
2fff4fa8:	bd38      	pop	{r3, r4, r5, pc}
2fff4faa:	bf00      	nop
2fff4fac:	2fff9f5c 	.word	0x2fff9f5c
2fff4fb0:	2fff9f73 	.word	0x2fff9f73
2fff4fb4:	000186a0 	.word	0x000186a0
2fff4fb8:	2fff988c 	.word	0x2fff988c
2fff4fbc:	000f4240 	.word	0x000f4240
2fff4fc0:	2fff9f8b 	.word	0x2fff9f8b

2fff4fc4 <stm32_i2c_init>:
2fff4fc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff4fc8:	460d      	mov	r5, r1
2fff4fca:	b0a5      	sub	sp, #148	; 0x94
2fff4fcc:	4604      	mov	r4, r0
2fff4fce:	2800      	cmp	r0, #0
2fff4fd0:	f000 821c 	beq.w	2fff540c <stm32_i2c_init+0x448>
2fff4fd4:	6903      	ldr	r3, [r0, #16]
2fff4fd6:	b903      	cbnz	r3, 2fff4fda <stm32_i2c_init+0x16>
2fff4fd8:	7303      	strb	r3, [r0, #12]
2fff4fda:	68a0      	ldr	r0, [r4, #8]
2fff4fdc:	2324      	movs	r3, #36	; 0x24
2fff4fde:	6123      	str	r3, [r4, #16]
2fff4fe0:	f7fe faee 	bl	2fff35c0 <stm32mp_clk_get_rate>
2fff4fe4:	9004      	str	r0, [sp, #16]
2fff4fe6:	b940      	cbnz	r0, 2fff4ffa <stm32_i2c_init+0x36>
2fff4fe8:	489c      	ldr	r0, [pc, #624]	; (2fff525c <stm32_i2c_init+0x298>)
2fff4fea:	f06f 0815 	mvn.w	r8, #21
2fff4fee:	f7fb fdc7 	bl	2fff0b80 <tf_log>
2fff4ff2:	4640      	mov	r0, r8
2fff4ff4:	b025      	add	sp, #148	; 0x94
2fff4ff6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff4ffa:	6a23      	ldr	r3, [r4, #32]
2fff4ffc:	9a04      	ldr	r2, [sp, #16]
2fff4ffe:	429a      	cmp	r2, r3
2fff5000:	d02c      	beq.n	2fff505c <stm32_i2c_init+0x98>
2fff5002:	4b97      	ldr	r3, [pc, #604]	; (2fff5260 <stm32_i2c_init+0x29c>)
2fff5004:	f8df b284 	ldr.w	fp, [pc, #644]	; 2fff528c <stm32_i2c_init+0x2c8>
2fff5008:	eb03 0652 	add.w	r6, r3, r2, lsr #1
2fff500c:	9307      	str	r3, [sp, #28]
2fff500e:	fbb6 f2f2 	udiv	r2, r6, r2
2fff5012:	9202      	str	r2, [sp, #8]
2fff5014:	0052      	lsls	r2, r2, #1
2fff5016:	920b      	str	r2, [sp, #44]	; 0x2c
2fff5018:	6a69      	ldr	r1, [r5, #36]	; 0x24
2fff501a:	4b92      	ldr	r3, [pc, #584]	; (2fff5264 <stm32_i2c_init+0x2a0>)
2fff501c:	4299      	cmp	r1, r3
2fff501e:	d97c      	bls.n	2fff511a <stm32_i2c_init+0x156>
2fff5020:	4b91      	ldr	r3, [pc, #580]	; (2fff5268 <stm32_i2c_init+0x2a4>)
2fff5022:	4299      	cmp	r1, r3
2fff5024:	d97b      	bls.n	2fff511e <stm32_i2c_init+0x15a>
2fff5026:	4b91      	ldr	r3, [pc, #580]	; (2fff526c <stm32_i2c_init+0x2a8>)
2fff5028:	4299      	cmp	r1, r3
2fff502a:	d87a      	bhi.n	2fff5122 <stm32_i2c_init+0x15e>
2fff502c:	2702      	movs	r7, #2
2fff502e:	017b      	lsls	r3, r7, #5
2fff5030:	eb0b 0003 	add.w	r0, fp, r3
2fff5034:	9a07      	ldr	r2, [sp, #28]
2fff5036:	f85b 3003 	ldr.w	r3, [fp, r3]
2fff503a:	69e9      	ldr	r1, [r5, #28]
2fff503c:	eb02 0253 	add.w	r2, r2, r3, lsr #1
2fff5040:	fbb2 f3f3 	udiv	r3, r2, r3
2fff5044:	6882      	ldr	r2, [r0, #8]
2fff5046:	9309      	str	r3, [sp, #36]	; 0x24
2fff5048:	4291      	cmp	r1, r2
2fff504a:	6a2b      	ldr	r3, [r5, #32]
2fff504c:	6840      	ldr	r0, [r0, #4]
2fff504e:	f240 8081 	bls.w	2fff5154 <stm32_i2c_init+0x190>
2fff5052:	9000      	str	r0, [sp, #0]
2fff5054:	4886      	ldr	r0, [pc, #536]	; (2fff5270 <stm32_i2c_init+0x2ac>)
2fff5056:	f7fb fd93 	bl	2fff0b80 <tf_log>
2fff505a:	e065      	b.n	2fff5128 <stm32_i2c_init+0x164>
2fff505c:	69e6      	ldr	r6, [r4, #28]
2fff505e:	68a0      	ldr	r0, [r4, #8]
2fff5060:	f026 6670 	bic.w	r6, r6, #251658240	; 0xf000000
2fff5064:	f7fe fa80 	bl	2fff3568 <stm32mp_clk_enable>
2fff5068:	6822      	ldr	r2, [r4, #0]
2fff506a:	2120      	movs	r1, #32
2fff506c:	6813      	ldr	r3, [r2, #0]
2fff506e:	f023 0301 	bic.w	r3, r3, #1
2fff5072:	6013      	str	r3, [r2, #0]
2fff5074:	6823      	ldr	r3, [r4, #0]
2fff5076:	611e      	str	r6, [r3, #16]
2fff5078:	6822      	ldr	r2, [r4, #0]
2fff507a:	6893      	ldr	r3, [r2, #8]
2fff507c:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
2fff5080:	6093      	str	r3, [r2, #8]
2fff5082:	686b      	ldr	r3, [r5, #4]
2fff5084:	6822      	ldr	r2, [r4, #0]
2fff5086:	2b01      	cmp	r3, #1
2fff5088:	682b      	ldr	r3, [r5, #0]
2fff508a:	bf0c      	ite	eq
2fff508c:	f443 4300 	orreq.w	r3, r3, #32768	; 0x8000
2fff5090:	f443 4304 	orrne.w	r3, r3, #33792	; 0x8400
2fff5094:	6093      	str	r3, [r2, #8]
2fff5096:	2200      	movs	r2, #0
2fff5098:	6823      	ldr	r3, [r4, #0]
2fff509a:	605a      	str	r2, [r3, #4]
2fff509c:	686b      	ldr	r3, [r5, #4]
2fff509e:	2b02      	cmp	r3, #2
2fff50a0:	bf01      	itttt	eq
2fff50a2:	6822      	ldreq	r2, [r4, #0]
2fff50a4:	6853      	ldreq	r3, [r2, #4]
2fff50a6:	f443 6300 	orreq.w	r3, r3, #2048	; 0x800
2fff50aa:	6053      	streq	r3, [r2, #4]
2fff50ac:	6822      	ldr	r2, [r4, #0]
2fff50ae:	6853      	ldr	r3, [r2, #4]
2fff50b0:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
2fff50b4:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
2fff50b8:	6053      	str	r3, [r2, #4]
2fff50ba:	6822      	ldr	r2, [r4, #0]
2fff50bc:	68d3      	ldr	r3, [r2, #12]
2fff50be:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
2fff50c2:	60d3      	str	r3, [r2, #12]
2fff50c4:	68ea      	ldr	r2, [r5, #12]
2fff50c6:	68ab      	ldr	r3, [r5, #8]
2fff50c8:	4313      	orrs	r3, r2
2fff50ca:	692a      	ldr	r2, [r5, #16]
2fff50cc:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2fff50d0:	6822      	ldr	r2, [r4, #0]
2fff50d2:	60d3      	str	r3, [r2, #12]
2fff50d4:	69aa      	ldr	r2, [r5, #24]
2fff50d6:	696b      	ldr	r3, [r5, #20]
2fff50d8:	4313      	orrs	r3, r2
2fff50da:	6822      	ldr	r2, [r4, #0]
2fff50dc:	6013      	str	r3, [r2, #0]
2fff50de:	6822      	ldr	r2, [r4, #0]
2fff50e0:	6813      	ldr	r3, [r2, #0]
2fff50e2:	f043 0301 	orr.w	r3, r3, #1
2fff50e6:	6013      	str	r3, [r2, #0]
2fff50e8:	2300      	movs	r3, #0
2fff50ea:	61a3      	str	r3, [r4, #24]
2fff50ec:	6163      	str	r3, [r4, #20]
2fff50ee:	6aab      	ldr	r3, [r5, #40]	; 0x28
2fff50f0:	7b25      	ldrb	r5, [r4, #12]
2fff50f2:	6121      	str	r1, [r4, #16]
2fff50f4:	2b00      	cmp	r3, #0
2fff50f6:	bf0c      	ite	eq
2fff50f8:	f44f 5380 	moveq.w	r3, #4096	; 0x1000
2fff50fc:	2300      	movne	r3, #0
2fff50fe:	2d00      	cmp	r5, #0
2fff5100:	f000 8168 	beq.w	2fff53d4 <stm32_i2c_init+0x410>
2fff5104:	485b      	ldr	r0, [pc, #364]	; (2fff5274 <stm32_i2c_init+0x2b0>)
2fff5106:	f06f 010f 	mvn.w	r1, #15
2fff510a:	f06f 080f 	mvn.w	r8, #15
2fff510e:	f7fb fd37 	bl	2fff0b80 <tf_log>
2fff5112:	68a0      	ldr	r0, [r4, #8]
2fff5114:	f7fe fa2b 	bl	2fff356e <stm32mp_clk_disable>
2fff5118:	e76b      	b.n	2fff4ff2 <stm32_i2c_init+0x2e>
2fff511a:	2700      	movs	r7, #0
2fff511c:	e787      	b.n	2fff502e <stm32_i2c_init+0x6a>
2fff511e:	2701      	movs	r7, #1
2fff5120:	e785      	b.n	2fff502e <stm32_i2c_init+0x6a>
2fff5122:	4855      	ldr	r0, [pc, #340]	; (2fff5278 <stm32_i2c_init+0x2b4>)
2fff5124:	f7fb fd2c 	bl	2fff0b80 <tf_log>
2fff5128:	f06f 0815 	mvn.w	r8, #21
2fff512c:	4853      	ldr	r0, [pc, #332]	; (2fff527c <stm32_i2c_init+0x2b8>)
2fff512e:	f7fb fd27 	bl	2fff0b80 <tf_log>
2fff5132:	6a6b      	ldr	r3, [r5, #36]	; 0x24
2fff5134:	4a4b      	ldr	r2, [pc, #300]	; (2fff5264 <stm32_i2c_init+0x2a0>)
2fff5136:	4293      	cmp	r3, r2
2fff5138:	f240 816b 	bls.w	2fff5412 <stm32_i2c_init+0x44e>
2fff513c:	494b      	ldr	r1, [pc, #300]	; (2fff526c <stm32_i2c_init+0x2a8>)
2fff513e:	428b      	cmp	r3, r1
2fff5140:	d803      	bhi.n	2fff514a <stm32_i2c_init+0x186>
2fff5142:	4949      	ldr	r1, [pc, #292]	; (2fff5268 <stm32_i2c_init+0x2a4>)
2fff5144:	428b      	cmp	r3, r1
2fff5146:	bf98      	it	ls
2fff5148:	4611      	movls	r1, r2
2fff514a:	6269      	str	r1, [r5, #36]	; 0x24
2fff514c:	484c      	ldr	r0, [pc, #304]	; (2fff5280 <stm32_i2c_init+0x2bc>)
2fff514e:	f7fb fd17 	bl	2fff0b80 <tf_log>
2fff5152:	e761      	b.n	2fff5018 <stm32_i2c_init+0x54>
2fff5154:	4298      	cmp	r0, r3
2fff5156:	f4ff af7c 	bcc.w	2fff5052 <stm32_i2c_init+0x8e>
2fff515a:	f895 802c 	ldrb.w	r8, [r5, #44]	; 0x2c
2fff515e:	f1b8 0f10 	cmp.w	r8, #16
2fff5162:	d905      	bls.n	2fff5170 <stm32_i2c_init+0x1ac>
2fff5164:	4847      	ldr	r0, [pc, #284]	; (2fff5284 <stm32_i2c_init+0x2c0>)
2fff5166:	2210      	movs	r2, #16
2fff5168:	4641      	mov	r1, r8
2fff516a:	f7fb fd09 	bl	2fff0b80 <tf_log>
2fff516e:	e7db      	b.n	2fff5128 <stm32_i2c_init+0x164>
2fff5170:	6aaa      	ldr	r2, [r5, #40]	; 0x28
2fff5172:	2a00      	cmp	r2, #0
2fff5174:	d037      	beq.n	2fff51e6 <stm32_i2c_init+0x222>
2fff5176:	f04f 0932 	mov.w	r9, #50	; 0x32
2fff517a:	f44f 7e82 	mov.w	lr, #260	; 0x104
2fff517e:	9a02      	ldr	r2, [sp, #8]
2fff5180:	eb0b 1c47 	add.w	ip, fp, r7, lsl #5
2fff5184:	fb02 f208 	mul.w	r2, r2, r8
2fff5188:	f8dc 000c 	ldr.w	r0, [ip, #12]
2fff518c:	f108 0803 	add.w	r8, r8, #3
2fff5190:	9208      	str	r2, [sp, #32]
2fff5192:	9a02      	ldr	r2, [sp, #8]
2fff5194:	fb02 f208 	mul.w	r2, r2, r8
2fff5198:	1a9b      	subs	r3, r3, r2
2fff519a:	4403      	add	r3, r0
2fff519c:	eba3 0309 	sub.w	r3, r3, r9
2fff51a0:	9305      	str	r3, [sp, #20]
2fff51a2:	f8dc 3010 	ldr.w	r3, [ip, #16]
2fff51a6:	9802      	ldr	r0, [sp, #8]
2fff51a8:	1a5b      	subs	r3, r3, r1
2fff51aa:	eba3 030e 	sub.w	r3, r3, lr
2fff51ae:	eb00 0802 	add.w	r8, r0, r2
2fff51b2:	a810      	add	r0, sp, #64	; 0x40
2fff51b4:	eba3 0808 	sub.w	r8, r3, r8
2fff51b8:	f8dc 3014 	ldr.w	r3, [ip, #20]
2fff51bc:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
2fff51c0:	18cb      	adds	r3, r1, r3
2fff51c2:	2150      	movs	r1, #80	; 0x50
2fff51c4:	930a      	str	r3, [sp, #40]	; 0x28
2fff51c6:	9b05      	ldr	r3, [sp, #20]
2fff51c8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
2fff51cc:	9305      	str	r3, [sp, #20]
2fff51ce:	f001 ef06 	blx	2fff6fdc <zero_normalmem>
2fff51d2:	9802      	ldr	r0, [sp, #8]
2fff51d4:	ab10      	add	r3, sp, #64	; 0x40
2fff51d6:	9303      	str	r3, [sp, #12]
2fff51d8:	469c      	mov	ip, r3
2fff51da:	2200      	movs	r2, #0
2fff51dc:	f04f 0e10 	mov.w	lr, #16
2fff51e0:	9006      	str	r0, [sp, #24]
2fff51e2:	2310      	movs	r3, #16
2fff51e4:	e00f      	b.n	2fff5206 <stm32_i2c_init+0x242>
2fff51e6:	4691      	mov	r9, r2
2fff51e8:	4696      	mov	lr, r2
2fff51ea:	e7c8      	b.n	2fff517e <stm32_i2c_init+0x1ba>
2fff51ec:	4482      	add	sl, r0
2fff51ee:	3101      	adds	r1, #1
2fff51f0:	b289      	uxth	r1, r1
2fff51f2:	2910      	cmp	r1, #16
2fff51f4:	d10f      	bne.n	2fff5216 <stm32_i2c_init+0x252>
2fff51f6:	4572      	cmp	r2, lr
2fff51f8:	d01f      	beq.n	2fff523a <stm32_i2c_init+0x276>
2fff51fa:	9906      	ldr	r1, [sp, #24]
2fff51fc:	3b01      	subs	r3, #1
2fff51fe:	b29b      	uxth	r3, r3
2fff5200:	4401      	add	r1, r0
2fff5202:	9106      	str	r1, [sp, #24]
2fff5204:	b1cb      	cbz	r3, 2fff523a <stm32_i2c_init+0x276>
2fff5206:	990a      	ldr	r1, [sp, #40]	; 0x28
2fff5208:	460e      	mov	r6, r1
2fff520a:	9906      	ldr	r1, [sp, #24]
2fff520c:	428e      	cmp	r6, r1
2fff520e:	d8f4      	bhi.n	2fff51fa <stm32_i2c_init+0x236>
2fff5210:	f8dd a008 	ldr.w	sl, [sp, #8]
2fff5214:	2100      	movs	r1, #0
2fff5216:	9e05      	ldr	r6, [sp, #20]
2fff5218:	4556      	cmp	r6, sl
2fff521a:	d8e7      	bhi.n	2fff51ec <stm32_i2c_init+0x228>
2fff521c:	45d0      	cmp	r8, sl
2fff521e:	d3e5      	bcc.n	2fff51ec <stm32_i2c_init+0x228>
2fff5220:	4572      	cmp	r2, lr
2fff5222:	d0e3      	beq.n	2fff51ec <stm32_i2c_init+0x228>
2fff5224:	f88c 1001 	strb.w	r1, [ip, #1]
2fff5228:	f1c3 0310 	rsb	r3, r3, #16
2fff522c:	f88c 3000 	strb.w	r3, [ip]
2fff5230:	4696      	mov	lr, r2
2fff5232:	f04f 0301 	mov.w	r3, #1
2fff5236:	f88c 3004 	strb.w	r3, [ip, #4]
2fff523a:	9b02      	ldr	r3, [sp, #8]
2fff523c:	3201      	adds	r2, #1
2fff523e:	2a10      	cmp	r2, #16
2fff5240:	f10c 0c05 	add.w	ip, ip, #5
2fff5244:	4418      	add	r0, r3
2fff5246:	d1cb      	bne.n	2fff51e0 <stm32_i2c_init+0x21c>
2fff5248:	f1be 0f10 	cmp.w	lr, #16
2fff524c:	d120      	bne.n	2fff5290 <stm32_i2c_init+0x2cc>
2fff524e:	480e      	ldr	r0, [pc, #56]	; (2fff5288 <stm32_i2c_init+0x2c4>)
2fff5250:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
2fff5254:	f7fb fc94 	bl	2fff0b80 <tf_log>
2fff5258:	e768      	b.n	2fff512c <stm32_i2c_init+0x168>
2fff525a:	bf00      	nop
2fff525c:	2fff9fa9 	.word	0x2fff9fa9
2fff5260:	3b9aca00 	.word	0x3b9aca00
2fff5264:	000186a0 	.word	0x000186a0
2fff5268:	00061a80 	.word	0x00061a80
2fff526c:	000f4240 	.word	0x000f4240
2fff5270:	2fff9fdd 	.word	0x2fff9fdd
2fff5274:	2fffa0a0 	.word	0x2fffa0a0
2fff5278:	2fff9fbf 	.word	0x2fff9fbf
2fff527c:	2fffa061 	.word	0x2fffa061
2fff5280:	2fffa081 	.word	0x2fffa081
2fff5284:	2fffa011 	.word	0x2fffa011
2fff5288:	2fffa02a 	.word	0x2fffa02a
2fff528c:	2fff9efc 	.word	0x2fff9efc
2fff5290:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
2fff5292:	2164      	movs	r1, #100	; 0x64
2fff5294:	017f      	lsls	r7, r7, #5
2fff5296:	f04f 0e00 	mov.w	lr, #0
2fff529a:	9b08      	ldr	r3, [sp, #32]
2fff529c:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
2fff52a0:	4413      	add	r3, r2
2fff52a2:	f85b 2007 	ldr.w	r2, [fp, r7]
2fff52a6:	444b      	add	r3, r9
2fff52a8:	fbb2 f1f1 	udiv	r1, r2, r1
2fff52ac:	9305      	str	r3, [sp, #20]
2fff52ae:	2350      	movs	r3, #80	; 0x50
2fff52b0:	434b      	muls	r3, r1
2fff52b2:	9907      	ldr	r1, [sp, #28]
2fff52b4:	445f      	add	r7, fp
2fff52b6:	fbb1 f3f3 	udiv	r3, r1, r3
2fff52ba:	930a      	str	r3, [sp, #40]	; 0x28
2fff52bc:	fbb1 f3f2 	udiv	r3, r1, r2
2fff52c0:	9a02      	ldr	r2, [sp, #8]
2fff52c2:	930c      	str	r3, [sp, #48]	; 0x30
2fff52c4:	9b05      	ldr	r3, [sp, #20]
2fff52c6:	eb02 0c03 	add.w	ip, r2, r3
2fff52ca:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
2fff52ce:	9306      	str	r3, [sp, #24]
2fff52d0:	9b08      	ldr	r3, [sp, #32]
2fff52d2:	444b      	add	r3, r9
2fff52d4:	930f      	str	r3, [sp, #60]	; 0x3c
2fff52d6:	9b03      	ldr	r3, [sp, #12]
2fff52d8:	791b      	ldrb	r3, [r3, #4]
2fff52da:	2b00      	cmp	r3, #0
2fff52dc:	d048      	beq.n	2fff5370 <stm32_i2c_init+0x3ac>
2fff52de:	9b05      	ldr	r3, [sp, #20]
2fff52e0:	46e1      	mov	r9, ip
2fff52e2:	ebac 0303 	sub.w	r3, ip, r3
2fff52e6:	9308      	str	r3, [sp, #32]
2fff52e8:	69bb      	ldr	r3, [r7, #24]
2fff52ea:	930d      	str	r3, [sp, #52]	; 0x34
2fff52ec:	2300      	movs	r3, #0
2fff52ee:	9a0d      	ldr	r2, [sp, #52]	; 0x34
2fff52f0:	4591      	cmp	r9, r2
2fff52f2:	d336      	bcc.n	2fff5362 <stm32_i2c_init+0x39e>
2fff52f4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
2fff52f6:	9902      	ldr	r1, [sp, #8]
2fff52f8:	eba9 0202 	sub.w	r2, r9, r2
2fff52fc:	ebb1 0f92 	cmp.w	r1, r2, lsr #2
2fff5300:	d22f      	bcs.n	2fff5362 <stm32_i2c_init+0x39e>
2fff5302:	6a29      	ldr	r1, [r5, #32]
2fff5304:	4660      	mov	r0, ip
2fff5306:	69ea      	ldr	r2, [r5, #28]
2fff5308:	440a      	add	r2, r1
2fff530a:	9909      	ldr	r1, [sp, #36]	; 0x24
2fff530c:	eb02 0a09 	add.w	sl, r2, r9
2fff5310:	f44f 7280 	mov.w	r2, #256	; 0x100
2fff5314:	ebaa 0101 	sub.w	r1, sl, r1
2fff5318:	910e      	str	r1, [sp, #56]	; 0x38
2fff531a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
2fff531c:	eb00 010a 	add.w	r1, r0, sl
2fff5320:	428e      	cmp	r6, r1
2fff5322:	d818      	bhi.n	2fff5356 <stm32_i2c_init+0x392>
2fff5324:	9e0a      	ldr	r6, [sp, #40]	; 0x28
2fff5326:	428e      	cmp	r6, r1
2fff5328:	d315      	bcc.n	2fff5356 <stm32_i2c_init+0x392>
2fff532a:	69f9      	ldr	r1, [r7, #28]
2fff532c:	4288      	cmp	r0, r1
2fff532e:	d312      	bcc.n	2fff5356 <stm32_i2c_init+0x392>
2fff5330:	9902      	ldr	r1, [sp, #8]
2fff5332:	4281      	cmp	r1, r0
2fff5334:	d20f      	bcs.n	2fff5356 <stm32_i2c_init+0x392>
2fff5336:	990e      	ldr	r1, [sp, #56]	; 0x38
2fff5338:	9e06      	ldr	r6, [sp, #24]
2fff533a:	4401      	add	r1, r0
2fff533c:	2900      	cmp	r1, #0
2fff533e:	bfb8      	it	lt
2fff5340:	4249      	neglt	r1, r1
2fff5342:	42b1      	cmp	r1, r6
2fff5344:	da07      	bge.n	2fff5356 <stm32_i2c_init+0x392>
2fff5346:	9e03      	ldr	r6, [sp, #12]
2fff5348:	f1c2 0800 	rsb	r8, r2, #0
2fff534c:	f886 8002 	strb.w	r8, [r6, #2]
2fff5350:	46f0      	mov	r8, lr
2fff5352:	70f3      	strb	r3, [r6, #3]
2fff5354:	9106      	str	r1, [sp, #24]
2fff5356:	9908      	ldr	r1, [sp, #32]
2fff5358:	3a01      	subs	r2, #1
2fff535a:	b292      	uxth	r2, r2
2fff535c:	4408      	add	r0, r1
2fff535e:	2a00      	cmp	r2, #0
2fff5360:	d1db      	bne.n	2fff531a <stm32_i2c_init+0x356>
2fff5362:	9a08      	ldr	r2, [sp, #32]
2fff5364:	3301      	adds	r3, #1
2fff5366:	b29b      	uxth	r3, r3
2fff5368:	4491      	add	r9, r2
2fff536a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
2fff536e:	d1be      	bne.n	2fff52ee <stm32_i2c_init+0x32a>
2fff5370:	9b03      	ldr	r3, [sp, #12]
2fff5372:	f10e 0e01 	add.w	lr, lr, #1
2fff5376:	f1be 0f10 	cmp.w	lr, #16
2fff537a:	f103 0305 	add.w	r3, r3, #5
2fff537e:	9303      	str	r3, [sp, #12]
2fff5380:	9b02      	ldr	r3, [sp, #8]
2fff5382:	449c      	add	ip, r3
2fff5384:	d1a7      	bne.n	2fff52d6 <stm32_i2c_init+0x312>
2fff5386:	f1b8 3fff 	cmp.w	r8, #4294967295	; 0xffffffff
2fff538a:	d103      	bne.n	2fff5394 <stm32_i2c_init+0x3d0>
2fff538c:	4823      	ldr	r0, [pc, #140]	; (2fff541c <stm32_i2c_init+0x458>)
2fff538e:	f7fb fbf7 	bl	2fff0b80 <tf_log>
2fff5392:	e6cb      	b.n	2fff512c <stm32_i2c_init+0x168>
2fff5394:	eb08 0388 	add.w	r3, r8, r8, lsl #2
2fff5398:	aa24      	add	r2, sp, #144	; 0x90
2fff539a:	4413      	add	r3, r2
2fff539c:	f813 6c4d 	ldrb.w	r6, [r3, #-77]
2fff53a0:	ea46 7608 	orr.w	r6, r6, r8, lsl #28
2fff53a4:	f813 8c4e 	ldrb.w	r8, [r3, #-78]
2fff53a8:	ea46 2608 	orr.w	r6, r6, r8, lsl #8
2fff53ac:	f813 8c50 	ldrb.w	r8, [r3, #-80]
2fff53b0:	ea4f 5808 	mov.w	r8, r8, lsl #20
2fff53b4:	f408 0870 	and.w	r8, r8, #15728640	; 0xf00000
2fff53b8:	ea46 0608 	orr.w	r6, r6, r8
2fff53bc:	f813 8c4f 	ldrb.w	r8, [r3, #-79]
2fff53c0:	9b04      	ldr	r3, [sp, #16]
2fff53c2:	ea4f 4808 	mov.w	r8, r8, lsl #16
2fff53c6:	6223      	str	r3, [r4, #32]
2fff53c8:	f408 2870 	and.w	r8, r8, #983040	; 0xf0000
2fff53cc:	ea46 0608 	orr.w	r6, r6, r8
2fff53d0:	61e6      	str	r6, [r4, #28]
2fff53d2:	e644      	b.n	2fff505e <stm32_i2c_init+0x9a>
2fff53d4:	6820      	ldr	r0, [r4, #0]
2fff53d6:	2201      	movs	r2, #1
2fff53d8:	7322      	strb	r2, [r4, #12]
2fff53da:	46a8      	mov	r8, r5
2fff53dc:	6802      	ldr	r2, [r0, #0]
2fff53de:	f022 0201 	bic.w	r2, r2, #1
2fff53e2:	6002      	str	r2, [r0, #0]
2fff53e4:	6820      	ldr	r0, [r4, #0]
2fff53e6:	6802      	ldr	r2, [r0, #0]
2fff53e8:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
2fff53ec:	6002      	str	r2, [r0, #0]
2fff53ee:	6822      	ldr	r2, [r4, #0]
2fff53f0:	6810      	ldr	r0, [r2, #0]
2fff53f2:	4303      	orrs	r3, r0
2fff53f4:	6013      	str	r3, [r2, #0]
2fff53f6:	6822      	ldr	r2, [r4, #0]
2fff53f8:	6813      	ldr	r3, [r2, #0]
2fff53fa:	f043 0301 	orr.w	r3, r3, #1
2fff53fe:	6013      	str	r3, [r2, #0]
2fff5400:	6121      	str	r1, [r4, #16]
2fff5402:	7325      	strb	r5, [r4, #12]
2fff5404:	68a0      	ldr	r0, [r4, #8]
2fff5406:	f7fe f8b2 	bl	2fff356e <stm32mp_clk_disable>
2fff540a:	e5f2      	b.n	2fff4ff2 <stm32_i2c_init+0x2e>
2fff540c:	f06f 0801 	mvn.w	r8, #1
2fff5410:	e5ef      	b.n	2fff4ff2 <stm32_i2c_init+0x2e>
2fff5412:	4803      	ldr	r0, [pc, #12]	; (2fff5420 <stm32_i2c_init+0x45c>)
2fff5414:	f7fb fbb4 	bl	2fff0b80 <tf_log>
2fff5418:	e5eb      	b.n	2fff4ff2 <stm32_i2c_init+0x2e>
2fff541a:	bf00      	nop
2fff541c:	2fffa047 	.word	0x2fffa047
2fff5420:	2fffa0cb 	.word	0x2fffa0cb

2fff5424 <stm32_i2c_mem_write>:
2fff5424:	b51f      	push	{r0, r1, r2, r3, r4, lr}
2fff5426:	2440      	movs	r4, #64	; 0x40
2fff5428:	9403      	str	r4, [sp, #12]
2fff542a:	9c08      	ldr	r4, [sp, #32]
2fff542c:	9402      	str	r4, [sp, #8]
2fff542e:	f8bd 401c 	ldrh.w	r4, [sp, #28]
2fff5432:	9401      	str	r4, [sp, #4]
2fff5434:	9c06      	ldr	r4, [sp, #24]
2fff5436:	9400      	str	r4, [sp, #0]
2fff5438:	f7ff fb94 	bl	2fff4b64 <i2c_write>
2fff543c:	b004      	add	sp, #16
2fff543e:	bd10      	pop	{r4, pc}

2fff5440 <stm32_i2c_mem_read>:
2fff5440:	b430      	push	{r4, r5}
2fff5442:	2540      	movs	r5, #64	; 0x40
2fff5444:	f8bd 400c 	ldrh.w	r4, [sp, #12]
2fff5448:	9504      	str	r5, [sp, #16]
2fff544a:	9403      	str	r4, [sp, #12]
2fff544c:	bc30      	pop	{r4, r5}
2fff544e:	f7ff bc93 	b.w	2fff4d78 <i2c_read.isra.2>
	...

2fff5454 <stm32_i2c_is_device_ready>:
2fff5454:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff5458:	469b      	mov	fp, r3
2fff545a:	6903      	ldr	r3, [r0, #16]
2fff545c:	b085      	sub	sp, #20
2fff545e:	4604      	mov	r4, r0
2fff5460:	460e      	mov	r6, r1
2fff5462:	2b20      	cmp	r3, #32
2fff5464:	4692      	mov	sl, r2
2fff5466:	f040 809f 	bne.w	2fff55a8 <stm32_i2c_is_device_ready+0x154>
2fff546a:	7b05      	ldrb	r5, [r0, #12]
2fff546c:	2d00      	cmp	r5, #0
2fff546e:	f040 809b 	bne.w	2fff55a8 <stm32_i2c_is_device_ready+0x154>
2fff5472:	6880      	ldr	r0, [r0, #8]
2fff5474:	f7fe f878 	bl	2fff3568 <stm32mp_clk_enable>
2fff5478:	6165      	str	r5, [r4, #20]
2fff547a:	2301      	movs	r3, #1
2fff547c:	7323      	strb	r3, [r4, #12]
2fff547e:	6823      	ldr	r3, [r4, #0]
2fff5480:	699d      	ldr	r5, [r3, #24]
2fff5482:	f415 4500 	ands.w	r5, r5, #32768	; 0x8000
2fff5486:	d009      	beq.n	2fff549c <stm32_i2c_is_device_ready+0x48>
2fff5488:	2500      	movs	r5, #0
2fff548a:	68a0      	ldr	r0, [r4, #8]
2fff548c:	2300      	movs	r3, #0
2fff548e:	7323      	strb	r3, [r4, #12]
2fff5490:	f7fe f86d 	bl	2fff356e <stm32mp_clk_disable>
2fff5494:	4628      	mov	r0, r5
2fff5496:	b005      	add	sp, #20
2fff5498:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff549c:	f3c6 0609 	ubfx	r6, r6, #0, #10
2fff54a0:	2324      	movs	r3, #36	; 0x24
2fff54a2:	6123      	str	r3, [r4, #16]
2fff54a4:	f046 7700 	orr.w	r7, r6, #33554432	; 0x2000000
2fff54a8:	61a5      	str	r5, [r4, #24]
2fff54aa:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2fff54ae:	fb03 fb0b 	mul.w	fp, r3, fp
2fff54b2:	f447 5700 	orr.w	r7, r7, #8192	; 0x2000
2fff54b6:	6823      	ldr	r3, [r4, #0]
2fff54b8:	689a      	ldr	r2, [r3, #8]
2fff54ba:	0552      	lsls	r2, r2, #21
2fff54bc:	bf52      	itee	pl
2fff54be:	605f      	strpl	r7, [r3, #4]
2fff54c0:	f446 5220 	orrmi.w	r2, r6, #10240	; 0x2800
2fff54c4:	605a      	strmi	r2, [r3, #4]
2fff54c6:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff54ca:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2fff54ce:	4a37      	ldr	r2, [pc, #220]	; (2fff55ac <stm32_i2c_is_device_ready+0x158>)
2fff54d0:	2300      	movs	r3, #0
2fff54d2:	fbab 0100 	umull	r0, r1, fp, r0
2fff54d6:	f001 edca 	blx	2fff706c <__aeabi_uldivmod>
2fff54da:	6822      	ldr	r2, [r4, #0]
2fff54dc:	eb10 0308 	adds.w	r3, r0, r8
2fff54e0:	9302      	str	r3, [sp, #8]
2fff54e2:	f102 0c18 	add.w	ip, r2, #24
2fff54e6:	eb41 0309 	adc.w	r3, r1, r9
2fff54ea:	9303      	str	r3, [sp, #12]
2fff54ec:	f8dc 3000 	ldr.w	r3, [ip]
2fff54f0:	f013 0330 	ands.w	r3, r3, #48	; 0x30
2fff54f4:	d10f      	bne.n	2fff5516 <stm32_i2c_is_device_ready+0xc2>
2fff54f6:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2fff54fa:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
2fff54fe:	4589      	cmp	r9, r1
2fff5500:	bf08      	it	eq
2fff5502:	4580      	cmpeq	r8, r0
2fff5504:	d2f2      	bcs.n	2fff54ec <stm32_i2c_is_device_ready+0x98>
2fff5506:	69a2      	ldr	r2, [r4, #24]
2fff5508:	6163      	str	r3, [r4, #20]
2fff550a:	f042 0220 	orr.w	r2, r2, #32
2fff550e:	61a2      	str	r2, [r4, #24]
2fff5510:	2220      	movs	r2, #32
2fff5512:	6122      	str	r2, [r4, #16]
2fff5514:	e7b8      	b.n	2fff5488 <stm32_i2c_is_device_ready+0x34>
2fff5516:	6992      	ldr	r2, [r2, #24]
2fff5518:	f012 0210 	ands.w	r2, r2, #16
2fff551c:	d10f      	bne.n	2fff553e <stm32_i2c_is_device_ready+0xea>
2fff551e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
2fff5522:	e9cd 0100 	strd	r0, r1, [sp]
2fff5526:	2120      	movs	r1, #32
2fff5528:	4620      	mov	r0, r4
2fff552a:	f7ff fa6f 	bl	2fff4a0c <i2c_wait_flag>
2fff552e:	2800      	cmp	r0, #0
2fff5530:	d1aa      	bne.n	2fff5488 <stm32_i2c_is_device_ready+0x34>
2fff5532:	6822      	ldr	r2, [r4, #0]
2fff5534:	2320      	movs	r3, #32
2fff5536:	2501      	movs	r5, #1
2fff5538:	61d3      	str	r3, [r2, #28]
2fff553a:	6123      	str	r3, [r4, #16]
2fff553c:	e7a5      	b.n	2fff548a <stm32_i2c_is_device_ready+0x36>
2fff553e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
2fff5542:	2120      	movs	r1, #32
2fff5544:	4620      	mov	r0, r4
2fff5546:	e9cd 2300 	strd	r2, r3, [sp]
2fff554a:	2200      	movs	r2, #0
2fff554c:	f7ff fa5e 	bl	2fff4a0c <i2c_wait_flag>
2fff5550:	4602      	mov	r2, r0
2fff5552:	2800      	cmp	r0, #0
2fff5554:	d198      	bne.n	2fff5488 <stm32_i2c_is_device_ready+0x34>
2fff5556:	6823      	ldr	r3, [r4, #0]
2fff5558:	2110      	movs	r1, #16
2fff555a:	4555      	cmp	r5, sl
2fff555c:	f04f 0820 	mov.w	r8, #32
2fff5560:	61d9      	str	r1, [r3, #28]
2fff5562:	6823      	ldr	r3, [r4, #0]
2fff5564:	f8c3 801c 	str.w	r8, [r3, #28]
2fff5568:	d112      	bne.n	2fff5590 <stm32_i2c_is_device_ready+0x13c>
2fff556a:	6821      	ldr	r1, [r4, #0]
2fff556c:	684b      	ldr	r3, [r1, #4]
2fff556e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
2fff5572:	604b      	str	r3, [r1, #4]
2fff5574:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
2fff5578:	e9cd 0100 	strd	r0, r1, [sp]
2fff557c:	4641      	mov	r1, r8
2fff557e:	4620      	mov	r0, r4
2fff5580:	f7ff fa44 	bl	2fff4a0c <i2c_wait_flag>
2fff5584:	2800      	cmp	r0, #0
2fff5586:	f47f af7f 	bne.w	2fff5488 <stm32_i2c_is_device_ready+0x34>
2fff558a:	6823      	ldr	r3, [r4, #0]
2fff558c:	f8c3 801c 	str.w	r8, [r3, #28]
2fff5590:	3501      	adds	r5, #1
2fff5592:	45aa      	cmp	sl, r5
2fff5594:	d88f      	bhi.n	2fff54b6 <stm32_i2c_is_device_ready+0x62>
2fff5596:	69a3      	ldr	r3, [r4, #24]
2fff5598:	2500      	movs	r5, #0
2fff559a:	6165      	str	r5, [r4, #20]
2fff559c:	f043 0320 	orr.w	r3, r3, #32
2fff55a0:	61a3      	str	r3, [r4, #24]
2fff55a2:	2320      	movs	r3, #32
2fff55a4:	6123      	str	r3, [r4, #16]
2fff55a6:	e770      	b.n	2fff548a <stm32_i2c_is_device_ready+0x36>
2fff55a8:	2500      	movs	r5, #0
2fff55aa:	e773      	b.n	2fff5494 <stm32_i2c_is_device_ready+0x40>
2fff55ac:	000f4240 	.word	0x000f4240

2fff55b0 <stm32_iwdg_refresh>:
2fff55b0:	b510      	push	{r4, lr}
2fff55b2:	4c0e      	ldr	r4, [pc, #56]	; (2fff55ec <stm32_iwdg_refresh+0x3c>)
2fff55b4:	6823      	ldr	r3, [r4, #0]
2fff55b6:	b14b      	cbz	r3, 2fff55cc <stm32_iwdg_refresh+0x1c>
2fff55b8:	6860      	ldr	r0, [r4, #4]
2fff55ba:	f7fd ffd5 	bl	2fff3568 <stm32mp_clk_enable>
2fff55be:	6823      	ldr	r3, [r4, #0]
2fff55c0:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
2fff55c4:	601a      	str	r2, [r3, #0]
2fff55c6:	6860      	ldr	r0, [r4, #4]
2fff55c8:	f7fd ffd1 	bl	2fff356e <stm32mp_clk_disable>
2fff55cc:	6923      	ldr	r3, [r4, #16]
2fff55ce:	b15b      	cbz	r3, 2fff55e8 <stm32_iwdg_refresh+0x38>
2fff55d0:	6960      	ldr	r0, [r4, #20]
2fff55d2:	f7fd ffc9 	bl	2fff3568 <stm32mp_clk_enable>
2fff55d6:	6923      	ldr	r3, [r4, #16]
2fff55d8:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
2fff55dc:	601a      	str	r2, [r3, #0]
2fff55de:	6960      	ldr	r0, [r4, #20]
2fff55e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff55e4:	f7fd bfc3 	b.w	2fff356e <stm32mp_clk_disable>
2fff55e8:	bd10      	pop	{r4, pc}
2fff55ea:	bf00      	nop
2fff55ec:	2fffcf4c 	.word	0x2fffcf4c

2fff55f0 <stm32_iwdg_it_handler>:
2fff55f0:	b580      	push	{r7, lr}
2fff55f2:	4605      	mov	r5, r0
2fff55f4:	f001 ef24 	blx	2fff7440 <plat_my_core_pos>
2fff55f8:	4b12      	ldr	r3, [pc, #72]	; (2fff5644 <stm32_iwdg_it_handler+0x54>)
2fff55fa:	4680      	mov	r8, r0
2fff55fc:	68da      	ldr	r2, [r3, #12]
2fff55fe:	461f      	mov	r7, r3
2fff5600:	4295      	cmp	r5, r2
2fff5602:	d006      	beq.n	2fff5612 <stm32_iwdg_it_handler+0x22>
2fff5604:	69db      	ldr	r3, [r3, #28]
2fff5606:	429d      	cmp	r5, r3
2fff5608:	d019      	beq.n	2fff563e <stm32_iwdg_it_handler+0x4e>
2fff560a:	f7fb fb5b 	bl	2fff0cc4 <console_flush>
2fff560e:	f001 eb90 	blx	2fff6d30 <do_panic>
2fff5612:	2400      	movs	r4, #0
2fff5614:	0124      	lsls	r4, r4, #4
2fff5616:	f7ff ffcb 	bl	2fff55b0 <stm32_iwdg_refresh>
2fff561a:	193e      	adds	r6, r7, r4
2fff561c:	6870      	ldr	r0, [r6, #4]
2fff561e:	f7fd ffa3 	bl	2fff3568 <stm32mp_clk_enable>
2fff5622:	593a      	ldr	r2, [r7, r4]
2fff5624:	6953      	ldr	r3, [r2, #20]
2fff5626:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
2fff562a:	6153      	str	r3, [r2, #20]
2fff562c:	6870      	ldr	r0, [r6, #4]
2fff562e:	f7fd ff9e 	bl	2fff356e <stm32mp_clk_disable>
2fff5632:	4628      	mov	r0, r5
2fff5634:	f7f9 ff54 	bl	2ffef4e0 <gicv2_end_of_interrupt>
2fff5638:	4640      	mov	r0, r8
2fff563a:	f7fb fdb5 	bl	2fff11a8 <stm32mp_plat_reset>
2fff563e:	2401      	movs	r4, #1
2fff5640:	e7e8      	b.n	2fff5614 <stm32_iwdg_it_handler+0x24>
2fff5642:	bf00      	nop
2fff5644:	2fffcf4c 	.word	0x2fffcf4c

2fff5648 <stm32_iwdg_init>:
2fff5648:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff564c:	b087      	sub	sp, #28
2fff564e:	4668      	mov	r0, sp
2fff5650:	f000 fe36 	bl	2fff62c0 <fdt_get_address>
2fff5654:	b918      	cbnz	r0, 2fff565e <stm32_iwdg_init+0x16>
2fff5656:	f7fb fb35 	bl	2fff0cc4 <console_flush>
2fff565a:	f001 eb6a 	blx	2fff6d30 <do_panic>
2fff565e:	4a6f      	ldr	r2, [pc, #444]	; (2fff581c <stm32_iwdg_init+0x1d4>)
2fff5660:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2fff5664:	a802      	add	r0, sp, #8
2fff5666:	f000 ff15 	bl	2fff6494 <dt_get_node>
2fff566a:	1e05      	subs	r5, r0, #0
2fff566c:	db49      	blt.n	2fff5702 <stm32_iwdg_init+0xba>
2fff566e:	4f6c      	ldr	r7, [pc, #432]	; (2fff5820 <stm32_iwdg_init+0x1d8>)
2fff5670:	463c      	mov	r4, r7
2fff5672:	9802      	ldr	r0, [sp, #8]
2fff5674:	f7fb fdee 	bl	2fff1254 <stm32_iwdg_get_instance>
2fff5678:	ea4f 1800 	mov.w	r8, r0, lsl #4
2fff567c:	4606      	mov	r6, r0
2fff567e:	9b02      	ldr	r3, [sp, #8]
2fff5680:	4629      	mov	r1, r5
2fff5682:	eb07 0908 	add.w	r9, r7, r8
2fff5686:	f847 3008 	str.w	r3, [r7, r8]
2fff568a:	9b03      	ldr	r3, [sp, #12]
2fff568c:	4a65      	ldr	r2, [pc, #404]	; (2fff5824 <stm32_iwdg_init+0x1dc>)
2fff568e:	f8c9 3004 	str.w	r3, [r9, #4]
2fff5692:	2300      	movs	r3, #0
2fff5694:	9800      	ldr	r0, [sp, #0]
2fff5696:	f002 f9ea 	bl	2fff7a6e <fdt_getprop>
2fff569a:	b928      	cbnz	r0, 2fff56a8 <stm32_iwdg_init+0x60>
2fff569c:	f899 3008 	ldrb.w	r3, [r9, #8]
2fff56a0:	f043 0302 	orr.w	r3, r3, #2
2fff56a4:	f889 3008 	strb.w	r3, [r9, #8]
2fff56a8:	4a5f      	ldr	r2, [pc, #380]	; (2fff5828 <stm32_iwdg_init+0x1e0>)
2fff56aa:	2300      	movs	r3, #0
2fff56ac:	9800      	ldr	r0, [sp, #0]
2fff56ae:	4629      	mov	r1, r5
2fff56b0:	f002 f9dd 	bl	2fff7a6e <fdt_getprop>
2fff56b4:	b928      	cbnz	r0, 2fff56c2 <stm32_iwdg_init+0x7a>
2fff56b6:	eb04 0208 	add.w	r2, r4, r8
2fff56ba:	7a13      	ldrb	r3, [r2, #8]
2fff56bc:	f043 0304 	orr.w	r3, r3, #4
2fff56c0:	7213      	strb	r3, [r2, #8]
2fff56c2:	4630      	mov	r0, r6
2fff56c4:	f7fb fdda 	bl	2fff127c <stm32_iwdg_get_otp_config>
2fff56c8:	9b05      	ldr	r3, [sp, #20]
2fff56ca:	f010 0f01 	tst.w	r0, #1
2fff56ce:	d00b      	beq.n	2fff56e8 <stm32_iwdg_init+0xa0>
2fff56d0:	b923      	cbnz	r3, 2fff56dc <stm32_iwdg_init+0x94>
2fff56d2:	4856      	ldr	r0, [pc, #344]	; (2fff582c <stm32_iwdg_init+0x1e4>)
2fff56d4:	1c71      	adds	r1, r6, #1
2fff56d6:	f7fb fa53 	bl	2fff0b80 <tf_log>
2fff56da:	e7bc      	b.n	2fff5656 <stm32_iwdg_init+0xe>
2fff56dc:	eb04 0108 	add.w	r1, r4, r8
2fff56e0:	7a0a      	ldrb	r2, [r1, #8]
2fff56e2:	f042 0201 	orr.w	r2, r2, #1
2fff56e6:	720a      	strb	r2, [r1, #8]
2fff56e8:	b983      	cbnz	r3, 2fff570c <stm32_iwdg_init+0xc4>
2fff56ea:	eb04 0008 	add.w	r0, r4, r8
2fff56ee:	2110      	movs	r1, #16
2fff56f0:	f001 ec74 	blx	2fff6fdc <zero_normalmem>
2fff56f4:	4a49      	ldr	r2, [pc, #292]	; (2fff581c <stm32_iwdg_init+0x1d4>)
2fff56f6:	4629      	mov	r1, r5
2fff56f8:	a802      	add	r0, sp, #8
2fff56fa:	f000 fecb 	bl	2fff6494 <dt_get_node>
2fff56fe:	1e05      	subs	r5, r0, #0
2fff5700:	dab7      	bge.n	2fff5672 <stm32_iwdg_init+0x2a>
2fff5702:	2400      	movs	r4, #0
2fff5704:	4620      	mov	r0, r4
2fff5706:	b007      	add	sp, #28
2fff5708:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff570c:	0781      	lsls	r1, r0, #30
2fff570e:	bf41      	itttt	mi
2fff5710:	eb04 0108 	addmi.w	r1, r4, r8
2fff5714:	7a0a      	ldrbmi	r2, [r1, #8]
2fff5716:	f042 0202 	orrmi.w	r2, r2, #2
2fff571a:	720a      	strbmi	r2, [r1, #8]
2fff571c:	0742      	lsls	r2, r0, #29
2fff571e:	bf48      	it	mi
2fff5720:	eb04 0108 	addmi.w	r1, r4, r8
2fff5724:	f854 0008 	ldr.w	r0, [r4, r8]
2fff5728:	bf42      	ittt	mi
2fff572a:	7a0a      	ldrbmi	r2, [r1, #8]
2fff572c:	f042 0204 	orrmi.w	r2, r2, #4
2fff5730:	720a      	strbmi	r2, [r1, #8]
2fff5732:	07db      	lsls	r3, r3, #31
2fff5734:	d526      	bpl.n	2fff5784 <stm32_iwdg_init+0x13c>
2fff5736:	f7f9 fa75 	bl	2ffeec24 <stm32mp_register_non_secure_periph_iomem>
2fff573a:	a801      	add	r0, sp, #4
2fff573c:	f000 fdc0 	bl	2fff62c0 <fdt_get_address>
2fff5740:	2800      	cmp	r0, #0
2fff5742:	d0d7      	beq.n	2fff56f4 <stm32_iwdg_init+0xac>
2fff5744:	4a3a      	ldr	r2, [pc, #232]	; (2fff5830 <stm32_iwdg_init+0x1e8>)
2fff5746:	2300      	movs	r3, #0
2fff5748:	9801      	ldr	r0, [sp, #4]
2fff574a:	4629      	mov	r1, r5
2fff574c:	f002 f98f 	bl	2fff7a6e <fdt_getprop>
2fff5750:	2800      	cmp	r0, #0
2fff5752:	d0cf      	beq.n	2fff56f4 <stm32_iwdg_init+0xac>
2fff5754:	6803      	ldr	r3, [r0, #0]
2fff5756:	f3c3 2a07 	ubfx	sl, r3, #8, #8
2fff575a:	0e18      	lsrs	r0, r3, #24
2fff575c:	ea40 6003 	orr.w	r0, r0, r3, lsl #24
2fff5760:	f3c3 4307 	ubfx	r3, r3, #16, #8
2fff5764:	ea40 400a 	orr.w	r0, r0, sl, lsl #16
2fff5768:	ea40 2a03 	orr.w	sl, r0, r3, lsl #8
2fff576c:	f1ba 0f00 	cmp.w	sl, #0
2fff5770:	dbc0      	blt.n	2fff56f4 <stm32_iwdg_init+0xac>
2fff5772:	d10a      	bne.n	2fff578a <stm32_iwdg_init+0x142>
2fff5774:	f06f 0415 	mvn.w	r4, #21
2fff5778:	482e      	ldr	r0, [pc, #184]	; (2fff5834 <stm32_iwdg_init+0x1ec>)
2fff577a:	4622      	mov	r2, r4
2fff577c:	1c71      	adds	r1, r6, #1
2fff577e:	f7fb f9ff 	bl	2fff0b80 <tf_log>
2fff5782:	e7bf      	b.n	2fff5704 <stm32_iwdg_init+0xbc>
2fff5784:	f7f9 fa4b 	bl	2ffeec1e <stm32mp_register_secure_periph_iomem>
2fff5788:	e7d7      	b.n	2fff573a <stm32_iwdg_init+0xf2>
2fff578a:	492b      	ldr	r1, [pc, #172]	; (2fff5838 <stm32_iwdg_init+0x1f0>)
2fff578c:	4628      	mov	r0, r5
2fff578e:	f7fd f9f1 	bl	2fff2b74 <fdt_get_clock_id_by_name>
2fff5792:	2800      	cmp	r0, #0
2fff5794:	dbee      	blt.n	2fff5774 <stm32_iwdg_init+0x12c>
2fff5796:	eb04 0908 	add.w	r9, r4, r8
2fff579a:	f7fd ff11 	bl	2fff35c0 <stm32mp_clk_get_rate>
2fff579e:	4683      	mov	fp, r0
2fff57a0:	f8d9 0004 	ldr.w	r0, [r9, #4]
2fff57a4:	f7fd fee0 	bl	2fff3568 <stm32mp_clk_enable>
2fff57a8:	fbaa 010b 	umull	r0, r1, sl, fp
2fff57ac:	f854 3008 	ldr.w	r3, [r4, r8]
2fff57b0:	f64c 42cc 	movw	r2, #52428	; 0xcccc
2fff57b4:	0a00      	lsrs	r0, r0, #8
2fff57b6:	f04f 0a64 	mov.w	sl, #100	; 0x64
2fff57ba:	601a      	str	r2, [r3, #0]
2fff57bc:	f600 70ff 	addw	r0, r0, #4095	; 0xfff
2fff57c0:	f3c0 000b 	ubfx	r0, r0, #0, #12
2fff57c4:	f245 5255 	movw	r2, #21845	; 0x5555
2fff57c8:	601a      	str	r2, [r3, #0]
2fff57ca:	f440 4000 	orr.w	r0, r0, #32768	; 0x8000
2fff57ce:	2206      	movs	r2, #6
2fff57d0:	605a      	str	r2, [r3, #4]
2fff57d2:	6158      	str	r0, [r3, #20]
2fff57d4:	f8d9 3000 	ldr.w	r3, [r9]
2fff57d8:	2001      	movs	r0, #1
2fff57da:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
2fff57de:	f8d3 b00c 	ldr.w	fp, [r3, #12]
2fff57e2:	f7fc fd97 	bl	2fff2314 <mdelay>
2fff57e6:	f01b 0f08 	tst.w	fp, #8
2fff57ea:	d002      	beq.n	2fff57f2 <stm32_iwdg_init+0x1aa>
2fff57ec:	f1ba 0f00 	cmp.w	sl, #0
2fff57f0:	d1f0      	bne.n	2fff57d4 <stm32_iwdg_init+0x18c>
2fff57f2:	2100      	movs	r1, #0
2fff57f4:	4628      	mov	r0, r5
2fff57f6:	f7fa f87b 	bl	2ffef8f0 <stm32_gic_enable_spi>
2fff57fa:	eb04 0308 	add.w	r3, r4, r8
2fff57fe:	2800      	cmp	r0, #0
2fff5800:	60d8      	str	r0, [r3, #12]
2fff5802:	f6ff af28 	blt.w	2fff5656 <stm32_iwdg_init+0xe>
2fff5806:	6858      	ldr	r0, [r3, #4]
2fff5808:	f7fd feb1 	bl	2fff356e <stm32mp_clk_disable>
2fff580c:	f1ba 0f00 	cmp.w	sl, #0
2fff5810:	f47f af70 	bne.w	2fff56f4 <stm32_iwdg_init+0xac>
2fff5814:	f06f 043b 	mvn.w	r4, #59	; 0x3b
2fff5818:	e7ae      	b.n	2fff5778 <stm32_iwdg_init+0x130>
2fff581a:	bf00      	nop
2fff581c:	2fffa0ef 	.word	0x2fffa0ef
2fff5820:	2fffcf4c 	.word	0x2fffcf4c
2fff5824:	2fffa100 	.word	0x2fffa100
2fff5828:	2fffa115 	.word	0x2fffa115
2fff582c:	2fffa12d 	.word	0x2fffa12d
2fff5830:	2fffa152 	.word	0x2fffa152
2fff5834:	2fffa165 	.word	0x2fffa165
2fff5838:	2fff9e18 	.word	0x2fff9e18

2fff583c <fdt32_to_cpu>:
2fff583c:	ba00      	rev	r0, r0
2fff583e:	4770      	bx	lr

2fff5840 <dt_get_pmic_node>:
2fff5840:	b510      	push	{r4, lr}
2fff5842:	4c05      	ldr	r4, [pc, #20]	; (2fff5858 <dt_get_pmic_node+0x18>)
2fff5844:	6823      	ldr	r3, [r4, #0]
2fff5846:	3304      	adds	r3, #4
2fff5848:	d103      	bne.n	2fff5852 <dt_get_pmic_node+0x12>
2fff584a:	4804      	ldr	r0, [pc, #16]	; (2fff585c <dt_get_pmic_node+0x1c>)
2fff584c:	f000 fe44 	bl	2fff64d8 <dt_get_node_by_compatible>
2fff5850:	6020      	str	r0, [r4, #0]
2fff5852:	6820      	ldr	r0, [r4, #0]
2fff5854:	bd10      	pop	{r4, pc}
2fff5856:	bf00      	nop
2fff5858:	2fffb538 	.word	0x2fffb538
2fff585c:	2fffa18f 	.word	0x2fffa18f

2fff5860 <dt_pmic_get_regulator_voltage>:
2fff5860:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff5862:	4615      	mov	r5, r2
2fff5864:	4a14      	ldr	r2, [pc, #80]	; (2fff58b8 <dt_pmic_get_regulator_voltage+0x58>)
2fff5866:	461c      	mov	r4, r3
2fff5868:	2300      	movs	r3, #0
2fff586a:	4606      	mov	r6, r0
2fff586c:	460f      	mov	r7, r1
2fff586e:	f002 f8fe 	bl	2fff7a6e <fdt_getprop>
2fff5872:	b910      	cbnz	r0, 2fff587a <dt_pmic_get_regulator_voltage+0x1a>
2fff5874:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff5878:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff587a:	b13d      	cbz	r5, 2fff588c <dt_pmic_get_regulator_voltage+0x2c>
2fff587c:	6800      	ldr	r0, [r0, #0]
2fff587e:	f7ff ffdd 	bl	2fff583c <fdt32_to_cpu>
2fff5882:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2fff5886:	fbb0 f0f3 	udiv	r0, r0, r3
2fff588a:	8028      	strh	r0, [r5, #0]
2fff588c:	4a0b      	ldr	r2, [pc, #44]	; (2fff58bc <dt_pmic_get_regulator_voltage+0x5c>)
2fff588e:	2300      	movs	r3, #0
2fff5890:	4639      	mov	r1, r7
2fff5892:	4630      	mov	r0, r6
2fff5894:	f002 f8eb 	bl	2fff7a6e <fdt_getprop>
2fff5898:	2800      	cmp	r0, #0
2fff589a:	d0eb      	beq.n	2fff5874 <dt_pmic_get_regulator_voltage+0x14>
2fff589c:	b14c      	cbz	r4, 2fff58b2 <dt_pmic_get_regulator_voltage+0x52>
2fff589e:	6800      	ldr	r0, [r0, #0]
2fff58a0:	f7ff ffcc 	bl	2fff583c <fdt32_to_cpu>
2fff58a4:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2fff58a8:	fbb0 f0f3 	udiv	r0, r0, r3
2fff58ac:	8020      	strh	r0, [r4, #0]
2fff58ae:	2000      	movs	r0, #0
2fff58b0:	e7e2      	b.n	2fff5878 <dt_pmic_get_regulator_voltage+0x18>
2fff58b2:	4620      	mov	r0, r4
2fff58b4:	e7e0      	b.n	2fff5878 <dt_pmic_get_regulator_voltage+0x18>
2fff58b6:	bf00      	nop
2fff58b8:	2fffa1a9 	.word	0x2fffa1a9
2fff58bc:	2fffa1c1 	.word	0x2fffa1c1

2fff58c0 <pmic_operate>:
2fff58c0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff58c4:	4681      	mov	r9, r0
2fff58c6:	a801      	add	r0, sp, #4
2fff58c8:	460f      	mov	r7, r1
2fff58ca:	4692      	mov	sl, r2
2fff58cc:	f000 fcf8 	bl	2fff62c0 <fdt_get_address>
2fff58d0:	b928      	cbnz	r0, 2fff58de <pmic_operate+0x1e>
2fff58d2:	f06f 0b01 	mvn.w	fp, #1
2fff58d6:	4658      	mov	r0, fp
2fff58d8:	b003      	add	sp, #12
2fff58da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff58de:	f7ff ffaf 	bl	2fff5840 <dt_get_pmic_node>
2fff58e2:	1e01      	subs	r1, r0, #0
2fff58e4:	dbf5      	blt.n	2fff58d2 <pmic_operate+0x12>
2fff58e6:	4a7d      	ldr	r2, [pc, #500]	; (2fff5adc <pmic_operate+0x21c>)
2fff58e8:	9801      	ldr	r0, [sp, #4]
2fff58ea:	f002 f83d 	bl	2fff7968 <fdt_subnode_offset>
2fff58ee:	1e01      	subs	r1, r0, #0
2fff58f0:	dbef      	blt.n	2fff58d2 <pmic_operate+0x12>
2fff58f2:	9801      	ldr	r0, [sp, #4]
2fff58f4:	f06f 0b04 	mvn.w	fp, #4
2fff58f8:	f001 ff37 	bl	2fff776a <fdt_first_subnode>
2fff58fc:	4604      	mov	r4, r0
2fff58fe:	2c00      	cmp	r4, #0
2fff5900:	dbe9      	blt.n	2fff58d6 <pmic_operate+0x16>
2fff5902:	9801      	ldr	r0, [sp, #4]
2fff5904:	2200      	movs	r2, #0
2fff5906:	4621      	mov	r1, r4
2fff5908:	f001 ffbc 	bl	2fff7884 <fdt_get_name>
2fff590c:	f1b9 0f01 	cmp.w	r9, #1
2fff5910:	4605      	mov	r5, r0
2fff5912:	d01e      	beq.n	2fff5952 <pmic_operate+0x92>
2fff5914:	f1b9 0f02 	cmp.w	r9, #2
2fff5918:	d07d      	beq.n	2fff5a16 <pmic_operate+0x156>
2fff591a:	b927      	cbnz	r7, 2fff5926 <pmic_operate+0x66>
2fff591c:	f240 110d 	movw	r1, #269	; 0x10d
2fff5920:	486f      	ldr	r0, [pc, #444]	; (2fff5ae0 <pmic_operate+0x220>)
2fff5922:	f002 fa41 	bl	2fff7da8 <__assert>
2fff5926:	f1ba 0f00 	cmp.w	sl, #0
2fff592a:	d102      	bne.n	2fff5932 <pmic_operate+0x72>
2fff592c:	f44f 7187 	mov.w	r1, #270	; 0x10e
2fff5930:	e7f6      	b.n	2fff5920 <pmic_operate+0x60>
2fff5932:	4639      	mov	r1, r7
2fff5934:	f002 fbbb 	bl	2fff80ae <strcmp>
2fff5938:	b9e0      	cbnz	r0, 2fff5974 <pmic_operate+0xb4>
2fff593a:	4603      	mov	r3, r0
2fff593c:	4652      	mov	r2, sl
2fff593e:	9801      	ldr	r0, [sp, #4]
2fff5940:	4621      	mov	r1, r4
2fff5942:	f7ff ff8d 	bl	2fff5860 <dt_pmic_get_regulator_voltage>
2fff5946:	f1b0 0b00 	subs.w	fp, r0, #0
2fff594a:	bfb8      	it	lt
2fff594c:	f06f 0b05 	mvnlt.w	fp, #5
2fff5950:	e7c1      	b.n	2fff58d6 <pmic_operate+0x16>
2fff5952:	9e01      	ldr	r6, [sp, #4]
2fff5954:	2300      	movs	r3, #0
2fff5956:	4a63      	ldr	r2, [pc, #396]	; (2fff5ae4 <pmic_operate+0x224>)
2fff5958:	4621      	mov	r1, r4
2fff595a:	4630      	mov	r0, r6
2fff595c:	f002 f887 	bl	2fff7a6e <fdt_getprop>
2fff5960:	4603      	mov	r3, r0
2fff5962:	b968      	cbnz	r0, 2fff5980 <pmic_operate+0xc0>
2fff5964:	4a60      	ldr	r2, [pc, #384]	; (2fff5ae8 <pmic_operate+0x228>)
2fff5966:	4621      	mov	r1, r4
2fff5968:	4630      	mov	r0, r6
2fff596a:	f002 f880 	bl	2fff7a6e <fdt_getprop>
2fff596e:	b938      	cbnz	r0, 2fff5980 <pmic_operate+0xc0>
2fff5970:	f04f 0b00 	mov.w	fp, #0
2fff5974:	9801      	ldr	r0, [sp, #4]
2fff5976:	4621      	mov	r1, r4
2fff5978:	f001 ff0b 	bl	2fff7792 <fdt_next_subnode>
2fff597c:	4604      	mov	r4, r0
2fff597e:	e7be      	b.n	2fff58fe <pmic_operate+0x3e>
2fff5980:	4a5a      	ldr	r2, [pc, #360]	; (2fff5aec <pmic_operate+0x22c>)
2fff5982:	2300      	movs	r3, #0
2fff5984:	4621      	mov	r1, r4
2fff5986:	4630      	mov	r0, r6
2fff5988:	f002 f871 	bl	2fff7a6e <fdt_getprop>
2fff598c:	bb70      	cbnz	r0, 2fff59ec <pmic_operate+0x12c>
2fff598e:	4a58      	ldr	r2, [pc, #352]	; (2fff5af0 <pmic_operate+0x230>)
2fff5990:	2300      	movs	r3, #0
2fff5992:	4621      	mov	r1, r4
2fff5994:	4630      	mov	r0, r6
2fff5996:	f002 f86a 	bl	2fff7a6e <fdt_getprop>
2fff599a:	bb70      	cbnz	r0, 2fff59fa <pmic_operate+0x13a>
2fff599c:	f10d 0302 	add.w	r3, sp, #2
2fff59a0:	466a      	mov	r2, sp
2fff59a2:	4621      	mov	r1, r4
2fff59a4:	4630      	mov	r0, r6
2fff59a6:	f7ff ff5b 	bl	2fff5860 <dt_pmic_get_regulator_voltage>
2fff59aa:	2800      	cmp	r0, #0
2fff59ac:	dbe0      	blt.n	2fff5970 <pmic_operate+0xb0>
2fff59ae:	4628      	mov	r0, r5
2fff59b0:	f000 f9fc 	bl	2fff5dac <stpmic1_regulator_voltage_get>
2fff59b4:	f1b0 0b00 	subs.w	fp, r0, #0
2fff59b8:	db8d      	blt.n	2fff58d6 <pmic_operate+0x16>
2fff59ba:	f8bd 1000 	ldrh.w	r1, [sp]
2fff59be:	fa1f f38b 	uxth.w	r3, fp
2fff59c2:	f8bd 2002 	ldrh.w	r2, [sp, #2]
2fff59c6:	428b      	cmp	r3, r1
2fff59c8:	bf28      	it	cs
2fff59ca:	2100      	movcs	r1, #0
2fff59cc:	4293      	cmp	r3, r2
2fff59ce:	bf88      	it	hi
2fff59d0:	4611      	movhi	r1, r2
2fff59d2:	b9c9      	cbnz	r1, 2fff5a08 <pmic_operate+0x148>
2fff59d4:	4628      	mov	r0, r5
2fff59d6:	f000 f9d5 	bl	2fff5d84 <stpmic1_is_regulator_enabled>
2fff59da:	2800      	cmp	r0, #0
2fff59dc:	d1c8      	bne.n	2fff5970 <pmic_operate+0xb0>
2fff59de:	4628      	mov	r0, r5
2fff59e0:	f000 fa7b 	bl	2fff5eda <stpmic1_regulator_enable>
2fff59e4:	f1b0 0b00 	subs.w	fp, r0, #0
2fff59e8:	dac2      	bge.n	2fff5970 <pmic_operate+0xb0>
2fff59ea:	e774      	b.n	2fff58d6 <pmic_operate+0x16>
2fff59ec:	4628      	mov	r0, r5
2fff59ee:	f000 faad 	bl	2fff5f4c <stpmic1_regulator_pull_down_set>
2fff59f2:	f1b0 0b00 	subs.w	fp, r0, #0
2fff59f6:	daca      	bge.n	2fff598e <pmic_operate+0xce>
2fff59f8:	e76d      	b.n	2fff58d6 <pmic_operate+0x16>
2fff59fa:	4628      	mov	r0, r5
2fff59fc:	f000 fab8 	bl	2fff5f70 <stpmic1_regulator_mask_reset_set>
2fff5a00:	f1b0 0b00 	subs.w	fp, r0, #0
2fff5a04:	daca      	bge.n	2fff599c <pmic_operate+0xdc>
2fff5a06:	e766      	b.n	2fff58d6 <pmic_operate+0x16>
2fff5a08:	4628      	mov	r0, r5
2fff5a0a:	f000 fa71 	bl	2fff5ef0 <stpmic1_regulator_voltage_set>
2fff5a0e:	f1b0 0b00 	subs.w	fp, r0, #0
2fff5a12:	dadf      	bge.n	2fff59d4 <pmic_operate+0x114>
2fff5a14:	e75f      	b.n	2fff58d6 <pmic_operate+0x16>
2fff5a16:	b917      	cbnz	r7, 2fff5a1e <pmic_operate+0x15e>
2fff5a18:	f240 1125 	movw	r1, #293	; 0x125
2fff5a1c:	e780      	b.n	2fff5920 <pmic_operate+0x60>
2fff5a1e:	9e01      	ldr	r6, [sp, #4]
2fff5a20:	f000 fa51 	bl	2fff5ec6 <stpmic1_powerctrl_on>
2fff5a24:	f1b0 0b00 	subs.w	fp, r0, #0
2fff5a28:	f6ff af55 	blt.w	2fff58d6 <pmic_operate+0x16>
2fff5a2c:	4628      	mov	r0, r5
2fff5a2e:	f000 fa21 	bl	2fff5e74 <stpmic1_lp_copy_reg>
2fff5a32:	f1b0 0b00 	subs.w	fp, r0, #0
2fff5a36:	f6ff af4e 	blt.w	2fff58d6 <pmic_operate+0x16>
2fff5a3a:	463a      	mov	r2, r7
2fff5a3c:	4621      	mov	r1, r4
2fff5a3e:	4630      	mov	r0, r6
2fff5a40:	f001 ff92 	bl	2fff7968 <fdt_subnode_offset>
2fff5a44:	f1b0 0800 	subs.w	r8, r0, #0
2fff5a48:	dd92      	ble.n	2fff5970 <pmic_operate+0xb0>
2fff5a4a:	4a2a      	ldr	r2, [pc, #168]	; (2fff5af4 <pmic_operate+0x234>)
2fff5a4c:	2300      	movs	r3, #0
2fff5a4e:	4641      	mov	r1, r8
2fff5a50:	4630      	mov	r0, r6
2fff5a52:	f002 f80c 	bl	2fff7a6e <fdt_getprop>
2fff5a56:	bb08      	cbnz	r0, 2fff5a9c <pmic_operate+0x1dc>
2fff5a58:	4a27      	ldr	r2, [pc, #156]	; (2fff5af8 <pmic_operate+0x238>)
2fff5a5a:	2300      	movs	r3, #0
2fff5a5c:	4641      	mov	r1, r8
2fff5a5e:	4630      	mov	r0, r6
2fff5a60:	f002 f805 	bl	2fff7a6e <fdt_getprop>
2fff5a64:	bb10      	cbnz	r0, 2fff5aac <pmic_operate+0x1ec>
2fff5a66:	4a25      	ldr	r2, [pc, #148]	; (2fff5afc <pmic_operate+0x23c>)
2fff5a68:	2300      	movs	r3, #0
2fff5a6a:	4641      	mov	r1, r8
2fff5a6c:	4630      	mov	r0, r6
2fff5a6e:	f001 fffe 	bl	2fff7a6e <fdt_getprop>
2fff5a72:	bb18      	cbnz	r0, 2fff5abc <pmic_operate+0x1fc>
2fff5a74:	4a22      	ldr	r2, [pc, #136]	; (2fff5b00 <pmic_operate+0x240>)
2fff5a76:	2300      	movs	r3, #0
2fff5a78:	4641      	mov	r1, r8
2fff5a7a:	4630      	mov	r0, r6
2fff5a7c:	f001 fff7 	bl	2fff7a6e <fdt_getprop>
2fff5a80:	2800      	cmp	r0, #0
2fff5a82:	f43f af75 	beq.w	2fff5970 <pmic_operate+0xb0>
2fff5a86:	6800      	ldr	r0, [r0, #0]
2fff5a88:	f7ff fed8 	bl	2fff583c <fdt32_to_cpu>
2fff5a8c:	2808      	cmp	r0, #8
2fff5a8e:	f47f af6f 	bne.w	2fff5970 <pmic_operate+0xb0>
2fff5a92:	2101      	movs	r1, #1
2fff5a94:	4628      	mov	r0, r5
2fff5a96:	f000 fa83 	bl	2fff5fa0 <stpmic1_lp_set_mode>
2fff5a9a:	e7a3      	b.n	2fff59e4 <pmic_operate+0x124>
2fff5a9c:	2101      	movs	r1, #1
2fff5a9e:	4628      	mov	r0, r5
2fff5aa0:	f000 fa73 	bl	2fff5f8a <stpmic1_lp_reg_on_off>
2fff5aa4:	f1b0 0b00 	subs.w	fp, r0, #0
2fff5aa8:	dad6      	bge.n	2fff5a58 <pmic_operate+0x198>
2fff5aaa:	e714      	b.n	2fff58d6 <pmic_operate+0x16>
2fff5aac:	2100      	movs	r1, #0
2fff5aae:	4628      	mov	r0, r5
2fff5ab0:	f000 fa6b 	bl	2fff5f8a <stpmic1_lp_reg_on_off>
2fff5ab4:	f1b0 0b00 	subs.w	fp, r0, #0
2fff5ab8:	dad5      	bge.n	2fff5a66 <pmic_operate+0x1a6>
2fff5aba:	e70c      	b.n	2fff58d6 <pmic_operate+0x16>
2fff5abc:	6800      	ldr	r0, [r0, #0]
2fff5abe:	f7ff febd 	bl	2fff583c <fdt32_to_cpu>
2fff5ac2:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2fff5ac6:	fbb0 f1f1 	udiv	r1, r0, r1
2fff5aca:	4628      	mov	r0, r5
2fff5acc:	b289      	uxth	r1, r1
2fff5ace:	f000 fa75 	bl	2fff5fbc <stpmic1_lp_set_voltage>
2fff5ad2:	f1b0 0b00 	subs.w	fp, r0, #0
2fff5ad6:	dacd      	bge.n	2fff5a74 <pmic_operate+0x1b4>
2fff5ad8:	e6fd      	b.n	2fff58d6 <pmic_operate+0x16>
2fff5ada:	bf00      	nop
2fff5adc:	2fffa22e 	.word	0x2fffa22e
2fff5ae0:	2fffa239 	.word	0x2fffa239
2fff5ae4:	2fffa258 	.word	0x2fffa258
2fff5ae8:	2fffa26a 	.word	0x2fffa26a
2fff5aec:	2fffa27e 	.word	0x2fffa27e
2fff5af0:	2fffa292 	.word	0x2fffa292
2fff5af4:	2fffa2a0 	.word	0x2fffa2a0
2fff5af8:	2fffa2b8 	.word	0x2fffa2b8
2fff5afc:	2fffa2d1 	.word	0x2fffa2d1
2fff5b00:	2fffa2ed 	.word	0x2fffa2ed

2fff5b04 <dt_pmic_status>:
2fff5b04:	b510      	push	{r4, lr}
2fff5b06:	4c08      	ldr	r4, [pc, #32]	; (2fff5b28 <dt_pmic_status+0x24>)
2fff5b08:	6820      	ldr	r0, [r4, #0]
2fff5b0a:	f110 0f0f 	cmn.w	r0, #15
2fff5b0e:	d106      	bne.n	2fff5b1e <dt_pmic_status+0x1a>
2fff5b10:	f7ff fe96 	bl	2fff5840 <dt_get_pmic_node>
2fff5b14:	2800      	cmp	r0, #0
2fff5b16:	dc03      	bgt.n	2fff5b20 <dt_pmic_status+0x1c>
2fff5b18:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff5b1c:	6020      	str	r0, [r4, #0]
2fff5b1e:	bd10      	pop	{r4, pc}
2fff5b20:	f000 fbda 	bl	2fff62d8 <fdt_get_status>
2fff5b24:	e7fa      	b.n	2fff5b1c <dt_pmic_status+0x18>
2fff5b26:	bf00      	nop
2fff5b28:	2fffb53c 	.word	0x2fffb53c

2fff5b2c <pmic_configure_boot_on_regulators>:
2fff5b2c:	2200      	movs	r2, #0
2fff5b2e:	2001      	movs	r0, #1
2fff5b30:	4611      	mov	r1, r2
2fff5b32:	f7ff bec5 	b.w	2fff58c0 <pmic_operate>

2fff5b36 <pmic_set_lp_config>:
2fff5b36:	4601      	mov	r1, r0
2fff5b38:	2200      	movs	r2, #0
2fff5b3a:	2002      	movs	r0, #2
2fff5b3c:	f7ff bec0 	b.w	2fff58c0 <pmic_operate>

2fff5b40 <dt_pmic_find_supply>:
2fff5b40:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2fff5b44:	4606      	mov	r6, r0
2fff5b46:	a801      	add	r0, sp, #4
2fff5b48:	460f      	mov	r7, r1
2fff5b4a:	f000 fbb9 	bl	2fff62c0 <fdt_get_address>
2fff5b4e:	b928      	cbnz	r0, 2fff5b5c <dt_pmic_find_supply+0x1c>
2fff5b50:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
2fff5b54:	4628      	mov	r0, r5
2fff5b56:	b002      	add	sp, #8
2fff5b58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff5b5c:	f7ff fe70 	bl	2fff5840 <dt_get_pmic_node>
2fff5b60:	1e01      	subs	r1, r0, #0
2fff5b62:	dbf5      	blt.n	2fff5b50 <dt_pmic_find_supply+0x10>
2fff5b64:	4a13      	ldr	r2, [pc, #76]	; (2fff5bb4 <dt_pmic_find_supply+0x74>)
2fff5b66:	9801      	ldr	r0, [sp, #4]
2fff5b68:	f001 fefe 	bl	2fff7968 <fdt_subnode_offset>
2fff5b6c:	1e01      	subs	r1, r0, #0
2fff5b6e:	dbef      	blt.n	2fff5b50 <dt_pmic_find_supply+0x10>
2fff5b70:	9801      	ldr	r0, [sp, #4]
2fff5b72:	f8df 8044 	ldr.w	r8, [pc, #68]	; 2fff5bb8 <dt_pmic_find_supply+0x78>
2fff5b76:	f001 fdf8 	bl	2fff776a <fdt_first_subnode>
2fff5b7a:	4604      	mov	r4, r0
2fff5b7c:	2c00      	cmp	r4, #0
2fff5b7e:	dbe7      	blt.n	2fff5b50 <dt_pmic_find_supply+0x10>
2fff5b80:	9801      	ldr	r0, [sp, #4]
2fff5b82:	2300      	movs	r3, #0
2fff5b84:	4642      	mov	r2, r8
2fff5b86:	4621      	mov	r1, r4
2fff5b88:	f001 ff71 	bl	2fff7a6e <fdt_getprop>
2fff5b8c:	b158      	cbz	r0, 2fff5ba6 <dt_pmic_find_supply+0x66>
2fff5b8e:	4639      	mov	r1, r7
2fff5b90:	f002 fa8d 	bl	2fff80ae <strcmp>
2fff5b94:	4605      	mov	r5, r0
2fff5b96:	b930      	cbnz	r0, 2fff5ba6 <dt_pmic_find_supply+0x66>
2fff5b98:	4602      	mov	r2, r0
2fff5b9a:	4621      	mov	r1, r4
2fff5b9c:	9801      	ldr	r0, [sp, #4]
2fff5b9e:	f001 fe71 	bl	2fff7884 <fdt_get_name>
2fff5ba2:	6030      	str	r0, [r6, #0]
2fff5ba4:	e7d6      	b.n	2fff5b54 <dt_pmic_find_supply+0x14>
2fff5ba6:	9801      	ldr	r0, [sp, #4]
2fff5ba8:	4621      	mov	r1, r4
2fff5baa:	f001 fdf2 	bl	2fff7792 <fdt_next_subnode>
2fff5bae:	4604      	mov	r4, r0
2fff5bb0:	e7e4      	b.n	2fff5b7c <dt_pmic_find_supply+0x3c>
2fff5bb2:	bf00      	nop
2fff5bb4:	2fffa22e 	.word	0x2fffa22e
2fff5bb8:	2fffa19a 	.word	0x2fffa19a

2fff5bbc <initialize_pmic_i2c>:
2fff5bbc:	b5f0      	push	{r4, r5, r6, r7, lr}
2fff5bbe:	b091      	sub	sp, #68	; 0x44
2fff5bc0:	4d39      	ldr	r5, [pc, #228]	; (2fff5ca8 <initialize_pmic_i2c+0xec>)
2fff5bc2:	682c      	ldr	r4, [r5, #0]
2fff5bc4:	1c63      	adds	r3, r4, #1
2fff5bc6:	d129      	bne.n	2fff5c1c <initialize_pmic_i2c+0x60>
2fff5bc8:	a804      	add	r0, sp, #16
2fff5bca:	f000 fb79 	bl	2fff62c0 <fdt_get_address>
2fff5bce:	b1d0      	cbz	r0, 2fff5c06 <initialize_pmic_i2c+0x4a>
2fff5bd0:	f7ff fe36 	bl	2fff5840 <dt_get_pmic_node>
2fff5bd4:	1e06      	subs	r6, r0, #0
2fff5bd6:	db64      	blt.n	2fff5ca2 <initialize_pmic_i2c+0xe6>
2fff5bd8:	4a34      	ldr	r2, [pc, #208]	; (2fff5cac <initialize_pmic_i2c+0xf0>)
2fff5bda:	2300      	movs	r3, #0
2fff5bdc:	9804      	ldr	r0, [sp, #16]
2fff5bde:	4631      	mov	r1, r6
2fff5be0:	f001 ff45 	bl	2fff7a6e <fdt_getprop>
2fff5be4:	b178      	cbz	r0, 2fff5c06 <initialize_pmic_i2c+0x4a>
2fff5be6:	6800      	ldr	r0, [r0, #0]
2fff5be8:	f7ff fe28 	bl	2fff583c <fdt32_to_cpu>
2fff5bec:	0040      	lsls	r0, r0, #1
2fff5bee:	4b30      	ldr	r3, [pc, #192]	; (2fff5cb0 <initialize_pmic_i2c+0xf4>)
2fff5bf0:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
2fff5bf4:	6018      	str	r0, [r3, #0]
2fff5bf6:	d20e      	bcs.n	2fff5c16 <initialize_pmic_i2c+0x5a>
2fff5bf8:	9804      	ldr	r0, [sp, #16]
2fff5bfa:	4631      	mov	r1, r6
2fff5bfc:	f002 f819 	bl	2fff7c32 <fdt_parent_offset>
2fff5c00:	6028      	str	r0, [r5, #0]
2fff5c02:	2800      	cmp	r0, #0
2fff5c04:	da0a      	bge.n	2fff5c1c <initialize_pmic_i2c+0x60>
2fff5c06:	482b      	ldr	r0, [pc, #172]	; (2fff5cb4 <initialize_pmic_i2c+0xf8>)
2fff5c08:	4621      	mov	r1, r4
2fff5c0a:	f7fa ffb9 	bl	2fff0b80 <tf_log>
2fff5c0e:	f7fb f859 	bl	2fff0cc4 <console_flush>
2fff5c12:	f001 e88e 	blx	2fff6d30 <do_panic>
2fff5c16:	f06f 040e 	mvn.w	r4, #14
2fff5c1a:	e7f4      	b.n	2fff5c06 <initialize_pmic_i2c+0x4a>
2fff5c1c:	6829      	ldr	r1, [r5, #0]
2fff5c1e:	4668      	mov	r0, sp
2fff5c20:	f000 fbf2 	bl	2fff6408 <dt_fill_device_info>
2fff5c24:	9b00      	ldr	r3, [sp, #0]
2fff5c26:	b333      	cbz	r3, 2fff5c76 <initialize_pmic_i2c+0xba>
2fff5c28:	6828      	ldr	r0, [r5, #0]
2fff5c2a:	a904      	add	r1, sp, #16
2fff5c2c:	f7ff f99a 	bl	2fff4f64 <stm32_i2c_get_setup_from_fdt>
2fff5c30:	1e04      	subs	r4, r0, #0
2fff5c32:	dbe8      	blt.n	2fff5c06 <initialize_pmic_i2c+0x4a>
2fff5c34:	d135      	bne.n	2fff5ca2 <initialize_pmic_i2c+0xe6>
2fff5c36:	4d20      	ldr	r5, [pc, #128]	; (2fff5cb8 <initialize_pmic_i2c+0xfc>)
2fff5c38:	2701      	movs	r7, #1
2fff5c3a:	9b00      	ldr	r3, [sp, #0]
2fff5c3c:	a904      	add	r1, sp, #16
2fff5c3e:	4e1c      	ldr	r6, [pc, #112]	; (2fff5cb0 <initialize_pmic_i2c+0xf4>)
2fff5c40:	4628      	mov	r0, r5
2fff5c42:	602b      	str	r3, [r5, #0]
2fff5c44:	9b03      	ldr	r3, [sp, #12]
2fff5c46:	612c      	str	r4, [r5, #16]
2fff5c48:	606b      	str	r3, [r5, #4]
2fff5c4a:	9b01      	ldr	r3, [sp, #4]
2fff5c4c:	9705      	str	r7, [sp, #20]
2fff5c4e:	60ab      	str	r3, [r5, #8]
2fff5c50:	6833      	ldr	r3, [r6, #0]
2fff5c52:	e9cd 4406 	strd	r4, r4, [sp, #24]
2fff5c56:	9304      	str	r3, [sp, #16]
2fff5c58:	e9cd 4408 	strd	r4, r4, [sp, #32]
2fff5c5c:	940a      	str	r4, [sp, #40]	; 0x28
2fff5c5e:	970e      	str	r7, [sp, #56]	; 0x38
2fff5c60:	f88d 403c 	strb.w	r4, [sp, #60]	; 0x3c
2fff5c64:	f7ff f9ae 	bl	2fff4fc4 <stm32_i2c_init>
2fff5c68:	4602      	mov	r2, r0
2fff5c6a:	b138      	cbz	r0, 2fff5c7c <initialize_pmic_i2c+0xc0>
2fff5c6c:	6829      	ldr	r1, [r5, #0]
2fff5c6e:	4813      	ldr	r0, [pc, #76]	; (2fff5cbc <initialize_pmic_i2c+0x100>)
2fff5c70:	f7fa ff86 	bl	2fff0b80 <tf_log>
2fff5c74:	e7cb      	b.n	2fff5c0e <initialize_pmic_i2c+0x52>
2fff5c76:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff5c7a:	e7c4      	b.n	2fff5c06 <initialize_pmic_i2c+0x4a>
2fff5c7c:	8831      	ldrh	r1, [r6, #0]
2fff5c7e:	2319      	movs	r3, #25
2fff5c80:	463a      	mov	r2, r7
2fff5c82:	4628      	mov	r0, r5
2fff5c84:	f7ff fbe6 	bl	2fff5454 <stm32_i2c_is_device_ready>
2fff5c88:	4604      	mov	r4, r0
2fff5c8a:	b918      	cbnz	r0, 2fff5c94 <initialize_pmic_i2c+0xd8>
2fff5c8c:	480c      	ldr	r0, [pc, #48]	; (2fff5cc0 <initialize_pmic_i2c+0x104>)
2fff5c8e:	f7fa ff77 	bl	2fff0b80 <tf_log>
2fff5c92:	e7bc      	b.n	2fff5c0e <initialize_pmic_i2c+0x52>
2fff5c94:	8831      	ldrh	r1, [r6, #0]
2fff5c96:	4628      	mov	r0, r5
2fff5c98:	f000 f9be 	bl	2fff6018 <stpmic1_bind_i2c>
2fff5c9c:	4620      	mov	r0, r4
2fff5c9e:	b011      	add	sp, #68	; 0x44
2fff5ca0:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff5ca2:	2400      	movs	r4, #0
2fff5ca4:	e7fa      	b.n	2fff5c9c <initialize_pmic_i2c+0xe0>
2fff5ca6:	bf00      	nop
2fff5ca8:	2fffb534 	.word	0x2fffb534
2fff5cac:	2fff8b39 	.word	0x2fff8b39
2fff5cb0:	2fffcf90 	.word	0x2fffcf90
2fff5cb4:	2fffa1d9 	.word	0x2fffa1d9
2fff5cb8:	2fffcf6c 	.word	0x2fffcf6c
2fff5cbc:	2fffa1f7 	.word	0x2fffa1f7
2fff5cc0:	2fffa217 	.word	0x2fffa217

2fff5cc4 <initialize_pmic>:
2fff5cc4:	b510      	push	{r4, lr}
2fff5cc6:	f7ff ff79 	bl	2fff5bbc <initialize_pmic_i2c>
2fff5cca:	4c0a      	ldr	r4, [pc, #40]	; (2fff5cf4 <initialize_pmic+0x30>)
2fff5ccc:	b928      	cbnz	r0, 2fff5cda <initialize_pmic+0x16>
2fff5cce:	6820      	ldr	r0, [r4, #0]
2fff5cd0:	b178      	cbz	r0, 2fff5cf2 <initialize_pmic+0x2e>
2fff5cd2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff5cd6:	f7f8 bfa5 	b.w	2ffeec24 <stm32mp_register_non_secure_periph_iomem>
2fff5cda:	f7ff ff13 	bl	2fff5b04 <dt_pmic_status>
2fff5cde:	2802      	cmp	r0, #2
2fff5ce0:	d1f5      	bne.n	2fff5cce <initialize_pmic+0xa>
2fff5ce2:	e9d4 0300 	ldrd	r0, r3, [r4]
2fff5ce6:	2b02      	cmp	r3, #2
2fff5ce8:	d1f1      	bne.n	2fff5cce <initialize_pmic+0xa>
2fff5cea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff5cee:	f7f8 bf96 	b.w	2ffeec1e <stm32mp_register_secure_periph_iomem>
2fff5cf2:	bd10      	pop	{r4, pc}
2fff5cf4:	2fffcf6c 	.word	0x2fffcf6c

2fff5cf8 <get_regulator_data>:
2fff5cf8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff5cfc:	4680      	mov	r8, r0
2fff5cfe:	4c0b      	ldr	r4, [pc, #44]	; (2fff5d2c <get_regulator_data+0x34>)
2fff5d00:	2500      	movs	r5, #0
2fff5d02:	012e      	lsls	r6, r5, #4
2fff5d04:	5937      	ldr	r7, [r6, r4]
2fff5d06:	4638      	mov	r0, r7
2fff5d08:	f002 f9f8 	bl	2fff80fc <strlen>
2fff5d0c:	4602      	mov	r2, r0
2fff5d0e:	4639      	mov	r1, r7
2fff5d10:	4640      	mov	r0, r8
2fff5d12:	f002 f9fb 	bl	2fff810c <strncmp>
2fff5d16:	b130      	cbz	r0, 2fff5d26 <get_regulator_data+0x2e>
2fff5d18:	3501      	adds	r5, #1
2fff5d1a:	2d0e      	cmp	r5, #14
2fff5d1c:	d1f1      	bne.n	2fff5d02 <get_regulator_data+0xa>
2fff5d1e:	f7fa ffd1 	bl	2fff0cc4 <console_flush>
2fff5d22:	f001 e806 	blx	2fff6d30 <do_panic>
2fff5d26:	19a0      	adds	r0, r4, r6
2fff5d28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff5d2c:	2fffa5cc 	.word	0x2fffa5cc

2fff5d30 <voltage_to_index>:
2fff5d30:	b538      	push	{r3, r4, r5, lr}
2fff5d32:	460d      	mov	r5, r1
2fff5d34:	f7ff ffe0 	bl	2fff5cf8 <get_regulator_data>
2fff5d38:	7a04      	ldrb	r4, [r0, #8]
2fff5d3a:	2300      	movs	r3, #0
2fff5d3c:	b2da      	uxtb	r2, r3
2fff5d3e:	4294      	cmp	r4, r2
2fff5d40:	d803      	bhi.n	2fff5d4a <voltage_to_index+0x1a>
2fff5d42:	f7fa ffbf 	bl	2fff0cc4 <console_flush>
2fff5d46:	f000 eff4 	blx	2fff6d30 <do_panic>
2fff5d4a:	6841      	ldr	r1, [r0, #4]
2fff5d4c:	f831 1013 	ldrh.w	r1, [r1, r3, lsl #1]
2fff5d50:	3301      	adds	r3, #1
2fff5d52:	42a9      	cmp	r1, r5
2fff5d54:	d1f2      	bne.n	2fff5d3c <voltage_to_index+0xc>
2fff5d56:	4610      	mov	r0, r2
2fff5d58:	bd38      	pop	{r3, r4, r5, pc}
	...

2fff5d5c <stpmic1_register_read>:
2fff5d5c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
2fff5d5e:	4602      	mov	r2, r0
2fff5d60:	4b06      	ldr	r3, [pc, #24]	; (2fff5d7c <stpmic1_register_read+0x20>)
2fff5d62:	4807      	ldr	r0, [pc, #28]	; (2fff5d80 <stpmic1_register_read+0x24>)
2fff5d64:	881c      	ldrh	r4, [r3, #0]
2fff5d66:	2319      	movs	r3, #25
2fff5d68:	9302      	str	r3, [sp, #8]
2fff5d6a:	2301      	movs	r3, #1
2fff5d6c:	e9cd 1300 	strd	r1, r3, [sp]
2fff5d70:	6800      	ldr	r0, [r0, #0]
2fff5d72:	4621      	mov	r1, r4
2fff5d74:	f7ff fb64 	bl	2fff5440 <stm32_i2c_mem_read>
2fff5d78:	b004      	add	sp, #16
2fff5d7a:	bd10      	pop	{r4, pc}
2fff5d7c:	2fffcf94 	.word	0x2fffcf94
2fff5d80:	2fffcf98 	.word	0x2fffcf98

2fff5d84 <stpmic1_is_regulator_enabled>:
2fff5d84:	b507      	push	{r0, r1, r2, lr}
2fff5d86:	f7ff ffb7 	bl	2fff5cf8 <get_regulator_data>
2fff5d8a:	7a40      	ldrb	r0, [r0, #9]
2fff5d8c:	f10d 0107 	add.w	r1, sp, #7
2fff5d90:	f7ff ffe4 	bl	2fff5d5c <stpmic1_register_read>
2fff5d94:	b118      	cbz	r0, 2fff5d9e <stpmic1_is_regulator_enabled+0x1a>
2fff5d96:	f7fa ff95 	bl	2fff0cc4 <console_flush>
2fff5d9a:	f000 efca 	blx	2fff6d30 <do_panic>
2fff5d9e:	f89d 0007 	ldrb.w	r0, [sp, #7]
2fff5da2:	f000 0001 	and.w	r0, r0, #1
2fff5da6:	b003      	add	sp, #12
2fff5da8:	f85d fb04 	ldr.w	pc, [sp], #4

2fff5dac <stpmic1_regulator_voltage_get>:
2fff5dac:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff5dae:	4604      	mov	r4, r0
2fff5db0:	f7ff ffa2 	bl	2fff5cf8 <get_regulator_data>
2fff5db4:	4916      	ldr	r1, [pc, #88]	; (2fff5e10 <stpmic1_regulator_voltage_get+0x64>)
2fff5db6:	4605      	mov	r5, r0
2fff5db8:	2204      	movs	r2, #4
2fff5dba:	4620      	mov	r0, r4
2fff5dbc:	f002 f9a6 	bl	2fff810c <strncmp>
2fff5dc0:	b320      	cbz	r0, 2fff5e0c <stpmic1_regulator_voltage_get+0x60>
2fff5dc2:	4914      	ldr	r1, [pc, #80]	; (2fff5e14 <stpmic1_regulator_voltage_get+0x68>)
2fff5dc4:	2203      	movs	r2, #3
2fff5dc6:	4620      	mov	r0, r4
2fff5dc8:	f002 f9a0 	bl	2fff810c <strncmp>
2fff5dcc:	b110      	cbz	r0, 2fff5dd4 <stpmic1_regulator_voltage_get+0x28>
2fff5dce:	2000      	movs	r0, #0
2fff5dd0:	b003      	add	sp, #12
2fff5dd2:	bd30      	pop	{r4, r5, pc}
2fff5dd4:	4910      	ldr	r1, [pc, #64]	; (2fff5e18 <stpmic1_regulator_voltage_get+0x6c>)
2fff5dd6:	2204      	movs	r2, #4
2fff5dd8:	4620      	mov	r0, r4
2fff5dda:	f002 f997 	bl	2fff810c <strncmp>
2fff5dde:	2800      	cmp	r0, #0
2fff5de0:	d0f5      	beq.n	2fff5dce <stpmic1_regulator_voltage_get+0x22>
2fff5de2:	247c      	movs	r4, #124	; 0x7c
2fff5de4:	7a68      	ldrb	r0, [r5, #9]
2fff5de6:	f10d 0107 	add.w	r1, sp, #7
2fff5dea:	f7ff ffb7 	bl	2fff5d5c <stpmic1_register_read>
2fff5dee:	2800      	cmp	r0, #0
2fff5df0:	dbee      	blt.n	2fff5dd0 <stpmic1_regulator_voltage_get+0x24>
2fff5df2:	f89d 3007 	ldrb.w	r3, [sp, #7]
2fff5df6:	401c      	ands	r4, r3
2fff5df8:	7a2b      	ldrb	r3, [r5, #8]
2fff5dfa:	08a4      	lsrs	r4, r4, #2
2fff5dfc:	42a3      	cmp	r3, r4
2fff5dfe:	bf32      	itee	cc
2fff5e00:	f06f 0021 	mvncc.w	r0, #33	; 0x21
2fff5e04:	686b      	ldrcs	r3, [r5, #4]
2fff5e06:	f833 0014 	ldrhcs.w	r0, [r3, r4, lsl #1]
2fff5e0a:	e7e1      	b.n	2fff5dd0 <stpmic1_regulator_voltage_get+0x24>
2fff5e0c:	24fc      	movs	r4, #252	; 0xfc
2fff5e0e:	e7e9      	b.n	2fff5de4 <stpmic1_regulator_voltage_get+0x38>
2fff5e10:	2fffa6ac 	.word	0x2fffa6ac
2fff5e14:	2fffa6b1 	.word	0x2fffa6b1
2fff5e18:	2fffa6b5 	.word	0x2fffa6b5

2fff5e1c <stpmic1_register_write>:
2fff5e1c:	b510      	push	{r4, lr}
2fff5e1e:	b088      	sub	sp, #32
2fff5e20:	4b12      	ldr	r3, [pc, #72]	; (2fff5e6c <stpmic1_register_write+0x50>)
2fff5e22:	aa08      	add	r2, sp, #32
2fff5e24:	4604      	mov	r4, r0
2fff5e26:	f802 1d09 	strb.w	r1, [r2, #-9]!
2fff5e2a:	8819      	ldrh	r1, [r3, #0]
2fff5e2c:	2319      	movs	r3, #25
2fff5e2e:	9302      	str	r3, [sp, #8]
2fff5e30:	2301      	movs	r3, #1
2fff5e32:	e9cd 2300 	strd	r2, r3, [sp]
2fff5e36:	4602      	mov	r2, r0
2fff5e38:	480d      	ldr	r0, [pc, #52]	; (2fff5e70 <stpmic1_register_write+0x54>)
2fff5e3a:	6800      	ldr	r0, [r0, #0]
2fff5e3c:	f7ff faf2 	bl	2fff5424 <stm32_i2c_mem_write>
2fff5e40:	b988      	cbnz	r0, 2fff5e66 <stpmic1_register_write+0x4a>
2fff5e42:	2c1b      	cmp	r4, #27
2fff5e44:	d00f      	beq.n	2fff5e66 <stpmic1_register_write+0x4a>
2fff5e46:	2c40      	cmp	r4, #64	; 0x40
2fff5e48:	d80d      	bhi.n	2fff5e66 <stpmic1_register_write+0x4a>
2fff5e4a:	f10d 011f 	add.w	r1, sp, #31
2fff5e4e:	4620      	mov	r0, r4
2fff5e50:	f7ff ff84 	bl	2fff5d5c <stpmic1_register_read>
2fff5e54:	b938      	cbnz	r0, 2fff5e66 <stpmic1_register_write+0x4a>
2fff5e56:	f89d 201f 	ldrb.w	r2, [sp, #31]
2fff5e5a:	f89d 3017 	ldrb.w	r3, [sp, #23]
2fff5e5e:	429a      	cmp	r2, r3
2fff5e60:	bf18      	it	ne
2fff5e62:	f06f 0004 	mvnne.w	r0, #4
2fff5e66:	b008      	add	sp, #32
2fff5e68:	bd10      	pop	{r4, pc}
2fff5e6a:	bf00      	nop
2fff5e6c:	2fffcf94 	.word	0x2fffcf94
2fff5e70:	2fffcf98 	.word	0x2fffcf98

2fff5e74 <stpmic1_lp_copy_reg>:
2fff5e74:	b513      	push	{r0, r1, r4, lr}
2fff5e76:	f7ff ff3f 	bl	2fff5cf8 <get_regulator_data>
2fff5e7a:	4604      	mov	r4, r0
2fff5e7c:	7a80      	ldrb	r0, [r0, #10]
2fff5e7e:	b150      	cbz	r0, 2fff5e96 <stpmic1_lp_copy_reg+0x22>
2fff5e80:	7a60      	ldrb	r0, [r4, #9]
2fff5e82:	f10d 0107 	add.w	r1, sp, #7
2fff5e86:	f7ff ff69 	bl	2fff5d5c <stpmic1_register_read>
2fff5e8a:	b920      	cbnz	r0, 2fff5e96 <stpmic1_lp_copy_reg+0x22>
2fff5e8c:	f89d 1007 	ldrb.w	r1, [sp, #7]
2fff5e90:	7aa0      	ldrb	r0, [r4, #10]
2fff5e92:	f7ff ffc3 	bl	2fff5e1c <stpmic1_register_write>
2fff5e96:	b002      	add	sp, #8
2fff5e98:	bd10      	pop	{r4, pc}

2fff5e9a <stpmic1_register_update>:
2fff5e9a:	b573      	push	{r0, r1, r4, r5, r6, lr}
2fff5e9c:	460e      	mov	r6, r1
2fff5e9e:	f10d 0107 	add.w	r1, sp, #7
2fff5ea2:	4605      	mov	r5, r0
2fff5ea4:	4614      	mov	r4, r2
2fff5ea6:	f7ff ff59 	bl	2fff5d5c <stpmic1_register_read>
2fff5eaa:	b950      	cbnz	r0, 2fff5ec2 <stpmic1_register_update+0x28>
2fff5eac:	f89d 1007 	ldrb.w	r1, [sp, #7]
2fff5eb0:	4628      	mov	r0, r5
2fff5eb2:	ea21 0104 	bic.w	r1, r1, r4
2fff5eb6:	4034      	ands	r4, r6
2fff5eb8:	4321      	orrs	r1, r4
2fff5eba:	f88d 1007 	strb.w	r1, [sp, #7]
2fff5ebe:	f7ff ffad 	bl	2fff5e1c <stpmic1_register_write>
2fff5ec2:	b002      	add	sp, #8
2fff5ec4:	bd70      	pop	{r4, r5, r6, pc}

2fff5ec6 <stpmic1_powerctrl_on>:
2fff5ec6:	2204      	movs	r2, #4
2fff5ec8:	2010      	movs	r0, #16
2fff5eca:	4611      	mov	r1, r2
2fff5ecc:	f7ff bfe5 	b.w	2fff5e9a <stpmic1_register_update>

2fff5ed0 <stpmic1_switch_off>:
2fff5ed0:	2201      	movs	r2, #1
2fff5ed2:	2010      	movs	r0, #16
2fff5ed4:	4611      	mov	r1, r2
2fff5ed6:	f7ff bfe0 	b.w	2fff5e9a <stpmic1_register_update>

2fff5eda <stpmic1_regulator_enable>:
2fff5eda:	b508      	push	{r3, lr}
2fff5edc:	f7ff ff0c 	bl	2fff5cf8 <get_regulator_data>
2fff5ee0:	7a40      	ldrb	r0, [r0, #9]
2fff5ee2:	2201      	movs	r2, #1
2fff5ee4:	4611      	mov	r1, r2
2fff5ee6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff5eea:	f7ff bfd6 	b.w	2fff5e9a <stpmic1_register_update>
	...

2fff5ef0 <stpmic1_regulator_voltage_set>:
2fff5ef0:	b570      	push	{r4, r5, r6, lr}
2fff5ef2:	4604      	mov	r4, r0
2fff5ef4:	f7ff ff1c 	bl	2fff5d30 <voltage_to_index>
2fff5ef8:	4605      	mov	r5, r0
2fff5efa:	4620      	mov	r0, r4
2fff5efc:	f7ff fefc 	bl	2fff5cf8 <get_regulator_data>
2fff5f00:	490f      	ldr	r1, [pc, #60]	; (2fff5f40 <stpmic1_regulator_voltage_set+0x50>)
2fff5f02:	4606      	mov	r6, r0
2fff5f04:	2204      	movs	r2, #4
2fff5f06:	4620      	mov	r0, r4
2fff5f08:	f002 f900 	bl	2fff810c <strncmp>
2fff5f0c:	b1a0      	cbz	r0, 2fff5f38 <stpmic1_regulator_voltage_set+0x48>
2fff5f0e:	490d      	ldr	r1, [pc, #52]	; (2fff5f44 <stpmic1_regulator_voltage_set+0x54>)
2fff5f10:	2203      	movs	r2, #3
2fff5f12:	4620      	mov	r0, r4
2fff5f14:	f002 f8fa 	bl	2fff810c <strncmp>
2fff5f18:	b980      	cbnz	r0, 2fff5f3c <stpmic1_regulator_voltage_set+0x4c>
2fff5f1a:	490b      	ldr	r1, [pc, #44]	; (2fff5f48 <stpmic1_regulator_voltage_set+0x58>)
2fff5f1c:	2204      	movs	r2, #4
2fff5f1e:	4620      	mov	r0, r4
2fff5f20:	f002 f8f4 	bl	2fff810c <strncmp>
2fff5f24:	b150      	cbz	r0, 2fff5f3c <stpmic1_regulator_voltage_set+0x4c>
2fff5f26:	227c      	movs	r2, #124	; 0x7c
2fff5f28:	00a9      	lsls	r1, r5, #2
2fff5f2a:	7a70      	ldrb	r0, [r6, #9]
2fff5f2c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
2fff5f30:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff5f34:	f7ff bfb1 	b.w	2fff5e9a <stpmic1_register_update>
2fff5f38:	22fc      	movs	r2, #252	; 0xfc
2fff5f3a:	e7f5      	b.n	2fff5f28 <stpmic1_regulator_voltage_set+0x38>
2fff5f3c:	2000      	movs	r0, #0
2fff5f3e:	bd70      	pop	{r4, r5, r6, pc}
2fff5f40:	2fffa6ac 	.word	0x2fffa6ac
2fff5f44:	2fffa6b1 	.word	0x2fffa6b1
2fff5f48:	2fffa6b5 	.word	0x2fffa6b5

2fff5f4c <stpmic1_regulator_pull_down_set>:
2fff5f4c:	b508      	push	{r3, lr}
2fff5f4e:	f7ff fed3 	bl	2fff5cf8 <get_regulator_data>
2fff5f52:	4603      	mov	r3, r0
2fff5f54:	7ac0      	ldrb	r0, [r0, #11]
2fff5f56:	b150      	cbz	r0, 2fff5f6e <stpmic1_regulator_pull_down_set+0x22>
2fff5f58:	7b1b      	ldrb	r3, [r3, #12]
2fff5f5a:	2203      	movs	r2, #3
2fff5f5c:	2101      	movs	r1, #1
2fff5f5e:	409a      	lsls	r2, r3
2fff5f60:	4099      	lsls	r1, r3
2fff5f62:	b2d2      	uxtb	r2, r2
2fff5f64:	b2c9      	uxtb	r1, r1
2fff5f66:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff5f6a:	f7ff bf96 	b.w	2fff5e9a <stpmic1_register_update>
2fff5f6e:	bd08      	pop	{r3, pc}

2fff5f70 <stpmic1_regulator_mask_reset_set>:
2fff5f70:	b508      	push	{r3, lr}
2fff5f72:	f7ff fec1 	bl	2fff5cf8 <get_regulator_data>
2fff5f76:	7b83      	ldrb	r3, [r0, #14]
2fff5f78:	2201      	movs	r2, #1
2fff5f7a:	7b40      	ldrb	r0, [r0, #13]
2fff5f7c:	409a      	lsls	r2, r3
2fff5f7e:	b2d2      	uxtb	r2, r2
2fff5f80:	4611      	mov	r1, r2
2fff5f82:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff5f86:	f7ff bf88 	b.w	2fff5e9a <stpmic1_register_update>

2fff5f8a <stpmic1_lp_reg_on_off>:
2fff5f8a:	b510      	push	{r4, lr}
2fff5f8c:	460c      	mov	r4, r1
2fff5f8e:	f7ff feb3 	bl	2fff5cf8 <get_regulator_data>
2fff5f92:	7a80      	ldrb	r0, [r0, #10]
2fff5f94:	4621      	mov	r1, r4
2fff5f96:	2201      	movs	r2, #1
2fff5f98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff5f9c:	f7ff bf7d 	b.w	2fff5e9a <stpmic1_register_update>

2fff5fa0 <stpmic1_lp_set_mode>:
2fff5fa0:	b510      	push	{r4, lr}
2fff5fa2:	460c      	mov	r4, r1
2fff5fa4:	f7ff fea8 	bl	2fff5cf8 <get_regulator_data>
2fff5fa8:	0061      	lsls	r1, r4, #1
2fff5faa:	2202      	movs	r2, #2
2fff5fac:	7a80      	ldrb	r0, [r0, #10]
2fff5fae:	f001 01fe 	and.w	r1, r1, #254	; 0xfe
2fff5fb2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff5fb6:	f7ff bf70 	b.w	2fff5e9a <stpmic1_register_update>
	...

2fff5fbc <stpmic1_lp_set_voltage>:
2fff5fbc:	b570      	push	{r4, r5, r6, lr}
2fff5fbe:	4604      	mov	r4, r0
2fff5fc0:	f7ff feb6 	bl	2fff5d30 <voltage_to_index>
2fff5fc4:	4605      	mov	r5, r0
2fff5fc6:	4620      	mov	r0, r4
2fff5fc8:	f7ff fe96 	bl	2fff5cf8 <get_regulator_data>
2fff5fcc:	490f      	ldr	r1, [pc, #60]	; (2fff600c <stpmic1_lp_set_voltage+0x50>)
2fff5fce:	4606      	mov	r6, r0
2fff5fd0:	2204      	movs	r2, #4
2fff5fd2:	4620      	mov	r0, r4
2fff5fd4:	f002 f89a 	bl	2fff810c <strncmp>
2fff5fd8:	b1a0      	cbz	r0, 2fff6004 <stpmic1_lp_set_voltage+0x48>
2fff5fda:	490d      	ldr	r1, [pc, #52]	; (2fff6010 <stpmic1_lp_set_voltage+0x54>)
2fff5fdc:	2203      	movs	r2, #3
2fff5fde:	4620      	mov	r0, r4
2fff5fe0:	f002 f894 	bl	2fff810c <strncmp>
2fff5fe4:	b980      	cbnz	r0, 2fff6008 <stpmic1_lp_set_voltage+0x4c>
2fff5fe6:	490b      	ldr	r1, [pc, #44]	; (2fff6014 <stpmic1_lp_set_voltage+0x58>)
2fff5fe8:	2204      	movs	r2, #4
2fff5fea:	4620      	mov	r0, r4
2fff5fec:	f002 f88e 	bl	2fff810c <strncmp>
2fff5ff0:	b150      	cbz	r0, 2fff6008 <stpmic1_lp_set_voltage+0x4c>
2fff5ff2:	227c      	movs	r2, #124	; 0x7c
2fff5ff4:	00a9      	lsls	r1, r5, #2
2fff5ff6:	7ab0      	ldrb	r0, [r6, #10]
2fff5ff8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
2fff5ffc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff6000:	f7ff bf4b 	b.w	2fff5e9a <stpmic1_register_update>
2fff6004:	22fc      	movs	r2, #252	; 0xfc
2fff6006:	e7f5      	b.n	2fff5ff4 <stpmic1_lp_set_voltage+0x38>
2fff6008:	2000      	movs	r0, #0
2fff600a:	bd70      	pop	{r4, r5, r6, pc}
2fff600c:	2fffa6ac 	.word	0x2fffa6ac
2fff6010:	2fffa6b1 	.word	0x2fffa6b1
2fff6014:	2fffa6b5 	.word	0x2fffa6b5

2fff6018 <stpmic1_bind_i2c>:
2fff6018:	4b02      	ldr	r3, [pc, #8]	; (2fff6024 <stpmic1_bind_i2c+0xc>)
2fff601a:	6018      	str	r0, [r3, #0]
2fff601c:	4b02      	ldr	r3, [pc, #8]	; (2fff6028 <stpmic1_bind_i2c+0x10>)
2fff601e:	8019      	strh	r1, [r3, #0]
2fff6020:	4770      	bx	lr
2fff6022:	bf00      	nop
2fff6024:	2fffcf98 	.word	0x2fffcf98
2fff6028:	2fffcf94 	.word	0x2fffcf94

2fff602c <stm32mp_reset_assert_to>:
2fff602c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff6030:	f000 031f 	and.w	r3, r0, #31
2fff6034:	9101      	str	r1, [sp, #4]
2fff6036:	4604      	mov	r4, r0
2fff6038:	2501      	movs	r5, #1
2fff603a:	0964      	lsrs	r4, r4, #5
2fff603c:	409d      	lsls	r5, r3
2fff603e:	f7fa ff5d 	bl	2fff0efc <stm32mp_rcc_base>
2fff6042:	9901      	ldr	r1, [sp, #4]
2fff6044:	4682      	mov	sl, r0
2fff6046:	eb00 0b84 	add.w	fp, r0, r4, lsl #2
2fff604a:	f840 5024 	str.w	r5, [r0, r4, lsl #2]
2fff604e:	b309      	cbz	r1, 2fff6094 <stm32mp_reset_assert_to+0x68>
2fff6050:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff6054:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff6058:	4a0f      	ldr	r2, [pc, #60]	; (2fff6098 <stm32mp_reset_assert_to+0x6c>)
2fff605a:	2300      	movs	r3, #0
2fff605c:	fba1 0100 	umull	r0, r1, r1, r0
2fff6060:	f001 e804 	blx	2fff706c <__aeabi_uldivmod>
2fff6064:	eb10 0806 	adds.w	r8, r0, r6
2fff6068:	eb41 0907 	adc.w	r9, r1, r7
2fff606c:	f8db 3000 	ldr.w	r3, [fp]
2fff6070:	421d      	tst	r5, r3
2fff6072:	d105      	bne.n	2fff6080 <stm32mp_reset_assert_to+0x54>
2fff6074:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff6078:	4599      	cmp	r9, r3
2fff607a:	bf08      	it	eq
2fff607c:	4590      	cmpeq	r8, r2
2fff607e:	d2f5      	bcs.n	2fff606c <stm32mp_reset_assert_to+0x40>
2fff6080:	f85a 3024 	ldr.w	r3, [sl, r4, lsl #2]
2fff6084:	421d      	tst	r5, r3
2fff6086:	bf14      	ite	ne
2fff6088:	2000      	movne	r0, #0
2fff608a:	f06f 003b 	mvneq.w	r0, #59	; 0x3b
2fff608e:	b003      	add	sp, #12
2fff6090:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff6094:	4608      	mov	r0, r1
2fff6096:	e7fa      	b.n	2fff608e <stm32mp_reset_assert_to+0x62>
2fff6098:	000f4240 	.word	0x000f4240

2fff609c <stm32mp_reset_deassert_to>:
2fff609c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff60a0:	4604      	mov	r4, r0
2fff60a2:	9101      	str	r1, [sp, #4]
2fff60a4:	f000 031f 	and.w	r3, r0, #31
2fff60a8:	0964      	lsrs	r4, r4, #5
2fff60aa:	2501      	movs	r5, #1
2fff60ac:	00a4      	lsls	r4, r4, #2
2fff60ae:	409d      	lsls	r5, r3
2fff60b0:	3404      	adds	r4, #4
2fff60b2:	f7fa ff23 	bl	2fff0efc <stm32mp_rcc_base>
2fff60b6:	9901      	ldr	r1, [sp, #4]
2fff60b8:	4682      	mov	sl, r0
2fff60ba:	eb04 0b00 	add.w	fp, r4, r0
2fff60be:	5025      	str	r5, [r4, r0]
2fff60c0:	b309      	cbz	r1, 2fff6106 <stm32mp_reset_deassert_to+0x6a>
2fff60c2:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff60c6:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff60ca:	4a10      	ldr	r2, [pc, #64]	; (2fff610c <stm32mp_reset_deassert_to+0x70>)
2fff60cc:	2300      	movs	r3, #0
2fff60ce:	fba1 0100 	umull	r0, r1, r1, r0
2fff60d2:	f000 efcc 	blx	2fff706c <__aeabi_uldivmod>
2fff60d6:	eb10 0806 	adds.w	r8, r0, r6
2fff60da:	eb41 0907 	adc.w	r9, r1, r7
2fff60de:	f8db 3000 	ldr.w	r3, [fp]
2fff60e2:	421d      	tst	r5, r3
2fff60e4:	d005      	beq.n	2fff60f2 <stm32mp_reset_deassert_to+0x56>
2fff60e6:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff60ea:	4599      	cmp	r9, r3
2fff60ec:	bf08      	it	eq
2fff60ee:	4590      	cmpeq	r8, r2
2fff60f0:	d2f5      	bcs.n	2fff60de <stm32mp_reset_deassert_to+0x42>
2fff60f2:	f854 300a 	ldr.w	r3, [r4, sl]
2fff60f6:	421d      	tst	r5, r3
2fff60f8:	bf0c      	ite	eq
2fff60fa:	2000      	moveq	r0, #0
2fff60fc:	f06f 003b 	mvnne.w	r0, #59	; 0x3b
2fff6100:	b003      	add	sp, #12
2fff6102:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff6106:	4608      	mov	r0, r1
2fff6108:	e7fa      	b.n	2fff6100 <stm32mp_reset_deassert_to+0x64>
2fff610a:	bf00      	nop
2fff610c:	000f4240 	.word	0x000f4240

2fff6110 <stm32mp_reset_assert_deassert_to_mcu>:
2fff6110:	b510      	push	{r4, lr}
2fff6112:	4604      	mov	r4, r0
2fff6114:	f7fa fef2 	bl	2fff0efc <stm32mp_rcc_base>
2fff6118:	f8d0 310c 	ldr.w	r3, [r0, #268]	; 0x10c
2fff611c:	b124      	cbz	r4, 2fff6128 <stm32mp_reset_assert_deassert_to_mcu+0x18>
2fff611e:	f023 0301 	bic.w	r3, r3, #1
2fff6122:	f8c0 310c 	str.w	r3, [r0, #268]	; 0x10c
2fff6126:	bd10      	pop	{r4, pc}
2fff6128:	f043 0301 	orr.w	r3, r3, #1
2fff612c:	e7f9      	b.n	2fff6122 <stm32mp_reset_assert_deassert_to_mcu+0x12>

2fff612e <fdt32_to_cpu>:
2fff612e:	ba00      	rev	r0, r0
2fff6130:	4770      	bx	lr
	...

2fff6134 <fdt_get_node_parent_address_cells>:
2fff6134:	4601      	mov	r1, r0
2fff6136:	b508      	push	{r3, lr}
2fff6138:	4806      	ldr	r0, [pc, #24]	; (2fff6154 <fdt_get_node_parent_address_cells+0x20>)
2fff613a:	f001 fd7a 	bl	2fff7c32 <fdt_parent_offset>
2fff613e:	1e01      	subs	r1, r0, #0
2fff6140:	db04      	blt.n	2fff614c <fdt_get_node_parent_address_cells+0x18>
2fff6142:	4804      	ldr	r0, [pc, #16]	; (2fff6154 <fdt_get_node_parent_address_cells+0x20>)
2fff6144:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff6148:	f001 bb3a 	b.w	2fff77c0 <fdt_address_cells>
2fff614c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff6150:	bd08      	pop	{r3, pc}
2fff6152:	bf00      	nop
2fff6154:	2ffca000 	.word	0x2ffca000

2fff6158 <dt_get_stdout_node_offset>:
2fff6158:	4919      	ldr	r1, [pc, #100]	; (2fff61c0 <dt_get_stdout_node_offset+0x68>)
2fff615a:	b570      	push	{r4, r5, r6, lr}
2fff615c:	4819      	ldr	r0, [pc, #100]	; (2fff61c4 <dt_get_stdout_node_offset+0x6c>)
2fff615e:	f001 fd13 	bl	2fff7b88 <fdt_path_offset>
2fff6162:	1e01      	subs	r1, r0, #0
2fff6164:	da05      	bge.n	2fff6172 <dt_get_stdout_node_offset+0x1a>
2fff6166:	4918      	ldr	r1, [pc, #96]	; (2fff61c8 <dt_get_stdout_node_offset+0x70>)
2fff6168:	4816      	ldr	r0, [pc, #88]	; (2fff61c4 <dt_get_stdout_node_offset+0x6c>)
2fff616a:	f001 fd0d 	bl	2fff7b88 <fdt_path_offset>
2fff616e:	1e01      	subs	r1, r0, #0
2fff6170:	db23      	blt.n	2fff61ba <dt_get_stdout_node_offset+0x62>
2fff6172:	4a16      	ldr	r2, [pc, #88]	; (2fff61cc <dt_get_stdout_node_offset+0x74>)
2fff6174:	2300      	movs	r3, #0
2fff6176:	4813      	ldr	r0, [pc, #76]	; (2fff61c4 <dt_get_stdout_node_offset+0x6c>)
2fff6178:	f001 fc79 	bl	2fff7a6e <fdt_getprop>
2fff617c:	4605      	mov	r5, r0
2fff617e:	b1e0      	cbz	r0, 2fff61ba <dt_get_stdout_node_offset+0x62>
2fff6180:	213a      	movs	r1, #58	; 0x3a
2fff6182:	f001 ff89 	bl	2fff8098 <strchr>
2fff6186:	b9a8      	cbnz	r0, 2fff61b4 <dt_get_stdout_node_offset+0x5c>
2fff6188:	4629      	mov	r1, r5
2fff618a:	e00e      	b.n	2fff61aa <dt_get_stdout_node_offset+0x52>
2fff618c:	3401      	adds	r4, #1
2fff618e:	1929      	adds	r1, r5, r4
2fff6190:	2201      	movs	r2, #1
2fff6192:	4630      	mov	r0, r6
2fff6194:	f001 ffba 	bl	2fff810c <strncmp>
2fff6198:	2800      	cmp	r0, #0
2fff619a:	d1f7      	bne.n	2fff618c <dt_get_stdout_node_offset+0x34>
2fff619c:	4809      	ldr	r0, [pc, #36]	; (2fff61c4 <dt_get_stdout_node_offset+0x6c>)
2fff619e:	4629      	mov	r1, r5
2fff61a0:	4622      	mov	r2, r4
2fff61a2:	f001 fc97 	bl	2fff7ad4 <fdt_get_alias_namelen>
2fff61a6:	4601      	mov	r1, r0
2fff61a8:	b138      	cbz	r0, 2fff61ba <dt_get_stdout_node_offset+0x62>
2fff61aa:	4806      	ldr	r0, [pc, #24]	; (2fff61c4 <dt_get_stdout_node_offset+0x6c>)
2fff61ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff61b0:	f001 bcea 	b.w	2fff7b88 <fdt_path_offset>
2fff61b4:	4e06      	ldr	r6, [pc, #24]	; (2fff61d0 <dt_get_stdout_node_offset+0x78>)
2fff61b6:	2400      	movs	r4, #0
2fff61b8:	e7e9      	b.n	2fff618e <dt_get_stdout_node_offset+0x36>
2fff61ba:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff61be:	bd70      	pop	{r4, r5, r6, pc}
2fff61c0:	2fffa79c 	.word	0x2fffa79c
2fff61c4:	2ffca000 	.word	0x2ffca000
2fff61c8:	2fffa7ab 	.word	0x2fffa7ab
2fff61cc:	2fffa7b3 	.word	0x2fffa7b3
2fff61d0:	2fffa7bf 	.word	0x2fffa7bf

2fff61d4 <dt_get_opp_freqvolt_from_subnode>:
2fff61d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2fff61d8:	4605      	mov	r5, r0
2fff61da:	460f      	mov	r7, r1
2fff61dc:	4616      	mov	r6, r2
2fff61de:	4a2d      	ldr	r2, [pc, #180]	; (2fff6294 <dt_get_opp_freqvolt_from_subnode+0xc0>)
2fff61e0:	4601      	mov	r1, r0
2fff61e2:	482d      	ldr	r0, [pc, #180]	; (2fff6298 <dt_get_opp_freqvolt_from_subnode+0xc4>)
2fff61e4:	2300      	movs	r3, #0
2fff61e6:	f001 fc42 	bl	2fff7a6e <fdt_getprop>
2fff61ea:	b948      	cbnz	r0, 2fff6200 <dt_get_opp_freqvolt_from_subnode+0x2c>
2fff61ec:	4a2b      	ldr	r2, [pc, #172]	; (2fff629c <dt_get_opp_freqvolt_from_subnode+0xc8>)
2fff61ee:	2300      	movs	r3, #0
2fff61f0:	4829      	ldr	r0, [pc, #164]	; (2fff6298 <dt_get_opp_freqvolt_from_subnode+0xc4>)
2fff61f2:	4629      	mov	r1, r5
2fff61f4:	f001 fc3b 	bl	2fff7a6e <fdt_getprop>
2fff61f8:	b968      	cbnz	r0, 2fff6216 <dt_get_opp_freqvolt_from_subnode+0x42>
2fff61fa:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff61fe:	e008      	b.n	2fff6212 <dt_get_opp_freqvolt_from_subnode+0x3e>
2fff6200:	6800      	ldr	r0, [r0, #0]
2fff6202:	f7ff ff94 	bl	2fff612e <fdt32_to_cpu>
2fff6206:	f7fa ff9b 	bl	2fff1140 <stm32mp_supports_cpu_opp>
2fff620a:	2800      	cmp	r0, #0
2fff620c:	d1ee      	bne.n	2fff61ec <dt_get_opp_freqvolt_from_subnode+0x18>
2fff620e:	f06f 000e 	mvn.w	r0, #14
2fff6212:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2fff6216:	e9d0 c300 	ldrd	ip, r3, [r0]
2fff621a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
2fff621e:	f3c3 2007 	ubfx	r0, r3, #8, #8
2fff6222:	ea4f 6e13 	mov.w	lr, r3, lsr #24
2fff6226:	b2c0      	uxtb	r0, r0
2fff6228:	ea4f 240c 	mov.w	r4, ip, lsl #8
2fff622c:	ea4f 211c 	mov.w	r1, ip, lsr #8
2fff6230:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
2fff6234:	ea4e 6e03 	orr.w	lr, lr, r3, lsl #24
2fff6238:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
2fff623c:	f3c3 4307 	ubfx	r3, r3, #16, #8
2fff6240:	ea4e 4e00 	orr.w	lr, lr, r0, lsl #16
2fff6244:	b2d8      	uxtb	r0, r3
2fff6246:	ea44 640c 	orr.w	r4, r4, ip, lsl #24
2fff624a:	2300      	movs	r3, #0
2fff624c:	430c      	orrs	r4, r1
2fff624e:	ea4e 2000 	orr.w	r0, lr, r0, lsl #8
2fff6252:	ea44 611c 	orr.w	r1, r4, ip, lsr #24
2fff6256:	f000 ef0a 	blx	2fff706c <__aeabi_uldivmod>
2fff625a:	2901      	cmp	r1, #1
2fff625c:	4680      	mov	r8, r0
2fff625e:	bf08      	it	eq
2fff6260:	2800      	cmpeq	r0, #0
2fff6262:	d2d4      	bcs.n	2fff620e <dt_get_opp_freqvolt_from_subnode+0x3a>
2fff6264:	4a0e      	ldr	r2, [pc, #56]	; (2fff62a0 <dt_get_opp_freqvolt_from_subnode+0xcc>)
2fff6266:	2300      	movs	r3, #0
2fff6268:	480b      	ldr	r0, [pc, #44]	; (2fff6298 <dt_get_opp_freqvolt_from_subnode+0xc4>)
2fff626a:	4629      	mov	r1, r5
2fff626c:	f001 fbff 	bl	2fff7a6e <fdt_getprop>
2fff6270:	2800      	cmp	r0, #0
2fff6272:	d0c2      	beq.n	2fff61fa <dt_get_opp_freqvolt_from_subnode+0x26>
2fff6274:	6800      	ldr	r0, [r0, #0]
2fff6276:	f7ff ff5a 	bl	2fff612e <fdt32_to_cpu>
2fff627a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2fff627e:	fbb0 f0f3 	udiv	r0, r0, r3
2fff6282:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
2fff6286:	d2c2      	bcs.n	2fff620e <dt_get_opp_freqvolt_from_subnode+0x3a>
2fff6288:	f8c7 8000 	str.w	r8, [r7]
2fff628c:	6030      	str	r0, [r6, #0]
2fff628e:	2000      	movs	r0, #0
2fff6290:	e7bf      	b.n	2fff6212 <dt_get_opp_freqvolt_from_subnode+0x3e>
2fff6292:	bf00      	nop
2fff6294:	2fffa776 	.word	0x2fffa776
2fff6298:	2ffca000 	.word	0x2ffca000
2fff629c:	2fffa787 	.word	0x2fffa787
2fff62a0:	2fffa78e 	.word	0x2fffa78e

2fff62a4 <dt_open_and_check>:
2fff62a4:	b508      	push	{r3, lr}
2fff62a6:	4804      	ldr	r0, [pc, #16]	; (2fff62b8 <dt_open_and_check+0x14>)
2fff62a8:	f001 f954 	bl	2fff7554 <fdt_check_header>
2fff62ac:	b910      	cbnz	r0, 2fff62b4 <dt_open_and_check+0x10>
2fff62ae:	4b03      	ldr	r3, [pc, #12]	; (2fff62bc <dt_open_and_check+0x18>)
2fff62b0:	2201      	movs	r2, #1
2fff62b2:	601a      	str	r2, [r3, #0]
2fff62b4:	bd08      	pop	{r3, pc}
2fff62b6:	bf00      	nop
2fff62b8:	2ffca000 	.word	0x2ffca000
2fff62bc:	2fffcf9c 	.word	0x2fffcf9c

2fff62c0 <fdt_get_address>:
2fff62c0:	4b03      	ldr	r3, [pc, #12]	; (2fff62d0 <fdt_get_address+0x10>)
2fff62c2:	681b      	ldr	r3, [r3, #0]
2fff62c4:	2b01      	cmp	r3, #1
2fff62c6:	bf04      	itt	eq
2fff62c8:	4a02      	ldreq	r2, [pc, #8]	; (2fff62d4 <fdt_get_address+0x14>)
2fff62ca:	6002      	streq	r2, [r0, #0]
2fff62cc:	4618      	mov	r0, r3
2fff62ce:	4770      	bx	lr
2fff62d0:	2fffcf9c 	.word	0x2fffcf9c
2fff62d4:	2ffca000 	.word	0x2ffca000

2fff62d8 <fdt_get_status>:
2fff62d8:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff62da:	4605      	mov	r5, r0
2fff62dc:	4a13      	ldr	r2, [pc, #76]	; (2fff632c <fdt_get_status+0x54>)
2fff62de:	4601      	mov	r1, r0
2fff62e0:	4813      	ldr	r0, [pc, #76]	; (2fff6330 <fdt_get_status+0x58>)
2fff62e2:	ab01      	add	r3, sp, #4
2fff62e4:	f001 fbc3 	bl	2fff7a6e <fdt_getprop>
2fff62e8:	b198      	cbz	r0, 2fff6312 <fdt_get_status+0x3a>
2fff62ea:	9a01      	ldr	r2, [sp, #4]
2fff62ec:	4911      	ldr	r1, [pc, #68]	; (2fff6334 <fdt_get_status+0x5c>)
2fff62ee:	f001 ff0d 	bl	2fff810c <strncmp>
2fff62f2:	fab0 f480 	clz	r4, r0
2fff62f6:	0964      	lsrs	r4, r4, #5
2fff62f8:	4a0f      	ldr	r2, [pc, #60]	; (2fff6338 <fdt_get_status+0x60>)
2fff62fa:	ab01      	add	r3, sp, #4
2fff62fc:	480c      	ldr	r0, [pc, #48]	; (2fff6330 <fdt_get_status+0x58>)
2fff62fe:	4629      	mov	r1, r5
2fff6300:	f001 fbb5 	bl	2fff7a6e <fdt_getprop>
2fff6304:	b938      	cbnz	r0, 2fff6316 <fdt_get_status+0x3e>
2fff6306:	2c01      	cmp	r4, #1
2fff6308:	bf08      	it	eq
2fff630a:	2403      	moveq	r4, #3
2fff630c:	4620      	mov	r0, r4
2fff630e:	b003      	add	sp, #12
2fff6310:	bd30      	pop	{r4, r5, pc}
2fff6312:	2401      	movs	r4, #1
2fff6314:	e7f0      	b.n	2fff62f8 <fdt_get_status+0x20>
2fff6316:	9a01      	ldr	r2, [sp, #4]
2fff6318:	4906      	ldr	r1, [pc, #24]	; (2fff6334 <fdt_get_status+0x5c>)
2fff631a:	f001 fef7 	bl	2fff810c <strncmp>
2fff631e:	2800      	cmp	r0, #0
2fff6320:	d1f4      	bne.n	2fff630c <fdt_get_status+0x34>
2fff6322:	f044 0402 	orr.w	r4, r4, #2
2fff6326:	b2e4      	uxtb	r4, r4
2fff6328:	e7f0      	b.n	2fff630c <fdt_get_status+0x34>
2fff632a:	bf00      	nop
2fff632c:	2fffa84a 	.word	0x2fffa84a
2fff6330:	2ffca000 	.word	0x2ffca000
2fff6334:	2fffa83e 	.word	0x2fffa83e
2fff6338:	2fffa843 	.word	0x2fffa843

2fff633c <fdt_get_interrupt>:
2fff633c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff633e:	461f      	mov	r7, r3
2fff6340:	4616      	mov	r6, r2
2fff6342:	4605      	mov	r5, r0
2fff6344:	460c      	mov	r4, r1
2fff6346:	f7ff ffc7 	bl	2fff62d8 <fdt_get_status>
2fff634a:	2802      	cmp	r0, #2
2fff634c:	f04f 0300 	mov.w	r3, #0
2fff6350:	703b      	strb	r3, [r7, #0]
2fff6352:	4633      	mov	r3, r6
2fff6354:	d116      	bne.n	2fff6384 <fdt_get_interrupt+0x48>
2fff6356:	4a0c      	ldr	r2, [pc, #48]	; (2fff6388 <fdt_get_interrupt+0x4c>)
2fff6358:	4629      	mov	r1, r5
2fff635a:	480c      	ldr	r0, [pc, #48]	; (2fff638c <fdt_get_interrupt+0x50>)
2fff635c:	f001 fb87 	bl	2fff7a6e <fdt_getprop>
2fff6360:	6020      	str	r0, [r4, #0]
2fff6362:	b938      	cbnz	r0, 2fff6374 <fdt_get_interrupt+0x38>
2fff6364:	4a0a      	ldr	r2, [pc, #40]	; (2fff6390 <fdt_get_interrupt+0x54>)
2fff6366:	4633      	mov	r3, r6
2fff6368:	4808      	ldr	r0, [pc, #32]	; (2fff638c <fdt_get_interrupt+0x50>)
2fff636a:	4629      	mov	r1, r5
2fff636c:	f001 fb7f 	bl	2fff7a6e <fdt_getprop>
2fff6370:	6020      	str	r0, [r4, #0]
2fff6372:	e001      	b.n	2fff6378 <fdt_get_interrupt+0x3c>
2fff6374:	2301      	movs	r3, #1
2fff6376:	703b      	strb	r3, [r7, #0]
2fff6378:	6820      	ldr	r0, [r4, #0]
2fff637a:	fab0 f080 	clz	r0, r0
2fff637e:	0940      	lsrs	r0, r0, #5
2fff6380:	4240      	negs	r0, r0
2fff6382:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff6384:	4a03      	ldr	r2, [pc, #12]	; (2fff6394 <fdt_get_interrupt+0x58>)
2fff6386:	e7ef      	b.n	2fff6368 <fdt_get_interrupt+0x2c>
2fff6388:	2fffa7f2 	.word	0x2fffa7f2
2fff638c:	2ffca000 	.word	0x2ffca000
2fff6390:	2fffa80d 	.word	0x2fffa80d
2fff6394:	2fffa806 	.word	0x2fffa806

2fff6398 <fdt_read_uint32_default>:
2fff6398:	b513      	push	{r0, r1, r4, lr}
2fff639a:	4614      	mov	r4, r2
2fff639c:	ab01      	add	r3, sp, #4
2fff639e:	460a      	mov	r2, r1
2fff63a0:	4601      	mov	r1, r0
2fff63a2:	4806      	ldr	r0, [pc, #24]	; (2fff63bc <fdt_read_uint32_default+0x24>)
2fff63a4:	f001 fb63 	bl	2fff7a6e <fdt_getprop>
2fff63a8:	b128      	cbz	r0, 2fff63b6 <fdt_read_uint32_default+0x1e>
2fff63aa:	6800      	ldr	r0, [r0, #0]
2fff63ac:	b002      	add	sp, #8
2fff63ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff63b2:	f7ff bebc 	b.w	2fff612e <fdt32_to_cpu>
2fff63b6:	4620      	mov	r0, r4
2fff63b8:	b002      	add	sp, #8
2fff63ba:	bd10      	pop	{r4, pc}
2fff63bc:	2ffca000 	.word	0x2ffca000

2fff63c0 <fdt_read_uint32_array>:
2fff63c0:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff63c2:	4615      	mov	r5, r2
2fff63c4:	461c      	mov	r4, r3
2fff63c6:	460a      	mov	r2, r1
2fff63c8:	ab01      	add	r3, sp, #4
2fff63ca:	4601      	mov	r1, r0
2fff63cc:	480d      	ldr	r0, [pc, #52]	; (2fff6404 <fdt_read_uint32_array+0x44>)
2fff63ce:	f001 fb4e 	bl	2fff7a6e <fdt_getprop>
2fff63d2:	b188      	cbz	r0, 2fff63f8 <fdt_read_uint32_array+0x38>
2fff63d4:	9a01      	ldr	r2, [sp, #4]
2fff63d6:	00a3      	lsls	r3, r4, #2
2fff63d8:	4293      	cmp	r3, r2
2fff63da:	d110      	bne.n	2fff63fe <fdt_read_uint32_array+0x3e>
2fff63dc:	442b      	add	r3, r5
2fff63de:	1f02      	subs	r2, r0, #4
2fff63e0:	429d      	cmp	r5, r3
2fff63e2:	d102      	bne.n	2fff63ea <fdt_read_uint32_array+0x2a>
2fff63e4:	2000      	movs	r0, #0
2fff63e6:	b003      	add	sp, #12
2fff63e8:	bd30      	pop	{r4, r5, pc}
2fff63ea:	f852 0f04 	ldr.w	r0, [r2, #4]!
2fff63ee:	f7ff fe9e 	bl	2fff612e <fdt32_to_cpu>
2fff63f2:	f845 0b04 	str.w	r0, [r5], #4
2fff63f6:	e7f3      	b.n	2fff63e0 <fdt_read_uint32_array+0x20>
2fff63f8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff63fc:	e7f3      	b.n	2fff63e6 <fdt_read_uint32_array+0x26>
2fff63fe:	f06f 000b 	mvn.w	r0, #11
2fff6402:	e7f0      	b.n	2fff63e6 <fdt_read_uint32_array+0x26>
2fff6404:	2ffca000 	.word	0x2ffca000

2fff6408 <dt_fill_device_info>:
2fff6408:	b538      	push	{r3, r4, r5, lr}
2fff640a:	4604      	mov	r4, r0
2fff640c:	4608      	mov	r0, r1
2fff640e:	460d      	mov	r5, r1
2fff6410:	f7ff fe90 	bl	2fff6134 <fdt_get_node_parent_address_cells>
2fff6414:	2801      	cmp	r0, #1
2fff6416:	d004      	beq.n	2fff6422 <dt_fill_device_info+0x1a>
2fff6418:	4819      	ldr	r0, [pc, #100]	; (2fff6480 <dt_fill_device_info+0x78>)
2fff641a:	f240 1149 	movw	r1, #329	; 0x149
2fff641e:	f001 fcc3 	bl	2fff7da8 <__assert>
2fff6422:	4a18      	ldr	r2, [pc, #96]	; (2fff6484 <dt_fill_device_info+0x7c>)
2fff6424:	2300      	movs	r3, #0
2fff6426:	4818      	ldr	r0, [pc, #96]	; (2fff6488 <dt_fill_device_info+0x80>)
2fff6428:	4629      	mov	r1, r5
2fff642a:	f001 fb20 	bl	2fff7a6e <fdt_getprop>
2fff642e:	b110      	cbz	r0, 2fff6436 <dt_fill_device_info+0x2e>
2fff6430:	6800      	ldr	r0, [r0, #0]
2fff6432:	f7ff fe7c 	bl	2fff612e <fdt32_to_cpu>
2fff6436:	6020      	str	r0, [r4, #0]
2fff6438:	2300      	movs	r3, #0
2fff643a:	4a14      	ldr	r2, [pc, #80]	; (2fff648c <dt_fill_device_info+0x84>)
2fff643c:	4629      	mov	r1, r5
2fff643e:	4812      	ldr	r0, [pc, #72]	; (2fff6488 <dt_fill_device_info+0x80>)
2fff6440:	f001 fb15 	bl	2fff7a6e <fdt_getprop>
2fff6444:	b198      	cbz	r0, 2fff646e <dt_fill_device_info+0x66>
2fff6446:	6840      	ldr	r0, [r0, #4]
2fff6448:	f7ff fe71 	bl	2fff612e <fdt32_to_cpu>
2fff644c:	6060      	str	r0, [r4, #4]
2fff644e:	4a10      	ldr	r2, [pc, #64]	; (2fff6490 <dt_fill_device_info+0x88>)
2fff6450:	2300      	movs	r3, #0
2fff6452:	480d      	ldr	r0, [pc, #52]	; (2fff6488 <dt_fill_device_info+0x80>)
2fff6454:	4629      	mov	r1, r5
2fff6456:	f001 fb0a 	bl	2fff7a6e <fdt_getprop>
2fff645a:	b160      	cbz	r0, 2fff6476 <dt_fill_device_info+0x6e>
2fff645c:	6840      	ldr	r0, [r0, #4]
2fff645e:	f7ff fe66 	bl	2fff612e <fdt32_to_cpu>
2fff6462:	60a0      	str	r0, [r4, #8]
2fff6464:	4628      	mov	r0, r5
2fff6466:	f7ff ff37 	bl	2fff62d8 <fdt_get_status>
2fff646a:	60e0      	str	r0, [r4, #12]
2fff646c:	bd38      	pop	{r3, r4, r5, pc}
2fff646e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
2fff6472:	6063      	str	r3, [r4, #4]
2fff6474:	e7eb      	b.n	2fff644e <dt_fill_device_info+0x46>
2fff6476:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
2fff647a:	60a3      	str	r3, [r4, #8]
2fff647c:	e7f2      	b.n	2fff6464 <dt_fill_device_info+0x5c>
2fff647e:	bf00      	nop
2fff6480:	2fffa818 	.word	0x2fffa818
2fff6484:	2fff8b39 	.word	0x2fff8b39
2fff6488:	2ffca000 	.word	0x2ffca000
2fff648c:	2fff9885 	.word	0x2fff9885
2fff6490:	2fffa70c 	.word	0x2fffa70c

2fff6494 <dt_get_node>:
2fff6494:	b538      	push	{r3, r4, r5, lr}
2fff6496:	4605      	mov	r5, r0
2fff6498:	4806      	ldr	r0, [pc, #24]	; (2fff64b4 <dt_get_node+0x20>)
2fff649a:	f001 fc65 	bl	2fff7d68 <fdt_node_offset_by_compatible>
2fff649e:	1e04      	subs	r4, r0, #0
2fff64a0:	db05      	blt.n	2fff64ae <dt_get_node+0x1a>
2fff64a2:	4621      	mov	r1, r4
2fff64a4:	4628      	mov	r0, r5
2fff64a6:	f7ff ffaf 	bl	2fff6408 <dt_fill_device_info>
2fff64aa:	4620      	mov	r0, r4
2fff64ac:	bd38      	pop	{r3, r4, r5, pc}
2fff64ae:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff64b2:	e7fa      	b.n	2fff64aa <dt_get_node+0x16>
2fff64b4:	2ffca000 	.word	0x2ffca000

2fff64b8 <dt_get_stdout_uart_info>:
2fff64b8:	b538      	push	{r3, r4, r5, lr}
2fff64ba:	4605      	mov	r5, r0
2fff64bc:	f7ff fe4c 	bl	2fff6158 <dt_get_stdout_node_offset>
2fff64c0:	1e04      	subs	r4, r0, #0
2fff64c2:	db05      	blt.n	2fff64d0 <dt_get_stdout_uart_info+0x18>
2fff64c4:	4621      	mov	r1, r4
2fff64c6:	4628      	mov	r0, r5
2fff64c8:	f7ff ff9e 	bl	2fff6408 <dt_fill_device_info>
2fff64cc:	4620      	mov	r0, r4
2fff64ce:	bd38      	pop	{r3, r4, r5, pc}
2fff64d0:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff64d4:	e7fa      	b.n	2fff64cc <dt_get_stdout_uart_info+0x14>
	...

2fff64d8 <dt_get_node_by_compatible>:
2fff64d8:	b538      	push	{r3, r4, r5, lr}
2fff64da:	4602      	mov	r2, r0
2fff64dc:	4604      	mov	r4, r0
2fff64de:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2fff64e2:	4805      	ldr	r0, [pc, #20]	; (2fff64f8 <dt_get_node_by_compatible+0x20>)
2fff64e4:	f001 fc40 	bl	2fff7d68 <fdt_node_offset_by_compatible>
2fff64e8:	1e05      	subs	r5, r0, #0
2fff64ea:	da03      	bge.n	2fff64f4 <dt_get_node_by_compatible+0x1c>
2fff64ec:	4803      	ldr	r0, [pc, #12]	; (2fff64fc <dt_get_node_by_compatible+0x24>)
2fff64ee:	4621      	mov	r1, r4
2fff64f0:	f7fa fb46 	bl	2fff0b80 <tf_log>
2fff64f4:	4628      	mov	r0, r5
2fff64f6:	bd38      	pop	{r3, r4, r5, pc}
2fff64f8:	2ffca000 	.word	0x2ffca000
2fff64fc:	2fffa75a 	.word	0x2fffa75a

2fff6500 <dt_get_ddr_size>:
2fff6500:	b508      	push	{r3, lr}
2fff6502:	4806      	ldr	r0, [pc, #24]	; (2fff651c <dt_get_ddr_size+0x1c>)
2fff6504:	f7ff ffe8 	bl	2fff64d8 <dt_get_node_by_compatible>
2fff6508:	2800      	cmp	r0, #0
2fff650a:	db05      	blt.n	2fff6518 <dt_get_ddr_size+0x18>
2fff650c:	4904      	ldr	r1, [pc, #16]	; (2fff6520 <dt_get_ddr_size+0x20>)
2fff650e:	2200      	movs	r2, #0
2fff6510:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff6514:	f7ff bf40 	b.w	2fff6398 <fdt_read_uint32_default>
2fff6518:	2000      	movs	r0, #0
2fff651a:	bd08      	pop	{r3, pc}
2fff651c:	2fffa72a 	.word	0x2fffa72a
2fff6520:	2fffa73a 	.word	0x2fffa73a

2fff6524 <dt_get_all_opp_freqvolt>:
2fff6524:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
2fff6528:	460f      	mov	r7, r1
2fff652a:	4690      	mov	r8, r2
2fff652c:	4606      	mov	r6, r0
2fff652e:	b920      	cbnz	r0, 2fff653a <dt_get_all_opp_freqvolt+0x16>
2fff6530:	f240 2149 	movw	r1, #585	; 0x249
2fff6534:	481d      	ldr	r0, [pc, #116]	; (2fff65ac <dt_get_all_opp_freqvolt+0x88>)
2fff6536:	f001 fc37 	bl	2fff7da8 <__assert>
2fff653a:	b911      	cbnz	r1, 2fff6542 <dt_get_all_opp_freqvolt+0x1e>
2fff653c:	f240 214a 	movw	r1, #586	; 0x24a
2fff6540:	e7f8      	b.n	2fff6534 <dt_get_all_opp_freqvolt+0x10>
2fff6542:	b912      	cbnz	r2, 2fff654a <dt_get_all_opp_freqvolt+0x26>
2fff6544:	f240 214b 	movw	r1, #587	; 0x24b
2fff6548:	e7f4      	b.n	2fff6534 <dt_get_all_opp_freqvolt+0x10>
2fff654a:	4819      	ldr	r0, [pc, #100]	; (2fff65b0 <dt_get_all_opp_freqvolt+0x8c>)
2fff654c:	f7ff ffc4 	bl	2fff64d8 <dt_get_node_by_compatible>
2fff6550:	2800      	cmp	r0, #0
2fff6552:	db18      	blt.n	2fff6586 <dt_get_all_opp_freqvolt+0x62>
2fff6554:	f8df 905c 	ldr.w	r9, [pc, #92]	; 2fff65b4 <dt_get_all_opp_freqvolt+0x90>
2fff6558:	4601      	mov	r1, r0
2fff655a:	4816      	ldr	r0, [pc, #88]	; (2fff65b4 <dt_get_all_opp_freqvolt+0x90>)
2fff655c:	2400      	movs	r4, #0
2fff655e:	f001 f904 	bl	2fff776a <fdt_first_subnode>
2fff6562:	4605      	mov	r5, r0
2fff6564:	2d00      	cmp	r5, #0
2fff6566:	da03      	bge.n	2fff6570 <dt_get_all_opp_freqvolt+0x4c>
2fff6568:	b1ec      	cbz	r4, 2fff65a6 <dt_get_all_opp_freqvolt+0x82>
2fff656a:	6034      	str	r4, [r6, #0]
2fff656c:	2000      	movs	r0, #0
2fff656e:	e00a      	b.n	2fff6586 <dt_get_all_opp_freqvolt+0x62>
2fff6570:	aa01      	add	r2, sp, #4
2fff6572:	4669      	mov	r1, sp
2fff6574:	4628      	mov	r0, r5
2fff6576:	f7ff fe2d 	bl	2fff61d4 <dt_get_opp_freqvolt_from_subnode>
2fff657a:	b970      	cbnz	r0, 2fff659a <dt_get_all_opp_freqvolt+0x76>
2fff657c:	6833      	ldr	r3, [r6, #0]
2fff657e:	42a3      	cmp	r3, r4
2fff6580:	d804      	bhi.n	2fff658c <dt_get_all_opp_freqvolt+0x68>
2fff6582:	f06f 0002 	mvn.w	r0, #2
2fff6586:	b003      	add	sp, #12
2fff6588:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2fff658c:	9b00      	ldr	r3, [sp, #0]
2fff658e:	f847 3024 	str.w	r3, [r7, r4, lsl #2]
2fff6592:	9b01      	ldr	r3, [sp, #4]
2fff6594:	f848 3024 	str.w	r3, [r8, r4, lsl #2]
2fff6598:	3401      	adds	r4, #1
2fff659a:	4629      	mov	r1, r5
2fff659c:	4648      	mov	r0, r9
2fff659e:	f001 f8f8 	bl	2fff7792 <fdt_next_subnode>
2fff65a2:	4605      	mov	r5, r0
2fff65a4:	e7de      	b.n	2fff6564 <dt_get_all_opp_freqvolt+0x40>
2fff65a6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff65aa:	e7ec      	b.n	2fff6586 <dt_get_all_opp_freqvolt+0x62>
2fff65ac:	2fffa818 	.word	0x2fffa818
2fff65b0:	2fffa746 	.word	0x2fffa746
2fff65b4:	2ffca000 	.word	0x2ffca000

2fff65b8 <dt_get_cpu_regulator_name>:
2fff65b8:	490f      	ldr	r1, [pc, #60]	; (2fff65f8 <dt_get_cpu_regulator_name+0x40>)
2fff65ba:	b510      	push	{r4, lr}
2fff65bc:	480f      	ldr	r0, [pc, #60]	; (2fff65fc <dt_get_cpu_regulator_name+0x44>)
2fff65be:	f001 fae3 	bl	2fff7b88 <fdt_path_offset>
2fff65c2:	1e01      	subs	r1, r0, #0
2fff65c4:	db15      	blt.n	2fff65f2 <dt_get_cpu_regulator_name+0x3a>
2fff65c6:	4a0e      	ldr	r2, [pc, #56]	; (2fff6600 <dt_get_cpu_regulator_name+0x48>)
2fff65c8:	2300      	movs	r3, #0
2fff65ca:	480c      	ldr	r0, [pc, #48]	; (2fff65fc <dt_get_cpu_regulator_name+0x44>)
2fff65cc:	f001 fa4f 	bl	2fff7a6e <fdt_getprop>
2fff65d0:	b178      	cbz	r0, 2fff65f2 <dt_get_cpu_regulator_name+0x3a>
2fff65d2:	6800      	ldr	r0, [r0, #0]
2fff65d4:	f7ff fdab 	bl	2fff612e <fdt32_to_cpu>
2fff65d8:	4601      	mov	r1, r0
2fff65da:	4808      	ldr	r0, [pc, #32]	; (2fff65fc <dt_get_cpu_regulator_name+0x44>)
2fff65dc:	f001 fb39 	bl	2fff7c52 <fdt_node_offset_by_phandle>
2fff65e0:	1e01      	subs	r1, r0, #0
2fff65e2:	db06      	blt.n	2fff65f2 <dt_get_cpu_regulator_name+0x3a>
2fff65e4:	4a07      	ldr	r2, [pc, #28]	; (2fff6604 <dt_get_cpu_regulator_name+0x4c>)
2fff65e6:	2300      	movs	r3, #0
2fff65e8:	4804      	ldr	r0, [pc, #16]	; (2fff65fc <dt_get_cpu_regulator_name+0x44>)
2fff65ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff65ee:	f001 ba3e 	b.w	2fff7a6e <fdt_getprop>
2fff65f2:	2000      	movs	r0, #0
2fff65f4:	bd10      	pop	{r4, pc}
2fff65f6:	bf00      	nop
2fff65f8:	2fffa713 	.word	0x2fffa713
2fff65fc:	2ffca000 	.word	0x2ffca000
2fff6600:	2fffa71f 	.word	0x2fffa71f
2fff6604:	2fffa19a 	.word	0x2fffa19a

2fff6608 <fdt_get_gpio_bank_pinctrl_node>:
2fff6608:	280a      	cmp	r0, #10
2fff660a:	b508      	push	{r3, lr}
2fff660c:	d905      	bls.n	2fff661a <fdt_get_gpio_bank_pinctrl_node+0x12>
2fff660e:	2819      	cmp	r0, #25
2fff6610:	d009      	beq.n	2fff6626 <fdt_get_gpio_bank_pinctrl_node+0x1e>
2fff6612:	f7fa fb57 	bl	2fff0cc4 <console_flush>
2fff6616:	f000 eb8c 	blx	2fff6d30 <do_panic>
2fff661a:	4904      	ldr	r1, [pc, #16]	; (2fff662c <fdt_get_gpio_bank_pinctrl_node+0x24>)
2fff661c:	4804      	ldr	r0, [pc, #16]	; (2fff6630 <fdt_get_gpio_bank_pinctrl_node+0x28>)
2fff661e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff6622:	f001 bab1 	b.w	2fff7b88 <fdt_path_offset>
2fff6626:	4903      	ldr	r1, [pc, #12]	; (2fff6634 <fdt_get_gpio_bank_pinctrl_node+0x2c>)
2fff6628:	e7f8      	b.n	2fff661c <fdt_get_gpio_bank_pinctrl_node+0x14>
2fff662a:	bf00      	nop
2fff662c:	2fffa7c1 	.word	0x2fffa7c1
2fff6630:	2ffca000 	.word	0x2ffca000
2fff6634:	2fffa7d5 	.word	0x2fffa7d5

2fff6638 <fdt_get_gpioz_nbpins_from_dt>:
2fff6638:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff663c:	2019      	movs	r0, #25
2fff663e:	f7ff ffe3 	bl	2fff6608 <fdt_get_gpio_bank_pinctrl_node>
2fff6642:	1e01      	subs	r1, r0, #0
2fff6644:	da03      	bge.n	2fff664e <fdt_get_gpioz_nbpins_from_dt+0x16>
2fff6646:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff664a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff664e:	481d      	ldr	r0, [pc, #116]	; (2fff66c4 <fdt_get_gpioz_nbpins_from_dt+0x8c>)
2fff6650:	4f1d      	ldr	r7, [pc, #116]	; (2fff66c8 <fdt_get_gpioz_nbpins_from_dt+0x90>)
2fff6652:	f001 f88a 	bl	2fff776a <fdt_first_subnode>
2fff6656:	4d1b      	ldr	r5, [pc, #108]	; (2fff66c4 <fdt_get_gpioz_nbpins_from_dt+0x8c>)
2fff6658:	4604      	mov	r4, r0
2fff665a:	f8df 8074 	ldr.w	r8, [pc, #116]	; 2fff66d0 <fdt_get_gpioz_nbpins_from_dt+0x98>
2fff665e:	2c00      	cmp	r4, #0
2fff6660:	db1b      	blt.n	2fff669a <fdt_get_gpioz_nbpins_from_dt+0x62>
2fff6662:	2300      	movs	r3, #0
2fff6664:	463a      	mov	r2, r7
2fff6666:	4621      	mov	r1, r4
2fff6668:	4628      	mov	r0, r5
2fff666a:	f001 fa00 	bl	2fff7a6e <fdt_getprop>
2fff666e:	b318      	cbz	r0, 2fff66b8 <fdt_get_gpioz_nbpins_from_dt+0x80>
2fff6670:	2300      	movs	r3, #0
2fff6672:	4642      	mov	r2, r8
2fff6674:	4621      	mov	r1, r4
2fff6676:	4628      	mov	r0, r5
2fff6678:	f001 f9f9 	bl	2fff7a6e <fdt_getprop>
2fff667c:	4606      	mov	r6, r0
2fff667e:	b1d8      	cbz	r0, 2fff66b8 <fdt_get_gpioz_nbpins_from_dt+0x80>
2fff6680:	2019      	movs	r0, #25
2fff6682:	f7fa fc73 	bl	2fff0f6c <stm32_get_gpio_bank_offset>
2fff6686:	4603      	mov	r3, r0
2fff6688:	6830      	ldr	r0, [r6, #0]
2fff668a:	f7ff fd50 	bl	2fff612e <fdt32_to_cpu>
2fff668e:	4298      	cmp	r0, r3
2fff6690:	d112      	bne.n	2fff66b8 <fdt_get_gpioz_nbpins_from_dt+0x80>
2fff6692:	4620      	mov	r0, r4
2fff6694:	f7ff fe20 	bl	2fff62d8 <fdt_get_status>
2fff6698:	b908      	cbnz	r0, 2fff669e <fdt_get_gpioz_nbpins_from_dt+0x66>
2fff669a:	2000      	movs	r0, #0
2fff669c:	e7d5      	b.n	2fff664a <fdt_get_gpioz_nbpins_from_dt+0x12>
2fff669e:	4a0b      	ldr	r2, [pc, #44]	; (2fff66cc <fdt_get_gpioz_nbpins_from_dt+0x94>)
2fff66a0:	2300      	movs	r3, #0
2fff66a2:	4808      	ldr	r0, [pc, #32]	; (2fff66c4 <fdt_get_gpioz_nbpins_from_dt+0x8c>)
2fff66a4:	4621      	mov	r1, r4
2fff66a6:	f001 f9e2 	bl	2fff7a6e <fdt_getprop>
2fff66aa:	2800      	cmp	r0, #0
2fff66ac:	d0cb      	beq.n	2fff6646 <fdt_get_gpioz_nbpins_from_dt+0xe>
2fff66ae:	6800      	ldr	r0, [r0, #0]
2fff66b0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
2fff66b4:	f7ff bd3b 	b.w	2fff612e <fdt32_to_cpu>
2fff66b8:	4621      	mov	r1, r4
2fff66ba:	4628      	mov	r0, r5
2fff66bc:	f001 f869 	bl	2fff7792 <fdt_next_subnode>
2fff66c0:	4604      	mov	r4, r0
2fff66c2:	e7cc      	b.n	2fff665e <fdt_get_gpioz_nbpins_from_dt+0x26>
2fff66c4:	2ffca000 	.word	0x2ffca000
2fff66c8:	2fff9eb0 	.word	0x2fff9eb0
2fff66cc:	2fffa7eb 	.word	0x2fffa7eb
2fff66d0:	2fff8b39 	.word	0x2fff8b39

2fff66d4 <stm32mp_lock_shregs>:
2fff66d4:	b508      	push	{r3, lr}
2fff66d6:	f7fa fc14 	bl	2fff0f02 <stm32mp_lock_available>
2fff66da:	b120      	cbz	r0, 2fff66e6 <stm32mp_lock_shregs+0x12>
2fff66dc:	4802      	ldr	r0, [pc, #8]	; (2fff66e8 <stm32mp_lock_shregs+0x14>)
2fff66de:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff66e2:	f004 ba29 	b.w	2fffab38 <__spin_lock_from_thumb>
2fff66e6:	bd08      	pop	{r3, pc}
2fff66e8:	2fffcfa0 	.word	0x2fffcfa0

2fff66ec <stm32mp_unlock_shregs>:
2fff66ec:	b508      	push	{r3, lr}
2fff66ee:	f7fa fc08 	bl	2fff0f02 <stm32mp_lock_available>
2fff66f2:	b120      	cbz	r0, 2fff66fe <stm32mp_unlock_shregs+0x12>
2fff66f4:	4802      	ldr	r0, [pc, #8]	; (2fff6700 <stm32mp_unlock_shregs+0x14>)
2fff66f6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff66fa:	f004 ba15 	b.w	2fffab28 <__spin_unlock_from_thumb>
2fff66fe:	bd08      	pop	{r3, pc}
2fff6700:	2fffcfa0 	.word	0x2fffcfa0

2fff6704 <stm32mp_mmio_clrsetbits_32_shregs>:
2fff6704:	b570      	push	{r4, r5, r6, lr}
2fff6706:	4604      	mov	r4, r0
2fff6708:	460e      	mov	r6, r1
2fff670a:	4615      	mov	r5, r2
2fff670c:	f7ff ffe2 	bl	2fff66d4 <stm32mp_lock_shregs>
2fff6710:	6821      	ldr	r1, [r4, #0]
2fff6712:	ea21 0106 	bic.w	r1, r1, r6
2fff6716:	4329      	orrs	r1, r5
2fff6718:	6021      	str	r1, [r4, #0]
2fff671a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff671e:	f7ff bfe5 	b.w	2fff66ec <stm32mp_unlock_shregs>

2fff6722 <stm32mp_mmio_clrbits_32_shregs>:
2fff6722:	b538      	push	{r3, r4, r5, lr}
2fff6724:	4604      	mov	r4, r0
2fff6726:	460d      	mov	r5, r1
2fff6728:	f7ff ffd4 	bl	2fff66d4 <stm32mp_lock_shregs>
2fff672c:	6823      	ldr	r3, [r4, #0]
2fff672e:	ea23 0305 	bic.w	r3, r3, r5
2fff6732:	6023      	str	r3, [r4, #0]
2fff6734:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff6738:	f7ff bfd8 	b.w	2fff66ec <stm32mp_unlock_shregs>

2fff673c <stm32mp_mmio_setbits_32_shregs>:
2fff673c:	b538      	push	{r3, r4, r5, lr}
2fff673e:	4605      	mov	r5, r0
2fff6740:	460c      	mov	r4, r1
2fff6742:	f7ff ffc7 	bl	2fff66d4 <stm32mp_lock_shregs>
2fff6746:	6829      	ldr	r1, [r5, #0]
2fff6748:	430c      	orrs	r4, r1
2fff674a:	602c      	str	r4, [r5, #0]
2fff674c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff6750:	f7ff bfcc 	b.w	2fff66ec <stm32mp_unlock_shregs>

2fff6754 <stm32_clean_context>:
2fff6754:	b508      	push	{r3, lr}
2fff6756:	2063      	movs	r0, #99	; 0x63
2fff6758:	f7fc ff06 	bl	2fff3568 <stm32mp_clk_enable>
2fff675c:	f04f 40a8 	mov.w	r0, #1409286144	; 0x54000000
2fff6760:	f44f 618d 	mov.w	r1, #1128	; 0x468
2fff6764:	f000 ec3a 	blx	2fff6fdc <zero_normalmem>
2fff6768:	2063      	movs	r0, #99	; 0x63
2fff676a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff676e:	f7fc befe 	b.w	2fff356e <stm32mp_clk_disable>

2fff6772 <stm32mp1_pm_save_clock_cfg>:
2fff6772:	1883      	adds	r3, r0, r2
2fff6774:	f5b3 7f16 	cmp.w	r3, #600	; 0x258
2fff6778:	b570      	push	{r4, r5, r6, lr}
2fff677a:	4604      	mov	r4, r0
2fff677c:	460e      	mov	r6, r1
2fff677e:	4615      	mov	r5, r2
2fff6780:	d903      	bls.n	2fff678a <stm32mp1_pm_save_clock_cfg+0x18>
2fff6782:	f7fa fa9f 	bl	2fff0cc4 <console_flush>
2fff6786:	f000 ead4 	blx	2fff6d30 <do_panic>
2fff678a:	2063      	movs	r0, #99	; 0x63
2fff678c:	f7fc feec 	bl	2fff3568 <stm32mp_clk_enable>
2fff6790:	f104 40a8 	add.w	r0, r4, #1409286144	; 0x54000000
2fff6794:	462a      	mov	r2, r5
2fff6796:	4631      	mov	r1, r6
2fff6798:	f500 7002 	add.w	r0, r0, #520	; 0x208
2fff679c:	f001 fb2c 	bl	2fff7df8 <memcpy>
2fff67a0:	2063      	movs	r0, #99	; 0x63
2fff67a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff67a6:	f7fc bee2 	b.w	2fff356e <stm32mp_clk_disable>

2fff67aa <stm32mp1_pm_restore_clock_cfg>:
2fff67aa:	1883      	adds	r3, r0, r2
2fff67ac:	f5b3 7f16 	cmp.w	r3, #600	; 0x258
2fff67b0:	b570      	push	{r4, r5, r6, lr}
2fff67b2:	4604      	mov	r4, r0
2fff67b4:	460e      	mov	r6, r1
2fff67b6:	4615      	mov	r5, r2
2fff67b8:	d903      	bls.n	2fff67c2 <stm32mp1_pm_restore_clock_cfg+0x18>
2fff67ba:	f7fa fa83 	bl	2fff0cc4 <console_flush>
2fff67be:	f000 eab8 	blx	2fff6d30 <do_panic>
2fff67c2:	2063      	movs	r0, #99	; 0x63
2fff67c4:	f7fc fed0 	bl	2fff3568 <stm32mp_clk_enable>
2fff67c8:	f104 41a8 	add.w	r1, r4, #1409286144	; 0x54000000
2fff67cc:	462a      	mov	r2, r5
2fff67ce:	4630      	mov	r0, r6
2fff67d0:	f501 7102 	add.w	r1, r1, #520	; 0x208
2fff67d4:	f001 fb10 	bl	2fff7df8 <memcpy>
2fff67d8:	2063      	movs	r0, #99	; 0x63
2fff67da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff67de:	f7fc bec6 	b.w	2fff356e <stm32mp_clk_disable>
	...

2fff67e4 <stm32_save_context>:
2fff67e4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2fff67e8:	461f      	mov	r7, r3
2fff67ea:	460d      	mov	r5, r1
2fff67ec:	4616      	mov	r6, r2
2fff67ee:	4680      	mov	r8, r0
2fff67f0:	f7fd fa62 	bl	2fff3cb8 <stm32mp1_clock_suspend>
2fff67f4:	2063      	movs	r0, #99	; 0x63
2fff67f6:	f7fc feb7 	bl	2fff3568 <stm32mp_clk_enable>
2fff67fa:	2001      	movs	r0, #1
2fff67fc:	f7f4 fe22 	bl	2ffeb444 <smc_get_ctx>
2fff6800:	4681      	mov	r9, r0
2fff6802:	2001      	movs	r0, #1
2fff6804:	f7f4 fe3a 	bl	2ffeb47c <cm_get_context>
2fff6808:	4604      	mov	r4, r0
2fff680a:	4649      	mov	r1, r9
2fff680c:	f44f 7290 	mov.w	r2, #288	; 0x120
2fff6810:	f04f 40a8 	mov.w	r0, #1409286144	; 0x54000000
2fff6814:	f001 faf0 	bl	2fff7df8 <memcpy>
2fff6818:	480f      	ldr	r0, [pc, #60]	; (2fff6858 <stm32_save_context+0x74>)
2fff681a:	4621      	mov	r1, r4
2fff681c:	f04f 44a8 	mov.w	r4, #1409286144	; 0x54000000
2fff6820:	2240      	movs	r2, #64	; 0x40
2fff6822:	f001 fae9 	bl	2fff7df8 <memcpy>
2fff6826:	f8c4 8160 	str.w	r8, [r4, #352]	; 0x160
2fff682a:	220c      	movs	r2, #12
2fff682c:	480b      	ldr	r0, [pc, #44]	; (2fff685c <stm32_save_context+0x78>)
2fff682e:	4629      	mov	r1, r5
2fff6830:	f001 fae2 	bl	2fff7df8 <memcpy>
2fff6834:	e9c4 6780 	strd	r6, r7, [r4, #512]	; 0x200
2fff6838:	4809      	ldr	r0, [pc, #36]	; (2fff6860 <stm32_save_context+0x7c>)
2fff683a:	214c      	movs	r1, #76	; 0x4c
2fff683c:	f7fd f936 	bl	2fff3aac <stm32mp1_clk_lp_save_opp_pll1_settings>
2fff6840:	4808      	ldr	r0, [pc, #32]	; (2fff6864 <stm32_save_context+0x80>)
2fff6842:	2104      	movs	r1, #4
2fff6844:	f7fa f922 	bl	2fff0a8c <stm32mp1_pm_save_scmi_state>
2fff6848:	f7fd f9e6 	bl	2fff3c18 <save_clock_pm_context>
2fff684c:	2063      	movs	r0, #99	; 0x63
2fff684e:	f7fc fe8e 	bl	2fff356e <stm32mp_clk_disable>
2fff6852:	2000      	movs	r0, #0
2fff6854:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2fff6858:	54000120 	.word	0x54000120
2fff685c:	54000164 	.word	0x54000164
2fff6860:	540001b0 	.word	0x540001b0
2fff6864:	54000460 	.word	0x54000460

2fff6868 <stm32_restore_context>:
2fff6868:	b530      	push	{r4, r5, lr}
2fff686a:	2001      	movs	r0, #1
2fff686c:	b085      	sub	sp, #20
2fff686e:	f7f4 fde9 	bl	2ffeb444 <smc_get_ctx>
2fff6872:	4605      	mov	r5, r0
2fff6874:	2001      	movs	r0, #1
2fff6876:	f7f4 fe01 	bl	2ffeb47c <cm_get_context>
2fff687a:	4604      	mov	r4, r0
2fff687c:	2063      	movs	r0, #99	; 0x63
2fff687e:	f7fc fe73 	bl	2fff3568 <stm32mp_clk_enable>
2fff6882:	f7fd f9f1 	bl	2fff3c68 <restore_clock_pm_context>
2fff6886:	4815      	ldr	r0, [pc, #84]	; (2fff68dc <stm32_restore_context+0x74>)
2fff6888:	2104      	movs	r1, #4
2fff688a:	f7fa f93b 	bl	2fff0b04 <stm32mp1_pm_restore_scmi_state>
2fff688e:	f44f 7290 	mov.w	r2, #288	; 0x120
2fff6892:	f04f 41a8 	mov.w	r1, #1409286144	; 0x54000000
2fff6896:	4628      	mov	r0, r5
2fff6898:	f001 faae 	bl	2fff7df8 <memcpy>
2fff689c:	4910      	ldr	r1, [pc, #64]	; (2fff68e0 <stm32_restore_context+0x78>)
2fff689e:	2240      	movs	r2, #64	; 0x40
2fff68a0:	4620      	mov	r0, r4
2fff68a2:	f001 faa9 	bl	2fff7df8 <memcpy>
2fff68a6:	a801      	add	r0, sp, #4
2fff68a8:	f7f6 fe78 	bl	2ffed59c <stm32_rtc_get_calendar>
2fff68ac:	490d      	ldr	r1, [pc, #52]	; (2fff68e4 <stm32_restore_context+0x7c>)
2fff68ae:	a801      	add	r0, sp, #4
2fff68b0:	f7f6 fe94 	bl	2ffed5dc <stm32_rtc_diff_calendar>
2fff68b4:	460b      	mov	r3, r1
2fff68b6:	f04f 41a8 	mov.w	r1, #1409286144	; 0x54000000
2fff68ba:	4602      	mov	r2, r0
2fff68bc:	e9d1 0180 	ldrd	r0, r1, [r1, #512]	; 0x200
2fff68c0:	f7fc f998 	bl	2fff2bf4 <stm32mp_stgen_restore_counter>
2fff68c4:	4808      	ldr	r0, [pc, #32]	; (2fff68e8 <stm32_restore_context+0x80>)
2fff68c6:	214c      	movs	r1, #76	; 0x4c
2fff68c8:	f7fd f906 	bl	2fff3ad8 <stm32mp1_clk_lp_load_opp_pll1_settings>
2fff68cc:	2063      	movs	r0, #99	; 0x63
2fff68ce:	f7fc fe4e 	bl	2fff356e <stm32mp_clk_disable>
2fff68d2:	f7fd fa37 	bl	2fff3d44 <stm32mp1_clock_resume>
2fff68d6:	2000      	movs	r0, #0
2fff68d8:	b005      	add	sp, #20
2fff68da:	bd30      	pop	{r4, r5, pc}
2fff68dc:	54000460 	.word	0x54000460
2fff68e0:	54000120 	.word	0x54000120
2fff68e4:	54000164 	.word	0x54000164
2fff68e8:	540001b0 	.word	0x540001b0

2fff68ec <stm32_are_pll1_settings_valid_in_context>:
2fff68ec:	b510      	push	{r4, lr}
2fff68ee:	2063      	movs	r0, #99	; 0x63
2fff68f0:	f7fc fe3a 	bl	2fff3568 <stm32mp_clk_enable>
2fff68f4:	f04f 43a8 	mov.w	r3, #1409286144	; 0x54000000
2fff68f8:	2063      	movs	r0, #99	; 0x63
2fff68fa:	f8d3 41b0 	ldr.w	r4, [r3, #432]	; 0x1b0
2fff68fe:	f1a3 736c 	sub.w	r3, r3, #61865984	; 0x3b00000
2fff6902:	f5a3 336c 	sub.w	r3, r3, #241664	; 0x3b000
2fff6906:	f2a3 33cf 	subw	r3, r3, #975	; 0x3cf
2fff690a:	1ae3      	subs	r3, r4, r3
2fff690c:	425c      	negs	r4, r3
2fff690e:	415c      	adcs	r4, r3
2fff6910:	f7fc fe2d 	bl	2fff356e <stm32mp_clk_disable>
2fff6914:	4620      	mov	r0, r4
2fff6916:	bd10      	pop	{r4, pc}

2fff6918 <stm32_save_ddr_training_area>:
2fff6918:	b507      	push	{r0, r1, r2, lr}
2fff691a:	2063      	movs	r0, #99	; 0x63
2fff691c:	f7fc fe24 	bl	2fff3568 <stm32mp_clk_enable>
2fff6920:	231a      	movs	r3, #26
2fff6922:	f04f 4240 	mov.w	r2, #3221225472	; 0xc0000000
2fff6926:	9300      	str	r3, [sp, #0]
2fff6928:	f04f 4040 	mov.w	r0, #3221225472	; 0xc0000000
2fff692c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
2fff6930:	2100      	movs	r1, #0
2fff6932:	f7fa fdd5 	bl	2fff14e0 <mmap_add_dynamic_region>
2fff6936:	b120      	cbz	r0, 2fff6942 <stm32_save_ddr_training_area+0x2a>
2fff6938:	f44f 71c7 	mov.w	r1, #398	; 0x18e
2fff693c:	480d      	ldr	r0, [pc, #52]	; (2fff6974 <stm32_save_ddr_training_area+0x5c>)
2fff693e:	f001 fa33 	bl	2fff7da8 <__assert>
2fff6942:	480d      	ldr	r0, [pc, #52]	; (2fff6978 <stm32_save_ddr_training_area+0x60>)
2fff6944:	2240      	movs	r2, #64	; 0x40
2fff6946:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
2fff694a:	f001 fa55 	bl	2fff7df8 <memcpy>
2fff694e:	f3bf 8f4f 	dsb	sy
2fff6952:	f44f 5180 	mov.w	r1, #4096	; 0x1000
2fff6956:	f04f 4040 	mov.w	r0, #3221225472	; 0xc0000000
2fff695a:	f7fa fdd5 	bl	2fff1508 <mmap_remove_dynamic_region>
2fff695e:	b110      	cbz	r0, 2fff6966 <stm32_save_ddr_training_area+0x4e>
2fff6960:	f44f 71cb 	mov.w	r1, #406	; 0x196
2fff6964:	e7ea      	b.n	2fff693c <stm32_save_ddr_training_area+0x24>
2fff6966:	2063      	movs	r0, #99	; 0x63
2fff6968:	b003      	add	sp, #12
2fff696a:	f85d eb04 	ldr.w	lr, [sp], #4
2fff696e:	f7fc bdfe 	b.w	2fff356e <stm32mp_clk_disable>
2fff6972:	bf00      	nop
2fff6974:	2fffa851 	.word	0x2fffa851
2fff6978:	54000170 	.word	0x54000170

2fff697c <stm32mp1_dbgmcu_init>:
2fff697c:	b508      	push	{r3, lr}
2fff697e:	f7fb fdcf 	bl	2fff2520 <bsec_read_debug_conf>
2fff6982:	0543      	lsls	r3, r0, #21
2fff6984:	d405      	bmi.n	2fff6992 <stm32mp1_dbgmcu_init+0x16>
2fff6986:	4806      	ldr	r0, [pc, #24]	; (2fff69a0 <stm32mp1_dbgmcu_init+0x24>)
2fff6988:	f7fa f8fa 	bl	2fff0b80 <tf_log>
2fff698c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff6990:	bd08      	pop	{r3, pc}
2fff6992:	4a04      	ldr	r2, [pc, #16]	; (2fff69a4 <stm32mp1_dbgmcu_init+0x28>)
2fff6994:	2000      	movs	r0, #0
2fff6996:	6813      	ldr	r3, [r2, #0]
2fff6998:	f443 7380 	orr.w	r3, r3, #256	; 0x100
2fff699c:	6013      	str	r3, [r2, #0]
2fff699e:	e7f7      	b.n	2fff6990 <stm32mp1_dbgmcu_init+0x14>
2fff69a0:	2fffa898 	.word	0x2fffa898
2fff69a4:	5000080c 	.word	0x5000080c

2fff69a8 <stm32mp1_dbgmcu_get_chip_dev_id>:
2fff69a8:	b510      	push	{r4, lr}
2fff69aa:	4604      	mov	r4, r0
2fff69ac:	b918      	cbnz	r0, 2fff69b6 <stm32mp1_dbgmcu_get_chip_dev_id+0xe>
2fff69ae:	4808      	ldr	r0, [pc, #32]	; (2fff69d0 <stm32mp1_dbgmcu_get_chip_dev_id+0x28>)
2fff69b0:	214c      	movs	r1, #76	; 0x4c
2fff69b2:	f001 f9f9 	bl	2fff7da8 <__assert>
2fff69b6:	f7ff ffe1 	bl	2fff697c <stm32mp1_dbgmcu_init>
2fff69ba:	b928      	cbnz	r0, 2fff69c8 <stm32mp1_dbgmcu_get_chip_dev_id+0x20>
2fff69bc:	4b05      	ldr	r3, [pc, #20]	; (2fff69d4 <stm32mp1_dbgmcu_get_chip_dev_id+0x2c>)
2fff69be:	681b      	ldr	r3, [r3, #0]
2fff69c0:	f3c3 030b 	ubfx	r3, r3, #0, #12
2fff69c4:	6023      	str	r3, [r4, #0]
2fff69c6:	bd10      	pop	{r4, pc}
2fff69c8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff69cc:	e7fb      	b.n	2fff69c6 <stm32mp1_dbgmcu_get_chip_dev_id+0x1e>
2fff69ce:	bf00      	nop
2fff69d0:	2fffa875 	.word	0x2fffa875
2fff69d4:	50081000 	.word	0x50081000

2fff69d8 <stm32mp1_security_setup>:
2fff69d8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
2fff69da:	f7ff fd91 	bl	2fff6500 <dt_get_ddr_size>
2fff69de:	4604      	mov	r4, r0
2fff69e0:	4811      	ldr	r0, [pc, #68]	; (2fff6a28 <stm32mp1_security_setup+0x50>)
2fff69e2:	f7fb fb05 	bl	2fff1ff0 <tzc400_init>
2fff69e6:	f7fb fbc7 	bl	2fff2178 <tzc400_disable_filters>
2fff69ea:	4b10      	ldr	r3, [pc, #64]	; (2fff6a2c <stm32mp1_security_setup+0x54>)
2fff69ec:	f06f 4080 	mvn.w	r0, #1073741824	; 0x40000000
2fff69f0:	1902      	adds	r2, r0, r4
2fff69f2:	f04f 0100 	mov.w	r1, #0
2fff69f6:	9303      	str	r3, [sp, #12]
2fff69f8:	f04f 0300 	mov.w	r3, #0
2fff69fc:	9302      	str	r3, [sp, #8]
2fff69fe:	f04f 0003 	mov.w	r0, #3
2fff6a02:	f141 0300 	adc.w	r3, r1, #0
2fff6a06:	2101      	movs	r1, #1
2fff6a08:	e9cd 2300 	strd	r2, r3, [sp]
2fff6a0c:	f04f 4240 	mov.w	r2, #3221225472	; 0xc0000000
2fff6a10:	2300      	movs	r3, #0
2fff6a12:	f7fb fb1b 	bl	2fff204c <tzc400_configure_region>
2fff6a16:	2002      	movs	r0, #2
2fff6a18:	f7fb fad8 	bl	2fff1fcc <tzc400_set_action>
2fff6a1c:	b004      	add	sp, #16
2fff6a1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff6a22:	f7fb bb75 	b.w	2fff2110 <tzc400_enable_filters>
2fff6a26:	bf00      	nop
2fff6a28:	5c006000 	.word	0x5c006000
2fff6a2c:	87fb87fb 	.word	0x87fb87fb

2fff6a30 <stm32mp1_syscfg_enable_io_compensation>:
2fff6a30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff6a32:	2033      	movs	r0, #51	; 0x33
2fff6a34:	f7fc fd9e 	bl	2fff3574 <stm32mp1_clk_force_enable>
2fff6a38:	4a13      	ldr	r2, [pc, #76]	; (2fff6a88 <stm32mp1_syscfg_enable_io_compensation+0x58>)
2fff6a3a:	6813      	ldr	r3, [r2, #0]
2fff6a3c:	f043 0301 	orr.w	r3, r3, #1
2fff6a40:	6013      	str	r3, [r2, #0]
2fff6a42:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff6a46:	ec55 4f0e 	mrrc	15, 0, r4, r5, cr14
2fff6a4a:	4a10      	ldr	r2, [pc, #64]	; (2fff6a8c <stm32mp1_syscfg_enable_io_compensation+0x5c>)
2fff6a4c:	f242 7110 	movw	r1, #10000	; 0x2710
2fff6a50:	2300      	movs	r3, #0
2fff6a52:	fba0 0101 	umull	r0, r1, r0, r1
2fff6a56:	f000 eb0a 	blx	2fff706c <__aeabi_uldivmod>
2fff6a5a:	4b0d      	ldr	r3, [pc, #52]	; (2fff6a90 <stm32mp1_syscfg_enable_io_compensation+0x60>)
2fff6a5c:	1906      	adds	r6, r0, r4
2fff6a5e:	eb41 0705 	adc.w	r7, r1, r5
2fff6a62:	461c      	mov	r4, r3
2fff6a64:	681a      	ldr	r2, [r3, #0]
2fff6a66:	05d2      	lsls	r2, r2, #23
2fff6a68:	d408      	bmi.n	2fff6a7c <stm32mp1_syscfg_enable_io_compensation+0x4c>
2fff6a6a:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2fff6a6e:	428f      	cmp	r7, r1
2fff6a70:	bf08      	it	eq
2fff6a72:	4286      	cmpeq	r6, r0
2fff6a74:	d2f6      	bcs.n	2fff6a64 <stm32mp1_syscfg_enable_io_compensation+0x34>
2fff6a76:	4807      	ldr	r0, [pc, #28]	; (2fff6a94 <stm32mp1_syscfg_enable_io_compensation+0x64>)
2fff6a78:	f7fa f882 	bl	2fff0b80 <tf_log>
2fff6a7c:	6823      	ldr	r3, [r4, #0]
2fff6a7e:	f023 0302 	bic.w	r3, r3, #2
2fff6a82:	6023      	str	r3, [r4, #0]
2fff6a84:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff6a86:	bf00      	nop
2fff6a88:	50020024 	.word	0x50020024
2fff6a8c:	000f4240 	.word	0x000f4240
2fff6a90:	50020020 	.word	0x50020020
2fff6a94:	2fffa8ce 	.word	0x2fffa8ce

2fff6a98 <stm32mp1_syscfg_disable_io_compensation>:
2fff6a98:	4b0a      	ldr	r3, [pc, #40]	; (2fff6ac4 <stm32mp1_syscfg_disable_io_compensation+0x2c>)
2fff6a9a:	2033      	movs	r0, #51	; 0x33
2fff6a9c:	6819      	ldr	r1, [r3, #0]
2fff6a9e:	681a      	ldr	r2, [r3, #0]
2fff6aa0:	0e09      	lsrs	r1, r1, #24
2fff6aa2:	f422 027f 	bic.w	r2, r2, #16711680	; 0xff0000
2fff6aa6:	601a      	str	r2, [r3, #0]
2fff6aa8:	681a      	ldr	r2, [r3, #0]
2fff6aaa:	f042 0202 	orr.w	r2, r2, #2
2fff6aae:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
2fff6ab2:	601a      	str	r2, [r3, #0]
2fff6ab4:	4a04      	ldr	r2, [pc, #16]	; (2fff6ac8 <stm32mp1_syscfg_disable_io_compensation+0x30>)
2fff6ab6:	6813      	ldr	r3, [r2, #0]
2fff6ab8:	f023 0301 	bic.w	r3, r3, #1
2fff6abc:	6013      	str	r3, [r2, #0]
2fff6abe:	f7fc bd5c 	b.w	2fff357a <stm32mp1_clk_force_disable>
2fff6ac2:	bf00      	nop
2fff6ac4:	50020020 	.word	0x50020020
2fff6ac8:	50020024 	.word	0x50020024

2fff6acc <_cpu_data>:
2fff6acc:	e92d5000 	push	{ip, lr}
2fff6ad0:	eb00025a 	bl	2fff7440 <plat_my_core_pos>
2fff6ad4:	e8bd5000 	pop	{ip, lr}
2fff6ad8:	eaffffff 	b	2fff6adc <_cpu_data_by_index>

2fff6adc <_cpu_data_by_index>:
2fff6adc:	e3a01040 	mov	r1, #64	; 0x40
2fff6ae0:	e0000190 	mul	r0, r0, r1
2fff6ae4:	e59f1004 	ldr	r1, [pc, #4]	; 2fff6af0 <_cpu_data_by_index+0x14>
2fff6ae8:	e0800001 	add	r0, r0, r1
2fff6aec:	e12fff1e 	bx	lr
2fff6af0:	2fffd040 	.word	0x2fffd040

2fff6af4 <reset_handler>:
2fff6af4:	e1a0800e 	mov	r8, lr
2fff6af8:	eb00024b 	bl	2fff742c <plat_reset_handler>
2fff6afc:	eb00002a 	bl	2fff6bac <get_cpu_ops_ptr>
2fff6b00:	e3500000 	cmp	r0, #0
2fff6b04:	1a000002 	bne	2fff6b14 <reset_handler+0x20>
2fff6b08:	e59f0018 	ldr	r0, [pc, #24]	; 2fff6b28 <reset_handler+0x34>
2fff6b0c:	e3a01023 	mov	r1, #35	; 0x23
2fff6b10:	ea0000a1 	b	2fff6d9c <asm_assert>
2fff6b14:	e5901004 	ldr	r1, [r0, #4]
2fff6b18:	e3510000 	cmp	r1, #0
2fff6b1c:	e1a0e008 	mov	lr, r8
2fff6b20:	112fff11 	bxne	r1
2fff6b24:	e12fff1e 	bx	lr
2fff6b28:	2fffa918 	.word	0x2fffa918

2fff6b2c <prepare_cpu_pwr_dwn>:
2fff6b2c:	e3a02001 	mov	r2, #1
2fff6b30:	e1500002 	cmp	r0, r2
2fff6b34:	81a00002 	movhi	r0, r2
2fff6b38:	e92d4001 	push	{r0, lr}
2fff6b3c:	ebffffe2 	bl	2fff6acc <_cpu_data>
2fff6b40:	e8bd4004 	pop	{r2, lr}
2fff6b44:	e5900000 	ldr	r0, [r0]
2fff6b48:	e3500000 	cmp	r0, #0
2fff6b4c:	1a000002 	bne	2fff6b5c <prepare_cpu_pwr_dwn+0x30>
2fff6b50:	e59f0014 	ldr	r0, [pc, #20]	; 2fff6b6c <prepare_cpu_pwr_dwn+0x40>
2fff6b54:	e3a0104a 	mov	r1, #74	; 0x4a
2fff6b58:	ea00008f 	b	2fff6d9c <asm_assert>
2fff6b5c:	e3a01008 	mov	r1, #8
2fff6b60:	e0811102 	add	r1, r1, r2, lsl #2
2fff6b64:	e7901001 	ldr	r1, [r0, r1]
2fff6b68:	e12fff11 	bx	r1
2fff6b6c:	2fffa918 	.word	0x2fffa918

2fff6b70 <init_cpu_ops>:
2fff6b70:	e92d4070 	push	{r4, r5, r6, lr}
2fff6b74:	ebffffd4 	bl	2fff6acc <_cpu_data>
2fff6b78:	e1a06000 	mov	r6, r0
2fff6b7c:	e5901000 	ldr	r1, [r0]
2fff6b80:	e3510000 	cmp	r1, #0
2fff6b84:	1a000006 	bne	2fff6ba4 <init_cpu_ops+0x34>
2fff6b88:	eb000007 	bl	2fff6bac <get_cpu_ops_ptr>
2fff6b8c:	e3500000 	cmp	r0, #0
2fff6b90:	1a000002 	bne	2fff6ba0 <init_cpu_ops+0x30>
2fff6b94:	e59f000c 	ldr	r0, [pc, #12]	; 2fff6ba8 <init_cpu_ops+0x38>
2fff6b98:	e3a01064 	mov	r1, #100	; 0x64
2fff6b9c:	ea00007e 	b	2fff6d9c <asm_assert>
2fff6ba0:	e5a60000 	str	r0, [r6, #0]!
2fff6ba4:	e8bd8070 	pop	{r4, r5, r6, pc}
2fff6ba8:	2fffa918 	.word	0x2fffa918

2fff6bac <get_cpu_ops_ptr>:
2fff6bac:	e59f4030 	ldr	r4, [pc, #48]	; 2fff6be4 <error_exit+0x4>
2fff6bb0:	e59f5030 	ldr	r5, [pc, #48]	; 2fff6be8 <error_exit+0x8>
2fff6bb4:	e3a00000 	mov	r0, #0
2fff6bb8:	ee102f10 	mrc	15, 0, r2, cr0, cr0, {0}
2fff6bbc:	e59f3028 	ldr	r3, [pc, #40]	; 2fff6bec <error_exit+0xc>
2fff6bc0:	e0022003 	and	r2, r2, r3
2fff6bc4:	e1540005 	cmp	r4, r5
2fff6bc8:	2a000004 	bcs	2fff6be0 <error_exit>
2fff6bcc:	e494101c 	ldr	r1, [r4], #28
2fff6bd0:	e0011003 	and	r1, r1, r3
2fff6bd4:	e1510002 	cmp	r1, r2
2fff6bd8:	1afffff9 	bne	2fff6bc4 <get_cpu_ops_ptr+0x18>
2fff6bdc:	e244001c 	sub	r0, r4, #28

2fff6be0 <error_exit>:
2fff6be0:	e12fff1e 	bx	lr
2fff6be4:	2fffaae4 	.word	0x2fffaae4
2fff6be8:	2fffab00 	.word	0x2fffab00
2fff6bec:	ff00fff0 	.word	0xff00fff0

2fff6bf0 <print_errata_status>:
2fff6bf0:	e92d5030 	push	{r4, r5, ip, lr}
2fff6bf4:	ebffffb4 	bl	2fff6acc <_cpu_data>
2fff6bf8:	e5901000 	ldr	r1, [r0]
2fff6bfc:	e5910010 	ldr	r0, [r1, #16]
2fff6c00:	e3500000 	cmp	r0, #0
2fff6c04:	0a000005 	beq	2fff6c20 <print_errata_status+0x30>
2fff6c08:	e1a04000 	mov	r4, r0
2fff6c0c:	e5910014 	ldr	r0, [r1, #20]
2fff6c10:	e5911018 	ldr	r1, [r1, #24]
2fff6c14:	faffd36a 	blx	2ffeb9c4 <errata_needs_reporting>
2fff6c18:	e3500000 	cmp	r0, #0
2fff6c1c:	112fff34 	blxne	r4
2fff6c20:	e8bd9030 	pop	{r4, r5, ip, pc}

2fff6c24 <spin_lock>:
2fff6c24:	e3a02001 	mov	r2, #1
2fff6c28:	e1901f9f 	ldrex	r1, [r0]
2fff6c2c:	e3510000 	cmp	r1, #0
2fff6c30:	1320f002 	wfene
2fff6c34:	01801f92 	strexeq	r1, r2, [r0]
2fff6c38:	03510000 	cmpeq	r1, #0
2fff6c3c:	1afffff9 	bne	2fff6c28 <spin_lock+0x4>
2fff6c40:	f57ff05f 	dmb	sy
2fff6c44:	e12fff1e 	bx	lr

2fff6c48 <spin_unlock>:
2fff6c48:	e3a01000 	mov	r1, #0
2fff6c4c:	f57ff05f 	dmb	sy
2fff6c50:	e5801000 	str	r1, [r0]
2fff6c54:	f57ff04f 	dsb	sy
2fff6c58:	e320f004 	sev
2fff6c5c:	e12fff1e 	bx	lr

2fff6c60 <psci_do_pwrdown_cache_maintenance>:
2fff6c60:	e92d4010 	push	{r4, lr}
2fff6c64:	e1a04000 	mov	r4, r0
2fff6c68:	eb00000e 	bl	2fff6ca8 <do_stack_maintenance>
2fff6c6c:	e1a00004 	mov	r0, r4
2fff6c70:	e8bd4010 	pop	{r4, lr}
2fff6c74:	eaffffac 	b	2fff6b2c <prepare_cpu_pwr_dwn>

2fff6c78 <psci_do_pwrup_cache_maintenance>:
2fff6c78:	e92d5000 	push	{ip, lr}
2fff6c7c:	f57ff05e 	dmb	st
2fff6c80:	eb00001b 	bl	2fff6cf4 <plat_get_my_stack>
2fff6c84:	e1a0100d 	mov	r1, sp
2fff6c88:	e0401001 	sub	r1, r0, r1
2fff6c8c:	e1a0000d 	mov	r0, sp
2fff6c90:	eb000092 	bl	2fff6ee0 <inv_dcache_range>
2fff6c94:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
2fff6c98:	e3800004 	orr	r0, r0, #4
2fff6c9c:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
2fff6ca0:	f57ff06f 	isb	sy
2fff6ca4:	e8bd9000 	pop	{ip, pc}

2fff6ca8 <do_stack_maintenance>:
2fff6ca8:	e92d4010 	push	{r4, lr}
2fff6cac:	eb000010 	bl	2fff6cf4 <plat_get_my_stack>
2fff6cb0:	ee111f10 	mrc	15, 0, r1, cr1, cr0, {0}
2fff6cb4:	e3c11004 	bic	r1, r1, #4
2fff6cb8:	ee011f10 	mcr	15, 0, r1, cr1, cr0, {0}
2fff6cbc:	f57ff06f 	isb	sy
2fff6cc0:	e1a04000 	mov	r4, r0
2fff6cc4:	e1a0100d 	mov	r1, sp
2fff6cc8:	e0401001 	sub	r1, r0, r1
2fff6ccc:	e1a0000d 	mov	r0, sp
2fff6cd0:	eb000064 	bl	2fff6e68 <flush_dcache_range>
2fff6cd4:	e2440c06 	sub	r0, r4, #1536	; 0x600
2fff6cd8:	e04d1000 	sub	r1, sp, r0
2fff6cdc:	eb00007f 	bl	2fff6ee0 <inv_dcache_range>
2fff6ce0:	e8bd8010 	pop	{r4, pc}

2fff6ce4 <psci_power_down_wfi>:
2fff6ce4:	f57ff04f 	dsb	sy
2fff6ce8:	e320f003 	wfi
2fff6cec:	eb000201 	bl	2fff74f8 <plat_panic_handler>
2fff6cf0:	e320f000 	nop	{0}

2fff6cf4 <plat_get_my_stack>:
2fff6cf4:	e92d4010 	push	{r4, lr}
2fff6cf8:	eb0001d0 	bl	2fff7440 <plat_my_core_pos>
2fff6cfc:	e59f2008 	ldr	r2, [pc, #8]	; 2fff6d0c <plat_get_my_stack+0x18>
2fff6d00:	e3a01c06 	mov	r1, #1536	; 0x600
2fff6d04:	e0202190 	mla	r0, r0, r1, r2
2fff6d08:	e8bd8010 	pop	{r4, pc}
2fff6d0c:	2fffbb80 	.word	0x2fffbb80

2fff6d10 <plat_set_my_stack>:
2fff6d10:	e1a0400e 	mov	r4, lr
2fff6d14:	eb0001c9 	bl	2fff7440 <plat_my_core_pos>
2fff6d18:	e59f200c 	ldr	r2, [pc, #12]	; 2fff6d2c <plat_set_my_stack+0x1c>
2fff6d1c:	e3a01c06 	mov	r1, #1536	; 0x600
2fff6d20:	e0202190 	mla	r0, r0, r1, r2
2fff6d24:	e1a0d000 	mov	sp, r0
2fff6d28:	e12fff14 	bx	r4
2fff6d2c:	2fffbb80 	.word	0x2fffbb80

2fff6d30 <do_panic>:
2fff6d30:	e24e6004 	sub	r6, lr, #4
2fff6d34:	eb0001c3 	bl	2fff7448 <plat_crash_console_init>
2fff6d38:	e3500000 	cmp	r0, #0
2fff6d3c:	0a000006 	beq	2fff6d5c <do_panic+0x2c>
2fff6d40:	e59f401c 	ldr	r4, [pc, #28]	; 2fff6d64 <do_panic+0x34>
2fff6d44:	eb000033 	bl	2fff6e18 <asm_print_str>
2fff6d48:	e1a04006 	mov	r4, r6
2fff6d4c:	eb000038 	bl	2fff6e34 <asm_print_hex>
2fff6d50:	e59f4010 	ldr	r4, [pc, #16]	; 2fff6d68 <do_panic+0x38>
2fff6d54:	eb00002f 	bl	2fff6e18 <asm_print_str>
2fff6d58:	eb0001e0 	bl	2fff74e0 <plat_crash_console_flush>
2fff6d5c:	e1a0e006 	mov	lr, r6
2fff6d60:	ea0001e4 	b	2fff74f8 <plat_panic_handler>
2fff6d64:	2fffa937 	.word	0x2fffa937
2fff6d68:	2fffa948 	.word	0x2fffa948

2fff6d6c <report_undef_inst>:
2fff6d6c:	e1060300 	mrs	r0, LR_und
2fff6d70:	eb000175 	bl	2fff734c <plat_report_undef_inst>
2fff6d74:	eb0001df 	bl	2fff74f8 <plat_panic_handler>
2fff6d78:	e320f000 	nop	{0}

2fff6d7c <report_prefetch_abort>:
2fff6d7c:	e1040300 	mrs	r0, LR_abt
2fff6d80:	eb00017d 	bl	2fff737c <plat_report_prefetch_abort>
2fff6d84:	eb0001db 	bl	2fff74f8 <plat_panic_handler>
2fff6d88:	e320f000 	nop	{0}

2fff6d8c <report_data_abort>:
2fff6d8c:	e1040300 	mrs	r0, LR_abt
2fff6d90:	eb00018f 	bl	2fff73d4 <plat_report_data_abort>
2fff6d94:	eb0001d7 	bl	2fff74f8 <plat_panic_handler>
2fff6d98:	e320f000 	nop	{0}

2fff6d9c <asm_assert>:
2fff6d9c:	e1a05000 	mov	r5, r0
2fff6da0:	e1a06001 	mov	r6, r1
2fff6da4:	eb0001a7 	bl	2fff7448 <plat_crash_console_init>
2fff6da8:	e3500000 	cmp	r0, #0
2fff6dac:	0a000013 	beq	2fff6e00 <dec_print_loop+0x20>
2fff6db0:	e59f4050 	ldr	r4, [pc, #80]	; 2fff6e08 <dec_print_loop+0x28>
2fff6db4:	eb000017 	bl	2fff6e18 <asm_print_str>
2fff6db8:	e1a04005 	mov	r4, r5
2fff6dbc:	eb000015 	bl	2fff6e18 <asm_print_str>
2fff6dc0:	e59f4044 	ldr	r4, [pc, #68]	; 2fff6e0c <dec_print_loop+0x2c>
2fff6dc4:	eb000013 	bl	2fff6e18 <asm_print_str>
2fff6dc8:	e59f4040 	ldr	r4, [pc, #64]	; 2fff6e10 <dec_print_loop+0x30>
2fff6dcc:	e1160004 	tst	r6, r4
2fff6dd0:	1a00000a 	bne	2fff6e00 <dec_print_loop+0x20>
2fff6dd4:	e1a04006 	mov	r4, r6
2fff6dd8:	e3a0600a 	mov	r6, #10
2fff6ddc:	e59f5030 	ldr	r5, [pc, #48]	; 2fff6e14 <dec_print_loop+0x34>

2fff6de0 <dec_print_loop>:
2fff6de0:	e730f514 	udiv	r0, r4, r5
2fff6de4:	e0644590 	mls	r4, r0, r5, r4
2fff6de8:	e2800030 	add	r0, r0, #48	; 0x30
2fff6dec:	eb0001be 	bl	2fff74ec <plat_crash_console_putc>
2fff6df0:	e735f615 	udiv	r5, r5, r6
2fff6df4:	e3550000 	cmp	r5, #0
2fff6df8:	1afffff8 	bne	2fff6de0 <dec_print_loop>
2fff6dfc:	eb0001b7 	bl	2fff74e0 <plat_crash_console_flush>
2fff6e00:	eb0001bc 	bl	2fff74f8 <plat_panic_handler>
2fff6e04:	e320f000 	nop	{0}
2fff6e08:	2fffa94b 	.word	0x2fffa94b
2fff6e0c:	2fffa959 	.word	0x2fffa959
2fff6e10:	ffff0000 	.word	0xffff0000
2fff6e14:	00002710 	.word	0x00002710

2fff6e18 <asm_print_str>:
2fff6e18:	e1a0700e 	mov	r7, lr
2fff6e1c:	e4d40001 	ldrb	r0, [r4], #1
2fff6e20:	e3500000 	cmp	r0, #0
2fff6e24:	0a000001 	beq	2fff6e30 <asm_print_str+0x18>
2fff6e28:	eb0001af 	bl	2fff74ec <plat_crash_console_putc>
2fff6e2c:	eafffffa 	b	2fff6e1c <asm_print_str+0x4>
2fff6e30:	e12fff17 	bx	r7

2fff6e34 <asm_print_hex>:
2fff6e34:	e1a0700e 	mov	r7, lr
2fff6e38:	e3a05020 	mov	r5, #32
2fff6e3c:	e2455004 	sub	r5, r5, #4
2fff6e40:	e1a00534 	lsr	r0, r4, r5
2fff6e44:	e200000f 	and	r0, r0, #15
2fff6e48:	e350000a 	cmp	r0, #10
2fff6e4c:	3a000000 	bcc	2fff6e54 <asm_print_hex+0x20>
2fff6e50:	e2800027 	add	r0, r0, #39	; 0x27
2fff6e54:	e2800030 	add	r0, r0, #48	; 0x30
2fff6e58:	eb0001a3 	bl	2fff74ec <plat_crash_console_putc>
2fff6e5c:	e3550000 	cmp	r5, #0
2fff6e60:	1afffff5 	bne	2fff6e3c <asm_print_hex+0x8>
2fff6e64:	e12fff17 	bx	r7

2fff6e68 <flush_dcache_range>:
2fff6e68:	e3510000 	cmp	r1, #0
2fff6e6c:	0a00000b 	beq	2fff6ea0 <exit_loop_cimvac>
2fff6e70:	ee103f30 	mrc	15, 0, r3, cr0, cr0, {1}
2fff6e74:	e7e33853 	ubfx	r3, r3, #16, #4
2fff6e78:	e3a02004 	mov	r2, #4
2fff6e7c:	e1a02312 	lsl	r2, r2, r3
2fff6e80:	e0801001 	add	r1, r0, r1
2fff6e84:	e2423001 	sub	r3, r2, #1
2fff6e88:	e1c00003 	bic	r0, r0, r3

2fff6e8c <loop_cimvac>:
2fff6e8c:	ee070f3e 	mcr	15, 0, r0, cr7, cr14, {1}
2fff6e90:	e0800002 	add	r0, r0, r2
2fff6e94:	e1500001 	cmp	r0, r1
2fff6e98:	3afffffb 	bcc	2fff6e8c <loop_cimvac>
2fff6e9c:	f57ff04f 	dsb	sy

2fff6ea0 <exit_loop_cimvac>:
2fff6ea0:	e12fff1e 	bx	lr

2fff6ea4 <clean_dcache_range>:
2fff6ea4:	e3510000 	cmp	r1, #0
2fff6ea8:	0a00000b 	beq	2fff6edc <exit_loop_cmvac>
2fff6eac:	ee103f30 	mrc	15, 0, r3, cr0, cr0, {1}
2fff6eb0:	e7e33853 	ubfx	r3, r3, #16, #4
2fff6eb4:	e3a02004 	mov	r2, #4
2fff6eb8:	e1a02312 	lsl	r2, r2, r3
2fff6ebc:	e0801001 	add	r1, r0, r1
2fff6ec0:	e2423001 	sub	r3, r2, #1
2fff6ec4:	e1c00003 	bic	r0, r0, r3

2fff6ec8 <loop_cmvac>:
2fff6ec8:	ee070f3a 	mcr	15, 0, r0, cr7, cr10, {1}
2fff6ecc:	e0800002 	add	r0, r0, r2
2fff6ed0:	e1500001 	cmp	r0, r1
2fff6ed4:	3afffffb 	bcc	2fff6ec8 <loop_cmvac>
2fff6ed8:	f57ff04f 	dsb	sy

2fff6edc <exit_loop_cmvac>:
2fff6edc:	e12fff1e 	bx	lr

2fff6ee0 <inv_dcache_range>:
2fff6ee0:	e3510000 	cmp	r1, #0
2fff6ee4:	0a00000b 	beq	2fff6f18 <exit_loop_imvac>
2fff6ee8:	ee103f30 	mrc	15, 0, r3, cr0, cr0, {1}
2fff6eec:	e7e33853 	ubfx	r3, r3, #16, #4
2fff6ef0:	e3a02004 	mov	r2, #4
2fff6ef4:	e1a02312 	lsl	r2, r2, r3
2fff6ef8:	e0801001 	add	r1, r0, r1
2fff6efc:	e2423001 	sub	r3, r2, #1
2fff6f00:	e1c00003 	bic	r0, r0, r3

2fff6f04 <loop_imvac>:
2fff6f04:	ee070f36 	mcr	15, 0, r0, cr7, cr6, {1}
2fff6f08:	e0800002 	add	r0, r0, r2
2fff6f0c:	e1500001 	cmp	r0, r1
2fff6f10:	3afffffb 	bcc	2fff6f04 <loop_imvac>
2fff6f14:	f57ff04f 	dsb	sy

2fff6f18 <exit_loop_imvac>:
2fff6f18:	e12fff1e 	bx	lr

2fff6f1c <do_dcsw_op>:
2fff6f1c:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
2fff6f20:	e28fb078 	add	fp, pc, #120	; 0x78
2fff6f24:	e08b6180 	add	r6, fp, r0, lsl #3

2fff6f28 <loop1>:
2fff6f28:	e081a0a1 	add	sl, r1, r1, lsr #1
2fff6f2c:	e1a0ca32 	lsr	ip, r2, sl
2fff6f30:	e20cc007 	and	ip, ip, #7
2fff6f34:	e35c0002 	cmp	ip, #2
2fff6f38:	3a00000f 	bcc	2fff6f7c <level_done>
2fff6f3c:	ee401f10 	mcr	15, 2, r1, cr0, cr0, {0}
2fff6f40:	f57ff06f 	isb	sy
2fff6f44:	ee30cf10 	mrc	15, 1, ip, cr0, cr0, {0}
2fff6f48:	e20ca007 	and	sl, ip, #7
2fff6f4c:	e28aa004 	add	sl, sl, #4
2fff6f50:	e7e941dc 	ubfx	r4, ip, #3, #10
2fff6f54:	e16f5f14 	clz	r5, r4
2fff6f58:	e1a09004 	mov	r9, r4

2fff6f5c <loop2>:
2fff6f5c:	e7ee76dc 	ubfx	r7, ip, #13, #15

2fff6f60 <loop3>:
2fff6f60:	e1810519 	orr	r0, r1, r9, lsl r5
2fff6f64:	e1800a17 	orr	r0, r0, r7, lsl sl
2fff6f68:	e12fff36 	blx	r6
2fff6f6c:	e2577001 	subs	r7, r7, #1
2fff6f70:	2afffffa 	bcs	2fff6f60 <loop3>
2fff6f74:	e2599001 	subs	r9, r9, #1
2fff6f78:	2afffff7 	bcs	2fff6f5c <loop2>

2fff6f7c <level_done>:
2fff6f7c:	e2811002 	add	r1, r1, #2
2fff6f80:	e1530001 	cmp	r3, r1
2fff6f84:	f57ff04f 	dsb	sy
2fff6f88:	8affffe6 	bhi	2fff6f28 <loop1>
2fff6f8c:	e3a06000 	mov	r6, #0
2fff6f90:	ee406f10 	mcr	15, 2, r6, cr0, cr0, {0}
2fff6f94:	f57ff04f 	dsb	sy
2fff6f98:	f57ff06f 	isb	sy
2fff6f9c:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}

2fff6fa0 <dcsw_loop_table>:
2fff6fa0:	ee070f56 	mcr	15, 0, r0, cr7, cr6, {2}
2fff6fa4:	e12fff1e 	bx	lr
2fff6fa8:	ee070f5e 	mcr	15, 0, r0, cr7, cr14, {2}
2fff6fac:	e12fff1e 	bx	lr
2fff6fb0:	ee070f5a 	mcr	15, 0, r0, cr7, cr10, {2}
2fff6fb4:	e12fff1e 	bx	lr

2fff6fb8 <dcsw_op_all>:
2fff6fb8:	ee302f30 	mrc	15, 1, r2, cr0, cr0, {1}
2fff6fbc:	e7e23c52 	ubfx	r3, r2, #24, #3
2fff6fc0:	e1a03083 	lsl	r3, r3, #1
2fff6fc4:	e3a01000 	mov	r1, #0
2fff6fc8:	eaffffd3 	b	2fff6f1c <do_dcsw_op>

2fff6fcc <dcsw_op_level1>:
2fff6fcc:	ee302f30 	mrc	15, 1, r2, cr0, cr0, {1}
2fff6fd0:	e3a03002 	mov	r3, #2
2fff6fd4:	e2431002 	sub	r1, r3, #2
2fff6fd8:	eaffffcf 	b	2fff6f1c <do_dcsw_op>

2fff6fdc <zero_normalmem>:
2fff6fdc:	e3a02000 	mov	r2, #0
2fff6fe0:	e0801001 	add	r1, r0, r1
2fff6fe4:	e3100007 	tst	r0, #7
2fff6fe8:	0a000007 	beq	2fff700c <zero_normalmem+0x30>
2fff6fec:	e380c007 	orr	ip, r0, #7
2fff6ff0:	e29cc001 	adds	ip, ip, #1
2fff6ff4:	0a00000b 	beq	2fff7028 <zero_normalmem+0x4c>
2fff6ff8:	e15c0001 	cmp	ip, r1
2fff6ffc:	2a000009 	bcs	2fff7028 <zero_normalmem+0x4c>
2fff7000:	e4c02001 	strb	r2, [r0], #1
2fff7004:	e150000c 	cmp	r0, ip
2fff7008:	1afffffc 	bne	2fff7000 <zero_normalmem+0x24>
2fff700c:	e3c1c007 	bic	ip, r1, #7
2fff7010:	e150000c 	cmp	r0, ip
2fff7014:	2a000003 	bcs	2fff7028 <zero_normalmem+0x4c>
2fff7018:	e3a03000 	mov	r3, #0
2fff701c:	e8a0000c 	stmia	r0!, {r2, r3}
2fff7020:	e150000c 	cmp	r0, ip
2fff7024:	3afffffc 	bcc	2fff701c <zero_normalmem+0x40>
2fff7028:	e1500001 	cmp	r0, r1
2fff702c:	0a000002 	beq	2fff703c <zero_normalmem+0x60>
2fff7030:	e4c02001 	strb	r2, [r0], #1
2fff7034:	e1500001 	cmp	r0, r1
2fff7038:	1afffffc 	bne	2fff7030 <zero_normalmem+0x54>
2fff703c:	e12fff1e 	bx	lr

2fff7040 <disable_mmu_secure>:
2fff7040:	e3a01005 	mov	r1, #5

2fff7044 <do_disable_mmu>:
2fff7044:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
2fff7048:	e1c00001 	bic	r0, r0, r1
2fff704c:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
2fff7050:	f57ff06f 	isb	sy
2fff7054:	f57ff04f 	dsb	sy
2fff7058:	e12fff1e 	bx	lr

2fff705c <disable_mmu_icache_secure>:
2fff705c:	e51f1000 	ldr	r1, [pc, #-0]	; 2fff7064 <disable_mmu_icache_secure+0x8>
2fff7060:	eafffff7 	b	2fff7044 <do_disable_mmu>
2fff7064:	00001005 	.word	0x00001005

2fff7068 <plat_disable_acp>:
2fff7068:	e12fff1e 	bx	lr

2fff706c <__aeabi_uldivmod>:
2fff706c:	e92d4040 	push	{r6, lr}
2fff7070:	e24dd010 	sub	sp, sp, #16
2fff7074:	e28d6008 	add	r6, sp, #8
2fff7078:	e58d6000 	str	r6, [sp]
2fff707c:	faffe732 	blx	2fff0d4c <__udivmoddi4>
2fff7080:	e59d2008 	ldr	r2, [sp, #8]
2fff7084:	e59d300c 	ldr	r3, [sp, #12]
2fff7088:	e28dd010 	add	sp, sp, #16
2fff708c:	e8bd8040 	pop	{r6, pc}

2fff7090 <console_stm32_core_init>:
2fff7090:	e3500000 	cmp	r0, #0
2fff7094:	0a000001 	beq	2fff70a0 <core_init_fail>
2fff7098:	e3a00001 	mov	r0, #1
2fff709c:	e12fff1e 	bx	lr

2fff70a0 <core_init_fail>:
2fff70a0:	e3a00000 	mov	r0, #0
2fff70a4:	e12fff1e 	bx	lr

2fff70a8 <console_stm32_register>:
2fff70a8:	e92d4010 	push	{r4, lr}
2fff70ac:	e1a04003 	mov	r4, r3
2fff70b0:	e3540000 	cmp	r4, #0
2fff70b4:	0a00000e 	beq	2fff70f4 <register_fail>
2fff70b8:	e5840014 	str	r0, [r4, #20]
2fff70bc:	ebfffff3 	bl	2fff7090 <console_stm32_core_init>
2fff70c0:	e3500000 	cmp	r0, #0
2fff70c4:	0a00000a 	beq	2fff70f4 <register_fail>
2fff70c8:	e1a00004 	mov	r0, r4
2fff70cc:	e8bd4010 	pop	{r4, lr}
2fff70d0:	e59f1020 	ldr	r1, [pc, #32]	; 2fff70f8 <register_fail+0x4>
2fff70d4:	e5801008 	str	r1, [r0, #8]
2fff70d8:	e3a01000 	mov	r1, #0
2fff70dc:	e580100c 	str	r1, [r0, #12]
2fff70e0:	e59f1014 	ldr	r1, [pc, #20]	; 2fff70fc <register_fail+0x8>
2fff70e4:	e5801010 	str	r1, [r0, #16]
2fff70e8:	e3a01005 	mov	r1, #5
2fff70ec:	e5801004 	str	r1, [r0, #4]
2fff70f0:	ea000e94 	b	2fffab48 <__console_register_from_arm>

2fff70f4 <register_fail>:
2fff70f4:	e8bd8010 	pop	{r4, pc}
2fff70f8:	2fff7148 	.word	0x2fff7148
2fff70fc:	2fff7198 	.word	0x2fff7198

2fff7100 <console_stm32_core_putc>:
2fff7100:	e3510000 	cmp	r1, #0
2fff7104:	0a00000d 	beq	2fff7140 <putc_error>
2fff7108:	e3a03a01 	mov	r3, #4096	; 0x1000

2fff710c <txe_loop>:
2fff710c:	e2533001 	subs	r3, r3, #1
2fff7110:	0a00000a 	beq	2fff7140 <putc_error>
2fff7114:	e591201c 	ldr	r2, [r1, #28]
2fff7118:	e3120080 	tst	r2, #128	; 0x80
2fff711c:	0afffffa 	beq	2fff710c <txe_loop>
2fff7120:	e5810028 	str	r0, [r1, #40]	; 0x28
2fff7124:	e3a03a01 	mov	r3, #4096	; 0x1000

2fff7128 <tc_loop>:
2fff7128:	e2533001 	subs	r3, r3, #1
2fff712c:	0a000003 	beq	2fff7140 <putc_error>
2fff7130:	e591201c 	ldr	r2, [r1, #28]
2fff7134:	e3120040 	tst	r2, #64	; 0x40
2fff7138:	0afffffa 	beq	2fff7128 <tc_loop>
2fff713c:	e12fff1e 	bx	lr

2fff7140 <putc_error>:
2fff7140:	e3e00000 	mvn	r0, #0
2fff7144:	e12fff1e 	bx	lr

2fff7148 <console_stm32_putc>:
2fff7148:	e3510000 	cmp	r1, #0
2fff714c:	1a000002 	bne	2fff715c <console_stm32_putc+0x14>
2fff7150:	e59f000c 	ldr	r0, [pc, #12]	; 2fff7164 <console_stm32_putc+0x1c>
2fff7154:	e3a010b0 	mov	r1, #176	; 0xb0
2fff7158:	eaffff0f 	b	2fff6d9c <asm_assert>
2fff715c:	e5911014 	ldr	r1, [r1, #20]
2fff7160:	eaffffe6 	b	2fff7100 <console_stm32_core_putc>
2fff7164:	2fffa960 	.word	0x2fffa960

2fff7168 <console_stm32_core_flush>:
2fff7168:	e3500000 	cmp	r0, #0
2fff716c:	0a000007 	beq	2fff7190 <flush_error>
2fff7170:	e3a02a01 	mov	r2, #4096	; 0x1000

2fff7174 <txe_loop_3>:
2fff7174:	e2522001 	subs	r2, r2, #1
2fff7178:	0a000004 	beq	2fff7190 <flush_error>
2fff717c:	e590101c 	ldr	r1, [r0, #28]
2fff7180:	e3110080 	tst	r1, #128	; 0x80
2fff7184:	0afffffa 	beq	2fff7174 <txe_loop_3>
2fff7188:	e3a00000 	mov	r0, #0
2fff718c:	e12fff1e 	bx	lr

2fff7190 <flush_error>:
2fff7190:	e3e00000 	mvn	r0, #0
2fff7194:	e12fff1e 	bx	lr

2fff7198 <console_stm32_flush>:
2fff7198:	e3500000 	cmp	r0, #0
2fff719c:	1a000002 	bne	2fff71ac <console_stm32_flush+0x14>
2fff71a0:	e59f000c 	ldr	r0, [pc, #12]	; 2fff71b4 <console_stm32_flush+0x1c>
2fff71a4:	e3a010f0 	mov	r1, #240	; 0xf0
2fff71a8:	eafffefb 	b	2fff6d9c <asm_assert>
2fff71ac:	e5900014 	ldr	r0, [r0, #20]
2fff71b0:	eaffffec 	b	2fff7168 <console_stm32_core_flush>
2fff71b4:	2fffa960 	.word	0x2fffa960

2fff71b8 <enable_mmu_direct_svc_mon>:
2fff71b8:	ee111f10 	mrc	15, 0, r1, cr1, cr0, {0}
2fff71bc:	e3110001 	tst	r1, #1
2fff71c0:	0a000002 	beq	2fff71d0 <enable_mmu_direct_svc_mon+0x18>
2fff71c4:	e59f0060 	ldr	r0, [pc, #96]	; 2fff722c <enable_mmu_direct_svc_mon+0x74>
2fff71c8:	e3a01014 	mov	r1, #20
2fff71cc:	eafffef2 	b	2fff6d9c <asm_assert>
2fff71d0:	ee080f17 	mcr	15, 0, r0, cr8, cr7, {0}
2fff71d4:	e1a03000 	mov	r3, r0
2fff71d8:	e59f0050 	ldr	r0, [pc, #80]	; 2fff7230 <enable_mmu_direct_svc_mon+0x78>
2fff71dc:	e5901000 	ldr	r1, [r0]
2fff71e0:	ee0a1f12 	mcr	15, 0, r1, cr10, cr2, {0}
2fff71e4:	e5902008 	ldr	r2, [r0, #8]
2fff71e8:	ee022f50 	mcr	15, 0, r2, cr2, cr0, {2}
2fff71ec:	e5901010 	ldr	r1, [r0, #16]
2fff71f0:	e5902014 	ldr	r2, [r0, #20]
2fff71f4:	ec421f02 	mcrr	15, 0, r1, r2, cr2
2fff71f8:	e3a01000 	mov	r1, #0
2fff71fc:	e3a02000 	mov	r2, #0
2fff7200:	ec421f12 	mcrr	15, 1, r1, r2, cr2
2fff7204:	f57ff04b 	dsb	ish
2fff7208:	f57ff06f 	isb	sy
2fff720c:	ee111f10 	mrc	15, 0, r1, cr1, cr0, {0}
2fff7210:	e59f201c 	ldr	r2, [pc, #28]	; 2fff7234 <enable_mmu_direct_svc_mon+0x7c>
2fff7214:	e1811002 	orr	r1, r1, r2
2fff7218:	e3130001 	tst	r3, #1
2fff721c:	13c11004 	bicne	r1, r1, #4
2fff7220:	ee011f10 	mcr	15, 0, r1, cr1, cr0, {0}
2fff7224:	f57ff06f 	isb	sy
2fff7228:	e12fff1e 	bx	lr
2fff722c:	2fffa988 	.word	0x2fffa988
2fff7230:	2fffd108 	.word	0x2fffd108
2fff7234:	00080005 	.word	0x00080005

2fff7238 <cortex_a7_disable_smp>:
2fff7238:	ee110f30 	mrc	15, 0, r0, cr1, cr0, {1}
2fff723c:	e3c00040 	bic	r0, r0, #64	; 0x40
2fff7240:	ee010f30 	mcr	15, 0, r0, cr1, cr0, {1}
2fff7244:	f57ff06f 	isb	sy
2fff7248:	f57ff04f 	dsb	sy
2fff724c:	e12fff1e 	bx	lr

2fff7250 <cortex_a7_enable_smp>:
2fff7250:	ee110f30 	mrc	15, 0, r0, cr1, cr0, {1}
2fff7254:	e3800040 	orr	r0, r0, #64	; 0x40
2fff7258:	ee010f30 	mcr	15, 0, r0, cr1, cr0, {1}
2fff725c:	f57ff06f 	isb	sy
2fff7260:	e12fff1e 	bx	lr

2fff7264 <cortex_a7_reset_func>:
2fff7264:	eafffff9 	b	2fff7250 <cortex_a7_enable_smp>

2fff7268 <cortex_a7_core_pwr_dwn>:
2fff7268:	e92d5000 	push	{ip, lr}
2fff726c:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
2fff7270:	e3100004 	tst	r0, #4
2fff7274:	0a000002 	beq	2fff7284 <cortex_a7_core_pwr_dwn+0x1c>
2fff7278:	e59f0014 	ldr	r0, [pc, #20]	; 2fff7294 <cortex_a7_core_pwr_dwn+0x2c>
2fff727c:	e3a01011 	mov	r1, #17
2fff7280:	eafffec5 	b	2fff6d9c <asm_assert>
2fff7284:	e3a00001 	mov	r0, #1
2fff7288:	ebffff4f 	bl	2fff6fcc <dcsw_op_level1>
2fff728c:	e8bd5000 	pop	{ip, lr}
2fff7290:	eaffffe8 	b	2fff7238 <cortex_a7_disable_smp>
2fff7294:	2fffa9b0 	.word	0x2fffa9b0

2fff7298 <cortex_a7_cluster_pwr_dwn>:
2fff7298:	e92d5000 	push	{ip, lr}
2fff729c:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
2fff72a0:	e3100004 	tst	r0, #4
2fff72a4:	0a000002 	beq	2fff72b4 <cortex_a7_cluster_pwr_dwn+0x1c>
2fff72a8:	e59f0018 	ldr	r0, [pc, #24]	; 2fff72c8 <cortex_a7_cluster_pwr_dwn+0x30>
2fff72ac:	e3a01011 	mov	r1, #17
2fff72b0:	eafffeb9 	b	2fff6d9c <asm_assert>
2fff72b4:	e3a00001 	mov	r0, #1
2fff72b8:	ebffff43 	bl	2fff6fcc <dcsw_op_level1>
2fff72bc:	ebffff69 	bl	2fff7068 <plat_disable_acp>
2fff72c0:	e8bd5000 	pop	{ip, lr}
2fff72c4:	eaffffdb 	b	2fff7238 <cortex_a7_disable_smp>
2fff72c8:	2fffa9b0 	.word	0x2fffa9b0

2fff72cc <cortex_a7_errata_report>:
2fff72cc:	e12fff1e 	bx	lr

2fff72d0 <plat_report_exception>:
2fff72d0:	e1a0800e 	mov	r8, lr
2fff72d4:	e3500017 	cmp	r0, #23
2fff72d8:	1a000004 	bne	2fff72f0 <undef_inst_lbl>
2fff72dc:	e59f4054 	ldr	r4, [pc, #84]	; 2fff7338 <print_exception_info+0x10>
2fff72e0:	ebfffecc 	bl	2fff6e18 <asm_print_str>
2fff72e4:	e1044300 	mrs	r4, LR_abt
2fff72e8:	e2444004 	sub	r4, r4, #4
2fff72ec:	ea00000d 	b	2fff7328 <print_exception_info>

2fff72f0 <undef_inst_lbl>:
2fff72f0:	e350001b 	cmp	r0, #27
2fff72f4:	1a000003 	bne	2fff7308 <other_exception_lbl>
2fff72f8:	e59f403c 	ldr	r4, [pc, #60]	; 2fff733c <print_exception_info+0x14>
2fff72fc:	ebfffec5 	bl	2fff6e18 <asm_print_str>
2fff7300:	e1064300 	mrs	r4, LR_und
2fff7304:	ea000007 	b	2fff7328 <print_exception_info>

2fff7308 <other_exception_lbl>:
2fff7308:	e1a09000 	mov	r9, r0
2fff730c:	e59f402c 	ldr	r4, [pc, #44]	; 2fff7340 <print_exception_info+0x18>
2fff7310:	ebfffec0 	bl	2fff6e18 <asm_print_str>
2fff7314:	e1a04009 	mov	r4, r9
2fff7318:	ebfffec5 	bl	2fff6e34 <asm_print_hex>
2fff731c:	e59f4020 	ldr	r4, [pc, #32]	; 2fff7344 <print_exception_info+0x1c>
2fff7320:	ebfffebc 	bl	2fff6e18 <asm_print_str>
2fff7324:	e1a04006 	mov	r4, r6

2fff7328 <print_exception_info>:
2fff7328:	ebfffec1 	bl	2fff6e34 <asm_print_hex>
2fff732c:	e59f4014 	ldr	r4, [pc, #20]	; 2fff7348 <print_exception_info+0x20>
2fff7330:	ebfffeb8 	bl	2fff6e18 <asm_print_str>
2fff7334:	e12fff18 	bx	r8
2fff7338:	2fffa9cd 	.word	0x2fffa9cd
2fff733c:	2fffaa05 	.word	0x2fffaa05
2fff7340:	2fffaa23 	.word	0x2fffaa23
2fff7344:	2fffaa36 	.word	0x2fffaa36
2fff7348:	2fffaa6a 	.word	0x2fffaa6a

2fff734c <plat_report_undef_inst>:
2fff734c:	e1a0800e 	mov	r8, lr
2fff7350:	e1a09000 	mov	r9, r0
2fff7354:	e59f4018 	ldr	r4, [pc, #24]	; 2fff7374 <plat_report_undef_inst+0x28>
2fff7358:	ebfffeae 	bl	2fff6e18 <asm_print_str>
2fff735c:	e1a04009 	mov	r4, r9
2fff7360:	e2444004 	sub	r4, r4, #4
2fff7364:	ebfffeb2 	bl	2fff6e34 <asm_print_hex>
2fff7368:	e59f4008 	ldr	r4, [pc, #8]	; 2fff7378 <plat_report_undef_inst+0x2c>
2fff736c:	ebfffea9 	bl	2fff6e18 <asm_print_str>
2fff7370:	e12fff18 	bx	r8
2fff7374:	2fffaa05 	.word	0x2fffaa05
2fff7378:	2fffaa6a 	.word	0x2fffaa6a

2fff737c <plat_report_prefetch_abort>:
2fff737c:	e1a0800e 	mov	r8, lr
2fff7380:	e1a09000 	mov	r9, r0
2fff7384:	e59f4038 	ldr	r4, [pc, #56]	; 2fff73c4 <plat_report_prefetch_abort+0x48>
2fff7388:	ebfffea2 	bl	2fff6e18 <asm_print_str>
2fff738c:	e1a04009 	mov	r4, r9
2fff7390:	e2444004 	sub	r4, r4, #4
2fff7394:	ebfffea6 	bl	2fff6e34 <asm_print_hex>
2fff7398:	e59f4028 	ldr	r4, [pc, #40]	; 2fff73c8 <plat_report_prefetch_abort+0x4c>
2fff739c:	ebfffe9d 	bl	2fff6e18 <asm_print_str>
2fff73a0:	ee154f30 	mrc	15, 0, r4, cr5, cr0, {1}
2fff73a4:	ebfffea2 	bl	2fff6e34 <asm_print_hex>
2fff73a8:	e59f401c 	ldr	r4, [pc, #28]	; 2fff73cc <plat_report_prefetch_abort+0x50>
2fff73ac:	ebfffe99 	bl	2fff6e18 <asm_print_str>
2fff73b0:	ee164f50 	mrc	15, 0, r4, cr6, cr0, {2}
2fff73b4:	ebfffe9e 	bl	2fff6e34 <asm_print_hex>
2fff73b8:	e59f4010 	ldr	r4, [pc, #16]	; 2fff73d0 <plat_report_prefetch_abort+0x54>
2fff73bc:	ebfffe95 	bl	2fff6e18 <asm_print_str>
2fff73c0:	e12fff18 	bx	r8
2fff73c4:	2fffa9db 	.word	0x2fffa9db
2fff73c8:	2fffaa54 	.word	0x2fffaa54
2fff73cc:	2fffaa5f 	.word	0x2fffaa5f
2fff73d0:	2fffaa6a 	.word	0x2fffaa6a

2fff73d4 <plat_report_data_abort>:
2fff73d4:	e1a0800e 	mov	r8, lr
2fff73d8:	e1a09000 	mov	r9, r0
2fff73dc:	e59f4038 	ldr	r4, [pc, #56]	; 2fff741c <plat_report_data_abort+0x48>
2fff73e0:	ebfffe8c 	bl	2fff6e18 <asm_print_str>
2fff73e4:	e1a04009 	mov	r4, r9
2fff73e8:	e2444008 	sub	r4, r4, #8
2fff73ec:	ebfffe90 	bl	2fff6e34 <asm_print_hex>
2fff73f0:	e59f4028 	ldr	r4, [pc, #40]	; 2fff7420 <plat_report_data_abort+0x4c>
2fff73f4:	ebfffe87 	bl	2fff6e18 <asm_print_str>
2fff73f8:	ee154f10 	mrc	15, 0, r4, cr5, cr0, {0}
2fff73fc:	ebfffe8c 	bl	2fff6e34 <asm_print_hex>
2fff7400:	e59f401c 	ldr	r4, [pc, #28]	; 2fff7424 <plat_report_data_abort+0x50>
2fff7404:	ebfffe83 	bl	2fff6e18 <asm_print_str>
2fff7408:	ee164f10 	mrc	15, 0, r4, cr6, cr0, {0}
2fff740c:	ebfffe88 	bl	2fff6e34 <asm_print_hex>
2fff7410:	e59f4010 	ldr	r4, [pc, #16]	; 2fff7428 <plat_report_data_abort+0x54>
2fff7414:	ebfffe7f 	bl	2fff6e18 <asm_print_str>
2fff7418:	e12fff18 	bx	r8
2fff741c:	2fffa9f2 	.word	0x2fffa9f2
2fff7420:	2fffaa3e 	.word	0x2fffaa3e
2fff7424:	2fffaa49 	.word	0x2fffaa49
2fff7428:	2fffaa6a 	.word	0x2fffaa6a

2fff742c <plat_reset_handler>:
2fff742c:	e12fff1e 	bx	lr

2fff7430 <plat_stm32mp1_get_core_pos>:
2fff7430:	e20010ff 	and	r1, r0, #255	; 0xff
2fff7434:	e2000cff 	and	r0, r0, #65280	; 0xff00
2fff7438:	e0810320 	add	r0, r1, r0, lsr #6
2fff743c:	e12fff1e 	bx	lr

2fff7440 <plat_my_core_pos>:
2fff7440:	ee100fb0 	mrc	15, 0, r0, cr0, cr0, {5}
2fff7444:	eafffff9 	b	2fff7430 <plat_stm32mp1_get_core_pos>

2fff7448 <plat_crash_console_init>:
2fff7448:	e59f1074 	ldr	r1, [pc, #116]	; 2fff74c4 <plat_crash_console_init+0x7c>
2fff744c:	e5912000 	ldr	r2, [r1]
2fff7450:	e3822040 	orr	r2, r2, #64	; 0x40
2fff7454:	e5812000 	str	r2, [r1]
2fff7458:	e59f1068 	ldr	r1, [pc, #104]	; 2fff74c8 <plat_crash_console_init+0x80>
2fff745c:	e5912000 	ldr	r2, [r1]
2fff7460:	e3c22503 	bic	r2, r2, #12582912	; 0xc00000
2fff7464:	e3822502 	orr	r2, r2, #8388608	; 0x800000
2fff7468:	e5812000 	str	r2, [r1]
2fff746c:	e5912008 	ldr	r2, [r1, #8]
2fff7470:	e3c22503 	bic	r2, r2, #12582912	; 0xc00000
2fff7474:	e5812008 	str	r2, [r1, #8]
2fff7478:	e591200c 	ldr	r2, [r1, #12]
2fff747c:	e3c22503 	bic	r2, r2, #12582912	; 0xc00000
2fff7480:	e581200c 	str	r2, [r1, #12]
2fff7484:	e3a0200b 	mov	r2, #11
2fff7488:	e5912024 	ldr	r2, [r1, #36]	; 0x24
2fff748c:	e3c22a0f 	bic	r2, r2, #61440	; 0xf000
2fff7490:	e3822a06 	orr	r2, r2, #24576	; 0x6000
2fff7494:	e5812024 	str	r2, [r1, #36]	; 0x24
2fff7498:	e59f102c 	ldr	r1, [pc, #44]	; 2fff74cc <plat_crash_console_init+0x84>
2fff749c:	e3a02002 	mov	r2, #2
2fff74a0:	e5812000 	str	r2, [r1]
2fff74a4:	e59f1024 	ldr	r1, [pc, #36]	; 2fff74d0 <plat_crash_console_init+0x88>
2fff74a8:	e5912000 	ldr	r2, [r1]
2fff74ac:	e3822801 	orr	r2, r2, #65536	; 0x10000
2fff74b0:	e5812000 	str	r2, [r1]
2fff74b4:	e59f0018 	ldr	r0, [pc, #24]	; 2fff74d4 <plat_crash_console_init+0x8c>
2fff74b8:	e59f1018 	ldr	r1, [pc, #24]	; 2fff74d8 <plat_crash_console_init+0x90>
2fff74bc:	e59f2018 	ldr	r2, [pc, #24]	; 2fff74dc <plat_crash_console_init+0x94>
2fff74c0:	eafffef2 	b	2fff7090 <console_stm32_core_init>
2fff74c4:	50000a28 	.word	0x50000a28
2fff74c8:	50008000 	.word	0x50008000
2fff74cc:	500008e8 	.word	0x500008e8
2fff74d0:	50000a00 	.word	0x50000a00
2fff74d4:	40010000 	.word	0x40010000
2fff74d8:	03d09000 	.word	0x03d09000
2fff74dc:	0001c200 	.word	0x0001c200

2fff74e0 <plat_crash_console_flush>:
2fff74e0:	e51f1000 	ldr	r1, [pc, #-0]	; 2fff74e8 <plat_crash_console_flush+0x8>
2fff74e4:	eaffff1f 	b	2fff7168 <console_stm32_core_flush>
2fff74e8:	40010000 	.word	0x40010000

2fff74ec <plat_crash_console_putc>:
2fff74ec:	e51f1000 	ldr	r1, [pc, #-0]	; 2fff74f4 <plat_crash_console_putc+0x8>
2fff74f0:	eaffff02 	b	2fff7100 <console_stm32_core_putc>
2fff74f4:	40010000 	.word	0x40010000

2fff74f8 <plat_panic_handler>:
2fff74f8:	e10f0000 	mrs	r0, CPSR
2fff74fc:	e200001f 	and	r0, r0, #31
2fff7500:	ebffff72 	bl	2fff72d0 <plat_report_exception>
2fff7504:	e1a0e006 	mov	lr, r6
2fff7508:	eafffffe 	b	2fff7508 <plat_panic_handler+0x10>

2fff750c <wfi_svc_int_enable>:
2fff750c:	e92d4110 	push	{r4, r8, lr}
2fff7510:	ee114f11 	mrc	15, 0, r4, cr1, cr1, {0}
2fff7514:	e1a0800d 	mov	r8, sp
2fff7518:	e1a0d000 	mov	sp, r0
2fff751c:	e2800c02 	add	r0, r0, #512	; 0x200
2fff7520:	e58d007c 	str	r0, [sp, #124]	; 0x7c
2fff7524:	e58d4084 	str	r4, [sp, #132]	; 0x84
2fff7528:	f1020013 	cps	#19
2fff752c:	f1080140 	cpsie	af
2fff7530:	f57ff04f 	dsb	sy
2fff7534:	f57ff06f 	isb	sy
2fff7538:	e320f003 	wfi
2fff753c:	f10c0140 	cpsid	af
2fff7540:	f1020016 	cps	#22
2fff7544:	e1a0d008 	mov	sp, r8
2fff7548:	e8bd4110 	pop	{r4, r8, lr}
2fff754c:	e12fff1e 	bx	lr

2fff7550 <fdt32_to_cpu>:
2fff7550:	ba00      	rev	r0, r0
2fff7552:	4770      	bx	lr

2fff7554 <fdt_check_header>:
2fff7554:	b508      	push	{r3, lr}
2fff7556:	4603      	mov	r3, r0
2fff7558:	6800      	ldr	r0, [r0, #0]
2fff755a:	f7ff fff9 	bl	2fff7550 <fdt32_to_cpu>
2fff755e:	4a11      	ldr	r2, [pc, #68]	; (2fff75a4 <fdt_check_header+0x50>)
2fff7560:	4290      	cmp	r0, r2
2fff7562:	d10d      	bne.n	2fff7580 <fdt_check_header+0x2c>
2fff7564:	6958      	ldr	r0, [r3, #20]
2fff7566:	f7ff fff3 	bl	2fff7550 <fdt32_to_cpu>
2fff756a:	2801      	cmp	r0, #1
2fff756c:	d914      	bls.n	2fff7598 <fdt_check_header+0x44>
2fff756e:	6998      	ldr	r0, [r3, #24]
2fff7570:	f7ff ffee 	bl	2fff7550 <fdt32_to_cpu>
2fff7574:	2811      	cmp	r0, #17
2fff7576:	bf94      	ite	ls
2fff7578:	2000      	movls	r0, #0
2fff757a:	f06f 0009 	mvnhi.w	r0, #9
2fff757e:	bd08      	pop	{r3, pc}
2fff7580:	4a09      	ldr	r2, [pc, #36]	; (2fff75a8 <fdt_check_header+0x54>)
2fff7582:	4290      	cmp	r0, r2
2fff7584:	d10b      	bne.n	2fff759e <fdt_check_header+0x4a>
2fff7586:	6a58      	ldr	r0, [r3, #36]	; 0x24
2fff7588:	f7ff ffe2 	bl	2fff7550 <fdt32_to_cpu>
2fff758c:	2800      	cmp	r0, #0
2fff758e:	bf14      	ite	ne
2fff7590:	2000      	movne	r0, #0
2fff7592:	f06f 0006 	mvneq.w	r0, #6
2fff7596:	e7f2      	b.n	2fff757e <fdt_check_header+0x2a>
2fff7598:	f06f 0009 	mvn.w	r0, #9
2fff759c:	e7ef      	b.n	2fff757e <fdt_check_header+0x2a>
2fff759e:	f06f 0008 	mvn.w	r0, #8
2fff75a2:	e7ec      	b.n	2fff757e <fdt_check_header+0x2a>
2fff75a4:	d00dfeed 	.word	0xd00dfeed
2fff75a8:	2ff20112 	.word	0x2ff20112

2fff75ac <fdt_offset_ptr>:
2fff75ac:	b538      	push	{r3, r4, r5, lr}
2fff75ae:	4603      	mov	r3, r0
2fff75b0:	6880      	ldr	r0, [r0, #8]
2fff75b2:	f7ff ffcd 	bl	2fff7550 <fdt32_to_cpu>
2fff75b6:	1844      	adds	r4, r0, r1
2fff75b8:	d201      	bcs.n	2fff75be <fdt_offset_ptr+0x12>
2fff75ba:	18a5      	adds	r5, r4, r2
2fff75bc:	d301      	bcc.n	2fff75c2 <fdt_offset_ptr+0x16>
2fff75be:	2000      	movs	r0, #0
2fff75c0:	e011      	b.n	2fff75e6 <fdt_offset_ptr+0x3a>
2fff75c2:	6858      	ldr	r0, [r3, #4]
2fff75c4:	f7ff ffc4 	bl	2fff7550 <fdt32_to_cpu>
2fff75c8:	4285      	cmp	r5, r0
2fff75ca:	d8f8      	bhi.n	2fff75be <fdt_offset_ptr+0x12>
2fff75cc:	6958      	ldr	r0, [r3, #20]
2fff75ce:	f7ff ffbf 	bl	2fff7550 <fdt32_to_cpu>
2fff75d2:	2810      	cmp	r0, #16
2fff75d4:	d906      	bls.n	2fff75e4 <fdt_offset_ptr+0x38>
2fff75d6:	1889      	adds	r1, r1, r2
2fff75d8:	d2f1      	bcs.n	2fff75be <fdt_offset_ptr+0x12>
2fff75da:	6a58      	ldr	r0, [r3, #36]	; 0x24
2fff75dc:	f7ff ffb8 	bl	2fff7550 <fdt32_to_cpu>
2fff75e0:	4281      	cmp	r1, r0
2fff75e2:	d8ec      	bhi.n	2fff75be <fdt_offset_ptr+0x12>
2fff75e4:	1918      	adds	r0, r3, r4
2fff75e6:	bd38      	pop	{r3, r4, r5, pc}

2fff75e8 <fdt_next_tag>:
2fff75e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2fff75ec:	f06f 0307 	mvn.w	r3, #7
2fff75f0:	6013      	str	r3, [r2, #0]
2fff75f2:	4690      	mov	r8, r2
2fff75f4:	2204      	movs	r2, #4
2fff75f6:	4606      	mov	r6, r0
2fff75f8:	460f      	mov	r7, r1
2fff75fa:	f7ff ffd7 	bl	2fff75ac <fdt_offset_ptr>
2fff75fe:	b908      	cbnz	r0, 2fff7604 <fdt_next_tag+0x1c>
2fff7600:	2509      	movs	r5, #9
2fff7602:	e03a      	b.n	2fff767a <fdt_next_tag+0x92>
2fff7604:	6800      	ldr	r0, [r0, #0]
2fff7606:	1d3c      	adds	r4, r7, #4
2fff7608:	f7ff ffa2 	bl	2fff7550 <fdt32_to_cpu>
2fff760c:	f06f 030a 	mvn.w	r3, #10
2fff7610:	4605      	mov	r5, r0
2fff7612:	f8c8 3000 	str.w	r3, [r8]
2fff7616:	1e43      	subs	r3, r0, #1
2fff7618:	2b08      	cmp	r3, #8
2fff761a:	d8f1      	bhi.n	2fff7600 <fdt_next_tag+0x18>
2fff761c:	a201      	add	r2, pc, #4	; (adr r2, 2fff7624 <fdt_next_tag+0x3c>)
2fff761e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
2fff7622:	bf00      	nop
2fff7624:	2fff7649 	.word	0x2fff7649
2fff7628:	2fff7663 	.word	0x2fff7663
2fff762c:	2fff7681 	.word	0x2fff7681
2fff7630:	2fff7663 	.word	0x2fff7663
2fff7634:	2fff7601 	.word	0x2fff7601
2fff7638:	2fff7601 	.word	0x2fff7601
2fff763c:	2fff7601 	.word	0x2fff7601
2fff7640:	2fff7601 	.word	0x2fff7601
2fff7644:	2fff7663 	.word	0x2fff7663
2fff7648:	2201      	movs	r2, #1
2fff764a:	4621      	mov	r1, r4
2fff764c:	4630      	mov	r0, r6
2fff764e:	f104 0901 	add.w	r9, r4, #1
2fff7652:	f7ff ffab 	bl	2fff75ac <fdt_offset_ptr>
2fff7656:	2800      	cmp	r0, #0
2fff7658:	d0d2      	beq.n	2fff7600 <fdt_next_tag+0x18>
2fff765a:	7803      	ldrb	r3, [r0, #0]
2fff765c:	464c      	mov	r4, r9
2fff765e:	2b00      	cmp	r3, #0
2fff7660:	d1f2      	bne.n	2fff7648 <fdt_next_tag+0x60>
2fff7662:	1be2      	subs	r2, r4, r7
2fff7664:	4639      	mov	r1, r7
2fff7666:	4630      	mov	r0, r6
2fff7668:	f7ff ffa0 	bl	2fff75ac <fdt_offset_ptr>
2fff766c:	2800      	cmp	r0, #0
2fff766e:	d0c7      	beq.n	2fff7600 <fdt_next_tag+0x18>
2fff7670:	3403      	adds	r4, #3
2fff7672:	f024 0403 	bic.w	r4, r4, #3
2fff7676:	f8c8 4000 	str.w	r4, [r8]
2fff767a:	4628      	mov	r0, r5
2fff767c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2fff7680:	2204      	movs	r2, #4
2fff7682:	4621      	mov	r1, r4
2fff7684:	4630      	mov	r0, r6
2fff7686:	f7ff ff91 	bl	2fff75ac <fdt_offset_ptr>
2fff768a:	2800      	cmp	r0, #0
2fff768c:	d0b8      	beq.n	2fff7600 <fdt_next_tag+0x18>
2fff768e:	6800      	ldr	r0, [r0, #0]
2fff7690:	f7ff ff5e 	bl	2fff7550 <fdt32_to_cpu>
2fff7694:	f107 030c 	add.w	r3, r7, #12
2fff7698:	4602      	mov	r2, r0
2fff769a:	18c4      	adds	r4, r0, r3
2fff769c:	6970      	ldr	r0, [r6, #20]
2fff769e:	f7ff ff57 	bl	2fff7550 <fdt32_to_cpu>
2fff76a2:	280f      	cmp	r0, #15
2fff76a4:	d8dd      	bhi.n	2fff7662 <fdt_next_tag+0x7a>
2fff76a6:	2a07      	cmp	r2, #7
2fff76a8:	d9db      	bls.n	2fff7662 <fdt_next_tag+0x7a>
2fff76aa:	075b      	lsls	r3, r3, #29
2fff76ac:	bf18      	it	ne
2fff76ae:	3404      	addne	r4, #4
2fff76b0:	e7d7      	b.n	2fff7662 <fdt_next_tag+0x7a>
2fff76b2:	bf00      	nop

2fff76b4 <fdt_check_node_offset_>:
2fff76b4:	1e0b      	subs	r3, r1, #0
2fff76b6:	b507      	push	{r0, r1, r2, lr}
2fff76b8:	9101      	str	r1, [sp, #4]
2fff76ba:	da04      	bge.n	2fff76c6 <fdt_check_node_offset_+0x12>
2fff76bc:	f06f 0003 	mvn.w	r0, #3
2fff76c0:	b003      	add	sp, #12
2fff76c2:	f85d fb04 	ldr.w	pc, [sp], #4
2fff76c6:	079b      	lsls	r3, r3, #30
2fff76c8:	d1f8      	bne.n	2fff76bc <fdt_check_node_offset_+0x8>
2fff76ca:	aa01      	add	r2, sp, #4
2fff76cc:	f7ff ff8c 	bl	2fff75e8 <fdt_next_tag>
2fff76d0:	2801      	cmp	r0, #1
2fff76d2:	d1f3      	bne.n	2fff76bc <fdt_check_node_offset_+0x8>
2fff76d4:	9801      	ldr	r0, [sp, #4]
2fff76d6:	e7f3      	b.n	2fff76c0 <fdt_check_node_offset_+0xc>

2fff76d8 <fdt_check_prop_offset_>:
2fff76d8:	1e0b      	subs	r3, r1, #0
2fff76da:	b507      	push	{r0, r1, r2, lr}
2fff76dc:	9101      	str	r1, [sp, #4]
2fff76de:	da04      	bge.n	2fff76ea <fdt_check_prop_offset_+0x12>
2fff76e0:	f06f 0003 	mvn.w	r0, #3
2fff76e4:	b003      	add	sp, #12
2fff76e6:	f85d fb04 	ldr.w	pc, [sp], #4
2fff76ea:	079b      	lsls	r3, r3, #30
2fff76ec:	d1f8      	bne.n	2fff76e0 <fdt_check_prop_offset_+0x8>
2fff76ee:	aa01      	add	r2, sp, #4
2fff76f0:	f7ff ff7a 	bl	2fff75e8 <fdt_next_tag>
2fff76f4:	2803      	cmp	r0, #3
2fff76f6:	d1f3      	bne.n	2fff76e0 <fdt_check_prop_offset_+0x8>
2fff76f8:	9801      	ldr	r0, [sp, #4]
2fff76fa:	e7f3      	b.n	2fff76e4 <fdt_check_prop_offset_+0xc>

2fff76fc <fdt_next_node>:
2fff76fc:	2300      	movs	r3, #0
2fff76fe:	4299      	cmp	r1, r3
2fff7700:	b573      	push	{r0, r1, r4, r5, r6, lr}
2fff7702:	4606      	mov	r6, r0
2fff7704:	9301      	str	r3, [sp, #4]
2fff7706:	4615      	mov	r5, r2
2fff7708:	db05      	blt.n	2fff7716 <fdt_next_node+0x1a>
2fff770a:	f7ff ffd3 	bl	2fff76b4 <fdt_check_node_offset_>
2fff770e:	9001      	str	r0, [sp, #4]
2fff7710:	2800      	cmp	r0, #0
2fff7712:	4604      	mov	r4, r0
2fff7714:	db0f      	blt.n	2fff7736 <fdt_next_node+0x3a>
2fff7716:	9c01      	ldr	r4, [sp, #4]
2fff7718:	aa01      	add	r2, sp, #4
2fff771a:	4630      	mov	r0, r6
2fff771c:	4621      	mov	r1, r4
2fff771e:	f7ff ff63 	bl	2fff75e8 <fdt_next_tag>
2fff7722:	2802      	cmp	r0, #2
2fff7724:	d00a      	beq.n	2fff773c <fdt_next_node+0x40>
2fff7726:	2809      	cmp	r0, #9
2fff7728:	d011      	beq.n	2fff774e <fdt_next_node+0x52>
2fff772a:	2801      	cmp	r0, #1
2fff772c:	d1f3      	bne.n	2fff7716 <fdt_next_node+0x1a>
2fff772e:	b115      	cbz	r5, 2fff7736 <fdt_next_node+0x3a>
2fff7730:	682b      	ldr	r3, [r5, #0]
2fff7732:	3301      	adds	r3, #1
2fff7734:	602b      	str	r3, [r5, #0]
2fff7736:	4620      	mov	r0, r4
2fff7738:	b002      	add	sp, #8
2fff773a:	bd70      	pop	{r4, r5, r6, pc}
2fff773c:	2d00      	cmp	r5, #0
2fff773e:	d0ea      	beq.n	2fff7716 <fdt_next_node+0x1a>
2fff7740:	682b      	ldr	r3, [r5, #0]
2fff7742:	3b01      	subs	r3, #1
2fff7744:	602b      	str	r3, [r5, #0]
2fff7746:	2b00      	cmp	r3, #0
2fff7748:	dae5      	bge.n	2fff7716 <fdt_next_node+0x1a>
2fff774a:	9c01      	ldr	r4, [sp, #4]
2fff774c:	e7f3      	b.n	2fff7736 <fdt_next_node+0x3a>
2fff774e:	9c01      	ldr	r4, [sp, #4]
2fff7750:	2c00      	cmp	r4, #0
2fff7752:	da07      	bge.n	2fff7764 <fdt_next_node+0x68>
2fff7754:	f114 0f08 	cmn.w	r4, #8
2fff7758:	d1ed      	bne.n	2fff7736 <fdt_next_node+0x3a>
2fff775a:	2d00      	cmp	r5, #0
2fff775c:	bf08      	it	eq
2fff775e:	f04f 34ff 	moveq.w	r4, #4294967295	; 0xffffffff
2fff7762:	e7e8      	b.n	2fff7736 <fdt_next_node+0x3a>
2fff7764:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff7768:	e7e5      	b.n	2fff7736 <fdt_next_node+0x3a>

2fff776a <fdt_first_subnode>:
2fff776a:	b507      	push	{r0, r1, r2, lr}
2fff776c:	aa02      	add	r2, sp, #8
2fff776e:	2300      	movs	r3, #0
2fff7770:	f842 3d04 	str.w	r3, [r2, #-4]!
2fff7774:	f7ff ffc2 	bl	2fff76fc <fdt_next_node>
2fff7778:	2800      	cmp	r0, #0
2fff777a:	db07      	blt.n	2fff778c <fdt_first_subnode+0x22>
2fff777c:	9b01      	ldr	r3, [sp, #4]
2fff777e:	2b01      	cmp	r3, #1
2fff7780:	bf18      	it	ne
2fff7782:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
2fff7786:	b003      	add	sp, #12
2fff7788:	f85d fb04 	ldr.w	pc, [sp], #4
2fff778c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff7790:	e7f9      	b.n	2fff7786 <fdt_first_subnode+0x1c>

2fff7792 <fdt_next_subnode>:
2fff7792:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff7794:	4605      	mov	r5, r0
2fff7796:	ac02      	add	r4, sp, #8
2fff7798:	2301      	movs	r3, #1
2fff779a:	f844 3d04 	str.w	r3, [r4, #-4]!
2fff779e:	4622      	mov	r2, r4
2fff77a0:	4628      	mov	r0, r5
2fff77a2:	f7ff ffab 	bl	2fff76fc <fdt_next_node>
2fff77a6:	1e01      	subs	r1, r0, #0
2fff77a8:	db07      	blt.n	2fff77ba <fdt_next_subnode+0x28>
2fff77aa:	9b01      	ldr	r3, [sp, #4]
2fff77ac:	2b00      	cmp	r3, #0
2fff77ae:	dd04      	ble.n	2fff77ba <fdt_next_subnode+0x28>
2fff77b0:	2b01      	cmp	r3, #1
2fff77b2:	d1f4      	bne.n	2fff779e <fdt_next_subnode+0xc>
2fff77b4:	4608      	mov	r0, r1
2fff77b6:	b003      	add	sp, #12
2fff77b8:	bd30      	pop	{r4, r5, pc}
2fff77ba:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2fff77be:	e7f9      	b.n	2fff77b4 <fdt_next_subnode+0x22>

2fff77c0 <fdt_address_cells>:
2fff77c0:	b507      	push	{r0, r1, r2, lr}
2fff77c2:	ab01      	add	r3, sp, #4
2fff77c4:	4a0f      	ldr	r2, [pc, #60]	; (2fff7804 <fdt_address_cells+0x44>)
2fff77c6:	f000 f952 	bl	2fff7a6e <fdt_getprop>
2fff77ca:	b1b0      	cbz	r0, 2fff77fa <fdt_address_cells+0x3a>
2fff77cc:	9b01      	ldr	r3, [sp, #4]
2fff77ce:	2b04      	cmp	r3, #4
2fff77d0:	d115      	bne.n	2fff77fe <fdt_address_cells+0x3e>
2fff77d2:	6803      	ldr	r3, [r0, #0]
2fff77d4:	0e18      	lsrs	r0, r3, #24
2fff77d6:	f3c3 2207 	ubfx	r2, r3, #8, #8
2fff77da:	ea40 6003 	orr.w	r0, r0, r3, lsl #24
2fff77de:	f3c3 4307 	ubfx	r3, r3, #16, #8
2fff77e2:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
2fff77e6:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
2fff77ea:	1e43      	subs	r3, r0, #1
2fff77ec:	2b04      	cmp	r3, #4
2fff77ee:	bf28      	it	cs
2fff77f0:	f06f 000d 	mvncs.w	r0, #13
2fff77f4:	b003      	add	sp, #12
2fff77f6:	f85d fb04 	ldr.w	pc, [sp], #4
2fff77fa:	2002      	movs	r0, #2
2fff77fc:	e7fa      	b.n	2fff77f4 <fdt_address_cells+0x34>
2fff77fe:	f06f 000d 	mvn.w	r0, #13
2fff7802:	e7f7      	b.n	2fff77f4 <fdt_address_cells+0x34>
2fff7804:	2fffaa6d 	.word	0x2fffaa6d

2fff7808 <fdt32_to_cpu>:
2fff7808:	ba00      	rev	r0, r0
2fff780a:	4770      	bx	lr

2fff780c <nextprop_>:
2fff780c:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff780e:	4605      	mov	r5, r0
2fff7810:	460c      	mov	r4, r1
2fff7812:	aa01      	add	r2, sp, #4
2fff7814:	4621      	mov	r1, r4
2fff7816:	4628      	mov	r0, r5
2fff7818:	f7ff fee6 	bl	2fff75e8 <fdt_next_tag>
2fff781c:	2803      	cmp	r0, #3
2fff781e:	d006      	beq.n	2fff782e <nextprop_+0x22>
2fff7820:	9c01      	ldr	r4, [sp, #4]
2fff7822:	2809      	cmp	r0, #9
2fff7824:	d106      	bne.n	2fff7834 <nextprop_+0x28>
2fff7826:	2c00      	cmp	r4, #0
2fff7828:	bfa8      	it	ge
2fff782a:	f06f 040a 	mvnge.w	r4, #10
2fff782e:	4620      	mov	r0, r4
2fff7830:	b003      	add	sp, #12
2fff7832:	bd30      	pop	{r4, r5, pc}
2fff7834:	2804      	cmp	r0, #4
2fff7836:	d0ec      	beq.n	2fff7812 <nextprop_+0x6>
2fff7838:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff783c:	e7f7      	b.n	2fff782e <nextprop_+0x22>

2fff783e <fdt_get_property_by_offset_>:
2fff783e:	b570      	push	{r4, r5, r6, lr}
2fff7840:	4604      	mov	r4, r0
2fff7842:	460e      	mov	r6, r1
2fff7844:	4615      	mov	r5, r2
2fff7846:	f7ff ff47 	bl	2fff76d8 <fdt_check_prop_offset_>
2fff784a:	2800      	cmp	r0, #0
2fff784c:	da04      	bge.n	2fff7858 <fdt_get_property_by_offset_+0x1a>
2fff784e:	b17d      	cbz	r5, 2fff7870 <fdt_get_property_by_offset_+0x32>
2fff7850:	6028      	str	r0, [r5, #0]
2fff7852:	2400      	movs	r4, #0
2fff7854:	4620      	mov	r0, r4
2fff7856:	bd70      	pop	{r4, r5, r6, pc}
2fff7858:	68a0      	ldr	r0, [r4, #8]
2fff785a:	f7ff ffd5 	bl	2fff7808 <fdt32_to_cpu>
2fff785e:	4430      	add	r0, r6
2fff7860:	4404      	add	r4, r0
2fff7862:	2d00      	cmp	r5, #0
2fff7864:	d0f6      	beq.n	2fff7854 <fdt_get_property_by_offset_+0x16>
2fff7866:	6860      	ldr	r0, [r4, #4]
2fff7868:	f7ff ffce 	bl	2fff7808 <fdt32_to_cpu>
2fff786c:	6028      	str	r0, [r5, #0]
2fff786e:	e7f1      	b.n	2fff7854 <fdt_get_property_by_offset_+0x16>
2fff7870:	462c      	mov	r4, r5
2fff7872:	e7ef      	b.n	2fff7854 <fdt_get_property_by_offset_+0x16>

2fff7874 <fdt_string>:
2fff7874:	b508      	push	{r3, lr}
2fff7876:	4603      	mov	r3, r0
2fff7878:	68c0      	ldr	r0, [r0, #12]
2fff787a:	f7ff ffc5 	bl	2fff7808 <fdt32_to_cpu>
2fff787e:	4408      	add	r0, r1
2fff7880:	4418      	add	r0, r3
2fff7882:	bd08      	pop	{r3, pc}

2fff7884 <fdt_get_name>:
2fff7884:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff7886:	4606      	mov	r6, r0
2fff7888:	6880      	ldr	r0, [r0, #8]
2fff788a:	460c      	mov	r4, r1
2fff788c:	4615      	mov	r5, r2
2fff788e:	f7ff ffbb 	bl	2fff7808 <fdt32_to_cpu>
2fff7892:	4607      	mov	r7, r0
2fff7894:	4630      	mov	r0, r6
2fff7896:	f7ff fe5d 	bl	2fff7554 <fdt_check_header>
2fff789a:	b9e8      	cbnz	r0, 2fff78d8 <fdt_get_name+0x54>
2fff789c:	4621      	mov	r1, r4
2fff789e:	4630      	mov	r0, r6
2fff78a0:	f7ff ff08 	bl	2fff76b4 <fdt_check_node_offset_>
2fff78a4:	2800      	cmp	r0, #0
2fff78a6:	db17      	blt.n	2fff78d8 <fdt_get_name+0x54>
2fff78a8:	6970      	ldr	r0, [r6, #20]
2fff78aa:	443c      	add	r4, r7
2fff78ac:	f7ff ffac 	bl	2fff7808 <fdt32_to_cpu>
2fff78b0:	4434      	add	r4, r6
2fff78b2:	280f      	cmp	r0, #15
2fff78b4:	f104 0404 	add.w	r4, r4, #4
2fff78b8:	d805      	bhi.n	2fff78c6 <fdt_get_name+0x42>
2fff78ba:	212f      	movs	r1, #47	; 0x2f
2fff78bc:	4620      	mov	r0, r4
2fff78be:	f000 fc43 	bl	2fff8148 <strrchr>
2fff78c2:	b138      	cbz	r0, 2fff78d4 <fdt_get_name+0x50>
2fff78c4:	1c44      	adds	r4, r0, #1
2fff78c6:	b11d      	cbz	r5, 2fff78d0 <fdt_get_name+0x4c>
2fff78c8:	4620      	mov	r0, r4
2fff78ca:	f000 fc17 	bl	2fff80fc <strlen>
2fff78ce:	6028      	str	r0, [r5, #0]
2fff78d0:	4620      	mov	r0, r4
2fff78d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff78d4:	f06f 000a 	mvn.w	r0, #10
2fff78d8:	b115      	cbz	r5, 2fff78e0 <fdt_get_name+0x5c>
2fff78da:	6028      	str	r0, [r5, #0]
2fff78dc:	2400      	movs	r4, #0
2fff78de:	e7f7      	b.n	2fff78d0 <fdt_get_name+0x4c>
2fff78e0:	462c      	mov	r4, r5
2fff78e2:	e7f5      	b.n	2fff78d0 <fdt_get_name+0x4c>

2fff78e4 <fdt_subnode_offset_namelen>:
2fff78e4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2fff78e8:	4606      	mov	r6, r0
2fff78ea:	4688      	mov	r8, r1
2fff78ec:	4617      	mov	r7, r2
2fff78ee:	461d      	mov	r5, r3
2fff78f0:	f7ff fe30 	bl	2fff7554 <fdt_check_header>
2fff78f4:	4604      	mov	r4, r0
2fff78f6:	b940      	cbnz	r0, 2fff790a <fdt_subnode_offset_namelen+0x26>
2fff78f8:	9000      	str	r0, [sp, #0]
2fff78fa:	4644      	mov	r4, r8
2fff78fc:	9b00      	ldr	r3, [sp, #0]
2fff78fe:	2c00      	cmp	r4, #0
2fff7900:	da2d      	bge.n	2fff795e <fdt_subnode_offset_namelen+0x7a>
2fff7902:	2b00      	cmp	r3, #0
2fff7904:	bfb8      	it	lt
2fff7906:	f04f 34ff 	movlt.w	r4, #4294967295	; 0xffffffff
2fff790a:	4620      	mov	r0, r4
2fff790c:	b002      	add	sp, #8
2fff790e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff7912:	2b01      	cmp	r3, #1
2fff7914:	d11c      	bne.n	2fff7950 <fdt_subnode_offset_namelen+0x6c>
2fff7916:	aa01      	add	r2, sp, #4
2fff7918:	4621      	mov	r1, r4
2fff791a:	4630      	mov	r0, r6
2fff791c:	f7ff ffb2 	bl	2fff7884 <fdt_get_name>
2fff7920:	4680      	mov	r8, r0
2fff7922:	b1a8      	cbz	r0, 2fff7950 <fdt_subnode_offset_namelen+0x6c>
2fff7924:	9b01      	ldr	r3, [sp, #4]
2fff7926:	429d      	cmp	r5, r3
2fff7928:	dc12      	bgt.n	2fff7950 <fdt_subnode_offset_namelen+0x6c>
2fff792a:	462a      	mov	r2, r5
2fff792c:	4639      	mov	r1, r7
2fff792e:	f000 fa55 	bl	2fff7ddc <memcmp>
2fff7932:	b968      	cbnz	r0, 2fff7950 <fdt_subnode_offset_namelen+0x6c>
2fff7934:	f818 3005 	ldrb.w	r3, [r8, r5]
2fff7938:	2b00      	cmp	r3, #0
2fff793a:	d0e6      	beq.n	2fff790a <fdt_subnode_offset_namelen+0x26>
2fff793c:	462a      	mov	r2, r5
2fff793e:	2140      	movs	r1, #64	; 0x40
2fff7940:	4638      	mov	r0, r7
2fff7942:	f000 fa3d 	bl	2fff7dc0 <memchr>
2fff7946:	b918      	cbnz	r0, 2fff7950 <fdt_subnode_offset_namelen+0x6c>
2fff7948:	f818 3005 	ldrb.w	r3, [r8, r5]
2fff794c:	2b40      	cmp	r3, #64	; 0x40
2fff794e:	d0dc      	beq.n	2fff790a <fdt_subnode_offset_namelen+0x26>
2fff7950:	4621      	mov	r1, r4
2fff7952:	466a      	mov	r2, sp
2fff7954:	4630      	mov	r0, r6
2fff7956:	f7ff fed1 	bl	2fff76fc <fdt_next_node>
2fff795a:	4604      	mov	r4, r0
2fff795c:	e7ce      	b.n	2fff78fc <fdt_subnode_offset_namelen+0x18>
2fff795e:	2b00      	cmp	r3, #0
2fff7960:	dad7      	bge.n	2fff7912 <fdt_subnode_offset_namelen+0x2e>
2fff7962:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff7966:	e7d0      	b.n	2fff790a <fdt_subnode_offset_namelen+0x26>

2fff7968 <fdt_subnode_offset>:
2fff7968:	b570      	push	{r4, r5, r6, lr}
2fff796a:	4605      	mov	r5, r0
2fff796c:	4610      	mov	r0, r2
2fff796e:	460e      	mov	r6, r1
2fff7970:	4614      	mov	r4, r2
2fff7972:	f000 fbc3 	bl	2fff80fc <strlen>
2fff7976:	4603      	mov	r3, r0
2fff7978:	4622      	mov	r2, r4
2fff797a:	4631      	mov	r1, r6
2fff797c:	4628      	mov	r0, r5
2fff797e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff7982:	f7ff bfaf 	b.w	2fff78e4 <fdt_subnode_offset_namelen>

2fff7986 <fdt_first_property_offset>:
2fff7986:	b510      	push	{r4, lr}
2fff7988:	4604      	mov	r4, r0
2fff798a:	f7ff fe93 	bl	2fff76b4 <fdt_check_node_offset_>
2fff798e:	1e01      	subs	r1, r0, #0
2fff7990:	db04      	blt.n	2fff799c <fdt_first_property_offset+0x16>
2fff7992:	4620      	mov	r0, r4
2fff7994:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff7998:	f7ff bf38 	b.w	2fff780c <nextprop_>
2fff799c:	bd10      	pop	{r4, pc}

2fff799e <fdt_next_property_offset>:
2fff799e:	b510      	push	{r4, lr}
2fff79a0:	4604      	mov	r4, r0
2fff79a2:	f7ff fe99 	bl	2fff76d8 <fdt_check_prop_offset_>
2fff79a6:	1e01      	subs	r1, r0, #0
2fff79a8:	db04      	blt.n	2fff79b4 <fdt_next_property_offset+0x16>
2fff79aa:	4620      	mov	r0, r4
2fff79ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff79b0:	f7ff bf2c 	b.w	2fff780c <nextprop_>
2fff79b4:	bd10      	pop	{r4, pc}

2fff79b6 <fdt_get_property_namelen_>:
2fff79b6:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff79ba:	4607      	mov	r7, r0
2fff79bc:	9e0a      	ldr	r6, [sp, #40]	; 0x28
2fff79be:	4692      	mov	sl, r2
2fff79c0:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
2fff79c4:	4698      	mov	r8, r3
2fff79c6:	f7ff ffde 	bl	2fff7986 <fdt_first_property_offset>
2fff79ca:	2800      	cmp	r0, #0
2fff79cc:	4604      	mov	r4, r0
2fff79ce:	da03      	bge.n	2fff79d8 <fdt_get_property_namelen_+0x22>
2fff79d0:	b35e      	cbz	r6, 2fff7a2a <fdt_get_property_namelen_+0x74>
2fff79d2:	6034      	str	r4, [r6, #0]
2fff79d4:	2500      	movs	r5, #0
2fff79d6:	e01d      	b.n	2fff7a14 <fdt_get_property_namelen_+0x5e>
2fff79d8:	4632      	mov	r2, r6
2fff79da:	4621      	mov	r1, r4
2fff79dc:	4638      	mov	r0, r7
2fff79de:	f7ff ff2e 	bl	2fff783e <fdt_get_property_by_offset_>
2fff79e2:	4605      	mov	r5, r0
2fff79e4:	b1f0      	cbz	r0, 2fff7a24 <fdt_get_property_namelen_+0x6e>
2fff79e6:	6880      	ldr	r0, [r0, #8]
2fff79e8:	f7ff ff0e 	bl	2fff7808 <fdt32_to_cpu>
2fff79ec:	4601      	mov	r1, r0
2fff79ee:	4638      	mov	r0, r7
2fff79f0:	f7ff ff40 	bl	2fff7874 <fdt_string>
2fff79f4:	4683      	mov	fp, r0
2fff79f6:	f000 fb81 	bl	2fff80fc <strlen>
2fff79fa:	4540      	cmp	r0, r8
2fff79fc:	d10d      	bne.n	2fff7a1a <fdt_get_property_namelen_+0x64>
2fff79fe:	4642      	mov	r2, r8
2fff7a00:	4651      	mov	r1, sl
2fff7a02:	4658      	mov	r0, fp
2fff7a04:	f000 f9ea 	bl	2fff7ddc <memcmp>
2fff7a08:	b938      	cbnz	r0, 2fff7a1a <fdt_get_property_namelen_+0x64>
2fff7a0a:	f1b9 0f00 	cmp.w	r9, #0
2fff7a0e:	d001      	beq.n	2fff7a14 <fdt_get_property_namelen_+0x5e>
2fff7a10:	f8c9 4000 	str.w	r4, [r9]
2fff7a14:	4628      	mov	r0, r5
2fff7a16:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff7a1a:	4621      	mov	r1, r4
2fff7a1c:	4638      	mov	r0, r7
2fff7a1e:	f7ff ffbe 	bl	2fff799e <fdt_next_property_offset>
2fff7a22:	e7d2      	b.n	2fff79ca <fdt_get_property_namelen_+0x14>
2fff7a24:	f06f 040c 	mvn.w	r4, #12
2fff7a28:	e7d2      	b.n	2fff79d0 <fdt_get_property_namelen_+0x1a>
2fff7a2a:	4635      	mov	r5, r6
2fff7a2c:	e7f2      	b.n	2fff7a14 <fdt_get_property_namelen_+0x5e>

2fff7a2e <fdt_getprop_namelen>:
2fff7a2e:	b530      	push	{r4, r5, lr}
2fff7a30:	b085      	sub	sp, #20
2fff7a32:	ad03      	add	r5, sp, #12
2fff7a34:	4604      	mov	r4, r0
2fff7a36:	9501      	str	r5, [sp, #4]
2fff7a38:	9d08      	ldr	r5, [sp, #32]
2fff7a3a:	9500      	str	r5, [sp, #0]
2fff7a3c:	f7ff ffbb 	bl	2fff79b6 <fdt_get_property_namelen_>
2fff7a40:	4603      	mov	r3, r0
2fff7a42:	b178      	cbz	r0, 2fff7a64 <fdt_getprop_namelen+0x36>
2fff7a44:	6960      	ldr	r0, [r4, #20]
2fff7a46:	f7ff fedf 	bl	2fff7808 <fdt32_to_cpu>
2fff7a4a:	280f      	cmp	r0, #15
2fff7a4c:	d80c      	bhi.n	2fff7a68 <fdt_getprop_namelen+0x3a>
2fff7a4e:	9a03      	ldr	r2, [sp, #12]
2fff7a50:	320c      	adds	r2, #12
2fff7a52:	0752      	lsls	r2, r2, #29
2fff7a54:	d008      	beq.n	2fff7a68 <fdt_getprop_namelen+0x3a>
2fff7a56:	6858      	ldr	r0, [r3, #4]
2fff7a58:	f7ff fed6 	bl	2fff7808 <fdt32_to_cpu>
2fff7a5c:	2807      	cmp	r0, #7
2fff7a5e:	d903      	bls.n	2fff7a68 <fdt_getprop_namelen+0x3a>
2fff7a60:	f103 0010 	add.w	r0, r3, #16
2fff7a64:	b005      	add	sp, #20
2fff7a66:	bd30      	pop	{r4, r5, pc}
2fff7a68:	f103 000c 	add.w	r0, r3, #12
2fff7a6c:	e7fa      	b.n	2fff7a64 <fdt_getprop_namelen+0x36>

2fff7a6e <fdt_getprop>:
2fff7a6e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2fff7a70:	4605      	mov	r5, r0
2fff7a72:	4610      	mov	r0, r2
2fff7a74:	461f      	mov	r7, r3
2fff7a76:	460e      	mov	r6, r1
2fff7a78:	4614      	mov	r4, r2
2fff7a7a:	f000 fb3f 	bl	2fff80fc <strlen>
2fff7a7e:	9700      	str	r7, [sp, #0]
2fff7a80:	4603      	mov	r3, r0
2fff7a82:	4622      	mov	r2, r4
2fff7a84:	4631      	mov	r1, r6
2fff7a86:	4628      	mov	r0, r5
2fff7a88:	f7ff ffd1 	bl	2fff7a2e <fdt_getprop_namelen>
2fff7a8c:	b003      	add	sp, #12
2fff7a8e:	bdf0      	pop	{r4, r5, r6, r7, pc}

2fff7a90 <fdt_get_phandle>:
2fff7a90:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff7a92:	ab01      	add	r3, sp, #4
2fff7a94:	4a0d      	ldr	r2, [pc, #52]	; (2fff7acc <fdt_get_phandle+0x3c>)
2fff7a96:	4604      	mov	r4, r0
2fff7a98:	460d      	mov	r5, r1
2fff7a9a:	f7ff ffe8 	bl	2fff7a6e <fdt_getprop>
2fff7a9e:	b110      	cbz	r0, 2fff7aa6 <fdt_get_phandle+0x16>
2fff7aa0:	9b01      	ldr	r3, [sp, #4]
2fff7aa2:	2b04      	cmp	r3, #4
2fff7aa4:	d009      	beq.n	2fff7aba <fdt_get_phandle+0x2a>
2fff7aa6:	4a0a      	ldr	r2, [pc, #40]	; (2fff7ad0 <fdt_get_phandle+0x40>)
2fff7aa8:	ab01      	add	r3, sp, #4
2fff7aaa:	4629      	mov	r1, r5
2fff7aac:	4620      	mov	r0, r4
2fff7aae:	f7ff ffde 	bl	2fff7a6e <fdt_getprop>
2fff7ab2:	b140      	cbz	r0, 2fff7ac6 <fdt_get_phandle+0x36>
2fff7ab4:	9b01      	ldr	r3, [sp, #4]
2fff7ab6:	2b04      	cmp	r3, #4
2fff7ab8:	d105      	bne.n	2fff7ac6 <fdt_get_phandle+0x36>
2fff7aba:	6800      	ldr	r0, [r0, #0]
2fff7abc:	b003      	add	sp, #12
2fff7abe:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
2fff7ac2:	f7ff bea1 	b.w	2fff7808 <fdt32_to_cpu>
2fff7ac6:	2000      	movs	r0, #0
2fff7ac8:	b003      	add	sp, #12
2fff7aca:	bd30      	pop	{r4, r5, pc}
2fff7acc:	2fffaa8b 	.word	0x2fffaa8b
2fff7ad0:	2fffaa85 	.word	0x2fffaa85

2fff7ad4 <fdt_get_alias_namelen>:
2fff7ad4:	b573      	push	{r0, r1, r4, r5, r6, lr}
2fff7ad6:	460d      	mov	r5, r1
2fff7ad8:	4908      	ldr	r1, [pc, #32]	; (2fff7afc <fdt_get_alias_namelen+0x28>)
2fff7ada:	4604      	mov	r4, r0
2fff7adc:	4616      	mov	r6, r2
2fff7ade:	f000 f853 	bl	2fff7b88 <fdt_path_offset>
2fff7ae2:	1e01      	subs	r1, r0, #0
2fff7ae4:	f04f 0000 	mov.w	r0, #0
2fff7ae8:	db05      	blt.n	2fff7af6 <fdt_get_alias_namelen+0x22>
2fff7aea:	9000      	str	r0, [sp, #0]
2fff7aec:	4633      	mov	r3, r6
2fff7aee:	462a      	mov	r2, r5
2fff7af0:	4620      	mov	r0, r4
2fff7af2:	f7ff ff9c 	bl	2fff7a2e <fdt_getprop_namelen>
2fff7af6:	b002      	add	sp, #8
2fff7af8:	bd70      	pop	{r4, r5, r6, pc}
2fff7afa:	bf00      	nop
2fff7afc:	2fffaa7c 	.word	0x2fffaa7c

2fff7b00 <fdt_path_offset_namelen>:
2fff7b00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff7b04:	4680      	mov	r8, r0
2fff7b06:	460c      	mov	r4, r1
2fff7b08:	4615      	mov	r5, r2
2fff7b0a:	f7ff fd23 	bl	2fff7554 <fdt_check_header>
2fff7b0e:	4606      	mov	r6, r0
2fff7b10:	bba0      	cbnz	r0, 2fff7b7c <fdt_path_offset_namelen+0x7c>
2fff7b12:	7823      	ldrb	r3, [r4, #0]
2fff7b14:	1967      	adds	r7, r4, r5
2fff7b16:	2b2f      	cmp	r3, #47	; 0x2f
2fff7b18:	d014      	beq.n	2fff7b44 <fdt_path_offset_namelen+0x44>
2fff7b1a:	462a      	mov	r2, r5
2fff7b1c:	212f      	movs	r1, #47	; 0x2f
2fff7b1e:	4620      	mov	r0, r4
2fff7b20:	f000 f94e 	bl	2fff7dc0 <memchr>
2fff7b24:	2800      	cmp	r0, #0
2fff7b26:	bf14      	ite	ne
2fff7b28:	4605      	movne	r5, r0
2fff7b2a:	463d      	moveq	r5, r7
2fff7b2c:	4621      	mov	r1, r4
2fff7b2e:	1b2a      	subs	r2, r5, r4
2fff7b30:	4640      	mov	r0, r8
2fff7b32:	f7ff ffcf 	bl	2fff7ad4 <fdt_get_alias_namelen>
2fff7b36:	4601      	mov	r1, r0
2fff7b38:	b318      	cbz	r0, 2fff7b82 <fdt_path_offset_namelen+0x82>
2fff7b3a:	4640      	mov	r0, r8
2fff7b3c:	462c      	mov	r4, r5
2fff7b3e:	f000 f823 	bl	2fff7b88 <fdt_path_offset>
2fff7b42:	4606      	mov	r6, r0
2fff7b44:	42bc      	cmp	r4, r7
2fff7b46:	d219      	bcs.n	2fff7b7c <fdt_path_offset_namelen+0x7c>
2fff7b48:	4625      	mov	r5, r4
2fff7b4a:	e002      	b.n	2fff7b52 <fdt_path_offset_namelen+0x52>
2fff7b4c:	4297      	cmp	r7, r2
2fff7b4e:	4615      	mov	r5, r2
2fff7b50:	d014      	beq.n	2fff7b7c <fdt_path_offset_namelen+0x7c>
2fff7b52:	782b      	ldrb	r3, [r5, #0]
2fff7b54:	1c6a      	adds	r2, r5, #1
2fff7b56:	2b2f      	cmp	r3, #47	; 0x2f
2fff7b58:	d0f8      	beq.n	2fff7b4c <fdt_path_offset_namelen+0x4c>
2fff7b5a:	1b7a      	subs	r2, r7, r5
2fff7b5c:	212f      	movs	r1, #47	; 0x2f
2fff7b5e:	4628      	mov	r0, r5
2fff7b60:	f000 f92e 	bl	2fff7dc0 <memchr>
2fff7b64:	2800      	cmp	r0, #0
2fff7b66:	bf14      	ite	ne
2fff7b68:	4604      	movne	r4, r0
2fff7b6a:	463c      	moveq	r4, r7
2fff7b6c:	4631      	mov	r1, r6
2fff7b6e:	1b63      	subs	r3, r4, r5
2fff7b70:	462a      	mov	r2, r5
2fff7b72:	4640      	mov	r0, r8
2fff7b74:	f7ff feb6 	bl	2fff78e4 <fdt_subnode_offset_namelen>
2fff7b78:	1e06      	subs	r6, r0, #0
2fff7b7a:	dae3      	bge.n	2fff7b44 <fdt_path_offset_namelen+0x44>
2fff7b7c:	4630      	mov	r0, r6
2fff7b7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff7b82:	f06f 0604 	mvn.w	r6, #4
2fff7b86:	e7f9      	b.n	2fff7b7c <fdt_path_offset_namelen+0x7c>

2fff7b88 <fdt_path_offset>:
2fff7b88:	b538      	push	{r3, r4, r5, lr}
2fff7b8a:	4605      	mov	r5, r0
2fff7b8c:	4608      	mov	r0, r1
2fff7b8e:	460c      	mov	r4, r1
2fff7b90:	f000 fab4 	bl	2fff80fc <strlen>
2fff7b94:	4602      	mov	r2, r0
2fff7b96:	4621      	mov	r1, r4
2fff7b98:	4628      	mov	r0, r5
2fff7b9a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff7b9e:	f7ff bfaf 	b.w	2fff7b00 <fdt_path_offset_namelen>

2fff7ba2 <fdt_supernode_atdepth_offset>:
2fff7ba2:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
2fff7ba6:	4681      	mov	r9, r0
2fff7ba8:	460f      	mov	r7, r1
2fff7baa:	4615      	mov	r5, r2
2fff7bac:	4698      	mov	r8, r3
2fff7bae:	f7ff fcd1 	bl	2fff7554 <fdt_check_header>
2fff7bb2:	b9d8      	cbnz	r0, 2fff7bec <fdt_supernode_atdepth_offset+0x4a>
2fff7bb4:	2d00      	cmp	r5, #0
2fff7bb6:	db2a      	blt.n	2fff7c0e <fdt_supernode_atdepth_offset+0x6c>
2fff7bb8:	ae02      	add	r6, sp, #8
2fff7bba:	f06f 040c 	mvn.w	r4, #12
2fff7bbe:	f846 0d04 	str.w	r0, [r6, #-4]!
2fff7bc2:	4287      	cmp	r7, r0
2fff7bc4:	da02      	bge.n	2fff7bcc <fdt_supernode_atdepth_offset+0x2a>
2fff7bc6:	f06f 0003 	mvn.w	r0, #3
2fff7bca:	e00f      	b.n	2fff7bec <fdt_supernode_atdepth_offset+0x4a>
2fff7bcc:	9b01      	ldr	r3, [sp, #4]
2fff7bce:	429d      	cmp	r5, r3
2fff7bd0:	bf08      	it	eq
2fff7bd2:	4604      	moveq	r4, r0
2fff7bd4:	4287      	cmp	r7, r0
2fff7bd6:	d10c      	bne.n	2fff7bf2 <fdt_supernode_atdepth_offset+0x50>
2fff7bd8:	f1b8 0f00 	cmp.w	r8, #0
2fff7bdc:	d001      	beq.n	2fff7be2 <fdt_supernode_atdepth_offset+0x40>
2fff7bde:	f8c8 3000 	str.w	r3, [r8]
2fff7be2:	429d      	cmp	r5, r3
2fff7be4:	bfd4      	ite	le
2fff7be6:	4620      	movle	r0, r4
2fff7be8:	f04f 30ff 	movgt.w	r0, #4294967295	; 0xffffffff
2fff7bec:	b003      	add	sp, #12
2fff7bee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2fff7bf2:	4601      	mov	r1, r0
2fff7bf4:	4632      	mov	r2, r6
2fff7bf6:	4648      	mov	r0, r9
2fff7bf8:	f7ff fd80 	bl	2fff76fc <fdt_next_node>
2fff7bfc:	2800      	cmp	r0, #0
2fff7bfe:	dae0      	bge.n	2fff7bc2 <fdt_supernode_atdepth_offset+0x20>
2fff7c00:	1c42      	adds	r2, r0, #1
2fff7c02:	d0e0      	beq.n	2fff7bc6 <fdt_supernode_atdepth_offset+0x24>
2fff7c04:	1d03      	adds	r3, r0, #4
2fff7c06:	bf08      	it	eq
2fff7c08:	f06f 000a 	mvneq.w	r0, #10
2fff7c0c:	e7ee      	b.n	2fff7bec <fdt_supernode_atdepth_offset+0x4a>
2fff7c0e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff7c12:	e7eb      	b.n	2fff7bec <fdt_supernode_atdepth_offset+0x4a>

2fff7c14 <fdt_node_depth>:
2fff7c14:	b507      	push	{r0, r1, r2, lr}
2fff7c16:	2200      	movs	r2, #0
2fff7c18:	ab01      	add	r3, sp, #4
2fff7c1a:	f7ff ffc2 	bl	2fff7ba2 <fdt_supernode_atdepth_offset>
2fff7c1e:	2800      	cmp	r0, #0
2fff7c20:	d005      	beq.n	2fff7c2e <fdt_node_depth+0x1a>
2fff7c22:	db01      	blt.n	2fff7c28 <fdt_node_depth+0x14>
2fff7c24:	f06f 000c 	mvn.w	r0, #12
2fff7c28:	b003      	add	sp, #12
2fff7c2a:	f85d fb04 	ldr.w	pc, [sp], #4
2fff7c2e:	9801      	ldr	r0, [sp, #4]
2fff7c30:	e7fa      	b.n	2fff7c28 <fdt_node_depth+0x14>

2fff7c32 <fdt_parent_offset>:
2fff7c32:	b570      	push	{r4, r5, r6, lr}
2fff7c34:	4604      	mov	r4, r0
2fff7c36:	460d      	mov	r5, r1
2fff7c38:	f7ff ffec 	bl	2fff7c14 <fdt_node_depth>
2fff7c3c:	1e02      	subs	r2, r0, #0
2fff7c3e:	db07      	blt.n	2fff7c50 <fdt_parent_offset+0x1e>
2fff7c40:	4629      	mov	r1, r5
2fff7c42:	4620      	mov	r0, r4
2fff7c44:	2300      	movs	r3, #0
2fff7c46:	3a01      	subs	r2, #1
2fff7c48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff7c4c:	f7ff bfa9 	b.w	2fff7ba2 <fdt_supernode_atdepth_offset>
2fff7c50:	bd70      	pop	{r4, r5, r6, pc}

2fff7c52 <fdt_node_offset_by_phandle>:
2fff7c52:	1e4b      	subs	r3, r1, #1
2fff7c54:	3303      	adds	r3, #3
2fff7c56:	b570      	push	{r4, r5, r6, lr}
2fff7c58:	4605      	mov	r5, r0
2fff7c5a:	460e      	mov	r6, r1
2fff7c5c:	d817      	bhi.n	2fff7c8e <fdt_node_offset_by_phandle+0x3c>
2fff7c5e:	f7ff fc79 	bl	2fff7554 <fdt_check_header>
2fff7c62:	4604      	mov	r4, r0
2fff7c64:	b940      	cbnz	r0, 2fff7c78 <fdt_node_offset_by_phandle+0x26>
2fff7c66:	4602      	mov	r2, r0
2fff7c68:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2fff7c6c:	4628      	mov	r0, r5
2fff7c6e:	f7ff fd45 	bl	2fff76fc <fdt_next_node>
2fff7c72:	2800      	cmp	r0, #0
2fff7c74:	4604      	mov	r4, r0
2fff7c76:	da01      	bge.n	2fff7c7c <fdt_node_offset_by_phandle+0x2a>
2fff7c78:	4620      	mov	r0, r4
2fff7c7a:	bd70      	pop	{r4, r5, r6, pc}
2fff7c7c:	4621      	mov	r1, r4
2fff7c7e:	4628      	mov	r0, r5
2fff7c80:	f7ff ff06 	bl	2fff7a90 <fdt_get_phandle>
2fff7c84:	42b0      	cmp	r0, r6
2fff7c86:	d0f7      	beq.n	2fff7c78 <fdt_node_offset_by_phandle+0x26>
2fff7c88:	2200      	movs	r2, #0
2fff7c8a:	4621      	mov	r1, r4
2fff7c8c:	e7ee      	b.n	2fff7c6c <fdt_node_offset_by_phandle+0x1a>
2fff7c8e:	f06f 0405 	mvn.w	r4, #5
2fff7c92:	e7f1      	b.n	2fff7c78 <fdt_node_offset_by_phandle+0x26>

2fff7c94 <fdt_stringlist_contains>:
2fff7c94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff7c98:	4604      	mov	r4, r0
2fff7c9a:	4610      	mov	r0, r2
2fff7c9c:	460d      	mov	r5, r1
2fff7c9e:	4617      	mov	r7, r2
2fff7ca0:	f000 fa2c 	bl	2fff80fc <strlen>
2fff7ca4:	4606      	mov	r6, r0
2fff7ca6:	f100 0801 	add.w	r8, r0, #1
2fff7caa:	42b5      	cmp	r5, r6
2fff7cac:	db0b      	blt.n	2fff7cc6 <fdt_stringlist_contains+0x32>
2fff7cae:	4642      	mov	r2, r8
2fff7cb0:	4621      	mov	r1, r4
2fff7cb2:	4638      	mov	r0, r7
2fff7cb4:	f000 f892 	bl	2fff7ddc <memcmp>
2fff7cb8:	b168      	cbz	r0, 2fff7cd6 <fdt_stringlist_contains+0x42>
2fff7cba:	462a      	mov	r2, r5
2fff7cbc:	2100      	movs	r1, #0
2fff7cbe:	4620      	mov	r0, r4
2fff7cc0:	f000 f87e 	bl	2fff7dc0 <memchr>
2fff7cc4:	b910      	cbnz	r0, 2fff7ccc <fdt_stringlist_contains+0x38>
2fff7cc6:	2000      	movs	r0, #0
2fff7cc8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff7ccc:	1b04      	subs	r4, r0, r4
2fff7cce:	3401      	adds	r4, #1
2fff7cd0:	1b2d      	subs	r5, r5, r4
2fff7cd2:	1c44      	adds	r4, r0, #1
2fff7cd4:	e7e9      	b.n	2fff7caa <fdt_stringlist_contains+0x16>
2fff7cd6:	2001      	movs	r0, #1
2fff7cd8:	e7f6      	b.n	2fff7cc8 <fdt_stringlist_contains+0x34>

2fff7cda <fdt_stringlist_search>:
2fff7cda:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2fff7cde:	4698      	mov	r8, r3
2fff7ce0:	ab01      	add	r3, sp, #4
2fff7ce2:	f7ff fec4 	bl	2fff7a6e <fdt_getprop>
2fff7ce6:	4604      	mov	r4, r0
2fff7ce8:	b920      	cbnz	r0, 2fff7cf4 <fdt_stringlist_search+0x1a>
2fff7cea:	9d01      	ldr	r5, [sp, #4]
2fff7cec:	4628      	mov	r0, r5
2fff7cee:	b002      	add	sp, #8
2fff7cf0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff7cf4:	4640      	mov	r0, r8
2fff7cf6:	2500      	movs	r5, #0
2fff7cf8:	f000 fa00 	bl	2fff80fc <strlen>
2fff7cfc:	9e01      	ldr	r6, [sp, #4]
2fff7cfe:	1c47      	adds	r7, r0, #1
2fff7d00:	4426      	add	r6, r4
2fff7d02:	42b4      	cmp	r4, r6
2fff7d04:	d302      	bcc.n	2fff7d0c <fdt_stringlist_search+0x32>
2fff7d06:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
2fff7d0a:	e7ef      	b.n	2fff7cec <fdt_stringlist_search+0x12>
2fff7d0c:	1b31      	subs	r1, r6, r4
2fff7d0e:	4620      	mov	r0, r4
2fff7d10:	f000 fa10 	bl	2fff8134 <strnlen>
2fff7d14:	3001      	adds	r0, #1
2fff7d16:	1823      	adds	r3, r4, r0
2fff7d18:	429e      	cmp	r6, r3
2fff7d1a:	9001      	str	r0, [sp, #4]
2fff7d1c:	d30d      	bcc.n	2fff7d3a <fdt_stringlist_search+0x60>
2fff7d1e:	42b8      	cmp	r0, r7
2fff7d20:	d003      	beq.n	2fff7d2a <fdt_stringlist_search+0x50>
2fff7d22:	9b01      	ldr	r3, [sp, #4]
2fff7d24:	3501      	adds	r5, #1
2fff7d26:	441c      	add	r4, r3
2fff7d28:	e7eb      	b.n	2fff7d02 <fdt_stringlist_search+0x28>
2fff7d2a:	463a      	mov	r2, r7
2fff7d2c:	4641      	mov	r1, r8
2fff7d2e:	4620      	mov	r0, r4
2fff7d30:	f000 f854 	bl	2fff7ddc <memcmp>
2fff7d34:	2800      	cmp	r0, #0
2fff7d36:	d1f4      	bne.n	2fff7d22 <fdt_stringlist_search+0x48>
2fff7d38:	e7d8      	b.n	2fff7cec <fdt_stringlist_search+0x12>
2fff7d3a:	f06f 050e 	mvn.w	r5, #14
2fff7d3e:	e7d5      	b.n	2fff7cec <fdt_stringlist_search+0x12>

2fff7d40 <fdt_node_check_compatible>:
2fff7d40:	b513      	push	{r0, r1, r4, lr}
2fff7d42:	4614      	mov	r4, r2
2fff7d44:	4a07      	ldr	r2, [pc, #28]	; (2fff7d64 <fdt_node_check_compatible+0x24>)
2fff7d46:	ab01      	add	r3, sp, #4
2fff7d48:	f7ff fe91 	bl	2fff7a6e <fdt_getprop>
2fff7d4c:	b910      	cbnz	r0, 2fff7d54 <fdt_node_check_compatible+0x14>
2fff7d4e:	9801      	ldr	r0, [sp, #4]
2fff7d50:	b002      	add	sp, #8
2fff7d52:	bd10      	pop	{r4, pc}
2fff7d54:	9901      	ldr	r1, [sp, #4]
2fff7d56:	4622      	mov	r2, r4
2fff7d58:	f7ff ff9c 	bl	2fff7c94 <fdt_stringlist_contains>
2fff7d5c:	fab0 f080 	clz	r0, r0
2fff7d60:	0940      	lsrs	r0, r0, #5
2fff7d62:	e7f5      	b.n	2fff7d50 <fdt_node_check_compatible+0x10>
2fff7d64:	2fffaa93 	.word	0x2fffaa93

2fff7d68 <fdt_node_offset_by_compatible>:
2fff7d68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff7d6a:	4605      	mov	r5, r0
2fff7d6c:	460f      	mov	r7, r1
2fff7d6e:	4616      	mov	r6, r2
2fff7d70:	f7ff fbf0 	bl	2fff7554 <fdt_check_header>
2fff7d74:	4604      	mov	r4, r0
2fff7d76:	b938      	cbnz	r0, 2fff7d88 <fdt_node_offset_by_compatible+0x20>
2fff7d78:	4602      	mov	r2, r0
2fff7d7a:	4639      	mov	r1, r7
2fff7d7c:	4628      	mov	r0, r5
2fff7d7e:	f7ff fcbd 	bl	2fff76fc <fdt_next_node>
2fff7d82:	2800      	cmp	r0, #0
2fff7d84:	4604      	mov	r4, r0
2fff7d86:	da01      	bge.n	2fff7d8c <fdt_node_offset_by_compatible+0x24>
2fff7d88:	4620      	mov	r0, r4
2fff7d8a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff7d8c:	4632      	mov	r2, r6
2fff7d8e:	4621      	mov	r1, r4
2fff7d90:	4628      	mov	r0, r5
2fff7d92:	f7ff ffd5 	bl	2fff7d40 <fdt_node_check_compatible>
2fff7d96:	1c43      	adds	r3, r0, #1
2fff7d98:	db04      	blt.n	2fff7da4 <fdt_node_offset_by_compatible+0x3c>
2fff7d9a:	2800      	cmp	r0, #0
2fff7d9c:	d0f4      	beq.n	2fff7d88 <fdt_node_offset_by_compatible+0x20>
2fff7d9e:	2200      	movs	r2, #0
2fff7da0:	4621      	mov	r1, r4
2fff7da2:	e7eb      	b.n	2fff7d7c <fdt_node_offset_by_compatible+0x14>
2fff7da4:	4604      	mov	r4, r0
2fff7da6:	e7ef      	b.n	2fff7d88 <fdt_node_offset_by_compatible+0x20>

2fff7da8 <__assert>:
2fff7da8:	460a      	mov	r2, r1
2fff7daa:	4601      	mov	r1, r0
2fff7dac:	b508      	push	{r3, lr}
2fff7dae:	4803      	ldr	r0, [pc, #12]	; (2fff7dbc <__assert+0x14>)
2fff7db0:	f000 f95a 	bl	2fff8068 <printf>
2fff7db4:	f7f8 ff86 	bl	2fff0cc4 <console_flush>
2fff7db8:	f7ff eb9e 	blx	2fff74f8 <plat_panic_handler>
2fff7dbc:	2fffaa9e 	.word	0x2fffaa9e

2fff7dc0 <memchr>:
2fff7dc0:	4402      	add	r2, r0
2fff7dc2:	b2c9      	uxtb	r1, r1
2fff7dc4:	b510      	push	{r4, lr}
2fff7dc6:	4603      	mov	r3, r0
2fff7dc8:	4290      	cmp	r0, r2
2fff7dca:	d101      	bne.n	2fff7dd0 <memchr+0x10>
2fff7dcc:	2300      	movs	r3, #0
2fff7dce:	e003      	b.n	2fff7dd8 <memchr+0x18>
2fff7dd0:	781c      	ldrb	r4, [r3, #0]
2fff7dd2:	3001      	adds	r0, #1
2fff7dd4:	428c      	cmp	r4, r1
2fff7dd6:	d1f6      	bne.n	2fff7dc6 <memchr+0x6>
2fff7dd8:	4618      	mov	r0, r3
2fff7dda:	bd10      	pop	{r4, pc}

2fff7ddc <memcmp>:
2fff7ddc:	440a      	add	r2, r1
2fff7dde:	b510      	push	{r4, lr}
2fff7de0:	4291      	cmp	r1, r2
2fff7de2:	d101      	bne.n	2fff7de8 <memcmp+0xc>
2fff7de4:	2000      	movs	r0, #0
2fff7de6:	e006      	b.n	2fff7df6 <memcmp+0x1a>
2fff7de8:	f810 3b01 	ldrb.w	r3, [r0], #1
2fff7dec:	f811 4b01 	ldrb.w	r4, [r1], #1
2fff7df0:	42a3      	cmp	r3, r4
2fff7df2:	d0f5      	beq.n	2fff7de0 <memcmp+0x4>
2fff7df4:	1b18      	subs	r0, r3, r4
2fff7df6:	bd10      	pop	{r4, pc}

2fff7df8 <memcpy>:
2fff7df8:	440a      	add	r2, r1
2fff7dfa:	1e43      	subs	r3, r0, #1
2fff7dfc:	b510      	push	{r4, lr}
2fff7dfe:	4291      	cmp	r1, r2
2fff7e00:	d100      	bne.n	2fff7e04 <memcpy+0xc>
2fff7e02:	bd10      	pop	{r4, pc}
2fff7e04:	f811 4b01 	ldrb.w	r4, [r1], #1
2fff7e08:	f803 4f01 	strb.w	r4, [r3, #1]!
2fff7e0c:	e7f7      	b.n	2fff7dfe <memcpy+0x6>

2fff7e0e <memmove>:
2fff7e0e:	b470      	push	{r4, r5, r6}
2fff7e10:	4613      	mov	r3, r2
2fff7e12:	1a46      	subs	r6, r0, r1
2fff7e14:	4605      	mov	r5, r0
2fff7e16:	4296      	cmp	r6, r2
2fff7e18:	460c      	mov	r4, r1
2fff7e1a:	d302      	bcc.n	2fff7e22 <memmove+0x14>
2fff7e1c:	bc70      	pop	{r4, r5, r6}
2fff7e1e:	f7ff bfeb 	b.w	2fff7df8 <memcpy>
2fff7e22:	4414      	add	r4, r2
2fff7e24:	4403      	add	r3, r0
2fff7e26:	429d      	cmp	r5, r3
2fff7e28:	d102      	bne.n	2fff7e30 <memmove+0x22>
2fff7e2a:	4628      	mov	r0, r5
2fff7e2c:	bc70      	pop	{r4, r5, r6}
2fff7e2e:	4770      	bx	lr
2fff7e30:	f814 2d01 	ldrb.w	r2, [r4, #-1]!
2fff7e34:	f803 2d01 	strb.w	r2, [r3, #-1]!
2fff7e38:	e7f5      	b.n	2fff7e26 <memmove+0x18>

2fff7e3a <memset>:
2fff7e3a:	4402      	add	r2, r0
2fff7e3c:	4603      	mov	r3, r0
2fff7e3e:	4293      	cmp	r3, r2
2fff7e40:	d100      	bne.n	2fff7e44 <memset+0xa>
2fff7e42:	4770      	bx	lr
2fff7e44:	f803 1b01 	strb.w	r1, [r3], #1
2fff7e48:	e7f9      	b.n	2fff7e3e <memset+0x4>

2fff7e4a <unsigned_num_print>:
2fff7e4a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2fff7e4e:	b086      	sub	sp, #24
2fff7e50:	4692      	mov	sl, r2
2fff7e52:	4699      	mov	r9, r3
2fff7e54:	f8dd 8038 	ldr.w	r8, [sp, #56]	; 0x38
2fff7e58:	2400      	movs	r4, #0
2fff7e5a:	ad01      	add	r5, sp, #4
2fff7e5c:	4652      	mov	r2, sl
2fff7e5e:	2300      	movs	r3, #0
2fff7e60:	f7ff e904 	blx	2fff706c <__aeabi_uldivmod>
2fff7e64:	b2d3      	uxtb	r3, r2
2fff7e66:	2a09      	cmp	r2, #9
2fff7e68:	4606      	mov	r6, r0
2fff7e6a:	460f      	mov	r7, r1
2fff7e6c:	bf94      	ite	ls
2fff7e6e:	3330      	addls	r3, #48	; 0x30
2fff7e70:	3357      	addhi	r3, #87	; 0x57
2fff7e72:	552b      	strb	r3, [r5, r4]
2fff7e74:	4630      	mov	r0, r6
2fff7e76:	ea56 0307 	orrs.w	r3, r6, r7
2fff7e7a:	f104 0401 	add.w	r4, r4, #1
2fff7e7e:	4639      	mov	r1, r7
2fff7e80:	d1ec      	bne.n	2fff7e5c <unsigned_num_print+0x12>
2fff7e82:	f1b8 0f00 	cmp.w	r8, #0
2fff7e86:	f04f 0600 	mov.w	r6, #0
2fff7e8a:	dc0b      	bgt.n	2fff7ea4 <unsigned_num_print+0x5a>
2fff7e8c:	4627      	mov	r7, r4
2fff7e8e:	f117 37ff 	adds.w	r7, r7, #4294967295	; 0xffffffff
2fff7e92:	d20c      	bcs.n	2fff7eae <unsigned_num_print+0x64>
2fff7e94:	19a0      	adds	r0, r4, r6
2fff7e96:	b006      	add	sp, #24
2fff7e98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff7e9c:	4648      	mov	r0, r9
2fff7e9e:	3601      	adds	r6, #1
2fff7ea0:	f000 f8ef 	bl	2fff8082 <putchar>
2fff7ea4:	eba8 0306 	sub.w	r3, r8, r6
2fff7ea8:	429c      	cmp	r4, r3
2fff7eaa:	dbf7      	blt.n	2fff7e9c <unsigned_num_print+0x52>
2fff7eac:	e7ee      	b.n	2fff7e8c <unsigned_num_print+0x42>
2fff7eae:	5de8      	ldrb	r0, [r5, r7]
2fff7eb0:	f000 f8e7 	bl	2fff8082 <putchar>
2fff7eb4:	e7eb      	b.n	2fff7e8e <unsigned_num_print+0x44>
	...

2fff7eb8 <vprintf>:
2fff7eb8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff7ebc:	2500      	movs	r5, #0
2fff7ebe:	4606      	mov	r6, r0
2fff7ec0:	460c      	mov	r4, r1
2fff7ec2:	462f      	mov	r7, r5
2fff7ec4:	7830      	ldrb	r0, [r6, #0]
2fff7ec6:	b918      	cbnz	r0, 2fff7ed0 <vprintf+0x18>
2fff7ec8:	4628      	mov	r0, r5
2fff7eca:	b003      	add	sp, #12
2fff7ecc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff7ed0:	2825      	cmp	r0, #37	; 0x25
2fff7ed2:	f106 0601 	add.w	r6, r6, #1
2fff7ed6:	f040 80be 	bne.w	2fff8056 <vprintf+0x19e>
2fff7eda:	f04f 0b00 	mov.w	fp, #0
2fff7ede:	4659      	mov	r1, fp
2fff7ee0:	e023      	b.n	2fff7f2a <vprintf+0x72>
2fff7ee2:	2a69      	cmp	r2, #105	; 0x69
2fff7ee4:	d02d      	beq.n	2fff7f42 <vprintf+0x8a>
2fff7ee6:	2a6c      	cmp	r2, #108	; 0x6c
2fff7ee8:	d128      	bne.n	2fff7f3c <vprintf+0x84>
2fff7eea:	3101      	adds	r1, #1
2fff7eec:	e01a      	b.n	2fff7f24 <vprintf+0x6c>
2fff7eee:	2a75      	cmp	r2, #117	; 0x75
2fff7ef0:	f000 808e 	beq.w	2fff8010 <vprintf+0x158>
2fff7ef4:	d812      	bhi.n	2fff7f1c <vprintf+0x64>
2fff7ef6:	2a73      	cmp	r2, #115	; 0x73
2fff7ef8:	d120      	bne.n	2fff7f3c <vprintf+0x84>
2fff7efa:	f8d4 8000 	ldr.w	r8, [r4]
2fff7efe:	f104 0904 	add.w	r9, r4, #4
2fff7f02:	f1b8 0f00 	cmp.w	r8, #0
2fff7f06:	d047      	beq.n	2fff7f98 <vprintf+0xe0>
2fff7f08:	4644      	mov	r4, r8
2fff7f0a:	eba4 0308 	sub.w	r3, r4, r8
2fff7f0e:	f814 0b01 	ldrb.w	r0, [r4], #1
2fff7f12:	2800      	cmp	r0, #0
2fff7f14:	d144      	bne.n	2fff7fa0 <vprintf+0xe8>
2fff7f16:	441d      	add	r5, r3
2fff7f18:	464c      	mov	r4, r9
2fff7f1a:	e031      	b.n	2fff7f80 <vprintf+0xc8>
2fff7f1c:	2a78      	cmp	r2, #120	; 0x78
2fff7f1e:	d062      	beq.n	2fff7fe6 <vprintf+0x12e>
2fff7f20:	2a7a      	cmp	r2, #122	; 0x7a
2fff7f22:	d10b      	bne.n	2fff7f3c <vprintf+0x84>
2fff7f24:	3601      	adds	r6, #1
2fff7f26:	463a      	mov	r2, r7
2fff7f28:	4617      	mov	r7, r2
2fff7f2a:	7832      	ldrb	r2, [r6, #0]
2fff7f2c:	2a70      	cmp	r2, #112	; 0x70
2fff7f2e:	d03a      	beq.n	2fff7fa6 <vprintf+0xee>
2fff7f30:	d8dd      	bhi.n	2fff7eee <vprintf+0x36>
2fff7f32:	2a64      	cmp	r2, #100	; 0x64
2fff7f34:	d005      	beq.n	2fff7f42 <vprintf+0x8a>
2fff7f36:	d8d4      	bhi.n	2fff7ee2 <vprintf+0x2a>
2fff7f38:	2a30      	cmp	r2, #48	; 0x30
2fff7f3a:	d07b      	beq.n	2fff8034 <vprintf+0x17c>
2fff7f3c:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
2fff7f40:	e7c2      	b.n	2fff7ec8 <vprintf+0x10>
2fff7f42:	2901      	cmp	r1, #1
2fff7f44:	dd1e      	ble.n	2fff7f84 <vprintf+0xcc>
2fff7f46:	3407      	adds	r4, #7
2fff7f48:	f024 0407 	bic.w	r4, r4, #7
2fff7f4c:	f104 0a08 	add.w	sl, r4, #8
2fff7f50:	e9d4 8900 	ldrd	r8, r9, [r4]
2fff7f54:	f1b8 0f00 	cmp.w	r8, #0
2fff7f58:	f179 0300 	sbcs.w	r3, r9, #0
2fff7f5c:	da19      	bge.n	2fff7f92 <vprintf+0xda>
2fff7f5e:	202d      	movs	r0, #45	; 0x2d
2fff7f60:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
2fff7f64:	f000 f88d 	bl	2fff8082 <putchar>
2fff7f68:	f1d8 0000 	rsbs	r0, r8, #0
2fff7f6c:	eb69 0149 	sbc.w	r1, r9, r9, lsl #1
2fff7f70:	f8cd b000 	str.w	fp, [sp]
2fff7f74:	463b      	mov	r3, r7
2fff7f76:	220a      	movs	r2, #10
2fff7f78:	4654      	mov	r4, sl
2fff7f7a:	f7ff ff66 	bl	2fff7e4a <unsigned_num_print>
2fff7f7e:	4405      	add	r5, r0
2fff7f80:	3601      	adds	r6, #1
2fff7f82:	e79f      	b.n	2fff7ec4 <vprintf+0xc>
2fff7f84:	6820      	ldr	r0, [r4, #0]
2fff7f86:	f104 0a04 	add.w	sl, r4, #4
2fff7f8a:	ea4f 79e0 	mov.w	r9, r0, asr #31
2fff7f8e:	4680      	mov	r8, r0
2fff7f90:	e7e0      	b.n	2fff7f54 <vprintf+0x9c>
2fff7f92:	4640      	mov	r0, r8
2fff7f94:	4649      	mov	r1, r9
2fff7f96:	e7eb      	b.n	2fff7f70 <vprintf+0xb8>
2fff7f98:	4831      	ldr	r0, [pc, #196]	; (2fff8060 <vprintf+0x1a8>)
2fff7f9a:	211c      	movs	r1, #28
2fff7f9c:	f7ff ff04 	bl	2fff7da8 <__assert>
2fff7fa0:	f000 f86f 	bl	2fff8082 <putchar>
2fff7fa4:	e7b1      	b.n	2fff7f0a <vprintf+0x52>
2fff7fa6:	f8d4 9000 	ldr.w	r9, [r4]
2fff7faa:	f104 0804 	add.w	r8, r4, #4
2fff7fae:	f1b9 0f00 	cmp.w	r9, #0
2fff7fb2:	d00d      	beq.n	2fff7fd0 <vprintf+0x118>
2fff7fb4:	f8df a0ac 	ldr.w	sl, [pc, #172]	; 2fff8064 <vprintf+0x1ac>
2fff7fb8:	2400      	movs	r4, #0
2fff7fba:	e002      	b.n	2fff7fc2 <vprintf+0x10a>
2fff7fbc:	3401      	adds	r4, #1
2fff7fbe:	f000 f860 	bl	2fff8082 <putchar>
2fff7fc2:	f814 000a 	ldrb.w	r0, [r4, sl]
2fff7fc6:	2800      	cmp	r0, #0
2fff7fc8:	d1f8      	bne.n	2fff7fbc <vprintf+0x104>
2fff7fca:	4425      	add	r5, r4
2fff7fcc:	f1ab 0b02 	sub.w	fp, fp, #2
2fff7fd0:	f8cd b000 	str.w	fp, [sp]
2fff7fd4:	463b      	mov	r3, r7
2fff7fd6:	2210      	movs	r2, #16
2fff7fd8:	4648      	mov	r0, r9
2fff7fda:	2100      	movs	r1, #0
2fff7fdc:	4644      	mov	r4, r8
2fff7fde:	f7ff ff34 	bl	2fff7e4a <unsigned_num_print>
2fff7fe2:	4405      	add	r5, r0
2fff7fe4:	e7cc      	b.n	2fff7f80 <vprintf+0xc8>
2fff7fe6:	2901      	cmp	r1, #1
2fff7fe8:	463b      	mov	r3, r7
2fff7fea:	bfcb      	itete	gt
2fff7fec:	3407      	addgt	r4, #7
2fff7fee:	2100      	movle	r1, #0
2fff7ff0:	f024 0207 	bicgt.w	r2, r4, #7
2fff7ff4:	f854 0b04 	ldrle.w	r0, [r4], #4
2fff7ff8:	bfc4      	itt	gt
2fff7ffa:	f102 0408 	addgt.w	r4, r2, #8
2fff7ffe:	e9d2 0100 	ldrdgt	r0, r1, [r2]
2fff8002:	f8cd b000 	str.w	fp, [sp]
2fff8006:	2210      	movs	r2, #16
2fff8008:	f7ff ff1f 	bl	2fff7e4a <unsigned_num_print>
2fff800c:	4405      	add	r5, r0
2fff800e:	e7b7      	b.n	2fff7f80 <vprintf+0xc8>
2fff8010:	2901      	cmp	r1, #1
2fff8012:	463b      	mov	r3, r7
2fff8014:	bfcb      	itete	gt
2fff8016:	3407      	addgt	r4, #7
2fff8018:	2100      	movle	r1, #0
2fff801a:	f024 0207 	bicgt.w	r2, r4, #7
2fff801e:	f854 0b04 	ldrle.w	r0, [r4], #4
2fff8022:	bfc4      	itt	gt
2fff8024:	f102 0408 	addgt.w	r4, r2, #8
2fff8028:	e9d2 0100 	ldrdgt	r0, r1, [r2]
2fff802c:	f8cd b000 	str.w	fp, [sp]
2fff8030:	220a      	movs	r2, #10
2fff8032:	e7e9      	b.n	2fff8008 <vprintf+0x150>
2fff8034:	1c77      	adds	r7, r6, #1
2fff8036:	f04f 0b00 	mov.w	fp, #0
2fff803a:	463e      	mov	r6, r7
2fff803c:	f817 0b01 	ldrb.w	r0, [r7], #1
2fff8040:	3830      	subs	r0, #48	; 0x30
2fff8042:	fa5f fc80 	uxtb.w	ip, r0
2fff8046:	f1bc 0f09 	cmp.w	ip, #9
2fff804a:	f63f af6d 	bhi.w	2fff7f28 <vprintf+0x70>
2fff804e:	230a      	movs	r3, #10
2fff8050:	fb03 0b0b 	mla	fp, r3, fp, r0
2fff8054:	e7f1      	b.n	2fff803a <vprintf+0x182>
2fff8056:	3501      	adds	r5, #1
2fff8058:	f000 f813 	bl	2fff8082 <putchar>
2fff805c:	e732      	b.n	2fff7ec4 <vprintf+0xc>
2fff805e:	bf00      	nop
2fff8060:	2fffaaad 	.word	0x2fffaaad
2fff8064:	2fffaabf 	.word	0x2fffaabf

2fff8068 <printf>:
2fff8068:	b40f      	push	{r0, r1, r2, r3}
2fff806a:	b507      	push	{r0, r1, r2, lr}
2fff806c:	a904      	add	r1, sp, #16
2fff806e:	f851 0b04 	ldr.w	r0, [r1], #4
2fff8072:	9101      	str	r1, [sp, #4]
2fff8074:	f7ff ff20 	bl	2fff7eb8 <vprintf>
2fff8078:	b003      	add	sp, #12
2fff807a:	f85d eb04 	ldr.w	lr, [sp], #4
2fff807e:	b004      	add	sp, #16
2fff8080:	4770      	bx	lr

2fff8082 <putchar>:
2fff8082:	b510      	push	{r4, lr}
2fff8084:	4604      	mov	r4, r0
2fff8086:	b2c0      	uxtb	r0, r0
2fff8088:	f7f8 fdf0 	bl	2fff0c6c <console_putc>
2fff808c:	2800      	cmp	r0, #0
2fff808e:	bfac      	ite	ge
2fff8090:	4620      	movge	r0, r4
2fff8092:	f04f 30ff 	movlt.w	r0, #4294967295	; 0xffffffff
2fff8096:	bd10      	pop	{r4, pc}

2fff8098 <strchr>:
2fff8098:	b2c9      	uxtb	r1, r1
2fff809a:	7802      	ldrb	r2, [r0, #0]
2fff809c:	4603      	mov	r3, r0
2fff809e:	3001      	adds	r0, #1
2fff80a0:	428a      	cmp	r2, r1
2fff80a2:	d002      	beq.n	2fff80aa <strchr+0x12>
2fff80a4:	2a00      	cmp	r2, #0
2fff80a6:	d1f8      	bne.n	2fff809a <strchr+0x2>
2fff80a8:	4613      	mov	r3, r2
2fff80aa:	4618      	mov	r0, r3
2fff80ac:	4770      	bx	lr

2fff80ae <strcmp>:
2fff80ae:	1e42      	subs	r2, r0, #1
2fff80b0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
2fff80b4:	f811 3b01 	ldrb.w	r3, [r1], #1
2fff80b8:	4298      	cmp	r0, r3
2fff80ba:	d001      	beq.n	2fff80c0 <strcmp+0x12>
2fff80bc:	1ac0      	subs	r0, r0, r3
2fff80be:	e001      	b.n	2fff80c4 <strcmp+0x16>
2fff80c0:	2800      	cmp	r0, #0
2fff80c2:	d1f5      	bne.n	2fff80b0 <strcmp+0x2>
2fff80c4:	4770      	bx	lr

2fff80c6 <strlcpy>:
2fff80c6:	b530      	push	{r4, r5, lr}
2fff80c8:	b18a      	cbz	r2, 2fff80ee <strlcpy+0x28>
2fff80ca:	440a      	add	r2, r1
2fff80cc:	460c      	mov	r4, r1
2fff80ce:	1c63      	adds	r3, r4, #1
2fff80d0:	4293      	cmp	r3, r2
2fff80d2:	d102      	bne.n	2fff80da <strlcpy+0x14>
2fff80d4:	2300      	movs	r3, #0
2fff80d6:	7003      	strb	r3, [r0, #0]
2fff80d8:	e00a      	b.n	2fff80f0 <strlcpy+0x2a>
2fff80da:	f813 5c01 	ldrb.w	r5, [r3, #-1]
2fff80de:	461c      	mov	r4, r3
2fff80e0:	f800 5b01 	strb.w	r5, [r0], #1
2fff80e4:	2d00      	cmp	r5, #0
2fff80e6:	d1f2      	bne.n	2fff80ce <strlcpy+0x8>
2fff80e8:	1a58      	subs	r0, r3, r1
2fff80ea:	3801      	subs	r0, #1
2fff80ec:	bd30      	pop	{r4, r5, pc}
2fff80ee:	460c      	mov	r4, r1
2fff80f0:	4623      	mov	r3, r4
2fff80f2:	f813 2b01 	ldrb.w	r2, [r3], #1
2fff80f6:	2a00      	cmp	r2, #0
2fff80f8:	d1fb      	bne.n	2fff80f2 <strlcpy+0x2c>
2fff80fa:	e7f5      	b.n	2fff80e8 <strlcpy+0x22>

2fff80fc <strlen>:
2fff80fc:	4603      	mov	r3, r0
2fff80fe:	781a      	ldrb	r2, [r3, #0]
2fff8100:	1c59      	adds	r1, r3, #1
2fff8102:	b90a      	cbnz	r2, 2fff8108 <strlen+0xc>
2fff8104:	1a18      	subs	r0, r3, r0
2fff8106:	4770      	bx	lr
2fff8108:	460b      	mov	r3, r1
2fff810a:	e7f8      	b.n	2fff80fe <strlen+0x2>

2fff810c <strncmp>:
2fff810c:	b510      	push	{r4, lr}
2fff810e:	b17a      	cbz	r2, 2fff8130 <strncmp+0x24>
2fff8110:	440a      	add	r2, r1
2fff8112:	1e43      	subs	r3, r0, #1
2fff8114:	f813 0f01 	ldrb.w	r0, [r3, #1]!
2fff8118:	f811 4b01 	ldrb.w	r4, [r1], #1
2fff811c:	42a0      	cmp	r0, r4
2fff811e:	d001      	beq.n	2fff8124 <strncmp+0x18>
2fff8120:	1b00      	subs	r0, r0, r4
2fff8122:	bd10      	pop	{r4, pc}
2fff8124:	2800      	cmp	r0, #0
2fff8126:	d0fc      	beq.n	2fff8122 <strncmp+0x16>
2fff8128:	428a      	cmp	r2, r1
2fff812a:	d1f3      	bne.n	2fff8114 <strncmp+0x8>
2fff812c:	2000      	movs	r0, #0
2fff812e:	e7f8      	b.n	2fff8122 <strncmp+0x16>
2fff8130:	4610      	mov	r0, r2
2fff8132:	e7f6      	b.n	2fff8122 <strncmp+0x16>

2fff8134 <strnlen>:
2fff8134:	2300      	movs	r3, #0
2fff8136:	428b      	cmp	r3, r1
2fff8138:	d101      	bne.n	2fff813e <strnlen+0xa>
2fff813a:	4618      	mov	r0, r3
2fff813c:	4770      	bx	lr
2fff813e:	5cc2      	ldrb	r2, [r0, r3]
2fff8140:	2a00      	cmp	r2, #0
2fff8142:	d0fa      	beq.n	2fff813a <strnlen+0x6>
2fff8144:	3301      	adds	r3, #1
2fff8146:	e7f6      	b.n	2fff8136 <strnlen+0x2>

2fff8148 <strrchr>:
2fff8148:	b2c9      	uxtb	r1, r1
2fff814a:	2300      	movs	r3, #0
2fff814c:	b510      	push	{r4, lr}
2fff814e:	4604      	mov	r4, r0
2fff8150:	f810 2b01 	ldrb.w	r2, [r0], #1
2fff8154:	428a      	cmp	r2, r1
2fff8156:	bf08      	it	eq
2fff8158:	4623      	moveq	r3, r4
2fff815a:	2a00      	cmp	r2, #0
2fff815c:	d1f7      	bne.n	2fff814e <strrchr+0x6>
2fff815e:	4618      	mov	r0, r3
2fff8160:	bd10      	pop	{r4, pc}

2fff8162 <build_message>:
2fff8162:	7542 6c69 2074 203a 3131 353a 3a37 3033     Built : 11:57:30
2fff8172:	202c 754a 206c 3131 3220 3230 0033          , Jul 11 2023.

2fff8180 <version_string>:
2fff8180:	3276 322e 722d 2e32 2830 6564 7562 2967     v2.2-r2.0(debug)
2fff8190:	003a 0000                                   :...

2fff8194 <psci_args.7182>:
2fff8194:	0106 000c 0000 0000 b2e0 2ffe 6c62 3233     .........../bl32
2fff81a4:	732f 5f70 696d 2f6e 7073 6d5f 6e69 6d5f     /sp_min/sp_min_m
2fff81b4:	6961 2e6e 0063 5314 5f50 494d 3a4e 2520     ain.c..SP_MIN: %
2fff81c4:	0a73 2800 5053 4d5f 4e49 203a 6e49 7469     s..(SP_MIN: Init
2fff81d4:	6169 696c 697a 676e 7220 6e75 6974 656d     ializing runtime
2fff81e4:	7320 7265 6976 6563 0a73 2800 5053 4d5f      services..(SP_M
2fff81f4:	4e49 203a 7250 7065 7261 6e69 2067 7865     IN: Preparing ex
2fff8204:	7469 7420 206f 6f6e 6d72 6c61 7720 726f     it to normal wor
2fff8214:	646c 000a 6f63 6d6d 6e6f 722f 6e75 6974     ld..common/runti
2fff8224:	656d 735f 6376 632e 0a00 6e49 6176 696c     me_svc.c..Invali
2fff8234:	2064 7572 746e 6d69 2065 6573 7672 6369     d runtime servic
2fff8244:	2065 6564 6373 6972 7470 726f 2520 0a70     e descriptor %p.
2fff8254:	0a00 7245 6f72 2072 6e69 7469 6169 696c     ..Error initiali
2fff8264:	697a 676e 7220 6e75 6974 656d 7320 7265     zing runtime ser
2fff8274:	6976 6563 2520 0a73 7300 7265 6976 6563     vice %s..service
2fff8284:	2f73 7473 5f64 7673 2f63 7473 5f64 7673     s/std_svc/std_sv
2fff8294:	5f63 6573 7574 2e70 0063 551e 696e 706d     c_setup.c..Unimp
2fff82a4:	656c 656d 746e 6465 5320 6174 646e 7261     lemented Standar
2fff82b4:	2064 6553 7672 6369 2065 6143 6c6c 203a     d Service Call: 
2fff82c4:	7830 7825 0a20 7300 6474 735f 6376 6c00     0x%x ..std_svc.l
2fff82d4:	6269 652f 336c 725f 6e75 6974 656d 612f     ib/el3_runtime/a
2fff82e4:	7261 6863 3233 632f 6e6f 6574 7478 6d5f     arch32/context_m
2fff82f4:	6d67 2e74 0063 696c 2f62 7370 6963 702f     gmt.c.lib/psci/p
2fff8304:	6373 5f69 666f 2e66 0063 696c 2f62 7370     sci_off.c.lib/ps
2fff8314:	6963 702f 6373 5f69 6e6f 632e 6c00 6269     ci/psci_on.c.lib
2fff8324:	702f 6373 2f69 7370 6963 735f 7375 6570     /psci/psci_suspe
2fff8334:	646e 632e 2800 5350 4943 5020 776f 7265     nd.c.(PSCI Power
2fff8344:	4420 6d6f 6961 206e 614d 3a70 000a 2028      Domain Map:..( 
2fff8354:	4420 6d6f 6961 206e 6f4e 6564 3a20 4c20      Domain Node : L
2fff8364:	7665 6c65 2520 2c75 7020 7261 6e65 5f74     evel %u, parent_
2fff8374:	6f6e 6564 2520 2c64 5320 6174 6574 2520     node %d, State %
2fff8384:	2073 3028 2578 2978 000a 2028 4320 5550     s (0x%x)..(  CPU
2fff8394:	4e20 646f 2065 203a 504d 4449 3020 2578      Node : MPID 0x%
2fff83a4:	6c6c 2c78 7020 7261 6e65 5f74 6f6e 6564     llx, parent_node
2fff83b4:	2520 2c64 5320 6174 6574 2520 2073 3028      %d, State %s (0
2fff83c4:	2578 2978 000a 0000                         x%x)....

2fff83cc <psci_state_type_str.7437>:
2fff83cc:	8416 2fff 840f 2fff 8419 2fff 696c 2f62     .../.../.../lib/
2fff83dc:	7370 6963 702f 6373 5f69 6f63 6d6d 6e6f     psci/psci_common
2fff83ec:	632e 0a00 6e55 7865 6570 7463 6465 6120     .c..Unexpected a
2fff83fc:	6666 6e69 7469 2079 6e69 6f66 7320 6174     ffinity info sta
2fff840c:	6574 5200 5445 4e45 4954 4e4f 4f00 4646     te.RETENTION.OFF
2fff841c:	6c00 6269 702f 6373 2f69 7370 6963 6d5f     .lib/psci/psci_m
2fff842c:	6961 2e6e 0063 490a 766e 6c61 6469 7420     ain.c..Invalid t
2fff843c:	7261 6567 2074 6f70 6577 2072 656c 6576     arget power leve
2fff844c:	206c 6f66 2072 7573 7073 6e65 2064 706f     l for suspend op
2fff845c:	7265 7461 6f69 0a6e 1e00 6e55 6d69 6c70     eration...Unimpl
2fff846c:	6d65 6e65 6574 2064 5350 4943 4320 6c61     emented PSCI Cal
2fff847c:	3a6c 3020 2578 0a78 6c00 6269 702f 6373     l: 0x%x..lib/psc
2fff848c:	2f69 7370 6963 735f 7465 7075 632e 6c00     i/psci_setup.c.l
2fff849c:	6269 702f 6373 2f69 7370 6963 735f 7379     ib/psci/psci_sys
2fff84ac:	6574 5f6d 666f 2e66 0063 696c 2f62 7370     tem_off.c.lib/ps
2fff84bc:	6963 702f 6373 5f69 656d 5f6d 7270 746f     ci/psci_mem_prot
2fff84cc:	6365 2e74 0063 696c 2f62 6f6c 6b63 2f73     ect.c.lib/locks/
2fff84dc:	6162 656b 7972 622f 6b61 7265 5f79 6f6c     bakery/bakery_lo
2fff84ec:	6b63 6e5f 726f 616d 2e6c 0063 5348 0049     ck_normal.c.HSI.
2fff84fc:	5343 0049 250a 2073 6143 696c 7262 7461     CSI..%s Calibrat
2fff850c:	6f69 206e 203a 7246 7165 2520 756c 202c     ion : Freq %lu, 
2fff851c:	7274 6d69 2520 0a69 7300 2c74 7368 2d69     trim %i..st,hsi-
2fff852c:	6163 006c 7473 632c 6973 632d 6c61 7300     cal.st,csi-cal.s
2fff853c:	2c74 6163 2d6c 6573 0063 5328 7465 6320     t,cal-sec.(Set c
2fff854c:	6c61 6269 6172 6974 6e6f 7420 6d69 7265     alibration timer
2fff855c:	7420 206f 7525 7320 6365 000a 636d 5f75      to %u sec..mcu_
2fff856c:	6573 0076 7264 7669 7265 2f73 7473 652f     sev.drivers/st/e
2fff857c:	7a74 6370 652f 7a74 6370 632e 7300 2c74     tzpc/etzpc.c.st,
2fff858c:	7473 336d 2d32 7465 707a 0063 7473 642c     stm32-etzpc.st,d
2fff859c:	6365 7270 746f 2800 6f4e 4520 5a54 4350     ecprot.(No ETZPC
2fff85ac:	6320 6e6f 6966 7567 6172 6974 6e6f 6920      configuration i
2fff85bc:	206e 5444 202c 7375 2065 6564 6166 6c75     n DT, use defaul
2fff85cc:	0a74 0a00 6e49 6176 696c 2064 4544 5043     t...Invalid DECP
2fff85dc:	4f52 2054 6425 7300 2c74 7473 336d 2d32     ROT %d.st,stm32-
2fff85ec:	6e72 0067 7264 7669 7265 2f73 7473 722f     rng.drivers/st/r
2fff85fc:	676e 732f 6d74 3233 725f 676e 632e 0a00     ng/stm32_rng.c..
2fff860c:	4e52 2047 6f6e 7369 0a65 1f00                    RNG noise..

2fff8617 <month_len.6646>:
2fff8617:	1c1f 1e1f 1e1f 1f1f 1f1e 1f1e 7264 7669     ............driv
2fff8627:	7265 2f73 7473 722f 6374 732f 6d74 3233     ers/st/rtc/stm32
2fff8637:	725f 6374 632e 7300 2c74 7473 336d 6d32     _rtc.c.st,stm32m
2fff8647:	3170 722d 6374 0a00 6341 6974 6576 7420     p1-rtc..Active t
2fff8657:	6d61 6570 3a72 5320 4545 2044 6f6e 2074     amper: SEED not 
2fff8667:	6e69 7469 6169 696c 657a 0a64 6400 6972     initialized..dri
2fff8677:	6576 7372 732f 2f74 6174 706d 7265 732f     vers/st/tamper/s
2fff8687:	6d74 3233 745f 6d61 2e70 0063 7473 732c     tm32_tamp.c.st,s
2fff8697:	6d74 3233 742d 6d61 0070 540a 6d61 6570     tm32-tamp..Tampe
2fff86a7:	2072 5049 6420 656f 6e73 7427 7320 7075     r IP doesn't sup
2fff86b7:	6f70 7472 7420 7572 7473 6f7a 656e 7300     port trustzone.s
2fff86c7:	2c74 756f 3374 702d 3163 0033 6177 656b     t,out3-pc13.wake
2fff86d7:	7075 732d 756f 6372 0065 5428 6d61 6570     up-source.(Tampe
2fff86e7:	2072 7645 6e65 2074 634f 7563 7272 6465     r Event Occurred
2fff86f7:	000a 4428 7461 2065 203a 7525 252f 0a75     ..(Date : %u/%u.
2fff8707:	0920 5420 6d69 2065 203a 7525 253a 3a75      . Time : %u:%u:
2fff8717:	7525 000a                                   %u..

2fff871b <__func__.6554>:
2fff871b:	7473 336d 5f32 6974 656d 5f72 6567 5f74     stm32_timer_get_
2fff872b:	7464 6e5f 646f 0065 541e 6d69 7265 6920     dt_node..Timer i
2fff873b:	2073 6f6e 2074 6361 7563 6172 6574 6520     s not accurate e
2fff874b:	6f6e 6775 2068 6f66 2072 6163 696c 7262     nough for calibr
2fff875b:	7461 6f69 0a6e 7300 2c74 7473 336d 2d32     ation..st,stm32-
2fff876b:	6974 656d 7372 1e00 7325 203a 6f4e 5420     timers..%s: No T
2fff877b:	4d49 5245 6620 756f 646e 000a 7473 682c     IMER found..st,h
2fff878b:	6973 632d 6c61 692d 706e 7475 7300 2c74     si-cal-input.st,
2fff879b:	7363 2d69 6163 2d6c 6e69 7570 0074 541e     csi-cal-input..T
2fff87ab:	6d69 7265 6320 756f 746e 7265 6e20 746f     imer counter not
2fff87bb:	7320 6174 6c62 0a65 0000                          stable..

2fff87c4 <BL_CODE_BASE>:
2fff87c4:	b000 2ffe 6c70 7461 732f 2f74 7473 336d     .../plat/st/stm3
2fff87d4:	6d32 3170 732f 5f70 696d 2f6e 7073 6d5f     2mp1/sp_min/sp_m
2fff87e4:	6e69 735f 7465 7075 632e 0a00 5453 334d     in_setup.c..STM3
2fff87f4:	4d32 3150 495f 5152 415f 4958 5245 4952     2MP1_IRQ_AXIERRI
2fff8804:	5152 6720 6e65 7265 7461 6465 000a 490a     RQ generated...I
2fff8814:	5152 415f 4958 5245 4952 5152 6820 6e61     RQ_AXIERRIRQ han
2fff8824:	6c64 2065 6163 6c6c 7720 6f2f 6120 796e     dle call w/o any
2fff8834:	6620 616c 2067 6573 2174 0a21 0a00 6f4e      flag set!!...No
2fff8844:	4920 2054 6168 646e 656c 2072 6e69 4120      IT handler in A
2fff8854:	4d52 7420 637a 3034 2030 7264 7669 7265     RM tzc400 driver
2fff8864:	000a 490a 5152 415f 4958 5245 4952 5152     ...IRQ_AXIERRIRQ
2fff8874:	6320 7561 6573 6320 6e61 7427 6220 2065      cause can't be 
2fff8884:	6564 6574 7463 6465 0a00 4553 5543 4552     detected..SECURE
2fff8894:	4920 2054 6168 646e 656c 2072 6f6e 2074      IT handler not 
2fff88a4:	6564 6966 656e 6620 726f 6920 2074 203a     define for it : 
2fff88b4:	7525 000a 521e 4354 6420 6972 6576 2072     %u...RTC driver 
2fff88c4:	6e69 7469 6520 7272 726f 2520 0a69 1e00     init error %i...
2fff88d4:	4e52 2047 7264 7669 7265 6920 696e 2074     RNG driver init 
2fff88e4:	7265 6f72 2072 6925 000a 6177 656b 7075     error %i..wakeup
2fff88f4:	0a00 7269 5f71 756e 206d 203d 6425 000a     ..irq_num = %d..
2fff8904:	540a 6d61 6570 2072 7325 6f20 6363 7275     .Tamper %s occur
2fff8914:	0a73 5200 4354 7020 776f 7265 6420 6d6f     s..RTC power dom
2fff8924:	6961 006e 6554 706d 7265 7461 7275 2065     ain.Temperature 
2fff8934:	6f6d 696e 6f74 6972 676e 4c00 4553 6d20     monitoring.LSE m
2fff8944:	6e6f 7469 726f 6e69 0067 5348 2045 6f6d     onitoring.HSE mo
2fff8954:	696e 6f74 6972 676e 5200 4354 6320 6c61     nitoring.RTC cal
2fff8964:	6e65 6164 2072 766f 7265 6c66 776f 4d00     endar overflow.M
2fff8974:	6e6f 746f 6e6f 6369 6320 756f 746e 7265     onotonic counter
2fff8984:	0000 0000                                   ....

2fff8988 <tamper_name>:
2fff8988:	8917 2fff 8928 2fff 893f 2fff 894e 2fff     .../(../?../N../
2fff8998:	895d 2fff 8973 2fff                         ]../s../

2fff89a0 <config_pwr>:
2fff89a0:	0000 0000 0200 0000 0000 0000 0000 0000     ................
2fff89b0:	0208 0000 0000 0000 0001 0000 0208 0000     ................
2fff89c0:	8a42 2fff 0007 0000 0208 0000 8a4a 2fff     B../........J../
2fff89d0:	0000 0000 0209 0000 8b8d 2fff 0000 0000     .........../....
2fff89e0:	0209 0000 8a54 2fff 0000 0000 0000 0000     ....T../........
2fff89f0:	8a54 2fff 6c70 7461 732f 2f74 7473 336d     T../plat/st/stm3
2fff8a00:	6d32 3170 732f 6d74 3233 706d 5f31 6f6c     2mp1/stm32mp1_lo
2fff8a10:	5f77 6f70 6577 2e72 0063 441e 5244 6320     w_power.c..DDR c
2fff8a20:	6e61 7427 6220 2065 6573 2074 6e69 5320     an't be set in S
2fff8a30:	6c65 2d66 6572 7266 7365 2068 6f6d 6564     elf-refresh mode
2fff8a40:	000a 706c 732d 6f74 0070 706c 766c 732d     ..lp-stop.lplv-s
2fff8a50:	6f74 0070 7473 6e61 6264 2d79 6464 2d72     top.standby-ddr-
2fff8a60:	666f 0066 6c70 7461 732f 2f74 7473 336d     off.plat/st/stm3
2fff8a70:	6d32 3170 732f 6d74 3233 706d 5f31 6d70     2mp1/stm32mp1_pm
2fff8a80:	632e 0000                                   .c..

2fff8a84 <stm32_psci_ops>:
2fff8a84:	e775 2ffe e6f1 2ffe e5e9 2ffe 0000 0000     u../.../.../....
2fff8a94:	e649 2ffe e6dd 2ffe 0000 0000 e7b1 2ffe     I../.../......./
2fff8aa4:	e69d 2ffe e661 2ffe e635 2ffe e5eb 2ffe     .../a../5../.../
2fff8ab4:	e609 2ffe e62d 2ffe 0000 0000 0000 0000     .../-../........
2fff8ac4:	e621 2ffe 0000 0000 0000 0000 0000 0000     !../............
2fff8ad4:	0000 0000 6c70 7461 732f 2f74 7473 336d     ....plat/st/stm3
2fff8ae4:	6d32 3170 732f 6d74 3233 706d 5f31 6f70     2mp1/stm32mp1_po
2fff8af4:	6577 5f72 6f63 666e 6769 632e 7300 7379     wer_config.c.sys
2fff8b04:	6574 5f6d 666f 5f66 6f73 5f63 6f6d 6564     tem_off_soc_mode
2fff8b14:	0a00 6f4e 6564 2520 2073 6f6e 2074 6f66     ..Node %s not fo
2fff8b24:	6e75 0a64 7300 2c74 7473 336d 6d32 3170     und..st,stm32mp1
2fff8b34:	702c 7277 722d 6765 7300 7379 6574 5f6d     ,pwr-reg.system_
2fff8b44:	7573 7073 6e65 5f64 7573 7070 726f 6574     suspend_supporte
2fff8b54:	5f64 6f73 5f63 6f6d 6564 0073 500a 5257     d_soc_modes..PWR
2fff8b64:	4420 0a54 0a00 6e49 6176 696c 2064 6f6d      DT...Invalid mo
2fff8b74:	6564 000a 7473 722c 7465 6172 2d6d 6e65     de..st,retram-en
2fff8b84:	6261 656c 2d64 6e69 732d 6174 646e 7962     abled-in-standby
2fff8b94:	642d 7264 732d 0072 630a 756f 646c 6e20     -ddr-sr..could n
2fff8ba4:	746f 6320 6e6f 6966 7567 6572 7220 7465     ot configure ret
2fff8bb4:	6172 206d 7473 7461 0a65 2800 5445 505a     ram state..(ETZP
2fff8bc4:	3a43 2520 2073 2528 2964 6320 756f 646c     C: %s (%d) could
2fff8bd4:	6220 2065 6f6e 206e 6573 7563 6572 000a      be non secure..
2fff8be4:	490a 766e 6c61 6469 4920 2044 7525 0a00     .Invalid ID %u..
2fff8bf4:	5445 505a 3a43 2520 2073 2528 2964 6520     ETZPC: %s (%d) e
2fff8c04:	7078 6365 6574 2064 6573 7563 6572 6220     xpected secure b
2fff8c14:	7475 4420 4345 5250 544f 3d20 2520 0a64     ut DECPROT = %d.
2fff8c24:	7000 616c 2f74 7473 732f 6d74 3233 706d     .plat/st/stm32mp
2fff8c34:	2f31 7473 336d 6d32 3170 735f 6168 6572     1/stm32mp1_share
2fff8c44:	5f64 6572 6f73 7275 6563 2e73 0063 490a     d_resources.c..I
2fff8c54:	766e 6c61 6469 4720 4950 204f 6970 206e     nvalid GPIO pin 
2fff8c64:	7525 202c 7525 7020 6e69 7328 2029 7661     %u, %u pin(s) av
2fff8c74:	6961 616c 6c62 0a65 0000 0000               ailable.....

2fff8c80 <shres2decprot_tbl>:
2fff8c80:	000c 0000 0002 0000 8dd8 2fff 0012 0000     .........../....
2fff8c90:	0003 0000 8dde 2fff 0011 0000 0004 0000     ......./........
2fff8ca0:	8de4 2fff 000a 0000 0005 0000 8de9 2fff     .../.........../
2fff8cb0:	000f 0000 0007 0000 8dee 2fff 0009 0000     .........../....
2fff8cc0:	0008 0000 8df3 2fff 0000 0000 0009 0000     ......./........
2fff8cd0:	8df9 2fff 000b 0000 000c 0000 8dff 2fff     .../.........../
2fff8ce0:	ffff ffff 0000 0000 8e04 2fff ffff ffff     .........../....
2fff8cf0:	0001 0000 8e0a 2fff ffff ffff 000a 0000     ......./........
2fff8d00:	8e12 2fff ffff ffff 000b 0000 8e1a 2fff     .../.........../

2fff8d10 <shres2str_id_tbl>:
2fff8d10:	8df9 2fff 8e21 2fff 8e28 2fff 8e2f 2fff     .../!../(..//../
2fff8d20:	8e36 2fff 8e3d 2fff 8e44 2fff 8e4b 2fff     6../=../D../K../
2fff8d30:	8e52 2fff 8df3 2fff 8de9 2fff 8dff 2fff     R../.../.../.../
2fff8d40:	8dd8 2fff 8e59 2fff 8e5d 2fff 8dee 2fff     .../Y../]../.../
2fff8d50:	8e62 2fff 8de4 2fff 8e66 2fff 8e6d 2fff     b../.../f../m../
2fff8d60:	6f6e 206e 6573 7563 6572 6e00 746f 7320     non secure.not s
2fff8d70:	7465 5300 6365 7275 0065 7328 6d74 3233     et.Secure.(stm32
2fff8d80:	706d 2520 2073 2528 2975 203a 7325 000a     mp %s (%u): %s..
2fff8d90:	520a 4343 2520 2073 434d 504b 4f52 2054     .RCC %s MCKPROT 
2fff8da0:	7325 6120 646e 2520 2073 2528 2975 7320     %s and %s (%u) s
2fff8db0:	6365 7275 0a65 0a00 5047 4f49 6220 6e61     ecure...GPIO ban
2fff8dc0:	206b 7525 6320 6e61 6f6e 2074 6562 7320     k %u cannot be s
2fff8dd0:	6365 7275 6465 000a 5749 4744 0031 4155     ecured..IWDG1.UA
2fff8de0:	5452 0031 5053 3649 4900 4332 0034 4e52     RT1.SPI6.I2C4.RN
2fff8df0:	3147 4800 5341 3148 4300 5952 3150 4900     G1.HASH1.CRYP1.I
2fff8e00:	4332 0036 5453 4547 004e 4b42 5350 4152     2C6.STGEN.BKPSRA
2fff8e10:	004d 4444 4352 5254 004c 4444 5052 5948     M.DDRCTRL.DDRPHY
2fff8e20:	4700 4950 5a4f 0030 5047 4f49 315a 4700     .GPIOZ0.GPIOZ1.G
2fff8e30:	4950 5a4f 0032 5047 4f49 335a 4700 4950     PIOZ2.GPIOZ3.GPI
2fff8e40:	5a4f 0034 5047 4f49 355a 4700 4950 5a4f     OZ4.GPIOZ5.GPIOZ
2fff8e50:	0036 5047 4f49 375a 4d00 5543 4d00 4d44     6.GPIOZ7.MCU.MDM
2fff8e60:	0041 5452 0043 5355 5241 3154 5000 4c4c     A.RTC.USART1.PLL
2fff8e70:	0033                                        3.

2fff8e72 <stm32mp1_power_domain_tree_desc>:
2fff8e72:	0201 7264 7669 7265 2f73 7261 2f6d 6967     ..drivers/arm/gi
2fff8e82:	2f63 3276 672f 6369 3276 685f 6c65 6570     c/v2/gicv2_helpe
2fff8e92:	7372 632e 6400 6972 6576 7372 612f 6d72     rs.c.drivers/arm
2fff8ea2:	672f 6369 762f 2f32 6967 7663 5f32 616d     /gic/v2/gicv2_ma
2fff8eb2:	6e69 632e 2800 5241 204d 4947 7643 2032     in.c.(ARM GICv2 
2fff8ec2:	7264 7669 7265 6920 696e 6974 6c61 7a69     driver initializ
2fff8ed2:	6465 000a 6e69 6574 7272 7075 2d74 6170     ed..interrupt-pa
2fff8ee2:	6572 746e 7300 6365 7275 2d65 6e69 6574     rent.secure-inte
2fff8ef2:	7272 7075 2d74 616e 656d 0073 7261 2c6d     rrupt-names.arm,
2fff8f02:	6f63 7472 7865 612d 2d37 6967 0063 6923     cortex-a7-gic.#i
2fff8f12:	746e 7265 7572 7470 632d 6c65 736c 0000     nterrupt-cells..
	...

2fff8f24 <stm32_interrupt_props>:
2fff8f24:	001d 0000 00f4 0000 0024 0000 0009 0020     ........$..... .
2fff8f34:	000a 0020 000b 0020 000c 0020 000d 0020     .. ... ... ... .
2fff8f44:	000f 0020 0008 0020 000e 0020 6c70 7461     .. ... ... .plat
2fff8f54:	632f 6d6f 6f6d 2f6e 6c70 7461 705f 6373     /common/plat_psc
2fff8f64:	5f69 6f63 6d6d 6e6f 632e 1e00 6e55 6d69     i_common.c..Unim
2fff8f74:	6c70 6d65 6e65 6574 2064 5453 334d 4d32     plemented STM32M
2fff8f84:	3150 5320 7265 6976 6563 4320 6c61 3a6c     P1 Service Call:
2fff8f94:	3020 2578 0a78 7300 6d74 3233 706d 5f31      0x%x..stm32mp1_
2fff8fa4:	6973 5f70 7673 0063 7264 7669 7265 2f73     sip_svc.drivers/
2fff8fb4:	7473 732f 6d63 2d69 736d 2f67 6162 6573     st/scmi-msg/base
2fff8fc4:	632e 0000                                   .c..

2fff8fc8 <scmi_base_handler_table>:
2fff8fc8:	fef1 2ffe ff19 2ffe fead 2ffe ff9d 2ffe     .../.../.../.../
2fff8fd8:	ff49 2ffe fe89 2ffe fdf9 2ffe               I../.../.../

2fff8fe4 <scmi_clock_handler_table>:
2fff8fe4:	0065 2fff 00c1 2fff 0021 2fff 0299 2fff     e../.../!../.../
2fff8ff4:	00f5 2fff 024d 2fff 01ed 2fff 0329 2fff     .../M../.../)../
2fff9004:	7264 7669 7265 2f73 7473 732f 6d63 2d69     drivers/st/scmi-
2fff9014:	736d 2f67 6c63 636f 2e6b 0063 410a 6567     msg/clock.c..Age
2fff9024:	746e 2520 2075 7250 746f 636f 6c6f 3020     nt %u Protocol 0
2fff9034:	2578 2078 654d 7373 6761 2065 7830 7825     x%x Message 0x%x
2fff9044:	203a 6f6e 2074 7573 7070 726f 6574 0064     : not supported.
2fff9054:	7264 7669 7265 2f73 7473 732f 6d63 2d69     drivers/st/scmi-
2fff9064:	736d 2f67 6e65 7274 2e79 0063 7264 7669     msg/entry.c.driv
2fff9074:	7265 2f73 7473 732f 6d63 2d69 736d 2f67     ers/st/scmi-msg/
2fff9084:	6572 6573 5f74 6f64 616d 6e69 632e 0000     reset_domain.c..

2fff9094 <scmi_rd_handler_table>:
2fff9094:	0485 2fff 04ad 2fff 0441 2fff 04dd 2fff     .../.../A../.../
2fff90a4:	0571 2fff 7264 7669 7265 2f73 7473 732f     q../drivers/st/s
2fff90b4:	6d63 2d69 736d 2f67 6d73 2e74 0063 0000     cmi-msg/smt.c...

2fff90c4 <agent_resources>:
2fff90c4:	b22c 2fff 0015 0000 b328 2fff 000c 0000     ,../....(../....
2fff90d4:	b388 2fff 0003 0000 0000 0000 0000 0000     .../............
2fff90e4:	6c70 7461 732f 2f74 7473 336d 6d32 3170     plat/st/stm32mp1
2fff90f4:	732f 6d74 3233 706d 5f31 6373 696d 632e     /stm32mp1_scmi.c
	...

2fff9105 <plat_protocol_list>:
2fff9105:	1614 0a00 6e49 6176 696c 2064 4353 494d     ....Invalid SCMI
2fff9115:	6320 6f6c 6b63 6e20 6d61 0a65 0a00 6e49      clock name...In
2fff9125:	6176 696c 2064 4353 494d 7220 7365 7465     valid SCMI reset
2fff9135:	6420 6d6f 6961 206e 616e 656d 000a 7073      domain name..sp
2fff9145:	3669 6900 6332 0034 3269 3663 7500 6173     i6.i2c4.i2c6.usa
2fff9155:	7472 0031 7473 6567 006e 7067 6f69 007a     rt1.stgen.gpioz.
2fff9165:	7263 7079 0031 6168 6873 0031 6e72 3167     cryp1.hash1.rng1
2fff9175:	6d00 6d64 0061 636d 5f75 6f68 646c 625f     .mdma.mcu_hold_b
2fff9185:	6f6f 0074 6c70 336c 715f 7000 6c6c 5f33     oot.pll3_q.pll3_
2fff9195:	0072 6b63 6d5f 7563 6300 5f6b 7368 0065     r.ck_mcu.ck_hse.
2fff91a5:	6b63 685f 6973 6300 5f6b 7363 0069 6b63     ck_hsi.ck_csi.ck
2fff91b5:	6c5f 6573 6300 5f6b 736c 0069 6c70 326c     _lse.ck_lsi.pll2
2fff91c5:	715f 7000 6c6c 5f32 0072 6b63 6d5f 7570     _q.pll2_r.ck_mpu
2fff91d5:	6300 5f6b 7861 0069 3269 3463 6b5f 6900     .ck_axi.i2c4_k.i
2fff91e5:	6332 5f36 006b 7769 6764 0031 6e72 3167     2c6_k.iwdg1.rng1
2fff91f5:	6b5f 6300 5f6b 7472 0063 7472 6163 6270     _k.ck_rtc.rtcapb
2fff9205:	7300 6970 5f36 006b 7375 7261 3174 6b5f     .spi6_k.usart1_k
	...

2fff9216 <sub_vendor>:
	...

2fff9217 <vendor>:
2fff9217:	5453 6300 6d6f 6f6d 2f6e 6674 6c5f 676f     ST.common/tf_log
2fff9227:	632e 6400 6972 6576 7372 632f 6e6f 6f73     .c.drivers/conso
2fff9237:	656c 6d2f 6c75 6974 635f 6e6f 6f73 656c     le/multi_console
2fff9247:	632e 0000 6000                                   .c...

2fff924c <plat_prefix_str>:
2fff924c:	9260 2fff 926a 2fff 9274 2fff 927e 2fff     `../j../t../~../
2fff925c:	9288 2fff 5245 4f52 3a52 2020 0020 4f4e     .../ERROR:   .NO
2fff926c:	4954 4543 203a 0020 4157 4e52 4e49 3a47     TICE:  .WARNING:
2fff927c:	0020 4e49 4f46 203a 2020 0020 4556 4252      .INFO:    .VERB
2fff928c:	534f 3a45 0020 6c70 7461 732f 2f74 6f63     OSE: .plat/st/co
2fff929c:	6d6d 6e6f 732f 6d74 3233 706d 635f 6d6f     mmon/stm32mp_com
2fff92ac:	6f6d 2e6e 0063 5528 6573 6420 6665 7561     mon.c.(Use defau
2fff92bc:	746c 6320 6968 2070 4449 202c 6564 7562     lt chip ID, debu
2fff92cc:	2067 6964 6173 6c62 6465 000a 6170 7472     g disabled..part
2fff92dc:	6e5f 6d75 6562 5f72 746f 0070 6c70 7461     _number_otp.plat
2fff92ec:	732f 2f74 7473 336d 6d32 3170 732f 6d74     /st/stm32mp1/stm
2fff92fc:	3233 706d 5f31 7270 7669 7461 2e65 0063     32mp1_private.c.
2fff930c:	420a 4553 3a43 2520 2073 6552 6461 4520     .BSEC: %s Read E
2fff931c:	7272 726f 000a 420a 4553 3a43 6920 7864     rror...BSEC: idx
2fff932c:	253d 2064 6552 6461 4520 7272 726f 000a     =%d Read Error..
2fff933c:	7768 5f32 746f 0070 0000 0000               hw2_otp.....

2fff9348 <stm32mp1_mmap>:
2fff9348:	0000 2ffc 0000 0000 0000 2ffc f000 0003     .../......./....
2fff9358:	002a 0000 0000 4000 f000 2fff 0000 0000     *......@.../....
2fff9368:	f000 2fff 1000 0000 0038 0000 0000 4000     .../....8......@
2fff9378:	0000 4000 0000 0000 0000 4000 0000 4000     ...@.......@...@
2fff9388:	0028 0000 0000 4000 0000 8000 0000 0000     (......@........
2fff9398:	0000 8000 0000 4000 0028 0000 0000 4000     .......@(......@
	...

2fff93c0 <tzc_source_ip>:
2fff93c0:	0c00 0000 00a7 0000 0060 0000 0cc5 0000     ........`.......
2fff93d0:	0065 0000 0060 0000 0cd8 0000 006f 0000     e...`.......o...
2fff93e0:	0060 0000 0cd0 0000 0076 0000 0060 0000     `.......v...`...
2fff93f0:	0cd1 0000 0077 0000 0060 0000 0d00 0000     ....w...`.......
2fff9400:	0064 0000 0060 0000 4cc8 0000 00a6 0000     d...`....L......
2fff9410:	0055 0000 4cd0 0000 0078 0000 0056 0000     U....L..x...V...
2fff9420:	0cca 0000 0069 0000 005e 0000 4cc0 0000     ....i...^....L..
2fff9430:	0047 0000 0058 0000 4cc1 0000 0048 0000     G...X....L..H...
2fff9440:	0059 0000 696c 2f62 6c78 7461 745f 6261     Y...lib/xlat_tab
2fff9450:	656c 5f73 3276 612f 7261 6863 3233 782f     les_v2/aarch32/x
2fff9460:	616c 5f74 6174 6c62 7365 615f 6372 2e68     lat_tables_arch.
2fff9470:	0063 696c 2f62 6c78 7461 745f 6261 656c     c.lib/xlat_table
2fff9480:	5f73 3276 782f 616c 5f74 6174 6c62 7365     s_v2/xlat_tables
2fff9490:	635f 6e6f 6574 7478 632e 0a00 6f4e 2074     _context.c..Not 
2fff94a0:	6e65 756f 6867 6d20 6d65 726f 2079 6f74     enough memory to
2fff94b0:	6d20 7061 7220 6765 6f69 3a6e 200a 4156      map region:. VA
2fff94c0:	303a 2578 786c 2020 4150 303a 2578 6c6c     :0x%lx  PA:0x%ll
2fff94d0:	2078 7320 7a69 3a65 7830 7a25 2078 6120     x  size:0x%zx  a
2fff94e0:	7474 3a72 7830 7825 000a 6d0a 616d 5f70     ttr:0x%x...mmap_
2fff94f0:	6461 5f64 6572 6967 6e6f 635f 6568 6b63     add_region_check
2fff9500:	2928 6620 6961 656c 2e64 6520 7272 726f     () failed. error
2fff9510:	2520 0a64 6c00 6269 782f 616c 5f74 6174      %d..lib/xlat_ta
2fff9520:	6c62 7365 765f 2f32 6c78 7461 745f 6261     bles_v2/xlat_tab
2fff9530:	656c 5f73 6f63 6572 632e 0a00 5a54 2d43     les_core.c..TZC-
2fff9540:	3034 3a30 4620 6c69 6574 2072 6425 4720     400: Filter %d G
2fff9550:	7461 6b65 6565 6570 2072 6c61 6572 6461     atekeeper alread
2fff9560:	2079 6e65 6261 656c 0a64 0a00 5a54 2d43     y enabled...TZC-
2fff9570:	3034 2030 203a 7257 6e6f 2067 6564 6976     400 : Wrong devi
2fff9580:	6563 4920 2044 3028 2578 2978 0a2e 0a00     ce ID (0x%x)....
2fff9590:	7245 6f72 2072 6f6e 4920 2054 6570 646e     Error no IT pend
2fff95a0:	6e69 2167 0a00 6c49 656c 6167 206c 6361     ing!..Illegal ac
2fff95b0:	6563 7373 7420 206f 7830 6c25 2078 6e69     cess to 0x%lx in
2fff95c0:	3a20 000a 090a 6f4e 2d6e 6553 7563 6572      :....Non-Secure
2fff95d0:	000a 090a 6553 7563 6572 000a 090a 7250     ....Secure....Pr
2fff95e0:	7669 6c69 6765 0a65 0a00 5509 706e 6972     ivilege....Unpri
2fff95f0:	6976 656c 6567 000a 090a 6552 6461 000a     vilege....Read..
2fff9600:	090a 7257 7469 0a65 6400 6972 6576 7372     ..Write..drivers
2fff9610:	612f 6d72 742f 637a 742f 637a 3034 2e30     /arm/tzc/tzc400.
2fff9620:	0063 7264 7669 7265 2f73 6564 616c 5f79     c.drivers/delay_
2fff9630:	6974 656d 2f72 6564 616c 5f79 6974 656d     timer/delay_time
2fff9640:	2e72 0063 7264 7669 7265 2f73 6564 616c     r.c.drivers/dela
2fff9650:	5f79 6974 656d 2f72 6567 656e 6972 5f63     y_timer/generic_
2fff9660:	6564 616c 5f79 6974 656d 2e72 0063 7473     delay_timer.c.st
2fff9670:	732c 6d74 3233 6e2d 6d76 6d65 6c2d 7961     ,stm32-nvmem-lay
2fff9680:	756f 0074 766e 656d 2d6d 6563 6c6c 6e2d     out.nvmem-cell-n
2fff9690:	6d61 7365 6e00 6d76 6d65 632d 6c65 736c     ames.nvmem-cells
2fff96a0:	0a00 614d 666c 726f 656d 2064 766e 656d     ..Malformed nvme
2fff96b0:	5f6d 616c 6f79 7475 6e20 646f 3a65 6920     m_layout node: i
2fff96c0:	6e67 726f 6465 000a 4d0a 7369 6c61 6769     gnored...Misalig
2fff96d0:	656e 2064 766e 656d 5f6d 616c 6f79 7475     ned nvmem_layout
2fff96e0:	6520 656c 656d 746e 203a 6769 6f6e 6572      element: ignore
2fff96f0:	0a64 7300 2c74 7473 336d 6d32 3170 2d35     d..st,stm32mp15-
2fff9700:	7362 6365 1e00 544f 2050 7263 736f 6573     bsec..OTP crosse
2fff9710:	2073 6f4c 6577 2f72 7055 6570 2072 6f62     s Lower/Upper bo
2fff9720:	6e75 6164 7972 000a 7473 6e2c 6e6f 732d     undary..st,non-s
2fff9730:	6365 7275 2d65 746f 0070 550a 616e 696c     ecure-otp..Unali
2fff9740:	6e67 6465 6e20 6e6f 732d 6365 7275 2065     gned non-secure 
2fff9750:	544f 0a50 0a00 5342 4345 203a 7525 5320     OTP...BSEC: %u S
2fff9760:	6974 6b63 2d79 7270 676f 6220 7469 7220     ticky-prog bit r
2fff9770:	6165 2064 7245 6f72 2072 6925 000a 420a     ead Error %i...B
2fff9780:	4553 3a43 2520 2075 6570 6d72 6e61 6e65     SEC: %u permanen
2fff9790:	2074 6962 2074 6572 6461 4520 7272 726f     t bit read Error
2fff97a0:	2520 0a69 1e00 5342 4345 203a 544f 2050      %i...BSEC: OTP 
2fff97b0:	6f6c 6b63 6465 202c 7270 676f 7720 6c69     locked, prog wil
2fff97c0:	206c 6562 6920 6e67 726f 6465 000a 421e     l be ignored...B
2fff97d0:	4553 3a43 4720 4c50 434f 204b 6361 6974     SEC: GPLOCK acti
2fff97e0:	6176 6574 2c64 7020 6f72 2067 6977 6c6c     vated, prog will
2fff97f0:	6220 2065 6769 6f6e 6572 0a64 0a00 5342      be ignored...BS
2fff9800:	4345 203a 7525 5320 6974 6b63 2d79 6572     EC: %u Sticky-re
2fff9810:	6461 6220 7469 7220 6165 2064 7245 6f72     ad bit read Erro
2fff9820:	2072 6925 000a 420a 4553 3a43 2520 2075     r %i...BSEC: %u 
2fff9830:	7453 6369 796b 772d 6972 6574 6220 7469     Sticky-write bit
2fff9840:	7220 6165 2064 7245 6f72 2072 6925 000a      read Error %i..
2fff9850:	7264 7669 7265 2f73 7473 622f 6573 2f63     drivers/st/bsec/
2fff9860:	7362 6365 2e32 0063 6c63 636f 2d6b 616e     bsec2.c.clock-na
2fff9870:	656d 0073 7473 732c 6d74 3233 706d 2d31     mes.st,stm32mp1-
2fff9880:	6372 0063 632f 6f6c 6b63 0073 6c63 636f     rcc./clocks.cloc
2fff9890:	2d6b 7266 7165 6575 636e 0079               k-frequency.

2fff989c <__func__.7261>:
2fff989c:	7473 336d 6d32 3170 635f 6b6c 675f 7465     stm32mp1_clk_get
2fff98ac:	675f 7461 6465 695f 0064 430a 6f6c 6b63     _gated_id..Clock
2fff98bc:	2520 2064 6163 276e 2074 6562 6420 7369      %d can't be dis
2fff98cc:	6261 656c 0a64 0a00 6c43 636f 206b 6425     abled...Clock %d
2fff98dc:	6320 6e61 7427 6220 2065 6e65 6261 656c      can't be enable
2fff98ec:	0a64 0000                                        d..

2fff98ef <axiss_parents>:
2fff98ef:	0100 160d                                        ...

2fff98f2 <fmc_parents>:
2fff98f2:	1216 1e13                                   ....

2fff98f6 <i2c12_parents>:
2fff98f6:	1517 0906                                   ....

2fff98fa <i2c35_parents>:
2fff98fa:	1517 0906                                   ....

2fff98fe <i2c46_parents>:
2fff98fe:	111b 0906                                   ....

2fff9902 <mcuss_parents>:
2fff9902:	0100 1002                                   ....

2fff9906 <mpu_parents>:
2fff9906:	0100 0a0a                                   ....

2fff990a <parent_id_clock_id>:
2fff990a:	0004 0201 ff03 0004 0105 b5b4 b7b6 b9b8     ................
2fff991a:	bbba bdbc bfbe c3c3 c3c3 c3c3 0000 c2c1     ................
2fff992a:	ffc4                                        ..

2fff992c <per_parents>:
2fff992c:	0100 0002                                        ...

2fff992f <pllncfgr2>:
2fff992f:	0800 1610                                        ...

2fff9932 <qspi_parents>:
2fff9932:	1216 1e13                                   ....

2fff9936 <rng1_parents>:
2fff9936:	1502 0304                                   ....

2fff993a <rtc_parents>:
2fff993a:	04ff 0103                                   ....

2fff993e <sdmmc12_parents>:
2fff993e:	121c 0613                                   ....

2fff9942 <sdmmc3_parents>:
2fff9942:	121d 0613                                   ....

2fff9946 <spi6_parents>:
2fff9946:	141b 0906 1107                              ......

2fff994c <stgen_parents>:
2fff994c:	0706                                        ..

2fff994e <stm32mp1_axi_div>:
2fff994e:	0201 0403 0404 0404 490a 636e 6e6f 6973     .........Inconsi
2fff995e:	7473 6e65 2074 504f 2050 6573 7474 6e69     stent OPP settin
2fff996e:	7367 6620 756f 646e 6920 206e 5444 202c     gs found in DT, 
2fff997e:	6769 6f6e 6572 2e64 000a                    ignored...

2fff9988 <stm32mp1_clk_gate>:
2fff9988:	00d8 dc00 0100 16ff 00d8 dd01 0100 16ff     ................
2fff9998:	00d8 de02 0100 16ff 00d8 df03 0100 16ff     ................
2fff99a8:	00d8 e004 0100 0fff 00d8 e105 0100 0fff     ................
2fff99b8:	00d8 e206 0100 1aff 00d8 e307 0100 1aff     ................
2fff99c8:	00d8 e408 0100 16ff 00d8 e509 0100 1aff     ................
2fff99d8:	00d8 e60a 0100 1aff 0a00 cb06 0001 17ff     ................
2fff99e8:	0a08 d002 0001 18ff 0a10 330b 0001 ffff     ...........3....
2fff99f8:	0200 a700 0001 ffff 0200 e708 0001 ffff     ................
2fff9a08:	0200 3a0f 0001 ffff 0200 7f10 0001 ff11     ...:............
2fff9a18:	0208 8700 0101 ff04 0208 8c02 0101 ff03     ................
2fff9a28:	0208 8e03 0101 ff03 0208 9404 0101 ff05     ................
2fff9a38:	0208 4108 0101 1bff 0208 420b 0101 1bff     ...A.......B....
2fff9a48:	0208 710c 0101 1bff 0208 430d 0101 1bff     ...q.......C....
2fff9a58:	0208 440f 0101 1bff 0208 4510 0101 1bff     ...D.......E....
2fff9a68:	0208 8014 0101 ff02 0140 c014 0100 ff13     ........@.......
2fff9a78:	0a18 4700 0001 ffff 0a18 4801 0001 ffff     ...G.......H....
2fff9a88:	0a18 a608 0001 ff12 0a18 7810 0001 ff0c     ...........x....
2fff9a98:	0a28 5400 0001 ffff 0a28 5501 0001 ffff     (..T....(..U....
2fff9aa8:	0a28 5602 0001 ffff 0a28 5703 0001 ffff     (..V....(..W....
2fff9ab8:	0a28 5804 0001 ffff 0a28 5905 0001 ffff     (..X....(..Y....
2fff9ac8:	0a28 5a06 0001 ffff 0a28 5b07 0001 ffff     (..Z....(..[....
2fff9ad8:	0a28 5c08 0001 ffff 0a28 5d09 0001 ffff     (..\....(..]....
2fff9ae8:	0a28 5e0a 0001 ffff 0210 5f00 0101 1bff     (..^......._....
2fff9af8:	0210 6004 0101 1bff 0210 6105 0101 1bff     ...`.......a....
2fff9b08:	0210 7c06 0101 ff06 0210 6308 0101 1bff     ...|.......c....
2fff9b18:	0220 6400 0101 16ff 0218 6505 0001 ffff      ..d.......e....
2fff9b28:	0218 690a 0001 16ff 0218 7610 0001 ff0b     ...i.......v....
2fff9b38:	0218 7711 0001 ff0b 0218 6f18 0001 ffff     ...w.......o....
2fff9b48:	080c d608 0000 ffff 250a 3a73 6320 6b6c     .........%s: clk
2fff9b58:	6920 2064 6425 6e20 746f 6620 756f 646e      id %d not found
2fff9b68:	000a 0000                                   ....

2fff9b6c <stm32mp1_clk_pll>:
2fff9b6c:	0001 0000 0028 0084 0088 008c 0080 0090     ....(...........
2fff9b7c:	0000 0000 0001 0000 00ff 0000 00ff 0000     ................
2fff9b8c:	0001 0000 0028 0098 009c 00a0 0094 00a4     ....(...........
2fff9b9c:	0000 0000 0001 0000 00ff 0000 00ff 0000     ................
2fff9bac:	0000 0000 0820 0884 0888 088c 0880 0890     .... ...........
2fff9bbc:	0000 0000 0001 0000 0002 0000 00ff 0000     ................
2fff9bcc:	0000 0000 0824 0898 089c 08a0 0894 08a4     ....$...........
2fff9bdc:	0000 0000 0001 0000 0002 0000 0005 0000     ................

2fff9bec <stm32mp1_clk_sel>:
2fff9bec:	08c0 0700 0004 0000 98f6 2fff 08c4 0700     .........../....
2fff9bfc:	0004 0000 98fa 2fff 00d4 0300 0002 0000     ......./........
2fff9c0c:	994c 2fff 00c0 0700 0004 0000 98fe 2fff     L../.........../
2fff9c1c:	00c4 0700 0006 0000 9946 2fff 00c8 0700     ........F../....
2fff9c2c:	0006 0000 9e37 2fff 00cc 0300 0004 0000     ....7../........
2fff9c3c:	9936 2fff 08e4 0700 0005 0000 9e32 2fff     6../........2../
2fff9c4c:	08e8 0700 0005 0000 9e2d 2fff 08ec 0700     ........-../....
2fff9c5c:	0005 0000 9e2d 2fff 08f0 0700 0005 0000     ....-../........
2fff9c6c:	9e2d 2fff 08f4 0700 0004 0000 993e 2fff     -../........>../
2fff9c7c:	08f8 0700 0004 0000 9942 2fff 0900 0300     ........B../....
2fff9c8c:	0004 0000 9932 2fff 0904 0300 0004 0000     ....2../........
2fff9c9c:	98f2 2fff 0024 0700 0003 0000 98ef 2fff     .../$........../
2fff9cac:	0048 0300 0004 0000 9902 2fff 091c 0300     H........../....
2fff9cbc:	0003 0000 9e3f 2fff 091c 0104 0002 0000     ....?../........
2fff9ccc:	9e3d 2fff 0140 0310 0004 0000 993a 2fff     =../@.......:../
2fff9cdc:	0020 0300 0004 0000 9906 2fff 00d0 0300      ........../....
2fff9cec:	0003 0000 992c 2fff                         ....,../

2fff9cf4 <stm32mp1_mcu_div>:
2fff9cf4:	0100 0302 0604 0807 0909 0909 0909 0909     ................

2fff9d04 <stm32mp1_mpu_apbx_div>:
2fff9d04:	0100 0302 0404 0404                         ........

2fff9d0c <stm32mp1_pll>:
2fff9d0c:	1004 0863 c710 500a 4c4c 6425 7320 6174     ..c....PLL%d sta
2fff9d1c:	7472 6620 6961 656c 2064 2040 7830 6c25     rt failed @ 0x%l
2fff9d2c:	3a78 3020 2578 0a78 0a00 4c50 254c 2064     x: 0x%x...PLL%d 
2fff9d3c:	7473 706f 6620 6961 656c 2064 2040 7830     stop failed @ 0x
2fff9d4c:	6c25 3a78 3020 2578 0a78 0a00 4c50 344c     %lx: 0x%x...PLL4
2fff9d5c:	6320 6e61 6f6e 2074 6562 7320 6365 7275      cannot be secur
2fff9d6c:	6465 000a 4e28 206f 6170 6572 746e 6620     ed..(No parent f
2fff9d7c:	726f 6320 6f6c 6b63 2520 756c 000a 430a     or clock %lu...C
2fff9d8c:	4b4c 4944 2056 7825 7320 6174 7472 6620     LKDIV %x start f
2fff9d9c:	6961 656c 2064 2040 7830 6c25 3a78 3020     ailed @ 0x%lx: 0
2fff9dac:	2578 0a78 0a00 4c43 534b 4352 2520 2078     x%x...CLKSRC %x 
2fff9dbc:	7473 7261 2074 6166 6c69 6465 4020 3020     start failed @ 0
2fff9dcc:	2578 786c 203a 7830 7825 000a 4e0a 206f     x%lx: 0x%x...No 
2fff9ddc:	5043 2055 706f 7265 7461 6e69 2067 6f70     CPU operating po
2fff9dec:	6e69 2074 6163 206e 6562 7320 7465 000a     int can be set..
2fff9dfc:	6c63 2d6b 7368 0069 6c63 2d6b 7368 0065     clk-hsi.clk-hse.
2fff9e0c:	6c63 2d6b 7363 0069 6c63 2d6b 736c 0069     clk-csi.clk-lsi.
2fff9e1c:	6c63 2d6b 736c 0065 3269 5f73 6b63 6e69     clk-lse.i2s_ckin
	...

2fff9e2d <uart234578_parents>:
2fff9e2d:	1417 0906 1807                                   .....

2fff9e32 <uart6_parents>:
2fff9e32:	1418 0906 1b07                                   .....

2fff9e37 <usart1_parents>:
2fff9e37:	111b 0906 0714                              ......

2fff9e3d <usbo_parents>:
2fff9e3d:	2115                                        .!

2fff9e3f <usbphy_parents>:
2fff9e3f:	1507 0108                                        ...

2fff9e42 <CSWTCH.26>:
2fff9e42:	0001 0000 0000 0000 0302 550a 6b6e 6f6e     ...........Unkno
2fff9e52:	6e77 5320 6c65 2066 6552 7266 7365 2068     wn Self Refresh 
2fff9e62:	6f6d 6564 000a 6970 636e 7274 2d6c 0030     mode..pinctrl-0.
2fff9e72:	6970 6d6e 7875 7300 656c 2d77 6172 6574     pinmux.slew-rate
2fff9e82:	6200 6169 2d73 7570 6c6c 752d 0070 6962     .bias-pull-up.bi
2fff9e92:	7361 702d 6c75 2d6c 6f64 6e77 6400 6972     as-pull-down.dri
2fff9ea2:	6576 6f2d 6570 2d6e 7264 6961 006e 7067     ve-open-drain.gp
2fff9eb2:	6f69 632d 6e6f 7274 6c6f 656c 0072 500a     io-controller..P
2fff9ec2:	4e49 5443 4c52 6920 636e 6e6f 6973 7473     INCTRL inconsist
2fff9ed2:	6e65 2074 6e69 4420 0a54 6400 6972 6576     ent in DT..drive
2fff9ee2:	7372 732f 2f74 7067 6f69 732f 6d74 3233     rs/st/gpio/stm32
2fff9ef2:	675f 6970 2e6f 0063 0000                    _gpio.c...

2fff9efc <i2c_specs>:
2fff9efc:	86a0 0001 012c 0000 03e8 0000 0000 0000     ....,...........
2fff9f0c:	0d7a 0000 00fa 0000 125c 0000 0fa0 0000     z.......\.......
2fff9f1c:	1a80 0006 012c 0000 012c 0000 0000 0000     ....,...,.......
2fff9f2c:	0384 0000 0064 0000 0514 0000 0258 0000     ....d.......X...
2fff9f3c:	4240 000f 0064 0000 0078 0000 0000 0000     @B..d...x.......
2fff9f4c:	01c2 0000 0032 0000 01f4 0000 0104 0000     ....2...........
2fff9f5c:	3269 2d63 6373 2d6c 6972 6973 676e 742d     i2c-scl-rising-t
2fff9f6c:	6d69 2d65 736e 6900 6332 732d 6c63 662d     ime-ns.i2c-scl-f
2fff9f7c:	6c61 696c 676e 742d 6d69 2d65 736e 0a00     alling-time-ns..
2fff9f8c:	6e49 6176 696c 2064 7562 2073 7073 6565     Invalid bus spee
2fff9f9c:	2064 2528 2069 203e 6925 0a29 0a00 3249     d (%i > %i)...I2
2fff9fac:	2043 6c63 636f 206b 6172 6574 6920 2073     C clock rate is 
2fff9fbc:	0a30 0a00 3249 2043 7073 6565 2064 756f     0...I2C speed ou
2fff9fcc:	2074 666f 6220 756f 646e 7b20 6425 0a7d     t of bound {%d}.
2fff9fdc:	0a00 4920 4332 7420 6d69 6e69 7367 6f20     .. I2C timings o
2fff9fec:	7475 6f20 2066 6f62 6e75 2064 6952 6573     ut of bound Rise
2fff9ffc:	257b 3e64 6425 2f7d 6146 6c6c 257b 3e64     {%d>%d}/Fall{%d>
2fffa00c:	6425 0a7d 0a00 4e44 2046 756f 2074 666f     %d}...DNF out of
2fffa01c:	6220 756f 646e 2520 2f64 6425 000a 200a      bound %d/%d... 
2fffa02c:	3249 2043 6f6e 5020 6572 6373 6c61 7265     I2C no Prescaler
2fffa03c:	7320 6c6f 7475 6f69 0a6e 0a00 4920 4332      solution... I2C
2fffa04c:	6e20 206f 6f73 756c 6974 6e6f 6120 2074      no solution at 
2fffa05c:	6c61 0a6c 0a00 6146 6c69 6465 7420 206f     all...Failed to 
2fffa06c:	6f63 706d 7475 2065 3249 2043 6974 696d     compute I2C timi
2fffa07c:	676e 0a73 1e00 6f44 6e77 7267 6461 2065     ngs...Downgrade 
2fffa08c:	3249 2043 7073 6565 2064 6f74 2520 4875     I2C speed to %uH
2fffa09c:	297a 000a 430a 6e61 6f6e 2074 6e69 7469     z)...Cannot init
2fffa0ac:	6169 696c 657a 4920 4332 6120 616e 6f6c     ialize I2C analo
2fffa0bc:	2067 6966 746c 7265 2820 6425 0a29 0a00     g filter (%d)...
2fffa0cc:	6d49 6f70 7373 6269 656c 7420 206f 6f63     Impossible to co
2fffa0dc:	706d 7475 2065 3249 2043 6974 696d 676e     mpute I2C timing
2fffa0ec:	0a73 7300 2c74 7473 336d 6d32 3170 692d     s..st,stm32mp1-i
2fffa0fc:	6477 0067 7473 336d 2c32 6e65 6261 656c     wdg.stm32,enable
2fffa10c:	6f2d 2d6e 7473 706f 7300 6d74 3233 652c     -on-stop.stm32,e
2fffa11c:	616e 6c62 2d65 6e6f 732d 6174 646e 7962     nable-on-standby
2fffa12c:	0a00 544f 2050 6e65 6261 656c 2064 7562     ..OTP enabled bu
2fffa13c:	2074 7769 6764 7525 4420 2d54 6964 6173     t iwdg%u DT-disa
2fffa14c:	6c62 6465 000a 6573 7563 6572 742d 6d69     bled..secure-tim
2fffa15c:	6f65 7475 732d 6365 0a00 5749 4744 7825     eout-sec..IWDG%x
2fffa16c:	6520 7261 796c 7420 6d69 6f65 7475 6320      early timeout c
2fffa17c:	6e6f 6966 2067 6166 6c69 6465 2820 6425     onfig failed (%d
2fffa18c:	0a29 7300 2c74 7473 6d70 6369 0031 6572     )..st,stpmic1.re
2fffa19c:	7567 616c 6f74 2d72 616e 656d 7200 6765     gulator-name.reg
2fffa1ac:	6c75 7461 726f 6d2d 6e69 6d2d 6369 6f72     ulator-min-micro
2fffa1bc:	6f76 746c 7200 6765 6c75 7461 726f 6d2d     volt.regulator-m
2fffa1cc:	7861 6d2d 6369 6f72 6f76 746c 0a00 3249     ax-microvolt..I2
2fffa1dc:	2043 6f63 666e 6769 7275 7461 6f69 206e     C configuration 
2fffa1ec:	6166 6c69 6465 2520 0a64 0a00 6143 6e6e     failed %d...Cann
2fffa1fc:	746f 6920 696e 6974 6c61 7a69 2065 3249     ot initialize I2
2fffa20c:	2043 7825 2820 6425 0a29 0a00 3249 2043     C %x (%d)...I2C 
2fffa21c:	6564 6976 6563 6e20 746f 7220 6165 7964     device not ready
2fffa22c:	000a 6572 7567 616c 6f74 7372 6400 6972     ..regulators.dri
2fffa23c:	6576 7372 732f 2f74 6d70 6369 732f 6d74     vers/st/pmic/stm
2fffa24c:	3233 706d 705f 696d 2e63 0063 6572 7567     32mp_pmic.c.regu
2fffa25c:	616c 6f74 2d72 6f62 746f 6f2d 006e 6572     lator-boot-on.re
2fffa26c:	7567 616c 6f74 2d72 6c61 6177 7379 6f2d     gulator-always-o
2fffa27c:	006e 6572 7567 616c 6f74 2d72 7570 6c6c     n.regulator-pull
2fffa28c:	642d 776f 006e 7473 6d2c 7361 2d6b 6572     -down.st,mask-re
2fffa29c:	6573 0074 6572 7567 616c 6f74 2d72 6e6f     set.regulator-on
2fffa2ac:	692d 2d6e 7573 7073 6e65 0064 6572 7567     -in-suspend.regu
2fffa2bc:	616c 6f74 2d72 666f 2d66 6e69 732d 7375     lator-off-in-sus
2fffa2cc:	6570 646e 7200 6765 6c75 7461 726f 732d     pend.regulator-s
2fffa2dc:	7375 6570 646e 6d2d 6369 6f72 6f76 746c     uspend-microvolt
2fffa2ec:	7200 6765 6c75 7461 726f 6d2d 646f 0065     .regulator-mode.

2fffa2fc <buck1_voltage_table>:
2fffa2fc:	02d5 02d5 02d5 02d5 02d5 02d5 02ee 0307     ................
2fffa30c:	0320 0339 0352 036b 0384 039d 03b6 03cf      .9.R.k.........
2fffa31c:	03e8 0401 041a 0433 044c 0465 047e 0497     ......3.L.e.~...
2fffa32c:	04b0 04c9 04e2 04fb 0514 052d 0546 055f     ..........-.F._.
2fffa33c:	0578 0591 05aa 05c3 05dc 05dc 05dc 05dc     x...............
2fffa34c:	05dc 05dc 05dc 05dc 05dc 05dc 05dc 05dc     ................
2fffa35c:	05dc 05dc 05dc 05dc 05dc 05dc 05dc 05dc     ................
2fffa36c:	05dc 05dc 05dc 05dc 05dc 05dc 05dc 05dc     ................

2fffa37c <buck2_voltage_table>:
2fffa37c:	03e8 03e8 03e8 03e8 03e8 03e8 03e8 03e8     ................
2fffa38c:	03e8 03e8 03e8 03e8 03e8 03e8 03e8 03e8     ................
2fffa39c:	03e8 03e8 041a 041a 044c 044c 047e 047e     ........L.L.~.~.
2fffa3ac:	04b0 04b0 04e2 04e2 0514 0514 0546 0546     ............F.F.
2fffa3bc:	0578 0578 05aa 05aa 05dc                    x.x.......

2fffa3c6 <buck3_voltage_table>:
2fffa3c6:	03e8 03e8 03e8 03e8 03e8 03e8 03e8 03e8     ................
2fffa3d6:	03e8 03e8 03e8 03e8 03e8 03e8 03e8 03e8     ................
2fffa3e6:	03e8 03e8 03e8 03e8 044c 044c 044c 044c     ........L.L.L.L.
2fffa3f6:	04b0 04b0 04b0 04b0 0514 0514 0514 0514     ................
2fffa406:	0578 0578 0578 0578 05dc 0640 06a4 0708     x.x.x.x...@.....
2fffa416:	076c 07d0 0834 0898 08fc 0960 09c4 0a28     l...4.....`...(.
2fffa426:	0a8c 0af0 0b54 0bb8 0c1c 0c80 0ce4 0d48     ....T.........H.

2fffa436 <buck4_voltage_table>:
2fffa436:	0258 0271 028a 02a3 02bc 02d5 02ee 0307     X.q.............
2fffa446:	0320 0339 0352 036b 0384 039d 03b6 03cf      .9.R.k.........
2fffa456:	03e8 0401 041a 0433 044c 0465 047e 0497     ......3.L.e.~...
2fffa466:	04b0 04c9 04e2 04fb 0514 0514 0546 0546     ............F.F.
2fffa476:	0578 0578 05aa 05aa 05dc 0640 06a4 0708     x.x.......@.....
2fffa486:	076c 07d0 0834 0898 08fc 0960 09c4 0a28     l...4.....`...(.
2fffa496:	0a8c 0af0 0b54 0bb8 0c1c 0c80 0ce4 0d48     ....T.........H.
2fffa4a6:	0dac 0e10 0e74 0ed8 0f3c                    ....t...<.

2fffa4b0 <fixed_5v_voltage_table>:
2fffa4b0:	1388                                        ..

2fffa4b2 <ldo1_voltage_table>:
2fffa4b2:	06a4 06a4 06a4 06a4 06a4 06a4 06a4 06a4     ................
2fffa4c2:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2fffa4d2:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2fffa4e2:	0ce4                                        ..

2fffa4e4 <ldo2_voltage_table>:
2fffa4e4:	06a4 06a4 06a4 06a4 06a4 06a4 06a4 06a4     ................
2fffa4f4:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2fffa504:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2fffa514:	0ce4                                        ..

2fffa516 <ldo3_voltage_table>:
2fffa516:	06a4 06a4 06a4 06a4 06a4 06a4 06a4 06a4     ................
2fffa526:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2fffa536:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2fffa546:	0ce4 0ce4 0ce4 0ce4 0ce4 0ce4 0ce4 01f4     ................
2fffa556:	ffff                                        ..

2fffa558 <ldo4_voltage_table>:
2fffa558:	0ce4                                        ..

2fffa55a <ldo5_voltage_table>:
2fffa55a:	06a4 06a4 06a4 06a4 06a4 06a4 06a4 06a4     ................
2fffa56a:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2fffa57a:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2fffa58a:	0ce4 0d48 0dac 0e10 0e74 0ed8 0f3c          ..H.....t...<.

2fffa598 <ldo6_voltage_table>:
2fffa598:	0384 03e8 044c 04b0 0514 0578 05dc 0640     ....L.....x...@.
2fffa5a8:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2fffa5b8:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2fffa5c8:	0ce4 0000                                   ....

2fffa5cc <regulators_table>:
2fffa5cc:	a6ba 2fff a2fc 2fff 2040 1230 1800 0000     .../.../@ 0.....
2fffa5dc:	a6c0 2fff a37c 2fff 2125 1231 1802 0001     .../|../%!1.....
2fffa5ec:	a6c6 2fff a3c6 2fff 2238 1232 1804 0002     .../.../8"2.....
2fffa5fc:	a6cc 2fff a436 2fff 233d 1233 1806 0003     .../6../=#3.....
2fffa60c:	a6d2 2fff a4b2 2fff 2519 0035 1a00 0000     .../.../.%5.....
2fffa61c:	a6d7 2fff a4e4 2fff 2619 0036 1a00 0001     .../.../.&6.....
2fffa62c:	a6dc 2fff a516 2fff 2721 0037 1a00 0002     .../.../!'7.....
2fffa63c:	a6b5 2fff a558 2fff 2801 0038 1a00 0003     .../X../.(8.....
2fffa64c:	a6e1 2fff a55a 2fff 291f 0039 1a00 0004     .../Z../.)9.....
2fffa65c:	a6e6 2fff a598 2fff 2a19 003a 1a00 0005     .../.../.*:.....
2fffa66c:	a6eb 2fff a70a 2fff 2401 0034 1a00 0006     .../.../.$4.....
2fffa67c:	a6f4 2fff a4b0 2fff 4001 0000 0000 0001     .../.../.@......
2fffa68c:	a6fa 2fff a4b0 2fff 4001 0000 0000 0002     .../.../.@......
2fffa69c:	a702 2fff a4b0 2fff 4001 0000 0000 0004     .../.../.@......
2fffa6ac:	7562 6b63 6c00 6f64 6c00 6f64 0034 7562     buck.ldo.ldo4.bu
2fffa6bc:	6b63 0031 7562 6b63 0032 7562 6b63 0033     ck1.buck2.buck3.
2fffa6cc:	7562 6b63 0034 646c 316f 6c00 6f64 0032     buck4.ldo1.ldo2.
2fffa6dc:	646c 336f 6c00 6f64 0035 646c 366f 7600     ldo3.ldo5.ldo6.v
2fffa6ec:	6572 5f66 6464 0072 6f62 736f 0074 7770     ref_ddr.boost.pw
2fffa6fc:	5f72 7773 0031 7770 5f72 7773 0032          r_sw1.pwr_sw2.

2fffa70a <vref_ddr_voltage_table>:
2fffa70a:	0ce4 6572 6573 7374 2f00 7063 7375 632f     ..resets./cpus/c
2fffa71a:	7570 3040 6300 7570 732d 7075 6c70 0079     pu@0.cpu-supply.
2fffa72a:	7473 732c 6d74 3233 706d 2d31 6464 0072     st,stm32mp1-ddr.
2fffa73a:	7473 6d2c 6d65 732d 7a69 0065 706f 7265     st,mem-size.oper
2fffa74a:	7461 6e69 2d67 6f70 6e69 7374 762d 0032     ating-points-v2.
2fffa75a:	4328 6e61 6f6e 2074 6966 646e 2520 2073     (Cannot find %s 
2fffa76a:	6f6e 6564 6920 206e 5444 000a 706f 2d70     node in DT..opp-
2fffa77a:	7573 7070 726f 6574 2d64 7768 6f00 7070     supported-hw.opp
2fffa78a:	682d 007a 706f 2d70 696d 7263 766f 6c6f     -hz.opp-microvol
2fffa79a:	0074 732f 6365 7275 2d65 6863 736f 6e65     t./secure-chosen
2fffa7aa:	2f00 6863 736f 6e65 7300 6474 756f 2d74     ./chosen.stdout-
2fffa7ba:	6170 6874 3a00 2f00 6f73 2f63 6970 2d6e     path.:./soc/pin-
2fffa7ca:	6f63 746e 6f72 6c6c 7265 2f00 6f73 2f63     controller./soc/
2fffa7da:	6970 2d6e 6f63 746e 6f72 6c6c 7265 7a2d     pin-controller-z
2fffa7ea:	6e00 7067 6f69 0073 6e69 6574 7272 7075     .ngpios.interrup
2fffa7fa:	7374 652d 7478 6e65 6564 0064 6573 7563     ts-extended.secu
2fffa80a:	6572 692d 746e 7265 7572 7470 0073 6c70     re-interrupts.pl
2fffa81a:	7461 732f 2f74 6f63 6d6d 6e6f 732f 6d74     at/st/common/stm
2fffa82a:	3233 706d 645f 2e74 0063 6572 2d67 616e     32mp_dt.c.reg-na
2fffa83a:	656d 0073 6b6f 7961 7300 6365 7275 2d65     mes.okay.secure-
2fffa84a:	7473 7461 7375 7000 616c 2f74 7473 732f     status.plat/st/s
2fffa85a:	6d74 3233 706d 2f31 7473 336d 6d32 3170     tm32mp1/stm32mp1
2fffa86a:	635f 6e6f 6574 7478 632e 7000 616c 2f74     _context.c.plat/
2fffa87a:	7473 732f 6d74 3233 706d 2f31 7473 336d     st/stm32mp1/stm3
2fffa88a:	6d32 3170 645f 6762 636d 2e75 0063 5328     2mp1_dbgmcu.c.(S
2fffa89a:	666f 7774 7261 2065 6361 6563 7373 7420     oftware access t
2fffa8aa:	206f 6c61 206c 6564 7562 2067 6f63 706d     o all debug comp
2fffa8ba:	6e6f 6e65 7374 6920 2073 6964 6173 6c62     onents is disabl
2fffa8ca:	6465 000a 491e 204f 6f63 706d 6e65 6173     ed...IO compensa
2fffa8da:	6974 6e6f 6320 6c65 206c 6f6e 2074 6572     tion cell not re
2fffa8ea:	6461 0a79 6900 636e 756c 6564 612f 6372     ady..include/arc
2fffa8fa:	2f68 6161 6372 3368 2f32 6c65 5f33 6f63     h/aarch32/el3_co
2fffa90a:	6d6d 6e6f 6d5f 6361 6f72 2e73 0053 696c     mmon_macros.S.li
2fffa91a:	2f62 7063 7375 612f 7261 6863 3233 632f     b/cpus/aarch32/c
2fffa92a:	7570 685f 6c65 6570 7372 532e 5000               pu_helpers.S.

2fffa937 <panic_msg>:
2fffa937:	50          	.byte	0x50
2fffa938:	43494e41 	.word	0x43494e41
2fffa93c:	20746120 	.word	0x20746120
2fffa940:	3a204350 	.word	0x3a204350
2fffa944:	00783020 	.word	0x00783020

2fffa948 <panic_end>:
2fffa948:	0a0d      	.short	0x0a0d
	...

2fffa94b <assert_msg1>:
2fffa94b:	41          	.byte	0x41
2fffa94c:	52455353 	.word	0x52455353
2fffa950:	46203a54 	.word	0x46203a54
2fffa954:	20656c69 	.word	0x20656c69
	...

2fffa959 <assert_msg2>:
2fffa959:	20          	.byte	0x20
2fffa95a:	694c      	.short	0x694c
2fffa95c:	0020656e 	.word	0x0020656e
2fffa960:	76697264 	.word	0x76697264
2fffa964:	2f737265 	.word	0x2f737265
2fffa968:	752f7473 	.word	0x752f7473
2fffa96c:	2f747261 	.word	0x2f747261
2fffa970:	63726161 	.word	0x63726161
2fffa974:	2f323368 	.word	0x2f323368
2fffa978:	336d7473 	.word	0x336d7473
2fffa97c:	6f635f32 	.word	0x6f635f32
2fffa980:	6c6f736e 	.word	0x6c6f736e
2fffa984:	00532e65 	.word	0x00532e65
2fffa988:	2f62696c 	.word	0x2f62696c
2fffa98c:	74616c78 	.word	0x74616c78
2fffa990:	6261745f 	.word	0x6261745f
2fffa994:	5f73656c 	.word	0x5f73656c
2fffa998:	612f3276 	.word	0x612f3276
2fffa99c:	68637261 	.word	0x68637261
2fffa9a0:	652f3233 	.word	0x652f3233
2fffa9a4:	6c62616e 	.word	0x6c62616e
2fffa9a8:	6d6d5f65 	.word	0x6d6d5f65
2fffa9ac:	00532e75 	.word	0x00532e75
2fffa9b0:	2f62696c 	.word	0x2f62696c
2fffa9b4:	73757063 	.word	0x73757063
2fffa9b8:	7261612f 	.word	0x7261612f
2fffa9bc:	32336863 	.word	0x32336863
2fffa9c0:	726f632f 	.word	0x726f632f
2fffa9c4:	5f786574 	.word	0x5f786574
2fffa9c8:	532e3761 	.word	0x532e3761
	...

2fffa9cd <abort_str>:
2fffa9cd:	0a          	.byte	0x0a
2fffa9ce:	6241      	.short	0x6241
2fffa9d0:	2074726f 	.word	0x2074726f
2fffa9d4:	203a7461 	.word	0x203a7461
2fffa9d8:	7830      	.short	0x7830
	...

2fffa9db <prefetch_abort_str>:
2fffa9db:	0a          	.byte	0x0a
2fffa9dc:	66657250 	.word	0x66657250
2fffa9e0:	68637465 	.word	0x68637465
2fffa9e4:	6f624120 	.word	0x6f624120
2fffa9e8:	61207472 	.word	0x61207472
2fffa9ec:	30203a74 	.word	0x30203a74
2fffa9f0:	0078      	.short	0x0078

2fffa9f2 <data_abort_str>:
2fffa9f2:	440a      	.short	0x440a
2fffa9f4:	20617461 	.word	0x20617461
2fffa9f8:	726f6241 	.word	0x726f6241
2fffa9fc:	74612074 	.word	0x74612074
2fffaa00:	7830203a 	.word	0x7830203a
	...

2fffaa05 <undefined_str>:
2fffaa05:	0a          	.byte	0x0a
2fffaa06:	6e55      	.short	0x6e55
2fffaa08:	69666564 	.word	0x69666564
2fffaa0c:	2064656e 	.word	0x2064656e
2fffaa10:	74736e69 	.word	0x74736e69
2fffaa14:	74637572 	.word	0x74637572
2fffaa18:	206e6f69 	.word	0x206e6f69
2fffaa1c:	203a7461 	.word	0x203a7461
2fffaa20:	7830      	.short	0x7830
	...

2fffaa23 <exception_start_str>:
2fffaa23:	0a          	.byte	0x0a
2fffaa24:	65637845 	.word	0x65637845
2fffaa28:	6f697470 	.word	0x6f697470
2fffaa2c:	6f6d206e 	.word	0x6f6d206e
2fffaa30:	303d6564 	.word	0x303d6564
2fffaa34:	0078      	.short	0x0078

2fffaa36 <exception_end_str>:
2fffaa36:	6120      	.short	0x6120
2fffaa38:	30203a74 	.word	0x30203a74
2fffaa3c:	0078      	.short	0x0078

2fffaa3e <dfsr_str>:
2fffaa3e:	4420      	.short	0x4420
2fffaa40:	20525346 	.word	0x20525346
2fffaa44:	7830203d 	.word	0x7830203d
	...

2fffaa49 <dfar_str>:
2fffaa49:	20          	.byte	0x20
2fffaa4a:	4644      	.short	0x4644
2fffaa4c:	3d205241 	.word	0x3d205241
2fffaa50:	00783020 	.word	0x00783020

2fffaa54 <ifsr_str>:
2fffaa54:	53464920 	.word	0x53464920
2fffaa58:	203d2052 	.word	0x203d2052
2fffaa5c:	7830      	.short	0x7830
	...

2fffaa5f <ifar_str>:
2fffaa5f:	20          	.byte	0x20
2fffaa60:	52414649 	.word	0x52414649
2fffaa64:	30203d20 	.word	0x30203d20
2fffaa68:	0078      	.short	0x0078

2fffaa6a <end_error_str>:
2fffaa6a:	0d0a      	.short	0x0d0a
2fffaa6c:	00          	.byte	0x00
2fffaa6d:	23          	.byte	0x23
2fffaa6e:	6461      	.short	0x6461
2fffaa70:	73657264 	.word	0x73657264
2fffaa74:	65632d73 	.word	0x65632d73
2fffaa78:	00736c6c 	.word	0x00736c6c
2fffaa7c:	696c612f 	.word	0x696c612f
2fffaa80:	73657361 	.word	0x73657361
2fffaa84:	00          	.byte	0x00
2fffaa85:	6c          	.byte	0x6c
2fffaa86:	6e69      	.short	0x6e69
2fffaa88:	702c7875 	.word	0x702c7875
2fffaa8c:	646e6168 	.word	0x646e6168
2fffaa90:	656c      	.short	0x656c
2fffaa92:	00          	.byte	0x00
2fffaa93:	63          	.byte	0x63
2fffaa94:	61706d6f 	.word	0x61706d6f
2fffaa98:	6c626974 	.word	0x6c626974
2fffaa9c:	0065      	.short	0x0065
2fffaa9e:	5341      	.short	0x5341
2fffaaa0:	54524553 	.word	0x54524553
2fffaaa4:	7325203a 	.word	0x7325203a
2fffaaa8:	0a64253a 	.word	0x0a64253a
2fffaaac:	00          	.byte	0x00
2fffaaad:	6c          	.byte	0x6c
2fffaaae:	6269      	.short	0x6269
2fffaab0:	62696c2f 	.word	0x62696c2f
2fffaab4:	72702f63 	.word	0x72702f63
2fffaab8:	66746e69 	.word	0x66746e69
2fffaabc:	3000632e 	.word	0x3000632e
2fffaac0:	00000078 	.word	0x00000078

2fffaac4 <__RT_SVC_DESCS_START__>:
2fffaac4:	00010404 	.word	0x00010404
2fffaac8:	2fff82cb 	.word	0x2fff82cb
2fffaacc:	2ffeb845 	.word	0x2ffeb845
2fffaad0:	2ffeb7c9 	.word	0x2ffeb7c9

2fffaad4 <__svc_desc_stm32mp1_sip_svc>:
2fffaad4:	00010202 2fff8f9b 2ffefcf1 2ffefcf5     ......./.../.../

2fffaae4 <__CPU_OPS_START__>:
2fffaae4:	410fc070 	.word	0x410fc070
2fffaae8:	2fff7264 	.word	0x2fff7264
2fffaaec:	2fff7268 	.word	0x2fff7268
2fffaaf0:	2fff7298 	.word	0x2fff7298
2fffaaf4:	2fff72cc 	.word	0x2fff72cc
2fffaaf8:	2fffb540 	.word	0x2fffb540
2fffaafc:	2fffb544 	.word	0x2fffb544

2fffab00 <__CPU_OPS_END__>:
2fffab00:	eaffc13e 	b	2ffeb000 <sp_min_entrypoint>
2fffab04:	eafff098 	b	2fff6d6c <report_undef_inst>
2fffab08:	eaffc194 	b	2ffeb160 <sp_min_handle_smc>
2fffab0c:	eafff09a 	b	2fff6d7c <report_prefetch_abort>
2fffab10:	eafff09d 	b	2fff6d8c <report_data_abort>
2fffab14:	eafff277 	b	2fff74f8 <plat_panic_handler>
2fffab18:	eafff276 	b	2fff74f8 <plat_panic_handler>
2fffab1c:	eaffc1c2 	b	2ffeb22c <sp_min_handle_fiq>

2fffab20 <__psci_do_pwrdown_cache_maintenance_from_thumb>:
2fffab20:	4778      	bx	pc
2fffab22:	46c0      	nop			; (mov r8, r8)
2fffab24:	eafff04d 	b	2fff6c60 <psci_do_pwrdown_cache_maintenance>

2fffab28 <__spin_unlock_from_thumb>:
2fffab28:	4778      	bx	pc
2fffab2a:	46c0      	nop			; (mov r8, r8)
2fffab2c:	eafff045 	b	2fff6c48 <spin_unlock>

2fffab30 <__clean_dcache_range_from_thumb>:
2fffab30:	4778      	bx	pc
2fffab32:	46c0      	nop			; (mov r8, r8)
2fffab34:	eafff0da 	b	2fff6ea4 <clean_dcache_range>

2fffab38 <__spin_lock_from_thumb>:
2fffab38:	4778      	bx	pc
2fffab3a:	46c0      	nop			; (mov r8, r8)
2fffab3c:	eafff038 	b	2fff6c24 <spin_lock>

2fffab40 <__print_errata_status_from_thumb>:
2fffab40:	4778      	bx	pc
2fffab42:	46c0      	nop			; (mov r8, r8)
2fffab44:	eafff029 	b	2fff6bf0 <print_errata_status>

2fffab48 <__console_register_from_arm>:
2fffab48:	e51ff004 	ldr	pc, [pc, #-4]	; 2fffab4c <__console_register_from_arm+0x4>
2fffab4c:	2fff0c05 	.word	0x2fff0c05

2fffab50 <__flush_dcache_range_from_thumb>:
2fffab50:	4778      	bx	pc
2fffab52:	46c0      	nop			; (mov r8, r8)
2fffab54:	eafff0c3 	b	2fff6e68 <flush_dcache_range>

2fffab58 <__enable_mmu_direct_svc_mon_from_thumb>:
2fffab58:	4778      	bx	pc
2fffab5a:	46c0      	nop			; (mov r8, r8)
2fffab5c:	eafff195 	b	2fff71b8 <enable_mmu_direct_svc_mon>

2fffab60 <__RO_END_UNALIGNED__>:
	...
